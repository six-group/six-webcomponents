'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { type EmptyPayload, type SixAlertCustomEvent, type SixButtonCustomEvent, type SixCheckboxCustomEvent, type SixDatepickerCustomEvent, type SixDatepickerSelectPayload, type SixDetailsCustomEvent, type SixDialogCustomEvent, type SixDialogRequestClose, type SixDrawerCustomEvent, type SixDrawerRequestClose, type SixDropdownAsyncFilterPayload, type SixDropdownAutoFilterPayload, type SixDropdownCustomEvent, type SixDropdownScrollPayload, type SixFileListDownloadPayload, type SixFileListItemCustomEvent, type SixFileListRemovePayload, type SixFileUploadCustomEvent, type SixFileUploadFailurePayload, type SixFileUploadSuccessPayload, type SixInputCustomEvent, type SixItemPickerChangePayload, type SixItemPickerCustomEvent, type SixLanguageSwitcherChangePayload, type SixLanguageSwitcherCustomEvent, type SixMenuCustomEvent, type SixMenuItemSelectedPayload, type SixRadioCustomEvent, type SixRangeCustomEvent, type SixSearchFieldChangePayload, type SixSearchFieldCustomEvent, type SixSelectChangePayload, type SixSelectCustomEvent, type SixSidebarCustomEvent, type SixSwitchCustomEvent, type SixTabCustomEvent, type SixTabGroupCustomEvent, type SixTabHidePayload, type SixTabShowPayload, type SixTagCustomEvent, type SixTextareaCustomEvent, type SixTileCustomEvent, type SixTimepickerChange, type SixTimepickerCustomEvent, type SixTooltipCustomEvent } from "@six-group/ui-library";
import { SixAlert as SixAlertElement, defineCustomElement as defineSixAlert } from "@six-group/ui-library/dist/components/six-alert.js";
import { SixAvatar as SixAvatarElement, defineCustomElement as defineSixAvatar } from "@six-group/ui-library/dist/components/six-avatar.js";
import { SixBadge as SixBadgeElement, defineCustomElement as defineSixBadge } from "@six-group/ui-library/dist/components/six-badge.js";
import { SixButton as SixButtonElement, defineCustomElement as defineSixButton } from "@six-group/ui-library/dist/components/six-button.js";
import { SixCard as SixCardElement, defineCustomElement as defineSixCard } from "@six-group/ui-library/dist/components/six-card.js";
import { SixCheckbox as SixCheckboxElement, defineCustomElement as defineSixCheckbox } from "@six-group/ui-library/dist/components/six-checkbox.js";
import { SixDate as SixDateElement, defineCustomElement as defineSixDate } from "@six-group/ui-library/dist/components/six-date.js";
import { SixDatepicker as SixDatepickerElement, defineCustomElement as defineSixDatepicker } from "@six-group/ui-library/dist/components/six-datepicker.js";
import { SixDetails as SixDetailsElement, defineCustomElement as defineSixDetails } from "@six-group/ui-library/dist/components/six-details.js";
import { SixDialog as SixDialogElement, defineCustomElement as defineSixDialog } from "@six-group/ui-library/dist/components/six-dialog.js";
import { SixDrawer as SixDrawerElement, defineCustomElement as defineSixDrawer } from "@six-group/ui-library/dist/components/six-drawer.js";
import { SixDropdown as SixDropdownElement, defineCustomElement as defineSixDropdown } from "@six-group/ui-library/dist/components/six-dropdown.js";
import { SixErrorPage as SixErrorPageElement, defineCustomElement as defineSixErrorPage } from "@six-group/ui-library/dist/components/six-error-page.js";
import { SixError as SixErrorElement, defineCustomElement as defineSixError } from "@six-group/ui-library/dist/components/six-error.js";
import { SixFileListItem as SixFileListItemElement, defineCustomElement as defineSixFileListItem } from "@six-group/ui-library/dist/components/six-file-list-item.js";
import { SixFileList as SixFileListElement, defineCustomElement as defineSixFileList } from "@six-group/ui-library/dist/components/six-file-list.js";
import { SixFileUpload as SixFileUploadElement, defineCustomElement as defineSixFileUpload } from "@six-group/ui-library/dist/components/six-file-upload.js";
import { SixFooter as SixFooterElement, defineCustomElement as defineSixFooter } from "@six-group/ui-library/dist/components/six-footer.js";
import { SixGroupLabel as SixGroupLabelElement, defineCustomElement as defineSixGroupLabel } from "@six-group/ui-library/dist/components/six-group-label.js";
import { SixHeaderDropdownItem as SixHeaderDropdownItemElement, defineCustomElement as defineSixHeaderDropdownItem } from "@six-group/ui-library/dist/components/six-header-dropdown-item.js";
import { SixHeaderItem as SixHeaderItemElement, defineCustomElement as defineSixHeaderItem } from "@six-group/ui-library/dist/components/six-header-item.js";
import { SixHeaderMenuButton as SixHeaderMenuButtonElement, defineCustomElement as defineSixHeaderMenuButton } from "@six-group/ui-library/dist/components/six-header-menu-button.js";
import { SixHeader as SixHeaderElement, defineCustomElement as defineSixHeader } from "@six-group/ui-library/dist/components/six-header.js";
import { SixIconButton as SixIconButtonElement, defineCustomElement as defineSixIconButton } from "@six-group/ui-library/dist/components/six-icon-button.js";
import { SixIcon as SixIconElement, defineCustomElement as defineSixIcon } from "@six-group/ui-library/dist/components/six-icon.js";
import { SixInput as SixInputElement, defineCustomElement as defineSixInput } from "@six-group/ui-library/dist/components/six-input.js";
import { SixItemPicker as SixItemPickerElement, defineCustomElement as defineSixItemPicker } from "@six-group/ui-library/dist/components/six-item-picker.js";
import { SixLanguageSwitcher as SixLanguageSwitcherElement, defineCustomElement as defineSixLanguageSwitcher } from "@six-group/ui-library/dist/components/six-language-switcher.js";
import { SixLayoutGrid as SixLayoutGridElement, defineCustomElement as defineSixLayoutGrid } from "@six-group/ui-library/dist/components/six-layout-grid.js";
import { SixLogo as SixLogoElement, defineCustomElement as defineSixLogo } from "@six-group/ui-library/dist/components/six-logo.js";
import { SixMainContainer as SixMainContainerElement, defineCustomElement as defineSixMainContainer } from "@six-group/ui-library/dist/components/six-main-container.js";
import { SixMenuDivider as SixMenuDividerElement, defineCustomElement as defineSixMenuDivider } from "@six-group/ui-library/dist/components/six-menu-divider.js";
import { SixMenuItem as SixMenuItemElement, defineCustomElement as defineSixMenuItem } from "@six-group/ui-library/dist/components/six-menu-item.js";
import { SixMenuLabel as SixMenuLabelElement, defineCustomElement as defineSixMenuLabel } from "@six-group/ui-library/dist/components/six-menu-label.js";
import { SixMenu as SixMenuElement, defineCustomElement as defineSixMenu } from "@six-group/ui-library/dist/components/six-menu.js";
import { SixPicto as SixPictoElement, defineCustomElement as defineSixPicto } from "@six-group/ui-library/dist/components/six-picto.js";
import { SixProgressBar as SixProgressBarElement, defineCustomElement as defineSixProgressBar } from "@six-group/ui-library/dist/components/six-progress-bar.js";
import { SixProgressRing as SixProgressRingElement, defineCustomElement as defineSixProgressRing } from "@six-group/ui-library/dist/components/six-progress-ring.js";
import { SixRadio as SixRadioElement, defineCustomElement as defineSixRadio } from "@six-group/ui-library/dist/components/six-radio.js";
import { SixRange as SixRangeElement, defineCustomElement as defineSixRange } from "@six-group/ui-library/dist/components/six-range.js";
import { SixRoot as SixRootElement, defineCustomElement as defineSixRoot } from "@six-group/ui-library/dist/components/six-root.js";
import { SixSearchField as SixSearchFieldElement, defineCustomElement as defineSixSearchField } from "@six-group/ui-library/dist/components/six-search-field.js";
import { SixSelect as SixSelectElement, defineCustomElement as defineSixSelect } from "@six-group/ui-library/dist/components/six-select.js";
import { SixSidebarItemGroup as SixSidebarItemGroupElement, defineCustomElement as defineSixSidebarItemGroup } from "@six-group/ui-library/dist/components/six-sidebar-item-group.js";
import { SixSidebarItem as SixSidebarItemElement, defineCustomElement as defineSixSidebarItem } from "@six-group/ui-library/dist/components/six-sidebar-item.js";
import { SixSidebar as SixSidebarElement, defineCustomElement as defineSixSidebar } from "@six-group/ui-library/dist/components/six-sidebar.js";
import { SixSpinner as SixSpinnerElement, defineCustomElement as defineSixSpinner } from "@six-group/ui-library/dist/components/six-spinner.js";
import { SixStageIndicator as SixStageIndicatorElement, defineCustomElement as defineSixStageIndicator } from "@six-group/ui-library/dist/components/six-stage-indicator.js";
import { SixSwitch as SixSwitchElement, defineCustomElement as defineSixSwitch } from "@six-group/ui-library/dist/components/six-switch.js";
import { SixTabGroup as SixTabGroupElement, defineCustomElement as defineSixTabGroup } from "@six-group/ui-library/dist/components/six-tab-group.js";
import { SixTabPanel as SixTabPanelElement, defineCustomElement as defineSixTabPanel } from "@six-group/ui-library/dist/components/six-tab-panel.js";
import { SixTab as SixTabElement, defineCustomElement as defineSixTab } from "@six-group/ui-library/dist/components/six-tab.js";
import { SixTag as SixTagElement, defineCustomElement as defineSixTag } from "@six-group/ui-library/dist/components/six-tag.js";
import { SixTextarea as SixTextareaElement, defineCustomElement as defineSixTextarea } from "@six-group/ui-library/dist/components/six-textarea.js";
import { SixTile as SixTileElement, defineCustomElement as defineSixTile } from "@six-group/ui-library/dist/components/six-tile.js";
import { SixTimepicker as SixTimepickerElement, defineCustomElement as defineSixTimepicker } from "@six-group/ui-library/dist/components/six-timepicker.js";
import { SixTooltip as SixTooltipElement, defineCustomElement as defineSixTooltip } from "@six-group/ui-library/dist/components/six-tooltip.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

export type SixAlertEvents = {
    onSixAlertShow: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertAfterShow: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertHide: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertAfterHide: EventName<SixAlertCustomEvent<EmptyPayload>>
};

export const SixAlert: StencilReactComponent<SixAlertElement, SixAlertEvents> = /*@__PURE__*/ createComponent<SixAlertElement, SixAlertEvents>({
    tagName: 'six-alert',
    elementClass: SixAlertElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixAlertShow: 'six-alert-show',
        onSixAlertAfterShow: 'six-alert-after-show',
        onSixAlertHide: 'six-alert-hide',
        onSixAlertAfterHide: 'six-alert-after-hide'
    } as SixAlertEvents,
    defineCustomElement: defineSixAlert
});

export type SixAvatarEvents = NonNullable<unknown>;

export const SixAvatar: StencilReactComponent<SixAvatarElement, SixAvatarEvents> = /*@__PURE__*/ createComponent<SixAvatarElement, SixAvatarEvents>({
    tagName: 'six-avatar',
    elementClass: SixAvatarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixAvatarEvents,
    defineCustomElement: defineSixAvatar
});

export type SixBadgeEvents = NonNullable<unknown>;

export const SixBadge: StencilReactComponent<SixBadgeElement, SixBadgeEvents> = /*@__PURE__*/ createComponent<SixBadgeElement, SixBadgeEvents>({
    tagName: 'six-badge',
    elementClass: SixBadgeElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixBadgeEvents,
    defineCustomElement: defineSixBadge
});

export type SixButtonEvents = {
    onSixButtonBlur: EventName<SixButtonCustomEvent<EmptyPayload>>,
    onSixButtonFocus: EventName<SixButtonCustomEvent<EmptyPayload>>
};

export const SixButton: StencilReactComponent<SixButtonElement, SixButtonEvents> = /*@__PURE__*/ createComponent<SixButtonElement, SixButtonEvents>({
    tagName: 'six-button',
    elementClass: SixButtonElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixButtonBlur: 'six-button-blur',
        onSixButtonFocus: 'six-button-focus'
    } as SixButtonEvents,
    defineCustomElement: defineSixButton
});

export type SixCardEvents = NonNullable<unknown>;

export const SixCard: StencilReactComponent<SixCardElement, SixCardEvents> = /*@__PURE__*/ createComponent<SixCardElement, SixCardEvents>({
    tagName: 'six-card',
    elementClass: SixCardElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixCardEvents,
    defineCustomElement: defineSixCard
});

export type SixCheckboxEvents = {
    onSixCheckboxBlur: EventName<SixCheckboxCustomEvent<EmptyPayload>>,
    onSixCheckboxChange: EventName<SixCheckboxCustomEvent<EmptyPayload>>,
    onSixCheckboxFocus: EventName<SixCheckboxCustomEvent<EmptyPayload>>
};

export const SixCheckbox: StencilReactComponent<SixCheckboxElement, SixCheckboxEvents> = /*@__PURE__*/ createComponent<SixCheckboxElement, SixCheckboxEvents>({
    tagName: 'six-checkbox',
    elementClass: SixCheckboxElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixCheckboxBlur: 'six-checkbox-blur',
        onSixCheckboxChange: 'six-checkbox-change',
        onSixCheckboxFocus: 'six-checkbox-focus'
    } as SixCheckboxEvents,
    defineCustomElement: defineSixCheckbox
});

export type SixDateEvents = {
    onSixChange: EventName<CustomEvent<string | ''>>,
    onSixBlur: EventName<CustomEvent<any>>
};

export const SixDate: StencilReactComponent<SixDateElement, SixDateEvents> = /*@__PURE__*/ createComponent<SixDateElement, SixDateEvents>({
    tagName: 'six-date',
    elementClass: SixDateElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixChange: 'six-change',
        onSixBlur: 'six-blur'
    } as SixDateEvents,
    defineCustomElement: defineSixDate
});

export type SixDatepickerEvents = {
    onSixDatepickerSelect: EventName<SixDatepickerCustomEvent<SixDatepickerSelectPayload>>,
    onSixDatepickerClear: EventName<SixDatepickerCustomEvent<EmptyPayload>>,
    onSixDatepickerBlur: EventName<SixDatepickerCustomEvent<SixDatepickerSelectPayload>>
};

export const SixDatepicker: StencilReactComponent<SixDatepickerElement, SixDatepickerEvents> = /*@__PURE__*/ createComponent<SixDatepickerElement, SixDatepickerEvents>({
    tagName: 'six-datepicker',
    elementClass: SixDatepickerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixDatepickerSelect: 'six-datepicker-select',
        onSixDatepickerClear: 'six-datepicker-clear',
        onSixDatepickerBlur: 'six-datepicker-blur'
    } as SixDatepickerEvents,
    defineCustomElement: defineSixDatepicker
});

export type SixDetailsEvents = {
    onSixDetailsShow: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsAfterShow: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsHide: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsAfterHide: EventName<SixDetailsCustomEvent<EmptyPayload>>
};

export const SixDetails: StencilReactComponent<SixDetailsElement, SixDetailsEvents> = /*@__PURE__*/ createComponent<SixDetailsElement, SixDetailsEvents>({
    tagName: 'six-details',
    elementClass: SixDetailsElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixDetailsShow: 'six-details-show',
        onSixDetailsAfterShow: 'six-details-after-show',
        onSixDetailsHide: 'six-details-hide',
        onSixDetailsAfterHide: 'six-details-after-hide'
    } as SixDetailsEvents,
    defineCustomElement: defineSixDetails
});

export type SixDialogEvents = {
    onSixDialogShow: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogAfterShow: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogHide: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogAfterHide: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogInitialFocus: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogRequestClose: EventName<SixDialogCustomEvent<SixDialogRequestClose>>
};

export const SixDialog: StencilReactComponent<SixDialogElement, SixDialogEvents> = /*@__PURE__*/ createComponent<SixDialogElement, SixDialogEvents>({
    tagName: 'six-dialog',
    elementClass: SixDialogElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixDialogShow: 'six-dialog-show',
        onSixDialogAfterShow: 'six-dialog-after-show',
        onSixDialogHide: 'six-dialog-hide',
        onSixDialogAfterHide: 'six-dialog-after-hide',
        onSixDialogInitialFocus: 'six-dialog-initial-focus',
        onSixDialogRequestClose: 'six-dialog-request-close'
    } as SixDialogEvents,
    defineCustomElement: defineSixDialog
});

export type SixDrawerEvents = {
    onSixDrawerShow: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerAfterShow: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerHide: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerAfterHide: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerInitialFocus: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerRequestClose: EventName<SixDrawerCustomEvent<SixDrawerRequestClose>>
};

export const SixDrawer: StencilReactComponent<SixDrawerElement, SixDrawerEvents> = /*@__PURE__*/ createComponent<SixDrawerElement, SixDrawerEvents>({
    tagName: 'six-drawer',
    elementClass: SixDrawerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixDrawerShow: 'six-drawer-show',
        onSixDrawerAfterShow: 'six-drawer-after-show',
        onSixDrawerHide: 'six-drawer-hide',
        onSixDrawerAfterHide: 'six-drawer-after-hide',
        onSixDrawerInitialFocus: 'six-drawer-initial-focus',
        onSixDrawerRequestClose: 'six-drawer-request-close'
    } as SixDrawerEvents,
    defineCustomElement: defineSixDrawer
});

export type SixDropdownEvents = {
    onSixDropdownShow: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAfterShow: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownHide: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAfterHide: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAutoFilterFired: EventName<SixDropdownCustomEvent<SixDropdownAutoFilterPayload>>,
    onSixAsyncFilterFired: EventName<SixDropdownCustomEvent<SixDropdownAsyncFilterPayload>>,
    onSixDropdownScroll: EventName<SixDropdownCustomEvent<SixDropdownScrollPayload>>
};

export const SixDropdown: StencilReactComponent<SixDropdownElement, SixDropdownEvents> = /*@__PURE__*/ createComponent<SixDropdownElement, SixDropdownEvents>({
    tagName: 'six-dropdown',
    elementClass: SixDropdownElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixDropdownShow: 'six-dropdown-show',
        onSixDropdownAfterShow: 'six-dropdown-after-show',
        onSixDropdownHide: 'six-dropdown-hide',
        onSixDropdownAfterHide: 'six-dropdown-after-hide',
        onSixDropdownAutoFilterFired: 'six-dropdown-auto-filter-fired',
        onSixAsyncFilterFired: 'six-async-filter-fired',
        onSixDropdownScroll: 'six-dropdown-scroll'
    } as SixDropdownEvents,
    defineCustomElement: defineSixDropdown
});

export type SixErrorEvents = NonNullable<unknown>;

export const SixError: StencilReactComponent<SixErrorElement, SixErrorEvents> = /*@__PURE__*/ createComponent<SixErrorElement, SixErrorEvents>({
    tagName: 'six-error',
    elementClass: SixErrorElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixErrorEvents,
    defineCustomElement: defineSixError
});

export type SixErrorPageEvents = NonNullable<unknown>;

export const SixErrorPage: StencilReactComponent<SixErrorPageElement, SixErrorPageEvents> = /*@__PURE__*/ createComponent<SixErrorPageElement, SixErrorPageEvents>({
    tagName: 'six-error-page',
    elementClass: SixErrorPageElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixErrorPageEvents,
    defineCustomElement: defineSixErrorPage
});

export type SixFileListEvents = NonNullable<unknown>;

export const SixFileList: StencilReactComponent<SixFileListElement, SixFileListEvents> = /*@__PURE__*/ createComponent<SixFileListElement, SixFileListEvents>({
    tagName: 'six-file-list',
    elementClass: SixFileListElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixFileListEvents,
    defineCustomElement: defineSixFileList
});

export type SixFileListItemEvents = {
    onSixFileListItemDownload: EventName<SixFileListItemCustomEvent<SixFileListDownloadPayload>>,
    onSixFileListItemRemove: EventName<SixFileListItemCustomEvent<SixFileListRemovePayload>>
};

export const SixFileListItem: StencilReactComponent<SixFileListItemElement, SixFileListItemEvents> = /*@__PURE__*/ createComponent<SixFileListItemElement, SixFileListItemEvents>({
    tagName: 'six-file-list-item',
    elementClass: SixFileListItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixFileListItemDownload: 'six-file-list-item-download',
        onSixFileListItemRemove: 'six-file-list-item-remove'
    } as SixFileListItemEvents,
    defineCustomElement: defineSixFileListItem
});

export type SixFileUploadEvents = {
    onSixFileUploadSuccess: EventName<SixFileUploadCustomEvent<SixFileUploadSuccessPayload>>,
    onSixFileUploadFailure: EventName<SixFileUploadCustomEvent<SixFileUploadFailurePayload>>
};

export const SixFileUpload: StencilReactComponent<SixFileUploadElement, SixFileUploadEvents> = /*@__PURE__*/ createComponent<SixFileUploadElement, SixFileUploadEvents>({
    tagName: 'six-file-upload',
    elementClass: SixFileUploadElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixFileUploadSuccess: 'six-file-upload-success',
        onSixFileUploadFailure: 'six-file-upload-failure'
    } as SixFileUploadEvents,
    defineCustomElement: defineSixFileUpload
});

export type SixFooterEvents = NonNullable<unknown>;

export const SixFooter: StencilReactComponent<SixFooterElement, SixFooterEvents> = /*@__PURE__*/ createComponent<SixFooterElement, SixFooterEvents>({
    tagName: 'six-footer',
    elementClass: SixFooterElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixFooterEvents,
    defineCustomElement: defineSixFooter
});

export type SixGroupLabelEvents = NonNullable<unknown>;

export const SixGroupLabel: StencilReactComponent<SixGroupLabelElement, SixGroupLabelEvents> = /*@__PURE__*/ createComponent<SixGroupLabelElement, SixGroupLabelEvents>({
    tagName: 'six-group-label',
    elementClass: SixGroupLabelElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixGroupLabelEvents,
    defineCustomElement: defineSixGroupLabel
});

export type SixHeaderEvents = NonNullable<unknown>;

export const SixHeader: StencilReactComponent<SixHeaderElement, SixHeaderEvents> = /*@__PURE__*/ createComponent<SixHeaderElement, SixHeaderEvents>({
    tagName: 'six-header',
    elementClass: SixHeaderElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixHeaderEvents,
    defineCustomElement: defineSixHeader
});

export type SixHeaderDropdownItemEvents = NonNullable<unknown>;

export const SixHeaderDropdownItem: StencilReactComponent<SixHeaderDropdownItemElement, SixHeaderDropdownItemEvents> = /*@__PURE__*/ createComponent<SixHeaderDropdownItemElement, SixHeaderDropdownItemEvents>({
    tagName: 'six-header-dropdown-item',
    elementClass: SixHeaderDropdownItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixHeaderDropdownItemEvents,
    defineCustomElement: defineSixHeaderDropdownItem
});

export type SixHeaderItemEvents = NonNullable<unknown>;

export const SixHeaderItem: StencilReactComponent<SixHeaderItemElement, SixHeaderItemEvents> = /*@__PURE__*/ createComponent<SixHeaderItemElement, SixHeaderItemEvents>({
    tagName: 'six-header-item',
    elementClass: SixHeaderItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixHeaderItemEvents,
    defineCustomElement: defineSixHeaderItem
});

export type SixHeaderMenuButtonEvents = NonNullable<unknown>;

export const SixHeaderMenuButton: StencilReactComponent<SixHeaderMenuButtonElement, SixHeaderMenuButtonEvents> = /*@__PURE__*/ createComponent<SixHeaderMenuButtonElement, SixHeaderMenuButtonEvents>({
    tagName: 'six-header-menu-button',
    elementClass: SixHeaderMenuButtonElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixHeaderMenuButtonEvents,
    defineCustomElement: defineSixHeaderMenuButton
});

export type SixIconEvents = NonNullable<unknown>;

export const SixIcon: StencilReactComponent<SixIconElement, SixIconEvents> = /*@__PURE__*/ createComponent<SixIconElement, SixIconEvents>({
    tagName: 'six-icon',
    elementClass: SixIconElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixIconEvents,
    defineCustomElement: defineSixIcon
});

export type SixIconButtonEvents = NonNullable<unknown>;

export const SixIconButton: StencilReactComponent<SixIconButtonElement, SixIconButtonEvents> = /*@__PURE__*/ createComponent<SixIconButtonElement, SixIconButtonEvents>({
    tagName: 'six-icon-button',
    elementClass: SixIconButtonElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixIconButtonEvents,
    defineCustomElement: defineSixIconButton
});

export type SixInputEvents = {
    onSixInputChange: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputClear: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputInput: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputFocus: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputBlur: EventName<SixInputCustomEvent<EmptyPayload>>
};

export const SixInput: StencilReactComponent<SixInputElement, SixInputEvents> = /*@__PURE__*/ createComponent<SixInputElement, SixInputEvents>({
    tagName: 'six-input',
    elementClass: SixInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixInputChange: 'six-input-change',
        onSixInputClear: 'six-input-clear',
        onSixInputInput: 'six-input-input',
        onSixInputFocus: 'six-input-focus',
        onSixInputBlur: 'six-input-blur'
    } as SixInputEvents,
    defineCustomElement: defineSixInput
});

export type SixItemPickerEvents = {
    onSixItemPickerChange: EventName<SixItemPickerCustomEvent<SixItemPickerChangePayload>>,
    onSixItemPickerChangeDebounced: EventName<SixItemPickerCustomEvent<SixItemPickerChangePayload>>
};

export const SixItemPicker: StencilReactComponent<SixItemPickerElement, SixItemPickerEvents> = /*@__PURE__*/ createComponent<SixItemPickerElement, SixItemPickerEvents>({
    tagName: 'six-item-picker',
    elementClass: SixItemPickerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixItemPickerChange: 'six-item-picker-change',
        onSixItemPickerChangeDebounced: 'six-item-picker-change-debounced'
    } as SixItemPickerEvents,
    defineCustomElement: defineSixItemPicker
});

export type SixLanguageSwitcherEvents = { onSixLanguageSwitcherChange: EventName<SixLanguageSwitcherCustomEvent<SixLanguageSwitcherChangePayload>> };

export const SixLanguageSwitcher: StencilReactComponent<SixLanguageSwitcherElement, SixLanguageSwitcherEvents> = /*@__PURE__*/ createComponent<SixLanguageSwitcherElement, SixLanguageSwitcherEvents>({
    tagName: 'six-language-switcher',
    elementClass: SixLanguageSwitcherElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onSixLanguageSwitcherChange: 'six-language-switcher-change' } as SixLanguageSwitcherEvents,
    defineCustomElement: defineSixLanguageSwitcher
});

export type SixLayoutGridEvents = NonNullable<unknown>;

export const SixLayoutGrid: StencilReactComponent<SixLayoutGridElement, SixLayoutGridEvents> = /*@__PURE__*/ createComponent<SixLayoutGridElement, SixLayoutGridEvents>({
    tagName: 'six-layout-grid',
    elementClass: SixLayoutGridElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixLayoutGridEvents,
    defineCustomElement: defineSixLayoutGrid
});

export type SixLogoEvents = NonNullable<unknown>;

export const SixLogo: StencilReactComponent<SixLogoElement, SixLogoEvents> = /*@__PURE__*/ createComponent<SixLogoElement, SixLogoEvents>({
    tagName: 'six-logo',
    elementClass: SixLogoElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixLogoEvents,
    defineCustomElement: defineSixLogo
});

export type SixMainContainerEvents = NonNullable<unknown>;

export const SixMainContainer: StencilReactComponent<SixMainContainerElement, SixMainContainerEvents> = /*@__PURE__*/ createComponent<SixMainContainerElement, SixMainContainerEvents>({
    tagName: 'six-main-container',
    elementClass: SixMainContainerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixMainContainerEvents,
    defineCustomElement: defineSixMainContainer
});

export type SixMenuEvents = { onSixMenuItemSelected: EventName<SixMenuCustomEvent<SixMenuItemSelectedPayload>> };

export const SixMenu: StencilReactComponent<SixMenuElement, SixMenuEvents> = /*@__PURE__*/ createComponent<SixMenuElement, SixMenuEvents>({
    tagName: 'six-menu',
    elementClass: SixMenuElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onSixMenuItemSelected: 'six-menu-item-selected' } as SixMenuEvents,
    defineCustomElement: defineSixMenu
});

export type SixMenuDividerEvents = NonNullable<unknown>;

export const SixMenuDivider: StencilReactComponent<SixMenuDividerElement, SixMenuDividerEvents> = /*@__PURE__*/ createComponent<SixMenuDividerElement, SixMenuDividerEvents>({
    tagName: 'six-menu-divider',
    elementClass: SixMenuDividerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixMenuDividerEvents,
    defineCustomElement: defineSixMenuDivider
});

export type SixMenuItemEvents = NonNullable<unknown>;

export const SixMenuItem: StencilReactComponent<SixMenuItemElement, SixMenuItemEvents> = /*@__PURE__*/ createComponent<SixMenuItemElement, SixMenuItemEvents>({
    tagName: 'six-menu-item',
    elementClass: SixMenuItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixMenuItemEvents,
    defineCustomElement: defineSixMenuItem
});

export type SixMenuLabelEvents = NonNullable<unknown>;

export const SixMenuLabel: StencilReactComponent<SixMenuLabelElement, SixMenuLabelEvents> = /*@__PURE__*/ createComponent<SixMenuLabelElement, SixMenuLabelEvents>({
    tagName: 'six-menu-label',
    elementClass: SixMenuLabelElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixMenuLabelEvents,
    defineCustomElement: defineSixMenuLabel
});

export type SixPictoEvents = NonNullable<unknown>;

export const SixPicto: StencilReactComponent<SixPictoElement, SixPictoEvents> = /*@__PURE__*/ createComponent<SixPictoElement, SixPictoEvents>({
    tagName: 'six-picto',
    elementClass: SixPictoElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixPictoEvents,
    defineCustomElement: defineSixPicto
});

export type SixProgressBarEvents = NonNullable<unknown>;

export const SixProgressBar: StencilReactComponent<SixProgressBarElement, SixProgressBarEvents> = /*@__PURE__*/ createComponent<SixProgressBarElement, SixProgressBarEvents>({
    tagName: 'six-progress-bar',
    elementClass: SixProgressBarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixProgressBarEvents,
    defineCustomElement: defineSixProgressBar
});

export type SixProgressRingEvents = NonNullable<unknown>;

export const SixProgressRing: StencilReactComponent<SixProgressRingElement, SixProgressRingEvents> = /*@__PURE__*/ createComponent<SixProgressRingElement, SixProgressRingEvents>({
    tagName: 'six-progress-ring',
    elementClass: SixProgressRingElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixProgressRingEvents,
    defineCustomElement: defineSixProgressRing
});

export type SixRadioEvents = {
    onSixRadioBlur: EventName<SixRadioCustomEvent<EmptyPayload>>,
    onSixRadioChange: EventName<SixRadioCustomEvent<EmptyPayload>>,
    onSixRadioFocus: EventName<SixRadioCustomEvent<EmptyPayload>>
};

export const SixRadio: StencilReactComponent<SixRadioElement, SixRadioEvents> = /*@__PURE__*/ createComponent<SixRadioElement, SixRadioEvents>({
    tagName: 'six-radio',
    elementClass: SixRadioElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixRadioBlur: 'six-radio-blur',
        onSixRadioChange: 'six-radio-change',
        onSixRadioFocus: 'six-radio-focus'
    } as SixRadioEvents,
    defineCustomElement: defineSixRadio
});

export type SixRangeEvents = {
    onSixRangeChange: EventName<SixRangeCustomEvent<EmptyPayload>>,
    onSixRangeBlur: EventName<SixRangeCustomEvent<EmptyPayload>>,
    onSixRangeFocus: EventName<SixRangeCustomEvent<EmptyPayload>>
};

export const SixRange: StencilReactComponent<SixRangeElement, SixRangeEvents> = /*@__PURE__*/ createComponent<SixRangeElement, SixRangeEvents>({
    tagName: 'six-range',
    elementClass: SixRangeElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixRangeChange: 'six-range-change',
        onSixRangeBlur: 'six-range-blur',
        onSixRangeFocus: 'six-range-focus'
    } as SixRangeEvents,
    defineCustomElement: defineSixRange
});

export type SixRootEvents = NonNullable<unknown>;

export const SixRoot: StencilReactComponent<SixRootElement, SixRootEvents> = /*@__PURE__*/ createComponent<SixRootElement, SixRootEvents>({
    tagName: 'six-root',
    elementClass: SixRootElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixRootEvents,
    defineCustomElement: defineSixRoot
});

export type SixSearchFieldEvents = { onSixSearchFieldChange: EventName<SixSearchFieldCustomEvent<SixSearchFieldChangePayload>> };

export const SixSearchField: StencilReactComponent<SixSearchFieldElement, SixSearchFieldEvents> = /*@__PURE__*/ createComponent<SixSearchFieldElement, SixSearchFieldEvents>({
    tagName: 'six-search-field',
    elementClass: SixSearchFieldElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onSixSearchFieldChange: 'six-search-field-change' } as SixSearchFieldEvents,
    defineCustomElement: defineSixSearchField
});

export type SixSelectEvents = {
    onSixSelectChange: EventName<SixSelectCustomEvent<SixSelectChangePayload>>,
    onSixSelectFocus: EventName<SixSelectCustomEvent<EmptyPayload>>,
    onSixSelectBlur: EventName<SixSelectCustomEvent<EmptyPayload>>
};

export const SixSelect: StencilReactComponent<SixSelectElement, SixSelectEvents> = /*@__PURE__*/ createComponent<SixSelectElement, SixSelectEvents>({
    tagName: 'six-select',
    elementClass: SixSelectElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixSelectChange: 'six-select-change',
        onSixSelectFocus: 'six-select-focus',
        onSixSelectBlur: 'six-select-blur'
    } as SixSelectEvents,
    defineCustomElement: defineSixSelect
});

export type SixSidebarEvents = {
    onSixSidebarShow: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarAfterShow: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarHide: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarAfterHide: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarInitialFocus: EventName<SixSidebarCustomEvent<EmptyPayload>>
};

export const SixSidebar: StencilReactComponent<SixSidebarElement, SixSidebarEvents> = /*@__PURE__*/ createComponent<SixSidebarElement, SixSidebarEvents>({
    tagName: 'six-sidebar',
    elementClass: SixSidebarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixSidebarShow: 'six-sidebar-show',
        onSixSidebarAfterShow: 'six-sidebar-after-show',
        onSixSidebarHide: 'six-sidebar-hide',
        onSixSidebarAfterHide: 'six-sidebar-after-hide',
        onSixSidebarInitialFocus: 'six-sidebar-initial-focus'
    } as SixSidebarEvents,
    defineCustomElement: defineSixSidebar
});

export type SixSidebarItemEvents = NonNullable<unknown>;

export const SixSidebarItem: StencilReactComponent<SixSidebarItemElement, SixSidebarItemEvents> = /*@__PURE__*/ createComponent<SixSidebarItemElement, SixSidebarItemEvents>({
    tagName: 'six-sidebar-item',
    elementClass: SixSidebarItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixSidebarItemEvents,
    defineCustomElement: defineSixSidebarItem
});

export type SixSidebarItemGroupEvents = NonNullable<unknown>;

export const SixSidebarItemGroup: StencilReactComponent<SixSidebarItemGroupElement, SixSidebarItemGroupEvents> = /*@__PURE__*/ createComponent<SixSidebarItemGroupElement, SixSidebarItemGroupEvents>({
    tagName: 'six-sidebar-item-group',
    elementClass: SixSidebarItemGroupElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixSidebarItemGroupEvents,
    defineCustomElement: defineSixSidebarItemGroup
});

export type SixSpinnerEvents = NonNullable<unknown>;

export const SixSpinner: StencilReactComponent<SixSpinnerElement, SixSpinnerEvents> = /*@__PURE__*/ createComponent<SixSpinnerElement, SixSpinnerEvents>({
    tagName: 'six-spinner',
    elementClass: SixSpinnerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixSpinnerEvents,
    defineCustomElement: defineSixSpinner
});

export type SixStageIndicatorEvents = NonNullable<unknown>;

export const SixStageIndicator: StencilReactComponent<SixStageIndicatorElement, SixStageIndicatorEvents> = /*@__PURE__*/ createComponent<SixStageIndicatorElement, SixStageIndicatorEvents>({
    tagName: 'six-stage-indicator',
    elementClass: SixStageIndicatorElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixStageIndicatorEvents,
    defineCustomElement: defineSixStageIndicator
});

export type SixSwitchEvents = {
    onSixSwitchBlur: EventName<CustomEvent<boolean>>,
    onSixSwitchChange: EventName<CustomEvent<boolean>>,
    onSixSwitchFocus: EventName<SixSwitchCustomEvent<EmptyPayload>>
};

export const SixSwitch: StencilReactComponent<SixSwitchElement, SixSwitchEvents> = /*@__PURE__*/ createComponent<SixSwitchElement, SixSwitchEvents>({
    tagName: 'six-switch',
    elementClass: SixSwitchElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixSwitchBlur: 'six-switch-blur',
        onSixSwitchChange: 'six-switch-change',
        onSixSwitchFocus: 'six-switch-focus'
    } as SixSwitchEvents,
    defineCustomElement: defineSixSwitch
});

export type SixTabEvents = { onSixTabClose: EventName<SixTabCustomEvent<EmptyPayload>> };

export const SixTab: StencilReactComponent<SixTabElement, SixTabEvents> = /*@__PURE__*/ createComponent<SixTabElement, SixTabEvents>({
    tagName: 'six-tab',
    elementClass: SixTabElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onSixTabClose: 'six-tab-close' } as SixTabEvents,
    defineCustomElement: defineSixTab
});

export type SixTabGroupEvents = {
    onSixTabShow: EventName<SixTabGroupCustomEvent<SixTabShowPayload>>,
    onSixTabHide: EventName<SixTabGroupCustomEvent<SixTabHidePayload>>
};

export const SixTabGroup: StencilReactComponent<SixTabGroupElement, SixTabGroupEvents> = /*@__PURE__*/ createComponent<SixTabGroupElement, SixTabGroupEvents>({
    tagName: 'six-tab-group',
    elementClass: SixTabGroupElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixTabShow: 'six-tab-show',
        onSixTabHide: 'six-tab-hide'
    } as SixTabGroupEvents,
    defineCustomElement: defineSixTabGroup
});

export type SixTabPanelEvents = NonNullable<unknown>;

export const SixTabPanel: StencilReactComponent<SixTabPanelElement, SixTabPanelEvents> = /*@__PURE__*/ createComponent<SixTabPanelElement, SixTabPanelEvents>({
    tagName: 'six-tab-panel',
    elementClass: SixTabPanelElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as SixTabPanelEvents,
    defineCustomElement: defineSixTabPanel
});

export type SixTagEvents = { onSixTagClear: EventName<SixTagCustomEvent<EmptyPayload>> };

export const SixTag: StencilReactComponent<SixTagElement, SixTagEvents> = /*@__PURE__*/ createComponent<SixTagElement, SixTagEvents>({
    tagName: 'six-tag',
    elementClass: SixTagElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onSixTagClear: 'six-tag-clear' } as SixTagEvents,
    defineCustomElement: defineSixTag
});

export type SixTextareaEvents = {
    onSixTextareaChange: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaInput: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaFocus: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaBlur: EventName<SixTextareaCustomEvent<EmptyPayload>>
};

export const SixTextarea: StencilReactComponent<SixTextareaElement, SixTextareaEvents> = /*@__PURE__*/ createComponent<SixTextareaElement, SixTextareaEvents>({
    tagName: 'six-textarea',
    elementClass: SixTextareaElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixTextareaChange: 'six-textarea-change',
        onSixTextareaInput: 'six-textarea-input',
        onSixTextareaFocus: 'six-textarea-focus',
        onSixTextareaBlur: 'six-textarea-blur'
    } as SixTextareaEvents,
    defineCustomElement: defineSixTextarea
});

export type SixTileEvents = {
    onSixTileClosed: EventName<SixTileCustomEvent<EmptyPayload>>,
    onSixTileSelected: EventName<SixTileCustomEvent<EmptyPayload>>
};

export const SixTile: StencilReactComponent<SixTileElement, SixTileEvents> = /*@__PURE__*/ createComponent<SixTileElement, SixTileEvents>({
    tagName: 'six-tile',
    elementClass: SixTileElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixTileClosed: 'six-tile-closed',
        onSixTileSelected: 'six-tile-selected'
    } as SixTileEvents,
    defineCustomElement: defineSixTile
});

export type SixTimepickerEvents = {
    onSixTimepickerChange: EventName<SixTimepickerCustomEvent<SixTimepickerChange>>,
    onSixTimepickerChangeDebounced: EventName<SixTimepickerCustomEvent<SixTimepickerChange>>,
    onSixTimepickerClear: EventName<SixTimepickerCustomEvent<EmptyPayload>>
};

export const SixTimepicker: StencilReactComponent<SixTimepickerElement, SixTimepickerEvents> = /*@__PURE__*/ createComponent<SixTimepickerElement, SixTimepickerEvents>({
    tagName: 'six-timepicker',
    elementClass: SixTimepickerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixTimepickerChange: 'six-timepicker-change',
        onSixTimepickerChangeDebounced: 'six-timepicker-change-debounced',
        onSixTimepickerClear: 'six-timepicker-clear'
    } as SixTimepickerEvents,
    defineCustomElement: defineSixTimepicker
});

export type SixTooltipEvents = {
    onSixTooltipShow: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipAfterShow: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipHide: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipAfterHide: EventName<SixTooltipCustomEvent<EmptyPayload>>
};

export const SixTooltip: StencilReactComponent<SixTooltipElement, SixTooltipEvents> = /*@__PURE__*/ createComponent<SixTooltipElement, SixTooltipEvents>({
    tagName: 'six-tooltip',
    elementClass: SixTooltipElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onSixTooltipShow: 'six-tooltip-show',
        onSixTooltipAfterShow: 'six-tooltip-after-show',
        onSixTooltipHide: 'six-tooltip-hide',
        onSixTooltipAfterHide: 'six-tooltip-after-hide'
    } as SixTooltipEvents,
    defineCustomElement: defineSixTooltip
});
