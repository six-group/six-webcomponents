/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import { type EmptyPayload, type SixAlertCustomEvent, type SixButtonCustomEvent, type SixCheckboxCustomEvent, type SixDatepickerCustomEvent, type SixDatepickerSelectPayload, type SixDetailsCustomEvent, type SixDialogCustomEvent, type SixDrawerCustomEvent, type SixDropdownAsyncFilterPayload, type SixDropdownAutoFilterPayload, type SixDropdownCustomEvent, type SixDropdownScrollPayload, type SixFileListDownloadPayload, type SixFileListItemCustomEvent, type SixFileListRemovePayload, type SixFileUploadCustomEvent, type SixFileUploadFailurePayload, type SixFileUploadSuccessPayload, type SixHeaderAppSwitcherSelectPayload, type SixHeaderCustomEvent, type SixHeaderProfileSelectPayload, type SixHeaderSearchFieldToggle, type SixInputCustomEvent, type SixItemPickerChangePayload, type SixItemPickerCustomEvent, type SixLanguageSwitcherChangePayload, type SixLanguageSwitcherCustomEvent, type SixMenuCustomEvent, type SixMenuItemSelectedPayload, type SixRadioCustomEvent, type SixRangeCustomEvent, type SixSearchFieldChangePayload, type SixSearchFieldCustomEvent, type SixSelectChangePayload, type SixSelectCustomEvent, type SixSidebarCustomEvent, type SixSwitchCustomEvent, type SixTabCustomEvent, type SixTabGroupCustomEvent, type SixTabHidePayload, type SixTabShowPayload, type SixTagCustomEvent, type SixTextareaCustomEvent, type SixTileCustomEvent, type SixTimepickerChange, type SixTimepickerCustomEvent, type SixTooltipCustomEvent } from "@six-group/ui-library";
import { SixAlert as SixAlertElement, defineCustomElement as defineSixAlert } from "@six-group/ui-library/dist/components/six-alert.js";
import { SixAvatar as SixAvatarElement, defineCustomElement as defineSixAvatar } from "@six-group/ui-library/dist/components/six-avatar.js";
import { SixBadge as SixBadgeElement, defineCustomElement as defineSixBadge } from "@six-group/ui-library/dist/components/six-badge.js";
import { SixButton as SixButtonElement, defineCustomElement as defineSixButton } from "@six-group/ui-library/dist/components/six-button.js";
import { SixCard as SixCardElement, defineCustomElement as defineSixCard } from "@six-group/ui-library/dist/components/six-card.js";
import { SixCheckbox as SixCheckboxElement, defineCustomElement as defineSixCheckbox } from "@six-group/ui-library/dist/components/six-checkbox.js";
import { SixDatepicker as SixDatepickerElement, defineCustomElement as defineSixDatepicker } from "@six-group/ui-library/dist/components/six-datepicker.js";
import { SixDetails as SixDetailsElement, defineCustomElement as defineSixDetails } from "@six-group/ui-library/dist/components/six-details.js";
import { SixDialog as SixDialogElement, defineCustomElement as defineSixDialog } from "@six-group/ui-library/dist/components/six-dialog.js";
import { SixDrawer as SixDrawerElement, defineCustomElement as defineSixDrawer } from "@six-group/ui-library/dist/components/six-drawer.js";
import { SixDropdown as SixDropdownElement, defineCustomElement as defineSixDropdown } from "@six-group/ui-library/dist/components/six-dropdown.js";
import { SixErrorPage as SixErrorPageElement, defineCustomElement as defineSixErrorPage } from "@six-group/ui-library/dist/components/six-error-page.js";
import { SixError as SixErrorElement, defineCustomElement as defineSixError } from "@six-group/ui-library/dist/components/six-error.js";
import { SixFileListItem as SixFileListItemElement, defineCustomElement as defineSixFileListItem } from "@six-group/ui-library/dist/components/six-file-list-item.js";
import { SixFileList as SixFileListElement, defineCustomElement as defineSixFileList } from "@six-group/ui-library/dist/components/six-file-list.js";
import { SixFileUpload as SixFileUploadElement, defineCustomElement as defineSixFileUpload } from "@six-group/ui-library/dist/components/six-file-upload.js";
import { SixFooter as SixFooterElement, defineCustomElement as defineSixFooter } from "@six-group/ui-library/dist/components/six-footer.js";
import { SixGroupLabel as SixGroupLabelElement, defineCustomElement as defineSixGroupLabel } from "@six-group/ui-library/dist/components/six-group-label.js";
import { SixHeaderDropdownItem as SixHeaderDropdownItemElement, defineCustomElement as defineSixHeaderDropdownItem } from "@six-group/ui-library/dist/components/six-header-dropdown-item.js";
import { SixHeaderItem as SixHeaderItemElement, defineCustomElement as defineSixHeaderItem } from "@six-group/ui-library/dist/components/six-header-item.js";
import { SixHeaderMenuButton as SixHeaderMenuButtonElement, defineCustomElement as defineSixHeaderMenuButton } from "@six-group/ui-library/dist/components/six-header-menu-button.js";
import { SixHeader as SixHeaderElement, defineCustomElement as defineSixHeader } from "@six-group/ui-library/dist/components/six-header.js";
import { SixIconButton as SixIconButtonElement, defineCustomElement as defineSixIconButton } from "@six-group/ui-library/dist/components/six-icon-button.js";
import { SixIcon as SixIconElement, defineCustomElement as defineSixIcon } from "@six-group/ui-library/dist/components/six-icon.js";
import { SixInput as SixInputElement, defineCustomElement as defineSixInput } from "@six-group/ui-library/dist/components/six-input.js";
import { SixItemPicker as SixItemPickerElement, defineCustomElement as defineSixItemPicker } from "@six-group/ui-library/dist/components/six-item-picker.js";
import { SixLanguageSwitcher as SixLanguageSwitcherElement, defineCustomElement as defineSixLanguageSwitcher } from "@six-group/ui-library/dist/components/six-language-switcher.js";
import { SixLayoutGrid as SixLayoutGridElement, defineCustomElement as defineSixLayoutGrid } from "@six-group/ui-library/dist/components/six-layout-grid.js";
import { SixLogo as SixLogoElement, defineCustomElement as defineSixLogo } from "@six-group/ui-library/dist/components/six-logo.js";
import { SixMainContainer as SixMainContainerElement, defineCustomElement as defineSixMainContainer } from "@six-group/ui-library/dist/components/six-main-container.js";
import { SixMenuDivider as SixMenuDividerElement, defineCustomElement as defineSixMenuDivider } from "@six-group/ui-library/dist/components/six-menu-divider.js";
import { SixMenuItem as SixMenuItemElement, defineCustomElement as defineSixMenuItem } from "@six-group/ui-library/dist/components/six-menu-item.js";
import { SixMenuLabel as SixMenuLabelElement, defineCustomElement as defineSixMenuLabel } from "@six-group/ui-library/dist/components/six-menu-label.js";
import { SixMenu as SixMenuElement, defineCustomElement as defineSixMenu } from "@six-group/ui-library/dist/components/six-menu.js";
import { SixPicto as SixPictoElement, defineCustomElement as defineSixPicto } from "@six-group/ui-library/dist/components/six-picto.js";
import { SixProgressBar as SixProgressBarElement, defineCustomElement as defineSixProgressBar } from "@six-group/ui-library/dist/components/six-progress-bar.js";
import { SixProgressRing as SixProgressRingElement, defineCustomElement as defineSixProgressRing } from "@six-group/ui-library/dist/components/six-progress-ring.js";
import { SixRadio as SixRadioElement, defineCustomElement as defineSixRadio } from "@six-group/ui-library/dist/components/six-radio.js";
import { SixRange as SixRangeElement, defineCustomElement as defineSixRange } from "@six-group/ui-library/dist/components/six-range.js";
import { SixRoot as SixRootElement, defineCustomElement as defineSixRoot } from "@six-group/ui-library/dist/components/six-root.js";
import { SixSearchField as SixSearchFieldElement, defineCustomElement as defineSixSearchField } from "@six-group/ui-library/dist/components/six-search-field.js";
import { SixSelect as SixSelectElement, defineCustomElement as defineSixSelect } from "@six-group/ui-library/dist/components/six-select.js";
import { SixSidebarItemGroup as SixSidebarItemGroupElement, defineCustomElement as defineSixSidebarItemGroup } from "@six-group/ui-library/dist/components/six-sidebar-item-group.js";
import { SixSidebarItem as SixSidebarItemElement, defineCustomElement as defineSixSidebarItem } from "@six-group/ui-library/dist/components/six-sidebar-item.js";
import { SixSidebar as SixSidebarElement, defineCustomElement as defineSixSidebar } from "@six-group/ui-library/dist/components/six-sidebar.js";
import { SixSpinner as SixSpinnerElement, defineCustomElement as defineSixSpinner } from "@six-group/ui-library/dist/components/six-spinner.js";
import { SixStageIndicator as SixStageIndicatorElement, defineCustomElement as defineSixStageIndicator } from "@six-group/ui-library/dist/components/six-stage-indicator.js";
import { SixSwitch as SixSwitchElement, defineCustomElement as defineSixSwitch } from "@six-group/ui-library/dist/components/six-switch.js";
import { SixTabGroup as SixTabGroupElement, defineCustomElement as defineSixTabGroup } from "@six-group/ui-library/dist/components/six-tab-group.js";
import { SixTabPanel as SixTabPanelElement, defineCustomElement as defineSixTabPanel } from "@six-group/ui-library/dist/components/six-tab-panel.js";
import { SixTab as SixTabElement, defineCustomElement as defineSixTab } from "@six-group/ui-library/dist/components/six-tab.js";
import { SixTag as SixTagElement, defineCustomElement as defineSixTag } from "@six-group/ui-library/dist/components/six-tag.js";
import { SixTextarea as SixTextareaElement, defineCustomElement as defineSixTextarea } from "@six-group/ui-library/dist/components/six-textarea.js";
import { SixTile as SixTileElement, defineCustomElement as defineSixTile } from "@six-group/ui-library/dist/components/six-tile.js";
import { SixTimepicker as SixTimepickerElement, defineCustomElement as defineSixTimepicker } from "@six-group/ui-library/dist/components/six-timepicker.js";
import { SixTooltip as SixTooltipElement, defineCustomElement as defineSixTooltip } from "@six-group/ui-library/dist/components/six-tooltip.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type SixAlertEvents = {
    onSixAlertShow: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertAfterShow: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertHide: EventName<SixAlertCustomEvent<EmptyPayload>>,
    onSixAlertAfterHide: EventName<SixAlertCustomEvent<EmptyPayload>>
};

export const SixAlert: StencilReactComponent<SixAlertElement, SixAlertEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixAlertElement, SixAlertEvents>({
        tagName: 'six-alert',
        elementClass: SixAlertElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixAlertShow: 'six-alert-show',
            onSixAlertAfterShow: 'six-alert-after-show',
            onSixAlertHide: 'six-alert-hide',
            onSixAlertAfterHide: 'six-alert-after-hide'
        } as SixAlertEvents,
        defineCustomElement: defineSixAlert
    })
    : /*@__PURE__*/ createSSRComponent<SixAlertElement, SixAlertEvents>({
        tagName: 'six-alert',
        properties: {
            open: 'open',
            closable: 'closable',
            type: 'type',
            duration: 'duration'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixAvatarEvents = NonNullable<unknown>;

export const SixAvatar: StencilReactComponent<SixAvatarElement, SixAvatarEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixAvatarElement, SixAvatarEvents>({
        tagName: 'six-avatar',
        elementClass: SixAvatarElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixAvatarEvents,
        defineCustomElement: defineSixAvatar
    })
    : /*@__PURE__*/ createSSRComponent<SixAvatarElement, SixAvatarEvents>({
        tagName: 'six-avatar',
        properties: {
            image: 'image',
            alt: 'alt',
            initials: 'initials',
            shape: 'shape'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixBadgeEvents = NonNullable<unknown>;

export const SixBadge: StencilReactComponent<SixBadgeElement, SixBadgeEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixBadgeElement, SixBadgeEvents>({
        tagName: 'six-badge',
        elementClass: SixBadgeElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixBadgeEvents,
        defineCustomElement: defineSixBadge
    })
    : /*@__PURE__*/ createSSRComponent<SixBadgeElement, SixBadgeEvents>({
        tagName: 'six-badge',
        properties: {
            type: 'type',
            pill: 'pill',
            pulse: 'pulse'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixButtonEvents = {
    onSixButtonBlur: EventName<SixButtonCustomEvent<EmptyPayload>>,
    onSixButtonFocus: EventName<SixButtonCustomEvent<EmptyPayload>>
};

export const SixButton: StencilReactComponent<SixButtonElement, SixButtonEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixButtonElement, SixButtonEvents>({
        tagName: 'six-button',
        elementClass: SixButtonElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixButtonBlur: 'six-button-blur',
            onSixButtonFocus: 'six-button-focus'
        } as SixButtonEvents,
        defineCustomElement: defineSixButton
    })
    : /*@__PURE__*/ createSSRComponent<SixButtonElement, SixButtonEvents>({
        tagName: 'six-button',
        properties: {
            type: 'type',
            size: 'size',
            caret: 'caret',
            disabled: 'disabled',
            loading: 'loading',
            pill: 'pill',
            circle: 'circle',
            submit: 'submit',
            reset: 'reset',
            name: 'name',
            value: 'value',
            href: 'href',
            target: 'target',
            download: 'download'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixCardEvents = NonNullable<unknown>;

export const SixCard: StencilReactComponent<SixCardElement, SixCardEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixCardElement, SixCardEvents>({
        tagName: 'six-card',
        elementClass: SixCardElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixCardEvents,
        defineCustomElement: defineSixCard
    })
    : /*@__PURE__*/ createSSRComponent<SixCardElement, SixCardEvents>({
        tagName: 'six-card',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixCheckboxEvents = {
    onSixCheckboxBlur: EventName<SixCheckboxCustomEvent<EmptyPayload>>,
    onSixCheckboxChange: EventName<SixCheckboxCustomEvent<EmptyPayload>>,
    onSixCheckboxFocus: EventName<SixCheckboxCustomEvent<EmptyPayload>>
};

export const SixCheckbox: StencilReactComponent<SixCheckboxElement, SixCheckboxEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixCheckboxElement, SixCheckboxEvents>({
        tagName: 'six-checkbox',
        elementClass: SixCheckboxElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixCheckboxBlur: 'six-checkbox-blur',
            onSixCheckboxChange: 'six-checkbox-change',
            onSixCheckboxFocus: 'six-checkbox-focus'
        } as SixCheckboxEvents,
        defineCustomElement: defineSixCheckbox
    })
    : /*@__PURE__*/ createSSRComponent<SixCheckboxElement, SixCheckboxEvents>({
        tagName: 'six-checkbox',
        properties: {
            name: 'name',
            value: 'value',
            disabled: 'disabled',
            required: 'required',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            checked: 'checked',
            indeterminate: 'indeterminate'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixDatepickerEvents = {
    onSixDatepickerSelect: EventName<SixDatepickerCustomEvent<SixDatepickerSelectPayload>>,
    onSixDatepickerClear: EventName<SixDatepickerCustomEvent<EmptyPayload>>,
    onSixDatepickerBlur: EventName<SixDatepickerCustomEvent<SixDatepickerSelectPayload>>
};

export const SixDatepicker: StencilReactComponent<SixDatepickerElement, SixDatepickerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixDatepickerElement, SixDatepickerEvents>({
        tagName: 'six-datepicker',
        elementClass: SixDatepickerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixDatepickerSelect: 'six-datepicker-select',
            onSixDatepickerClear: 'six-datepicker-clear',
            onSixDatepickerBlur: 'six-datepicker-blur'
        } as SixDatepickerEvents,
        defineCustomElement: defineSixDatepicker
    })
    : /*@__PURE__*/ createSSRComponent<SixDatepickerElement, SixDatepickerEvents>({
        tagName: 'six-datepicker',
        properties: {
            type: 'type',
            locale: 'locale',
            open: 'open',
            inline: 'inline',
            readonly: 'readonly',
            disabled: 'disabled',
            closeOnSelect: 'close-on-select',
            placement: 'placement',
            size: 'size',
            required: 'required',
            defaultDate: 'default-date',
            placeholder: 'placeholder',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            dateFormat: 'date-format',
            debounce: 'debounce',
            name: 'name',
            clearable: 'clearable',
            iconPosition: 'icon-position',
            hoist: 'hoist'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixDetailsEvents = {
    onSixDetailsShow: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsAfterShow: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsHide: EventName<SixDetailsCustomEvent<EmptyPayload>>,
    onSixDetailsAfterHide: EventName<SixDetailsCustomEvent<EmptyPayload>>
};

export const SixDetails: StencilReactComponent<SixDetailsElement, SixDetailsEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixDetailsElement, SixDetailsEvents>({
        tagName: 'six-details',
        elementClass: SixDetailsElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixDetailsShow: 'six-details-show',
            onSixDetailsAfterShow: 'six-details-after-show',
            onSixDetailsHide: 'six-details-hide',
            onSixDetailsAfterHide: 'six-details-after-hide'
        } as SixDetailsEvents,
        defineCustomElement: defineSixDetails
    })
    : /*@__PURE__*/ createSSRComponent<SixDetailsElement, SixDetailsEvents>({
        tagName: 'six-details',
        properties: {
            open: 'open',
            summary: 'summary',
            summaryIcon: 'summary-icon',
            summaryIconSize: 'summary-icon-size',
            disabled: 'disabled',
            inline: 'inline',
            selectableEmpty: 'selectable-empty',
            hasContent: 'has-content'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixDialogEvents = {
    onSixDialogShow: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogAfterShow: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogHide: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogAfterHide: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogInitialFocus: EventName<SixDialogCustomEvent<EmptyPayload>>,
    onSixDialogOverlayDismiss: EventName<SixDialogCustomEvent<EmptyPayload>>
};

export const SixDialog: StencilReactComponent<SixDialogElement, SixDialogEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixDialogElement, SixDialogEvents>({
        tagName: 'six-dialog',
        elementClass: SixDialogElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixDialogShow: 'six-dialog-show',
            onSixDialogAfterShow: 'six-dialog-after-show',
            onSixDialogHide: 'six-dialog-hide',
            onSixDialogAfterHide: 'six-dialog-after-hide',
            onSixDialogInitialFocus: 'six-dialog-initial-focus',
            onSixDialogOverlayDismiss: 'six-dialog-overlay-dismiss'
        } as SixDialogEvents,
        defineCustomElement: defineSixDialog
    })
    : /*@__PURE__*/ createSSRComponent<SixDialogElement, SixDialogEvents>({
        tagName: 'six-dialog',
        properties: {
            open: 'open',
            label: 'label',
            noHeader: 'no-header'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixDrawerEvents = {
    onSixDrawerShow: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerAfterShow: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerHide: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerAfterHide: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerInitialFocus: EventName<SixDrawerCustomEvent<EmptyPayload>>,
    onSixDrawerOverlayDismiss: EventName<SixDrawerCustomEvent<EmptyPayload>>
};

export const SixDrawer: StencilReactComponent<SixDrawerElement, SixDrawerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixDrawerElement, SixDrawerEvents>({
        tagName: 'six-drawer',
        elementClass: SixDrawerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixDrawerShow: 'six-drawer-show',
            onSixDrawerAfterShow: 'six-drawer-after-show',
            onSixDrawerHide: 'six-drawer-hide',
            onSixDrawerAfterHide: 'six-drawer-after-hide',
            onSixDrawerInitialFocus: 'six-drawer-initial-focus',
            onSixDrawerOverlayDismiss: 'six-drawer-overlay-dismiss'
        } as SixDrawerEvents,
        defineCustomElement: defineSixDrawer
    })
    : /*@__PURE__*/ createSSRComponent<SixDrawerElement, SixDrawerEvents>({
        tagName: 'six-drawer',
        properties: {
            open: 'open',
            label: 'label',
            placement: 'placement',
            contained: 'contained',
            noHeader: 'no-header'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixDropdownEvents = {
    onSixDropdownShow: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAfterShow: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownHide: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAfterHide: EventName<SixDropdownCustomEvent<EmptyPayload>>,
    onSixDropdownAutoFilterFired: EventName<SixDropdownCustomEvent<SixDropdownAutoFilterPayload>>,
    onSixAsyncFilterFired: EventName<SixDropdownCustomEvent<SixDropdownAsyncFilterPayload>>,
    onSixDropdownScroll: EventName<SixDropdownCustomEvent<SixDropdownScrollPayload>>
};

export const SixDropdown: StencilReactComponent<SixDropdownElement, SixDropdownEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixDropdownElement, SixDropdownEvents>({
        tagName: 'six-dropdown',
        elementClass: SixDropdownElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixDropdownShow: 'six-dropdown-show',
            onSixDropdownAfterShow: 'six-dropdown-after-show',
            onSixDropdownHide: 'six-dropdown-hide',
            onSixDropdownAfterHide: 'six-dropdown-after-hide',
            onSixDropdownAutoFilterFired: 'six-dropdown-auto-filter-fired',
            onSixAsyncFilterFired: 'six-async-filter-fired',
            onSixDropdownScroll: 'six-dropdown-scroll'
        } as SixDropdownEvents,
        defineCustomElement: defineSixDropdown
    })
    : /*@__PURE__*/ createSSRComponent<SixDropdownElement, SixDropdownEvents>({
        tagName: 'six-dropdown',
        properties: {
            open: 'open',
            placement: 'placement',
            closeOnSelect: 'close-on-select',
            distance: 'distance',
            skidding: 'skidding',
            hoist: 'hoist',
            filter: 'filter',
            asyncFilter: 'async-filter',
            filterPlaceholder: 'filter-placeholder',
            autofocusFilter: 'autofocus-filter',
            filterDebounce: 'filter-debounce',
            disableHideOnEnterAndSpace: 'disable-hide-on-enter-and-space',
            virtualScroll: 'virtual-scroll',
            matchTriggerWidth: 'match-trigger-width'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixErrorEvents = NonNullable<unknown>;

export const SixError: StencilReactComponent<SixErrorElement, SixErrorEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixErrorElement, SixErrorEvents>({
        tagName: 'six-error',
        elementClass: SixErrorElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixErrorEvents,
        defineCustomElement: defineSixError
    })
    : /*@__PURE__*/ createSSRComponent<SixErrorElement, SixErrorEvents>({
        tagName: 'six-error',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixErrorPageEvents = NonNullable<unknown>;

export const SixErrorPage: StencilReactComponent<SixErrorPageElement, SixErrorPageEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixErrorPageElement, SixErrorPageEvents>({
        tagName: 'six-error-page',
        elementClass: SixErrorPageElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixErrorPageEvents,
        defineCustomElement: defineSixErrorPage
    })
    : /*@__PURE__*/ createSSRComponent<SixErrorPageElement, SixErrorPageEvents>({
        tagName: 'six-error-page',
        properties: {
            errorCode: 'error-code',
            language: 'language',
            customTitle: 'custom-title',
            customIcon: 'custom-icon'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixFileListEvents = NonNullable<unknown>;

export const SixFileList: StencilReactComponent<SixFileListElement, SixFileListEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixFileListElement, SixFileListEvents>({
        tagName: 'six-file-list',
        elementClass: SixFileListElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixFileListEvents,
        defineCustomElement: defineSixFileList
    })
    : /*@__PURE__*/ createSSRComponent<SixFileListElement, SixFileListEvents>({
        tagName: 'six-file-list',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixFileListItemEvents = {
    onSixFileListItemDownload: EventName<SixFileListItemCustomEvent<SixFileListDownloadPayload>>,
    onSixFileListItemRemove: EventName<SixFileListItemCustomEvent<SixFileListRemovePayload>>
};

export const SixFileListItem: StencilReactComponent<SixFileListItemElement, SixFileListItemEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixFileListItemElement, SixFileListItemEvents>({
        tagName: 'six-file-list-item',
        elementClass: SixFileListItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixFileListItemDownload: 'six-file-list-item-download',
            onSixFileListItemRemove: 'six-file-list-item-remove'
        } as SixFileListItemEvents,
        defineCustomElement: defineSixFileListItem
    })
    : /*@__PURE__*/ createSSRComponent<SixFileListItemElement, SixFileListItemEvents>({
        tagName: 'six-file-list-item',
        properties: {
            identifier: 'identifier',
            name: 'name',
            date: 'date',
            size: 'size',
            nodownload: 'nodownload',
            nodelete: 'nodelete'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixFileUploadEvents = {
    onSixFileUploadSuccess: EventName<SixFileUploadCustomEvent<SixFileUploadSuccessPayload>>,
    onSixFileUploadFailure: EventName<SixFileUploadCustomEvent<SixFileUploadFailurePayload>>
};

export const SixFileUpload: StencilReactComponent<SixFileUploadElement, SixFileUploadEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixFileUploadElement, SixFileUploadEvents>({
        tagName: 'six-file-upload',
        elementClass: SixFileUploadElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixFileUploadSuccess: 'six-file-upload-success',
            onSixFileUploadFailure: 'six-file-upload-failure'
        } as SixFileUploadEvents,
        defineCustomElement: defineSixFileUpload
    })
    : /*@__PURE__*/ createSSRComponent<SixFileUploadElement, SixFileUploadEvents>({
        tagName: 'six-file-upload',
        properties: {
            compact: 'compact',
            label: 'label',
            disabled: 'disabled',
            accept: 'accept',
            multiple: 'multiple',
            maxFileSize: 'max-file-size',
            uploading: 'uploading',
            errorText: 'error-text',
            invalid: 'invalid'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixFooterEvents = NonNullable<unknown>;

export const SixFooter: StencilReactComponent<SixFooterElement, SixFooterEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixFooterElement, SixFooterEvents>({
        tagName: 'six-footer',
        elementClass: SixFooterElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixFooterEvents,
        defineCustomElement: defineSixFooter
    })
    : /*@__PURE__*/ createSSRComponent<SixFooterElement, SixFooterEvents>({
        tagName: 'six-footer',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixGroupLabelEvents = NonNullable<unknown>;

export const SixGroupLabel: StencilReactComponent<SixGroupLabelElement, SixGroupLabelEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixGroupLabelElement, SixGroupLabelEvents>({
        tagName: 'six-group-label',
        elementClass: SixGroupLabelElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixGroupLabelEvents,
        defineCustomElement: defineSixGroupLabel
    })
    : /*@__PURE__*/ createSSRComponent<SixGroupLabelElement, SixGroupLabelEvents>({
        tagName: 'six-group-label',
        properties: {
            size: 'size',
            label: 'label',
            helpText: 'help-text',
            disabled: 'disabled',
            required: 'required'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixHeaderEvents = {
    onSixHeaderAppNameClicked: EventName<SixHeaderCustomEvent<EmptyPayload>>,
    onSixHeaderAppSwitcherSelect: EventName<SixHeaderCustomEvent<SixHeaderAppSwitcherSelectPayload>>,
    onSixHeaderProfileSelect: EventName<SixHeaderCustomEvent<SixHeaderProfileSelectPayload>>,
    onSixHeaderHamburgerMenuClicked: EventName<SixHeaderCustomEvent<EmptyPayload>>,
    onSixHeaderLogoClicked: EventName<SixHeaderCustomEvent<EmptyPayload>>,
    onSixHeaderSearchFieldToggle: EventName<SixHeaderCustomEvent<SixHeaderSearchFieldToggle>>
};

export const SixHeader: StencilReactComponent<SixHeaderElement, SixHeaderEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixHeaderElement, SixHeaderEvents>({
        tagName: 'six-header',
        elementClass: SixHeaderElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixHeaderAppNameClicked: 'six-header-app-name-clicked',
            onSixHeaderAppSwitcherSelect: 'six-header-app-switcher-select',
            onSixHeaderProfileSelect: 'six-header-profile-select',
            onSixHeaderHamburgerMenuClicked: 'six-header-hamburger-menu-clicked',
            onSixHeaderLogoClicked: 'six-header-logo-clicked',
            onSixHeaderSearchFieldToggle: 'six-header-search-field-toggle'
        } as SixHeaderEvents,
        defineCustomElement: defineSixHeader
    })
    : /*@__PURE__*/ createSSRComponent<SixHeaderElement, SixHeaderEvents>({
        tagName: 'six-header',
        properties: {
            custom: 'custom',
            shiftContent: 'shift-content',
            hideHamburgerMenu: 'hide-hamburger-menu',
            openHamburgerMenu: 'open-hamburger-menu',
            openSearch: 'open-search',
            clickableLogo: 'clickable-logo',
            logo: 'logo'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixHeaderDropdownItemEvents = NonNullable<unknown>;

export const SixHeaderDropdownItem: StencilReactComponent<SixHeaderDropdownItemElement, SixHeaderDropdownItemEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixHeaderDropdownItemElement, SixHeaderDropdownItemEvents>({
        tagName: 'six-header-dropdown-item',
        elementClass: SixHeaderDropdownItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixHeaderDropdownItemEvents,
        defineCustomElement: defineSixHeaderDropdownItem
    })
    : /*@__PURE__*/ createSSRComponent<SixHeaderDropdownItemElement, SixHeaderDropdownItemEvents>({
        tagName: 'six-header-dropdown-item',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixHeaderItemEvents = NonNullable<unknown>;

export const SixHeaderItem: StencilReactComponent<SixHeaderItemElement, SixHeaderItemEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixHeaderItemElement, SixHeaderItemEvents>({
        tagName: 'six-header-item',
        elementClass: SixHeaderItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixHeaderItemEvents,
        defineCustomElement: defineSixHeaderItem
    })
    : /*@__PURE__*/ createSSRComponent<SixHeaderItemElement, SixHeaderItemEvents>({
        tagName: 'six-header-item',
        properties: { active: 'active' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixHeaderMenuButtonEvents = NonNullable<unknown>;

export const SixHeaderMenuButton: StencilReactComponent<SixHeaderMenuButtonElement, SixHeaderMenuButtonEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixHeaderMenuButtonElement, SixHeaderMenuButtonEvents>({
        tagName: 'six-header-menu-button',
        elementClass: SixHeaderMenuButtonElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixHeaderMenuButtonEvents,
        defineCustomElement: defineSixHeaderMenuButton
    })
    : /*@__PURE__*/ createSSRComponent<SixHeaderMenuButtonElement, SixHeaderMenuButtonEvents>({
        tagName: 'six-header-menu-button',
        properties: { icon: 'icon' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixIconEvents = NonNullable<unknown>;

export const SixIcon: StencilReactComponent<SixIconElement, SixIconEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixIconElement, SixIconEvents>({
        tagName: 'six-icon',
        elementClass: SixIconElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixIconEvents,
        defineCustomElement: defineSixIcon
    })
    : /*@__PURE__*/ createSSRComponent<SixIconElement, SixIconEvents>({
        tagName: 'six-icon',
        properties: {
            size: 'size',
            filled: 'filled'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixIconButtonEvents = NonNullable<unknown>;

export const SixIconButton: StencilReactComponent<SixIconButtonElement, SixIconButtonEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixIconButtonElement, SixIconButtonEvents>({
        tagName: 'six-icon-button',
        elementClass: SixIconButtonElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixIconButtonEvents,
        defineCustomElement: defineSixIconButton
    })
    : /*@__PURE__*/ createSSRComponent<SixIconButtonElement, SixIconButtonEvents>({
        tagName: 'six-icon-button',
        properties: {
            name: 'name',
            size: 'size',
            label: 'label',
            disabled: 'disabled',
            html: 'html',
            href: 'href',
            target: 'target',
            download: 'download'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixInputEvents = {
    onSixInputChange: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputClear: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputInput: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputFocus: EventName<SixInputCustomEvent<EmptyPayload>>,
    onSixInputBlur: EventName<SixInputCustomEvent<EmptyPayload>>
};

export const SixInput: StencilReactComponent<SixInputElement, SixInputEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixInputElement, SixInputEvents>({
        tagName: 'six-input',
        elementClass: SixInputElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixInputChange: 'six-input-change',
            onSixInputClear: 'six-input-clear',
            onSixInputInput: 'six-input-input',
            onSixInputFocus: 'six-input-focus',
            onSixInputBlur: 'six-input-blur'
        } as SixInputEvents,
        defineCustomElement: defineSixInput
    })
    : /*@__PURE__*/ createSSRComponent<SixInputElement, SixInputEvents>({
        tagName: 'six-input',
        properties: {
            type: 'type',
            size: 'size',
            name: 'name',
            value: 'value',
            pill: 'pill',
            helpText: 'help-text',
            placeholder: 'placeholder',
            disabled: 'disabled',
            readonly: 'readonly',
            minlength: 'minlength',
            maxlength: 'maxlength',
            min: 'min',
            max: 'max',
            step: 'step',
            pattern: 'pattern',
            dropdownSearch: 'dropdown-search',
            required: 'required',
            autocapitalize: 'autocapitalize',
            autocorrect: 'autocorrect',
            autocomplete: 'autocomplete',
            autofocus: 'autofocus',
            spellcheck: 'spellcheck',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            clearable: 'clearable',
            togglePassword: 'toggle-password',
            inputmode: 'inputmode',
            line: 'line'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixItemPickerEvents = {
    onSixItemPickerChange: EventName<SixItemPickerCustomEvent<SixItemPickerChangePayload>>,
    onSixItemPickerChangeDebounced: EventName<SixItemPickerCustomEvent<SixItemPickerChangePayload>>
};

export const SixItemPicker: StencilReactComponent<SixItemPickerElement, SixItemPickerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixItemPickerElement, SixItemPickerEvents>({
        tagName: 'six-item-picker',
        elementClass: SixItemPickerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixItemPickerChange: 'six-item-picker-change',
            onSixItemPickerChangeDebounced: 'six-item-picker-change-debounced'
        } as SixItemPickerEvents,
        defineCustomElement: defineSixItemPicker
    })
    : /*@__PURE__*/ createSSRComponent<SixItemPickerElement, SixItemPickerEvents>({
        tagName: 'six-item-picker',
        properties: {
            value: 'value',
            type: 'type',
            min: 'min',
            max: 'max',
            roundtrip: 'roundtrip',
            step: 'step',
            padded: 'padded',
            paddingLength: 'padding-length',
            paddingChar: 'padding-char',
            paddingDirection: 'padding-direction',
            timeout: 'timeout',
            interval: 'interval',
            debounce: 'debounce'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixLanguageSwitcherEvents = { onSixLanguageSwitcherChange: EventName<SixLanguageSwitcherCustomEvent<SixLanguageSwitcherChangePayload>> };

export const SixLanguageSwitcher: StencilReactComponent<SixLanguageSwitcherElement, SixLanguageSwitcherEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixLanguageSwitcherElement, SixLanguageSwitcherEvents>({
        tagName: 'six-language-switcher',
        elementClass: SixLanguageSwitcherElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSixLanguageSwitcherChange: 'six-language-switcher-change' } as SixLanguageSwitcherEvents,
        defineCustomElement: defineSixLanguageSwitcher
    })
    : /*@__PURE__*/ createSSRComponent<SixLanguageSwitcherElement, SixLanguageSwitcherEvents>({
        tagName: 'six-language-switcher',
        properties: { selected: 'selected' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixLayoutGridEvents = NonNullable<unknown>;

export const SixLayoutGrid: StencilReactComponent<SixLayoutGridElement, SixLayoutGridEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixLayoutGridElement, SixLayoutGridEvents>({
        tagName: 'six-layout-grid',
        elementClass: SixLayoutGridElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixLayoutGridEvents,
        defineCustomElement: defineSixLayoutGrid
    })
    : /*@__PURE__*/ createSSRComponent<SixLayoutGridElement, SixLayoutGridEvents>({
        tagName: 'six-layout-grid',
        properties: { columns: 'columns' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixLogoEvents = NonNullable<unknown>;

export const SixLogo: StencilReactComponent<SixLogoElement, SixLogoEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixLogoElement, SixLogoEvents>({
        tagName: 'six-logo',
        elementClass: SixLogoElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixLogoEvents,
        defineCustomElement: defineSixLogo
    })
    : /*@__PURE__*/ createSSRComponent<SixLogoElement, SixLogoEvents>({
        tagName: 'six-logo',
        properties: { brand: 'brand' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixMainContainerEvents = NonNullable<unknown>;

export const SixMainContainer: StencilReactComponent<SixMainContainerElement, SixMainContainerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixMainContainerElement, SixMainContainerEvents>({
        tagName: 'six-main-container',
        elementClass: SixMainContainerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixMainContainerEvents,
        defineCustomElement: defineSixMainContainer
    })
    : /*@__PURE__*/ createSSRComponent<SixMainContainerElement, SixMainContainerEvents>({
        tagName: 'six-main-container',
        properties: { padded: 'padded' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixMenuEvents = { onSixMenuItemSelected: EventName<SixMenuCustomEvent<SixMenuItemSelectedPayload>> };

export const SixMenu: StencilReactComponent<SixMenuElement, SixMenuEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixMenuElement, SixMenuEvents>({
        tagName: 'six-menu',
        elementClass: SixMenuElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSixMenuItemSelected: 'six-menu-item-selected' } as SixMenuEvents,
        defineCustomElement: defineSixMenu
    })
    : /*@__PURE__*/ createSSRComponent<SixMenuElement, SixMenuEvents>({
        tagName: 'six-menu',
        properties: {
            removeBoxShadow: 'remove-box-shadow',
            itemsShown: 'items-shown',
            virtualScroll: 'virtual-scroll',
            itemSize: 'item-size',
            scrollingDebounce: 'scrolling-debounce',
            disableKeyboardHandling: 'disable-keyboard-handling'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixMenuDividerEvents = NonNullable<unknown>;

export const SixMenuDivider: StencilReactComponent<SixMenuDividerElement, SixMenuDividerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixMenuDividerElement, SixMenuDividerEvents>({
        tagName: 'six-menu-divider',
        elementClass: SixMenuDividerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixMenuDividerEvents,
        defineCustomElement: defineSixMenuDivider
    })
    : /*@__PURE__*/ createSSRComponent<SixMenuDividerElement, SixMenuDividerEvents>({
        tagName: 'six-menu-divider',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixMenuItemEvents = NonNullable<unknown>;

export const SixMenuItem: StencilReactComponent<SixMenuItemElement, SixMenuItemEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixMenuItemElement, SixMenuItemEvents>({
        tagName: 'six-menu-item',
        elementClass: SixMenuItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixMenuItemEvents,
        defineCustomElement: defineSixMenuItem
    })
    : /*@__PURE__*/ createSSRComponent<SixMenuItemElement, SixMenuItemEvents>({
        tagName: 'six-menu-item',
        properties: {
            checkType: 'check-type',
            checked: 'checked',
            value: 'value',
            disabled: 'disabled'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixMenuLabelEvents = NonNullable<unknown>;

export const SixMenuLabel: StencilReactComponent<SixMenuLabelElement, SixMenuLabelEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixMenuLabelElement, SixMenuLabelEvents>({
        tagName: 'six-menu-label',
        elementClass: SixMenuLabelElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixMenuLabelEvents,
        defineCustomElement: defineSixMenuLabel
    })
    : /*@__PURE__*/ createSSRComponent<SixMenuLabelElement, SixMenuLabelEvents>({
        tagName: 'six-menu-label',
        properties: {},
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixPictoEvents = NonNullable<unknown>;

export const SixPicto: StencilReactComponent<SixPictoElement, SixPictoEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixPictoElement, SixPictoEvents>({
        tagName: 'six-picto',
        elementClass: SixPictoElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixPictoEvents,
        defineCustomElement: defineSixPicto
    })
    : /*@__PURE__*/ createSSRComponent<SixPictoElement, SixPictoEvents>({
        tagName: 'six-picto',
        properties: { size: 'size' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixProgressBarEvents = NonNullable<unknown>;

export const SixProgressBar: StencilReactComponent<SixProgressBarElement, SixProgressBarEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixProgressBarElement, SixProgressBarEvents>({
        tagName: 'six-progress-bar',
        elementClass: SixProgressBarElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixProgressBarEvents,
        defineCustomElement: defineSixProgressBar
    })
    : /*@__PURE__*/ createSSRComponent<SixProgressBarElement, SixProgressBarEvents>({
        tagName: 'six-progress-bar',
        properties: {
            percentage: 'percentage',
            indeterminate: 'indeterminate'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixProgressRingEvents = NonNullable<unknown>;

export const SixProgressRing: StencilReactComponent<SixProgressRingElement, SixProgressRingEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixProgressRingElement, SixProgressRingEvents>({
        tagName: 'six-progress-ring',
        elementClass: SixProgressRingElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixProgressRingEvents,
        defineCustomElement: defineSixProgressRing
    })
    : /*@__PURE__*/ createSSRComponent<SixProgressRingElement, SixProgressRingEvents>({
        tagName: 'six-progress-ring',
        properties: {
            size: 'size',
            strokeWidth: 'stroke-width',
            percentage: 'percentage'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixRadioEvents = {
    onSixRadioBlur: EventName<SixRadioCustomEvent<EmptyPayload>>,
    onSixRadioChange: EventName<SixRadioCustomEvent<EmptyPayload>>,
    onSixRadioFocus: EventName<SixRadioCustomEvent<EmptyPayload>>
};

export const SixRadio: StencilReactComponent<SixRadioElement, SixRadioEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixRadioElement, SixRadioEvents>({
        tagName: 'six-radio',
        elementClass: SixRadioElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixRadioBlur: 'six-radio-blur',
            onSixRadioChange: 'six-radio-change',
            onSixRadioFocus: 'six-radio-focus'
        } as SixRadioEvents,
        defineCustomElement: defineSixRadio
    })
    : /*@__PURE__*/ createSSRComponent<SixRadioElement, SixRadioEvents>({
        tagName: 'six-radio',
        properties: {
            name: 'name',
            value: 'value',
            disabled: 'disabled',
            checked: 'checked',
            invalid: 'invalid'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixRangeEvents = {
    onSixRangeChange: EventName<SixRangeCustomEvent<EmptyPayload>>,
    onSixRangeBlur: EventName<SixRangeCustomEvent<EmptyPayload>>,
    onSixRangeFocus: EventName<SixRangeCustomEvent<EmptyPayload>>
};

export const SixRange: StencilReactComponent<SixRangeElement, SixRangeEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixRangeElement, SixRangeEvents>({
        tagName: 'six-range',
        elementClass: SixRangeElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixRangeChange: 'six-range-change',
            onSixRangeBlur: 'six-range-blur',
            onSixRangeFocus: 'six-range-focus'
        } as SixRangeEvents,
        defineCustomElement: defineSixRange
    })
    : /*@__PURE__*/ createSSRComponent<SixRangeElement, SixRangeEvents>({
        tagName: 'six-range',
        properties: {
            name: 'name',
            value: 'value',
            required: 'required',
            helpText: 'help-text',
            disabled: 'disabled',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            min: 'min',
            max: 'max',
            step: 'step',
            tooltip: 'tooltip'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixRootEvents = NonNullable<unknown>;

export const SixRoot: StencilReactComponent<SixRootElement, SixRootEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixRootElement, SixRootEvents>({
        tagName: 'six-root',
        elementClass: SixRootElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixRootEvents,
        defineCustomElement: defineSixRoot
    })
    : /*@__PURE__*/ createSSRComponent<SixRootElement, SixRootEvents>({
        tagName: 'six-root',
        properties: {
            padded: 'padded',
            stage: 'stage',
            version: 'version'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSearchFieldEvents = { onSixSearchFieldChange: EventName<SixSearchFieldCustomEvent<SixSearchFieldChangePayload>> };

export const SixSearchField: StencilReactComponent<SixSearchFieldElement, SixSearchFieldEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSearchFieldElement, SixSearchFieldEvents>({
        tagName: 'six-search-field',
        elementClass: SixSearchFieldElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSixSearchFieldChange: 'six-search-field-change' } as SixSearchFieldEvents,
        defineCustomElement: defineSixSearchField
    })
    : /*@__PURE__*/ createSSRComponent<SixSearchFieldElement, SixSearchFieldEvents>({
        tagName: 'six-search-field',
        properties: {
            placeholder: 'placeholder',
            debounce: 'debounce',
            disabled: 'disabled',
            value: 'value',
            clearable: 'clearable'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSelectEvents = {
    onSixSelectChange: EventName<SixSelectCustomEvent<SixSelectChangePayload>>,
    onSixSelectFocus: EventName<SixSelectCustomEvent<EmptyPayload>>,
    onSixSelectBlur: EventName<SixSelectCustomEvent<EmptyPayload>>
};

export const SixSelect: StencilReactComponent<SixSelectElement, SixSelectEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSelectElement, SixSelectEvents>({
        tagName: 'six-select',
        elementClass: SixSelectElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixSelectChange: 'six-select-change',
            onSixSelectFocus: 'six-select-focus',
            onSixSelectBlur: 'six-select-blur'
        } as SixSelectEvents,
        defineCustomElement: defineSixSelect
    })
    : /*@__PURE__*/ createSSRComponent<SixSelectElement, SixSelectEvents>({
        tagName: 'six-select',
        properties: {
            multiple: 'multiple',
            selectAllButton: 'select-all-button',
            selectAllText: 'select-all-text',
            maxTagsVisible: 'max-tags-visible',
            disabled: 'disabled',
            name: 'name',
            placeholder: 'placeholder',
            filterPlaceholder: 'filter-placeholder',
            filterDebounce: 'filter-debounce',
            size: 'size',
            hoist: 'hoist',
            value: 'value',
            pill: 'pill',
            helpText: 'help-text',
            required: 'required',
            clearable: 'clearable',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            line: 'line',
            filter: 'filter',
            asyncFilter: 'async-filter',
            autocomplete: 'autocomplete',
            inputDebounce: 'input-debounce',
            virtualScroll: 'virtual-scroll'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSidebarEvents = {
    onSixSidebarShow: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarAfterShow: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarHide: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarAfterHide: EventName<SixSidebarCustomEvent<EmptyPayload>>,
    onSixSidebarInitialFocus: EventName<SixSidebarCustomEvent<EmptyPayload>>
};

export const SixSidebar: StencilReactComponent<SixSidebarElement, SixSidebarEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSidebarElement, SixSidebarEvents>({
        tagName: 'six-sidebar',
        elementClass: SixSidebarElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixSidebarShow: 'six-sidebar-show',
            onSixSidebarAfterShow: 'six-sidebar-after-show',
            onSixSidebarHide: 'six-sidebar-hide',
            onSixSidebarAfterHide: 'six-sidebar-after-hide',
            onSixSidebarInitialFocus: 'six-sidebar-initial-focus'
        } as SixSidebarEvents,
        defineCustomElement: defineSixSidebar
    })
    : /*@__PURE__*/ createSSRComponent<SixSidebarElement, SixSidebarEvents>({
        tagName: 'six-sidebar',
        properties: {
            position: 'position',
            open: 'open',
            width: 'width',
            toggled: 'toggled'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSidebarItemEvents = NonNullable<unknown>;

export const SixSidebarItem: StencilReactComponent<SixSidebarItemElement, SixSidebarItemEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSidebarItemElement, SixSidebarItemEvents>({
        tagName: 'six-sidebar-item',
        elementClass: SixSidebarItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixSidebarItemEvents,
        defineCustomElement: defineSixSidebarItem
    })
    : /*@__PURE__*/ createSSRComponent<SixSidebarItemElement, SixSidebarItemEvents>({
        tagName: 'six-sidebar-item',
        properties: {
            value: 'value',
            selected: 'selected',
            disabled: 'disabled',
            href: 'href'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSidebarItemGroupEvents = NonNullable<unknown>;

export const SixSidebarItemGroup: StencilReactComponent<SixSidebarItemGroupElement, SixSidebarItemGroupEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSidebarItemGroupElement, SixSidebarItemGroupEvents>({
        tagName: 'six-sidebar-item-group',
        elementClass: SixSidebarItemGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixSidebarItemGroupEvents,
        defineCustomElement: defineSixSidebarItemGroup
    })
    : /*@__PURE__*/ createSSRComponent<SixSidebarItemGroupElement, SixSidebarItemGroupEvents>({
        tagName: 'six-sidebar-item-group',
        properties: {
            name: 'name',
            icon: 'icon',
            value: 'value',
            open: 'open',
            summaryIcon: 'summary-icon',
            href: 'href'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSpinnerEvents = NonNullable<unknown>;

export const SixSpinner: StencilReactComponent<SixSpinnerElement, SixSpinnerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSpinnerElement, SixSpinnerEvents>({
        tagName: 'six-spinner',
        elementClass: SixSpinnerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixSpinnerEvents,
        defineCustomElement: defineSixSpinner
    })
    : /*@__PURE__*/ createSSRComponent<SixSpinnerElement, SixSpinnerEvents>({
        tagName: 'six-spinner',
        properties: {
            logo: 'logo',
            six: 'six'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixStageIndicatorEvents = NonNullable<unknown>;

export const SixStageIndicator: StencilReactComponent<SixStageIndicatorElement, SixStageIndicatorEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixStageIndicatorElement, SixStageIndicatorEvents>({
        tagName: 'six-stage-indicator',
        elementClass: SixStageIndicatorElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixStageIndicatorEvents,
        defineCustomElement: defineSixStageIndicator
    })
    : /*@__PURE__*/ createSSRComponent<SixStageIndicatorElement, SixStageIndicatorEvents>({
        tagName: 'six-stage-indicator',
        properties: { stage: 'stage' },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixSwitchEvents = {
    onSixSwitchBlur: EventName<CustomEvent<boolean>>,
    onSixSwitchChange: EventName<CustomEvent<boolean>>,
    onSixSwitchFocus: EventName<SixSwitchCustomEvent<EmptyPayload>>
};

export const SixSwitch: StencilReactComponent<SixSwitchElement, SixSwitchEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixSwitchElement, SixSwitchEvents>({
        tagName: 'six-switch',
        elementClass: SixSwitchElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixSwitchBlur: 'six-switch-blur',
            onSixSwitchChange: 'six-switch-change',
            onSixSwitchFocus: 'six-switch-focus'
        } as SixSwitchEvents,
        defineCustomElement: defineSixSwitch
    })
    : /*@__PURE__*/ createSSRComponent<SixSwitchElement, SixSwitchEvents>({
        tagName: 'six-switch',
        properties: {
            name: 'name',
            value: 'value',
            disabled: 'disabled',
            required: 'required',
            checked: 'checked',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTabEvents = { onSixTabClose: EventName<SixTabCustomEvent<EmptyPayload>> };

export const SixTab: StencilReactComponent<SixTabElement, SixTabEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTabElement, SixTabEvents>({
        tagName: 'six-tab',
        elementClass: SixTabElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSixTabClose: 'six-tab-close' } as SixTabEvents,
        defineCustomElement: defineSixTab
    })
    : /*@__PURE__*/ createSSRComponent<SixTabElement, SixTabEvents>({
        tagName: 'six-tab',
        properties: {
            panel: 'panel',
            active: 'active',
            closable: 'closable',
            disabled: 'disabled'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTabGroupEvents = {
    onSixTabShow: EventName<SixTabGroupCustomEvent<SixTabShowPayload>>,
    onSixTabHide: EventName<SixTabGroupCustomEvent<SixTabHidePayload>>
};

export const SixTabGroup: StencilReactComponent<SixTabGroupElement, SixTabGroupEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTabGroupElement, SixTabGroupEvents>({
        tagName: 'six-tab-group',
        elementClass: SixTabGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixTabShow: 'six-tab-show',
            onSixTabHide: 'six-tab-hide'
        } as SixTabGroupEvents,
        defineCustomElement: defineSixTabGroup
    })
    : /*@__PURE__*/ createSSRComponent<SixTabGroupElement, SixTabGroupEvents>({
        tagName: 'six-tab-group',
        properties: {
            placement: 'placement',
            noScrollControls: 'no-scroll-controls'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTabPanelEvents = NonNullable<unknown>;

export const SixTabPanel: StencilReactComponent<SixTabPanelElement, SixTabPanelEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTabPanelElement, SixTabPanelEvents>({
        tagName: 'six-tab-panel',
        elementClass: SixTabPanelElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as SixTabPanelEvents,
        defineCustomElement: defineSixTabPanel
    })
    : /*@__PURE__*/ createSSRComponent<SixTabPanelElement, SixTabPanelEvents>({
        tagName: 'six-tab-panel',
        properties: {
            name: 'name',
            active: 'active'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTagEvents = { onSixTagClear: EventName<SixTagCustomEvent<EmptyPayload>> };

export const SixTag: StencilReactComponent<SixTagElement, SixTagEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTagElement, SixTagEvents>({
        tagName: 'six-tag',
        elementClass: SixTagElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSixTagClear: 'six-tag-clear' } as SixTagEvents,
        defineCustomElement: defineSixTag
    })
    : /*@__PURE__*/ createSSRComponent<SixTagElement, SixTagEvents>({
        tagName: 'six-tag',
        properties: {
            type: 'type',
            size: 'size',
            pill: 'pill',
            clearable: 'clearable'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTextareaEvents = {
    onSixTextareaChange: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaInput: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaFocus: EventName<SixTextareaCustomEvent<EmptyPayload>>,
    onSixTextareaBlur: EventName<SixTextareaCustomEvent<EmptyPayload>>
};

export const SixTextarea: StencilReactComponent<SixTextareaElement, SixTextareaEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTextareaElement, SixTextareaEvents>({
        tagName: 'six-textarea',
        elementClass: SixTextareaElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixTextareaChange: 'six-textarea-change',
            onSixTextareaInput: 'six-textarea-input',
            onSixTextareaFocus: 'six-textarea-focus',
            onSixTextareaBlur: 'six-textarea-blur'
        } as SixTextareaEvents,
        defineCustomElement: defineSixTextarea
    })
    : /*@__PURE__*/ createSSRComponent<SixTextareaElement, SixTextareaEvents>({
        tagName: 'six-textarea',
        properties: {
            size: 'size',
            name: 'name',
            value: 'value',
            helpText: 'help-text',
            placeholder: 'placeholder',
            rows: 'rows',
            resize: 'resize',
            disabled: 'disabled',
            readonly: 'readonly',
            minlength: 'minlength',
            maxlength: 'maxlength',
            required: 'required',
            label: 'label',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            invalid: 'invalid',
            autocapitalize: 'autocapitalize',
            autocorrect: 'autocorrect',
            autocomplete: 'autocomplete',
            autofocus: 'autofocus',
            spellcheck: 'spellcheck',
            inputmode: 'inputmode'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTileEvents = {
    onSixTileClosed: EventName<SixTileCustomEvent<EmptyPayload>>,
    onSixTileSelected: EventName<SixTileCustomEvent<EmptyPayload>>
};

export const SixTile: StencilReactComponent<SixTileElement, SixTileEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTileElement, SixTileEvents>({
        tagName: 'six-tile',
        elementClass: SixTileElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixTileClosed: 'six-tile-closed',
            onSixTileSelected: 'six-tile-selected'
        } as SixTileEvents,
        defineCustomElement: defineSixTile
    })
    : /*@__PURE__*/ createSSRComponent<SixTileElement, SixTileEvents>({
        tagName: 'six-tile',
        properties: {
            label: 'label',
            iconName: 'icon-name',
            closeable: 'closeable',
            elevated: 'elevated',
            disableTooltip: 'disable-tooltip',
            disabled: 'disabled',
            size: 'size'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTimepickerEvents = {
    onSixTimepickerChange: EventName<SixTimepickerCustomEvent<SixTimepickerChange>>,
    onSixTimepickerChangeDebounced: EventName<SixTimepickerCustomEvent<SixTimepickerChange>>,
    onSixTimepickerClear: EventName<SixTimepickerCustomEvent<EmptyPayload>>
};

export const SixTimepicker: StencilReactComponent<SixTimepickerElement, SixTimepickerEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTimepickerElement, SixTimepickerEvents>({
        tagName: 'six-timepicker',
        elementClass: SixTimepickerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixTimepickerChange: 'six-timepicker-change',
            onSixTimepickerChangeDebounced: 'six-timepicker-change-debounced',
            onSixTimepickerClear: 'six-timepicker-clear'
        } as SixTimepickerEvents,
        defineCustomElement: defineSixTimepicker
    })
    : /*@__PURE__*/ createSSRComponent<SixTimepickerElement, SixTimepickerEvents>({
        tagName: 'six-timepicker',
        properties: {
            format: 'format',
            separator: 'separator',
            value: 'value',
            open: 'open',
            inline: 'inline',
            readonly: 'readonly',
            disabled: 'disabled',
            placement: 'placement',
            size: 'size',
            required: 'required',
            placeholder: 'placeholder',
            errorText: 'error-text',
            errorTextCount: 'error-text-count',
            label: 'label',
            invalid: 'invalid',
            name: 'name',
            clearable: 'clearable',
            iconPosition: 'icon-position',
            hoist: 'hoist',
            timeout: 'timeout',
            interval: 'interval',
            defaultTime: 'default-time',
            debounce: 'debounce'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });

type SixTooltipEvents = {
    onSixTooltipShow: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipAfterShow: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipHide: EventName<SixTooltipCustomEvent<EmptyPayload>>,
    onSixTooltipAfterHide: EventName<SixTooltipCustomEvent<EmptyPayload>>
};

export const SixTooltip: StencilReactComponent<SixTooltipElement, SixTooltipEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<SixTooltipElement, SixTooltipEvents>({
        tagName: 'six-tooltip',
        elementClass: SixTooltipElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onSixTooltipShow: 'six-tooltip-show',
            onSixTooltipAfterShow: 'six-tooltip-after-show',
            onSixTooltipHide: 'six-tooltip-hide',
            onSixTooltipAfterHide: 'six-tooltip-after-hide'
        } as SixTooltipEvents,
        defineCustomElement: defineSixTooltip
    })
    : /*@__PURE__*/ createSSRComponent<SixTooltipElement, SixTooltipEvents>({
        tagName: 'six-tooltip',
        properties: {
            content: 'content',
            placement: 'placement',
            disabled: 'disabled',
            distance: 'distance',
            open: 'open',
            skidding: 'skidding',
            trigger: 'trigger'
        },
        hydrateModule: import('@six-group/ui-library/hydrate')
    });
