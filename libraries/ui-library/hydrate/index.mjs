import { Readable } from 'stream';

const modeResolutionChain = [];

function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {
  var globalThis = $stencilWindow;
  var self = $stencilWindow;
  var top = $stencilWindow;
  var parent = $stencilWindow;

  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);
  var alert = $stencilWindow.alert.bind($stencilWindow);
  var blur = $stencilWindow.blur.bind($stencilWindow);
  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);
  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);
  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);
  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);
  var close = () => {};
  var confirm = $stencilWindow.confirm.bind($stencilWindow);
  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);
  var focus = $stencilWindow.focus.bind($stencilWindow);
  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);
  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);
  var open = $stencilWindow.open.bind($stencilWindow);
  var prompt = $stencilWindow.prompt.bind($stencilWindow);
  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);
  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);
  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);
  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);
  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);

  var CharacterData = $stencilWindow.CharacterData;
  var CSS = $stencilWindow.CSS;
  var CustomEvent = $stencilWindow.CustomEvent;
  var Document = $stencilWindow.Document;
  var DocumentFragment = $stencilWindow.DocumentFragment;
  var DocumentType = $stencilWindow.DocumentType;
  var DOMTokenList = $stencilWindow.DOMTokenList;
  var Element = $stencilWindow.Element;
  var Event = $stencilWindow.Event;
  var HTMLAnchorElement = $stencilWindow.HTMLAnchorElement;
  var HTMLBaseElement = $stencilWindow.HTMLBaseElement;
  var HTMLButtonElement = $stencilWindow.HTMLButtonElement;
  var HTMLCanvasElement = $stencilWindow.HTMLCanvasElement;
  var HTMLElement = $stencilWindow.HTMLElement;
  var HTMLFormElement = $stencilWindow.HTMLFormElement;
  var HTMLImageElement = $stencilWindow.HTMLImageElement;
  var HTMLInputElement = $stencilWindow.HTMLInputElement;
  var HTMLLinkElement = $stencilWindow.HTMLLinkElement;
  var HTMLMetaElement = $stencilWindow.HTMLMetaElement;
  var HTMLScriptElement = $stencilWindow.HTMLScriptElement;
  var HTMLStyleElement = $stencilWindow.HTMLStyleElement;
  var HTMLTemplateElement = $stencilWindow.HTMLTemplateElement;
  var HTMLTitleElement = $stencilWindow.HTMLTitleElement;
  var IntersectionObserver = $stencilWindow.IntersectionObserver;
  var ResizeObserver = $stencilWindow.ResizeObserver;
  var KeyboardEvent = $stencilWindow.KeyboardEvent;
  var MouseEvent = $stencilWindow.MouseEvent;
  var Node = $stencilWindow.Node;
  var NodeList = $stencilWindow.NodeList;
  var URL = $stencilWindow.URL;

  var console = $stencilWindow.console;
  var customElements = $stencilWindow.customElements;
  var history = $stencilWindow.history;
  var localStorage = $stencilWindow.localStorage;
  var location = $stencilWindow.location;
  var navigator = $stencilWindow.navigator;
  var performance = $stencilWindow.performance;
  var sessionStorage = $stencilWindow.sessionStorage;

  var devicePixelRatio = $stencilWindow.devicePixelRatio;
  var innerHeight = $stencilWindow.innerHeight;
  var innerWidth = $stencilWindow.innerWidth;
  var origin = $stencilWindow.origin;
  var pageXOffset = $stencilWindow.pageXOffset;
  var pageYOffset = $stencilWindow.pageYOffset;
  var screen = $stencilWindow.screen;
  var screenLeft = $stencilWindow.screenLeft;
  var screenTop = $stencilWindow.screenTop;
  var screenX = $stencilWindow.screenX;
  var screenY = $stencilWindow.screenY;
  var scrollX = $stencilWindow.scrollX;
  var scrollY = $stencilWindow.scrollY;
  var exports = {};

  var fetch, FetchError, Headers, Request, Response;

  if (typeof $stencilWindow.fetch === 'function') {
    fetch = $stencilWindow.fetch;
  } else {
    fetch = $stencilWindow.fetch = function() { throw new Error('fetch() is not implemented'); };
  }

  if (typeof $stencilWindow.FetchError === 'function') {
    FetchError = $stencilWindow.FetchError;
  } else {
    FetchError = $stencilWindow.FetchError = class FetchError { constructor() { throw new Error('FetchError is not implemented'); } };
  }

  if (typeof $stencilWindow.Headers === 'function') {
    Headers = $stencilWindow.Headers;
  } else {
    Headers = $stencilWindow.Headers = class Headers { constructor() { throw new Error('Headers is not implemented'); } };
  }

  if (typeof $stencilWindow.Request === 'function') {
    Request = $stencilWindow.Request;
  } else {
    Request = $stencilWindow.Request = class Request { constructor() { throw new Error('Request is not implemented'); } };
  }

  if (typeof $stencilWindow.Response === 'function') {
    Response = $stencilWindow.Response;
  } else {
    Response = $stencilWindow.Response = class Response { constructor() { throw new Error('Response is not implemented'); } };
  }

  function hydrateAppClosure($stencilWindow) {
    const window = $stencilWindow;
    const document = $stencilWindow.document;
    /*hydrateAppClosure start*/


const NAMESPACE = 'ui-library';
const BUILD = /* ui-library */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: false, cmpWillUpdate: false, connectedCallback: true, constructableCSS: false, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: false, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: true, hydratedAttribute: false, hydratedClass: true, hydratedSelectorName: "hydrated", invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: true, scopedSlotTextContentFix: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, shadowDomShim: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: false, watchCallback: true };

/*
 Stencil Hydrate Platform v4.22.0 | MIT Licensed | https://stenciljs.com
 */
var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// src/utils/constants.ts
var EMPTY_OBJ = {};
var SVG_NS = "http://www.w3.org/2000/svg";
var HTML_NS = "http://www.w3.org/1999/xhtml";

// src/utils/helpers.ts
var isDef = (v) => v != null;
var isComplexType = (o) => {
  o = typeof o;
  return o === "object" || o === "function";
};

// src/utils/query-nonce-meta-tag-content.ts
function queryNonceMetaTagContent(doc2) {
  var _a, _b, _c;
  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name="csp-nonce"]')) == null ? void 0 : _b.getAttribute("content")) != null ? _c : void 0;
}

// src/utils/result.ts
var result_exports = {};
__export(result_exports, {
  err: () => err,
  map: () => map,
  ok: () => ok,
  unwrap: () => unwrap,
  unwrapErr: () => unwrapErr
});
var ok = (value) => ({
  isOk: true,
  isErr: false,
  value
});
var err = (value) => ({
  isOk: false,
  isErr: true,
  value
});
function map(result, fn) {
  if (result.isOk) {
    const val = fn(result.value);
    if (val instanceof Promise) {
      return val.then((newVal) => ok(newVal));
    } else {
      return ok(val);
    }
  }
  if (result.isErr) {
    const value = result.value;
    return err(value);
  }
  throw "should never get here";
}
var unwrap = (result) => {
  if (result.isOk) {
    return result.value;
  } else {
    throw result.value;
  }
};
var unwrapErr = (result) => {
  if (result.isErr) {
    return result.value;
  } else {
    throw result.value;
  }
};
var createTime = (fnName, tagName = "") => {
  {
    return () => {
      return;
    };
  }
};
var uniqueTime = (key, measureText) => {
  {
    return () => {
      return;
    };
  }
};

// src/runtime/runtime-constants.ts
var CONTENT_REF_ID = "r";
var ORG_LOCATION_ID = "o";
var SLOT_NODE_ID = "s";
var TEXT_NODE_ID = "t";
var HYDRATE_ID = "s-id";
var HYDRATED_STYLE_ID = "sty-id";
var HYDRATE_CHILD_ID = "c-id";
var SLOT_FB_CSS = "slot-fb{display:contents}slot-fb[hidden]{display:none}";
var h = (nodeName, vnodeData, ...children) => {
  let child = null;
  let key = null;
  let slotName = null;
  let simple = false;
  let lastSimple = false;
  const vNodeChildren = [];
  const walk = (c) => {
    for (let i2 = 0; i2 < c.length; i2++) {
      child = c[i2];
      if (Array.isArray(child)) {
        walk(child);
      } else if (child != null && typeof child !== "boolean") {
        if (simple = typeof nodeName !== "function" && !isComplexType(child)) {
          child = String(child);
        }
        if (simple && lastSimple) {
          vNodeChildren[vNodeChildren.length - 1].$text$ += child;
        } else {
          vNodeChildren.push(simple ? newVNode(null, child) : child);
        }
        lastSimple = simple;
      }
    }
  };
  walk(children);
  if (vnodeData) {
    if (vnodeData.key) {
      key = vnodeData.key;
    }
    if (vnodeData.name) {
      slotName = vnodeData.name;
    }
    {
      const classData = vnodeData.className || vnodeData.class;
      if (classData) {
        vnodeData.class = typeof classData !== "object" ? classData : Object.keys(classData).filter((k) => classData[k]).join(" ");
      }
    }
  }
  if (typeof nodeName === "function") {
    return nodeName(
      vnodeData === null ? {} : vnodeData,
      vNodeChildren,
      vdomFnUtils
    );
  }
  const vnode = newVNode(nodeName, null);
  vnode.$attrs$ = vnodeData;
  if (vNodeChildren.length > 0) {
    vnode.$children$ = vNodeChildren;
  }
  {
    vnode.$key$ = key;
  }
  {
    vnode.$name$ = slotName;
  }
  return vnode;
};
var newVNode = (tag, text) => {
  const vnode = {
    $flags$: 0,
    $tag$: tag,
    $text$: text,
    $elm$: null,
    $children$: null
  };
  {
    vnode.$attrs$ = null;
  }
  {
    vnode.$key$ = null;
  }
  {
    vnode.$name$ = null;
  }
  return vnode;
};
var Host = {};
var isHost = (node) => node && node.$tag$ === Host;
var vdomFnUtils = {
  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),
  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)
};
var convertToPublic = (node) => ({
  vattrs: node.$attrs$,
  vchildren: node.$children$,
  vkey: node.$key$,
  vname: node.$name$,
  vtag: node.$tag$,
  vtext: node.$text$
});
var convertToPrivate = (node) => {
  if (typeof node.vtag === "function") {
    const vnodeData = { ...node.vattrs };
    if (node.vkey) {
      vnodeData.key = node.vkey;
    }
    if (node.vname) {
      vnodeData.name = node.vname;
    }
    return h(node.vtag, vnodeData, ...node.vchildren || []);
  }
  const vnode = newVNode(node.vtag, node.vtext);
  vnode.$attrs$ = node.vattrs;
  vnode.$children$ = node.vchildren;
  vnode.$key$ = node.vkey;
  vnode.$name$ = node.vname;
  return vnode;
};

// src/runtime/client-hydrate.ts
var initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {
  const endHydrate = createTime("hydrateClient", tagName);
  const shadowRoot = hostElm.shadowRoot;
  const childRenderNodes = [];
  const slotNodes = [];
  const shadowRootNodes = shadowRoot ? [] : null;
  const vnode = hostRef.$vnode$ = newVNode(tagName, null);
  if (!plt.$orgLocNodes$) {
    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());
  }
  hostElm[HYDRATE_ID] = hostId;
  hostElm.removeAttribute(HYDRATE_ID);
  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);
  childRenderNodes.map((c) => {
    const orgLocationId = c.$hostId$ + "." + c.$nodeId$;
    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);
    const node = c.$elm$;
    if (orgLocationNode && supportsShadow && orgLocationNode["s-en"] === "") {
      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);
    }
    if (!shadowRoot) {
      node["s-hn"] = tagName;
      if (orgLocationNode) {
        node["s-ol"] = orgLocationNode;
        node["s-ol"]["s-nr"] = node;
      }
    }
    plt.$orgLocNodes$.delete(orgLocationId);
  });
  if (shadowRoot) {
    shadowRootNodes.map((shadowRootNode) => {
      if (shadowRootNode) {
        shadowRoot.appendChild(shadowRootNode);
      }
    });
  }
  endHydrate();
};
var clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {
  let childNodeType;
  let childIdSplt;
  let childVNode;
  let i2;
  if (node.nodeType === 1 /* ElementNode */) {
    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);
    if (childNodeType) {
      childIdSplt = childNodeType.split(".");
      if (childIdSplt[0] === hostId || childIdSplt[0] === "0") {
        childVNode = {
          $flags$: 0,
          $hostId$: childIdSplt[0],
          $nodeId$: childIdSplt[1],
          $depth$: childIdSplt[2],
          $index$: childIdSplt[3],
          $tag$: node.tagName.toLowerCase(),
          $elm$: node,
          $attrs$: null,
          $children$: null,
          $key$: null,
          $name$: null,
          $text$: null
        };
        childRenderNodes.push(childVNode);
        node.removeAttribute(HYDRATE_CHILD_ID);
        if (!parentVNode.$children$) {
          parentVNode.$children$ = [];
        }
        parentVNode.$children$[childVNode.$index$] = childVNode;
        parentVNode = childVNode;
        if (shadowRootNodes && childVNode.$depth$ === "0") {
          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
        }
      }
    }
    if (node.shadowRoot) {
      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {
        clientHydrate(
          parentVNode,
          childRenderNodes,
          slotNodes,
          shadowRootNodes,
          hostElm,
          node.shadowRoot.childNodes[i2],
          hostId
        );
      }
    }
    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {
      clientHydrate(
        parentVNode,
        childRenderNodes,
        slotNodes,
        shadowRootNodes,
        hostElm,
        node.childNodes[i2],
        hostId
      );
    }
  } else if (node.nodeType === 8 /* CommentNode */) {
    childIdSplt = node.nodeValue.split(".");
    if (childIdSplt[1] === hostId || childIdSplt[1] === "0") {
      childNodeType = childIdSplt[0];
      childVNode = {
        $flags$: 0,
        $hostId$: childIdSplt[1],
        $nodeId$: childIdSplt[2],
        $depth$: childIdSplt[3],
        $index$: childIdSplt[4],
        $elm$: node,
        $attrs$: null,
        $children$: null,
        $key$: null,
        $name$: null,
        $tag$: null,
        $text$: null
      };
      if (childNodeType === TEXT_NODE_ID) {
        childVNode.$elm$ = node.nextSibling;
        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {
          childVNode.$text$ = childVNode.$elm$.textContent;
          childRenderNodes.push(childVNode);
          node.remove();
          if (!parentVNode.$children$) {
            parentVNode.$children$ = [];
          }
          parentVNode.$children$[childVNode.$index$] = childVNode;
          if (shadowRootNodes && childVNode.$depth$ === "0") {
            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
          }
        }
      } else if (childVNode.$hostId$ === hostId) {
        if (childNodeType === SLOT_NODE_ID) {
          childVNode.$tag$ = "slot";
          if (childIdSplt[5]) {
            node["s-sn"] = childVNode.$name$ = childIdSplt[5];
          } else {
            node["s-sn"] = "";
          }
          node["s-sr"] = true;
          if (shadowRootNodes) {
            childVNode.$elm$ = doc.createElement(childVNode.$tag$);
            if (childVNode.$name$) {
              childVNode.$elm$.setAttribute("name", childVNode.$name$);
            }
            node.parentNode.insertBefore(childVNode.$elm$, node);
            node.remove();
            if (childVNode.$depth$ === "0") {
              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
            }
          }
          slotNodes.push(childVNode);
          if (!parentVNode.$children$) {
            parentVNode.$children$ = [];
          }
          parentVNode.$children$[childVNode.$index$] = childVNode;
        } else if (childNodeType === CONTENT_REF_ID) {
          if (shadowRootNodes) {
            node.remove();
          } else {
            hostElm["s-cr"] = node;
            node["s-cn"] = true;
          }
        }
      }
    }
  } else if (parentVNode && parentVNode.$tag$ === "style") {
    const vnode = newVNode(null, node.textContent);
    vnode.$elm$ = node;
    vnode.$index$ = "0";
    parentVNode.$children$ = [vnode];
  }
};
var initializeDocumentHydrate = (node, orgLocNodes) => {
  if (node.nodeType === 1 /* ElementNode */) {
    let i2 = 0;
    if (node.shadowRoot) {
      for (; i2 < node.shadowRoot.childNodes.length; i2++) {
        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);
      }
    }
    for (i2 = 0; i2 < node.childNodes.length; i2++) {
      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);
    }
  } else if (node.nodeType === 8 /* CommentNode */) {
    const childIdSplt = node.nodeValue.split(".");
    if (childIdSplt[0] === ORG_LOCATION_ID) {
      orgLocNodes.set(childIdSplt[1] + "." + childIdSplt[2], node);
      node.nodeValue = "";
      node["s-en"] = childIdSplt[3];
    }
  }
};
var parsePropertyValue = (propValue, propType) => {
  if (propValue != null && !isComplexType(propValue)) {
    if (propType & 4 /* Boolean */) {
      return propValue === "false" ? false : propValue === "" || !!propValue;
    }
    if (propType & 2 /* Number */) {
      return parseFloat(propValue);
    }
    if (propType & 1 /* String */) {
      return String(propValue);
    }
    return propValue;
  }
  return propValue;
};
var getElement = (ref) => getHostRef(ref).$hostElement$ ;

// src/runtime/event-emitter.ts
var createEvent = (ref, name, flags) => {
  const elm = getElement(ref);
  return {
    emit: (detail) => {
      return emitEvent(elm, name, {
        bubbles: !!(flags & 4 /* Bubbles */),
        composed: !!(flags & 2 /* Composed */),
        cancelable: !!(flags & 1 /* Cancellable */),
        detail
      });
    }
  };
};
var emitEvent = (elm, name, opts) => {
  const ev = plt.ce(name, opts);
  elm.dispatchEvent(ev);
  return ev;
};
var rootAppliedStyles = /* @__PURE__ */ new WeakMap();
var registerStyle = (scopeId2, cssText, allowCS) => {
  let style = styles.get(scopeId2);
  {
    style = cssText;
  }
  styles.set(scopeId2, style);
};
var addStyle = (styleContainerNode, cmpMeta, mode) => {
  var _a;
  const scopeId2 = getScopeId(cmpMeta);
  const style = styles.get(scopeId2);
  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;
  if (style) {
    if (typeof style === "string") {
      styleContainerNode = styleContainerNode.head || styleContainerNode;
      let appliedStyles = rootAppliedStyles.get(styleContainerNode);
      let styleElm;
      if (!appliedStyles) {
        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());
      }
      if (!appliedStyles.has(scopeId2)) {
        if (styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}="${scopeId2}"]`))) {
          styleElm.innerHTML = style;
        } else {
          styleElm = doc.createElement("style");
          styleElm.innerHTML = style;
          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);
          if (nonce != null) {
            styleElm.setAttribute("nonce", nonce);
          }
          if (cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {
            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);
          }
          if (!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */)) {
            if (styleContainerNode.nodeName === "HEAD") {
              const preconnectLinks = styleContainerNode.querySelectorAll("link[rel=preconnect]");
              const referenceNode2 = preconnectLinks.length > 0 ? preconnectLinks[preconnectLinks.length - 1].nextSibling : styleContainerNode.querySelector("style");
              styleContainerNode.insertBefore(styleElm, referenceNode2);
            } else if ("host" in styleContainerNode) {
              styleContainerNode.prepend(styleElm);
            } else {
              styleContainerNode.append(styleElm);
            }
          }
          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */ && styleContainerNode.nodeName !== "HEAD") {
            styleContainerNode.insertBefore(styleElm, null);
          }
        }
        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {
          styleElm.innerHTML += SLOT_FB_CSS;
        }
        if (appliedStyles) {
          appliedStyles.add(scopeId2);
        }
      }
    }
  }
  return scopeId2;
};
var attachStyles = (hostRef) => {
  const cmpMeta = hostRef.$cmpMeta$;
  const elm = hostRef.$hostElement$;
  const flags = cmpMeta.$flags$;
  const endAttachStyles = createTime("attachStyles", cmpMeta.$tagName$);
  const scopeId2 = addStyle(
    elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),
    cmpMeta);
  if (flags & 10 /* needsScopedEncapsulation */ && flags & 2 /* scopedCssEncapsulation */) {
    elm["s-sc"] = scopeId2;
    elm.classList.add(scopeId2 + "-h");
    if (flags & 2 /* scopedCssEncapsulation */) {
      elm.classList.add(scopeId2 + "-s");
    }
  }
  endAttachStyles();
};
var getScopeId = (cmp, mode) => "sc-" + (cmp.$tagName$);
var setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {
  if (oldValue !== newValue) {
    let isProp = isMemberInElement(elm, memberName);
    let ln = memberName.toLowerCase();
    if (memberName === "class") {
      const classList = elm.classList;
      const oldClasses = parseClassList(oldValue);
      const newClasses = parseClassList(newValue);
      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));
      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));
    } else if (memberName === "style") {
      {
        for (const prop in oldValue) {
          if (!newValue || newValue[prop] == null) {
            {
              elm.style[prop] = "";
            }
          }
        }
      }
      for (const prop in newValue) {
        if (!oldValue || newValue[prop] !== oldValue[prop]) {
          {
            elm.style[prop] = newValue[prop];
          }
        }
      }
    } else if (memberName === "key") ; else if (memberName === "ref") {
      if (newValue) {
        newValue(elm);
      }
    } else if ((!isProp ) && memberName[0] === "o" && memberName[1] === "n") {
      if (memberName[2] === "-") {
        memberName = memberName.slice(3);
      } else if (isMemberInElement(win, ln)) {
        memberName = ln.slice(2);
      } else {
        memberName = ln[2] + memberName.slice(3);
      }
      if (oldValue || newValue) {
        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);
        memberName = memberName.replace(CAPTURE_EVENT_REGEX, "");
        if (oldValue) {
          plt.rel(elm, memberName, oldValue, capture);
        }
        if (newValue) {
          plt.ael(elm, memberName, newValue, capture);
        }
      }
    } else {
      const isComplex = isComplexType(newValue);
      if ((isProp || isComplex && newValue !== null) && !isSvg) {
        try {
          if (!elm.tagName.includes("-")) {
            const n = newValue == null ? "" : newValue;
            if (memberName === "list") {
              isProp = false;
            } else if (oldValue == null || elm[memberName] != n) {
              if (typeof elm.__lookupSetter__(memberName) === "function") {
                elm[memberName] = n;
              } else {
                elm.setAttribute(memberName, n);
              }
            }
          } else {
            elm[memberName] = newValue;
          }
        } catch (e) {
        }
      }
      if (newValue == null || newValue === false) {
        if (newValue !== false || elm.getAttribute(memberName) === "") {
          {
            elm.removeAttribute(memberName);
          }
        }
      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {
        newValue = newValue === true ? "" : newValue;
        {
          elm.setAttribute(memberName, newValue);
        }
      }
    }
  }
};
var parseClassListRegex = /\s/;
var parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);
var CAPTURE_EVENT_SUFFIX = "Capture";
var CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + "$");

// src/runtime/vdom/update-element.ts
var updateElement = (oldVnode, newVnode, isSvgMode2) => {
  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;
  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;
  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;
  {
    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {
      if (!(memberName in newVnodeAttrs)) {
        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);
      }
    }
  }
  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {
    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);
  }
};
function sortedAttrNames(attrNames) {
  return attrNames.includes("ref") ? (
    // we need to sort these to ensure that `'ref'` is the last attr
    [...attrNames.filter((attr) => attr !== "ref"), "ref"]
  ) : (
    // no need to sort, return the original array
    attrNames
  );
}

// src/runtime/vdom/vdom-render.ts
var scopeId;
var contentRef;
var hostTagName;
var useNativeShadowDom = false;
var checkSlotFallbackVisibility = false;
var checkSlotRelocate = false;
var isSvgMode = false;
var createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {
  var _a;
  const newVNode2 = newParentVNode.$children$[childIndex];
  let i2 = 0;
  let elm;
  let childNode;
  let oldVNode;
  if (!useNativeShadowDom) {
    checkSlotRelocate = true;
    if (newVNode2.$tag$ === "slot") {
      if (scopeId) {
        parentElm.classList.add(scopeId + "-s");
      }
      newVNode2.$flags$ |= newVNode2.$children$ ? (
        // slot element has fallback content
        // still create an element that "mocks" the slot element
        2 /* isSlotFallback */
      ) : (
        // slot element does not have fallback content
        // create an html comment we'll use to always reference
        // where actual slot content should sit next to
        1 /* isSlotReference */
      );
    }
  }
  if (newVNode2.$text$ !== null) {
    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);
  } else if (newVNode2.$flags$ & 1 /* isSlotReference */) {
    elm = newVNode2.$elm$ = slotReferenceDebugNode(newVNode2) ;
  } else {
    if (!isSvgMode) {
      isSvgMode = newVNode2.$tag$ === "svg";
    }
    elm = newVNode2.$elm$ = doc.createElementNS(
      isSvgMode ? SVG_NS : HTML_NS,
      !useNativeShadowDom && BUILD.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? "slot-fb" : newVNode2.$tag$
    ) ;
    if (isSvgMode && newVNode2.$tag$ === "foreignObject") {
      isSvgMode = false;
    }
    {
      updateElement(null, newVNode2, isSvgMode);
    }
    const rootNode = elm.getRootNode();
    const isElementWithinShadowRoot = !rootNode.querySelector("body");
    if (!isElementWithinShadowRoot && BUILD.scoped && isDef(scopeId) && elm["s-si"] !== scopeId) {
      elm.classList.add(elm["s-si"] = scopeId);
    }
    {
      updateElementScopeIds(elm, parentElm);
    }
    if (newVNode2.$children$) {
      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {
        childNode = createElm(oldParentVNode, newVNode2, i2, elm);
        if (childNode) {
          elm.appendChild(childNode);
        }
      }
    }
    {
      if (newVNode2.$tag$ === "svg") {
        isSvgMode = false;
      } else if (elm.tagName === "foreignObject") {
        isSvgMode = true;
      }
    }
  }
  elm["s-hn"] = hostTagName;
  {
    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {
      elm["s-sr"] = true;
      elm["s-cr"] = contentRef;
      elm["s-sn"] = newVNode2.$name$ || "";
      elm["s-rf"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;
      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];
      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {
        {
          putBackInOriginalLocation(oldParentVNode.$elm$, false);
        }
      }
    }
  }
  return elm;
};
var putBackInOriginalLocation = (parentElm, recursive) => {
  plt.$flags$ |= 1 /* isTmpDisconnected */;
  const oldSlotChildNodes = Array.from(parentElm.childNodes);
  if (parentElm["s-sr"] && BUILD.experimentalSlotFixes) {
    let node = parentElm;
    while (node = node.nextSibling) {
      if (node && node["s-sn"] === parentElm["s-sn"] && node["s-sh"] === hostTagName) {
        oldSlotChildNodes.push(node);
      }
    }
  }
  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {
    const childNode = oldSlotChildNodes[i2];
    if (childNode["s-hn"] !== hostTagName && childNode["s-ol"]) {
      insertBefore(parentReferenceNode(childNode), childNode, referenceNode(childNode));
      childNode["s-ol"].remove();
      childNode["s-ol"] = void 0;
      childNode["s-sh"] = void 0;
      checkSlotRelocate = true;
    }
    if (recursive) {
      putBackInOriginalLocation(childNode, recursive);
    }
  }
  plt.$flags$ &= ~1 /* isTmpDisconnected */;
};
var addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {
  let containerElm = parentElm["s-cr"] && parentElm["s-cr"].parentNode || parentElm;
  let childNode;
  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {
    containerElm = containerElm.shadowRoot;
  }
  for (; startIdx <= endIdx; ++startIdx) {
    if (vnodes[startIdx]) {
      childNode = createElm(null, parentVNode, startIdx, parentElm);
      if (childNode) {
        vnodes[startIdx].$elm$ = childNode;
        insertBefore(containerElm, childNode, referenceNode(before) );
      }
    }
  }
};
var removeVnodes = (vnodes, startIdx, endIdx) => {
  for (let index = startIdx; index <= endIdx; ++index) {
    const vnode = vnodes[index];
    if (vnode) {
      const elm = vnode.$elm$;
      nullifyVNodeRefs(vnode);
      if (elm) {
        {
          checkSlotFallbackVisibility = true;
          if (elm["s-ol"]) {
            elm["s-ol"].remove();
          } else {
            putBackInOriginalLocation(elm, true);
          }
        }
        elm.remove();
      }
    }
  }
};
var updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {
  let oldStartIdx = 0;
  let newStartIdx = 0;
  let idxInOld = 0;
  let i2 = 0;
  let oldEndIdx = oldCh.length - 1;
  let oldStartVnode = oldCh[0];
  let oldEndVnode = oldCh[oldEndIdx];
  let newEndIdx = newCh.length - 1;
  let newStartVnode = newCh[0];
  let newEndVnode = newCh[newEndIdx];
  let node;
  let elmToMove;
  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
    if (oldStartVnode == null) {
      oldStartVnode = oldCh[++oldStartIdx];
    } else if (oldEndVnode == null) {
      oldEndVnode = oldCh[--oldEndIdx];
    } else if (newStartVnode == null) {
      newStartVnode = newCh[++newStartIdx];
    } else if (newEndVnode == null) {
      newEndVnode = newCh[--newEndIdx];
    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {
      patch(oldStartVnode, newStartVnode, isInitialRender);
      oldStartVnode = oldCh[++oldStartIdx];
      newStartVnode = newCh[++newStartIdx];
    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {
      patch(oldEndVnode, newEndVnode, isInitialRender);
      oldEndVnode = oldCh[--oldEndIdx];
      newEndVnode = newCh[--newEndIdx];
    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {
      if ((oldStartVnode.$tag$ === "slot" || newEndVnode.$tag$ === "slot")) {
        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);
      }
      patch(oldStartVnode, newEndVnode, isInitialRender);
      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);
      oldStartVnode = oldCh[++oldStartIdx];
      newEndVnode = newCh[--newEndIdx];
    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {
      if ((oldStartVnode.$tag$ === "slot" || newEndVnode.$tag$ === "slot")) {
        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);
      }
      patch(oldEndVnode, newStartVnode, isInitialRender);
      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);
      oldEndVnode = oldCh[--oldEndIdx];
      newStartVnode = newCh[++newStartIdx];
    } else {
      idxInOld = -1;
      {
        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {
          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {
            idxInOld = i2;
            break;
          }
        }
      }
      if (idxInOld >= 0) {
        elmToMove = oldCh[idxInOld];
        if (elmToMove.$tag$ !== newStartVnode.$tag$) {
          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);
        } else {
          patch(elmToMove, newStartVnode, isInitialRender);
          oldCh[idxInOld] = void 0;
          node = elmToMove.$elm$;
        }
        newStartVnode = newCh[++newStartIdx];
      } else {
        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);
        newStartVnode = newCh[++newStartIdx];
      }
      if (node) {
        {
          insertBefore(parentReferenceNode(oldStartVnode.$elm$), node, referenceNode(oldStartVnode.$elm$));
        }
      }
    }
  }
  if (oldStartIdx > oldEndIdx) {
    addVnodes(
      parentElm,
      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,
      newVNode2,
      newCh,
      newStartIdx,
      newEndIdx
    );
  } else if (newStartIdx > newEndIdx) {
    removeVnodes(oldCh, oldStartIdx, oldEndIdx);
  }
};
var isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {
  if (leftVNode.$tag$ === rightVNode.$tag$) {
    if (leftVNode.$tag$ === "slot") {
      if (
        // The component gets hydrated and no VDOM has been initialized.
        // Here the comparison can't happen as $name$ property is not set for `leftNode`.
        "$nodeId$" in leftVNode && isInitialRender && // `leftNode` is not from type HTMLComment which would cause many
        // hydration comments to be removed
        leftVNode.$elm$.nodeType !== 8
      ) {
        return false;
      }
      return leftVNode.$name$ === rightVNode.$name$;
    }
    if (!isInitialRender) {
      return leftVNode.$key$ === rightVNode.$key$;
    }
    return true;
  }
  return false;
};
var referenceNode = (node) => {
  return node && node["s-ol"] || node;
};
var parentReferenceNode = (node) => (node["s-ol"] ? node["s-ol"] : node).parentNode;
var patch = (oldVNode, newVNode2, isInitialRender = false) => {
  const elm = newVNode2.$elm$ = oldVNode.$elm$;
  const oldChildren = oldVNode.$children$;
  const newChildren = newVNode2.$children$;
  const tag = newVNode2.$tag$;
  const text = newVNode2.$text$;
  let defaultHolder;
  if (text === null) {
    {
      isSvgMode = tag === "svg" ? true : tag === "foreignObject" ? false : isSvgMode;
    }
    {
      if (tag === "slot" && !useNativeShadowDom) ; else {
        updateElement(oldVNode, newVNode2, isSvgMode);
      }
    }
    if (oldChildren !== null && newChildren !== null) {
      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);
    } else if (newChildren !== null) {
      if (oldVNode.$text$ !== null) {
        elm.textContent = "";
      }
      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);
    } else if (
      // don't do this on initial render as it can cause non-hydrated content to be removed
      !isInitialRender && BUILD.updatable && oldChildren !== null
    ) {
      removeVnodes(oldChildren, 0, oldChildren.length - 1);
    }
    if (isSvgMode && tag === "svg") {
      isSvgMode = false;
    }
  } else if ((defaultHolder = elm["s-cr"])) {
    defaultHolder.parentNode.textContent = text;
  } else if (oldVNode.$text$ !== text) {
    elm.data = text;
  }
};
var updateFallbackSlotVisibility = (elm) => {
  const childNodes = elm.childNodes;
  for (const childNode of childNodes) {
    if (childNode.nodeType === 1 /* ElementNode */) {
      if (childNode["s-sr"]) {
        const slotName = childNode["s-sn"];
        childNode.hidden = false;
        for (const siblingNode of childNodes) {
          if (siblingNode !== childNode) {
            if (siblingNode["s-hn"] !== childNode["s-hn"] || slotName !== "") {
              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute("slot") || slotName === siblingNode["s-sn"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode["s-sn"]) {
                childNode.hidden = true;
                break;
              }
            } else {
              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== "") {
                childNode.hidden = true;
                break;
              }
            }
          }
        }
      }
      updateFallbackSlotVisibility(childNode);
    }
  }
};
var relocateNodes = [];
var markSlotContentForRelocation = (elm) => {
  let node;
  let hostContentNodes;
  let j;
  for (const childNode of elm.childNodes) {
    if (childNode["s-sr"] && (node = childNode["s-cr"]) && node.parentNode) {
      hostContentNodes = node.parentNode.childNodes;
      const slotName = childNode["s-sn"];
      for (j = hostContentNodes.length - 1; j >= 0; j--) {
        node = hostContentNodes[j];
        if (!node["s-cn"] && !node["s-nr"] && node["s-hn"] !== childNode["s-hn"] && (!BUILD.experimentalSlotFixes  )) {
          if (isNodeLocatedInSlot(node, slotName)) {
            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
            checkSlotFallbackVisibility = true;
            node["s-sn"] = node["s-sn"] || slotName;
            if (relocateNodeData) {
              relocateNodeData.$nodeToRelocate$["s-sh"] = childNode["s-hn"];
              relocateNodeData.$slotRefNode$ = childNode;
            } else {
              node["s-sh"] = childNode["s-hn"];
              relocateNodes.push({
                $slotRefNode$: childNode,
                $nodeToRelocate$: node
              });
            }
            if (node["s-sr"]) {
              relocateNodes.map((relocateNode) => {
                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node["s-sn"])) {
                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
                  if (relocateNodeData && !relocateNode.$slotRefNode$) {
                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;
                  }
                }
              });
            }
          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {
            relocateNodes.push({
              $nodeToRelocate$: node
            });
          }
        }
      }
    }
    if (childNode.nodeType === 1 /* ElementNode */) {
      markSlotContentForRelocation(childNode);
    }
  }
};
var isNodeLocatedInSlot = (nodeToRelocate, slotName) => {
  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {
    if (nodeToRelocate.getAttribute("slot") === null && slotName === "") {
      return true;
    }
    if (nodeToRelocate.getAttribute("slot") === slotName) {
      return true;
    }
    return false;
  }
  if (nodeToRelocate["s-sn"] === slotName) {
    return true;
  }
  return slotName === "";
};
var nullifyVNodeRefs = (vNode) => {
  {
    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);
    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);
  }
};
var insertBefore = (parent, newNode, reference) => {
  const inserted = parent == null ? void 0 : parent.insertBefore(newNode, reference);
  {
    updateElementScopeIds(newNode, parent);
  }
  return inserted;
};
var findScopeIds = (element) => {
  const scopeIds = [];
  if (element) {
    scopeIds.push(
      ...element["s-scs"] || [],
      element["s-si"],
      element["s-sc"],
      ...findScopeIds(element.parentElement)
    );
  }
  return scopeIds;
};
var updateElementScopeIds = (element, parent, iterateChildNodes = false) => {
  var _a;
  if (element && parent && element.nodeType === 1 /* ElementNode */) {
    const scopeIds = new Set(findScopeIds(parent).filter(Boolean));
    if (scopeIds.size) {
      (_a = element.classList) == null ? void 0 : _a.add(...element["s-scs"] = [...scopeIds]);
      if (element["s-ol"] || iterateChildNodes) {
        for (const childNode of Array.from(element.childNodes)) {
          updateElementScopeIds(childNode, element, true);
        }
      }
    }
  }
};
var renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {
  var _a, _b, _c, _d;
  const hostElm = hostRef.$hostElement$;
  const cmpMeta = hostRef.$cmpMeta$;
  const oldVNode = hostRef.$vnode$ || newVNode(null, null);
  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);
  hostTagName = hostElm.tagName;
  if (cmpMeta.$attrsToReflect$) {
    rootVnode.$attrs$ = rootVnode.$attrs$ || {};
    cmpMeta.$attrsToReflect$.map(
      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]
    );
  }
  if (isInitialLoad && rootVnode.$attrs$) {
    for (const key of Object.keys(rootVnode.$attrs$)) {
      if (hostElm.hasAttribute(key) && !["key", "ref", "style", "class"].includes(key)) {
        rootVnode.$attrs$[key] = hostElm[key];
      }
    }
  }
  rootVnode.$tag$ = null;
  rootVnode.$flags$ |= 4 /* isHost */;
  hostRef.$vnode$ = rootVnode;
  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm ;
  {
    scopeId = hostElm["s-sc"];
  }
  useNativeShadowDom = (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;
  {
    contentRef = hostElm["s-cr"];
    checkSlotFallbackVisibility = false;
  }
  patch(oldVNode, rootVnode, isInitialLoad);
  {
    plt.$flags$ |= 1 /* isTmpDisconnected */;
    if (checkSlotRelocate) {
      markSlotContentForRelocation(rootVnode.$elm$);
      for (const relocateData of relocateNodes) {
        const nodeToRelocate = relocateData.$nodeToRelocate$;
        if (!nodeToRelocate["s-ol"]) {
          const orgLocationNode = originalLocationDebugNode(nodeToRelocate) ;
          orgLocationNode["s-nr"] = nodeToRelocate;
          insertBefore(nodeToRelocate.parentNode, nodeToRelocate["s-ol"] = orgLocationNode, nodeToRelocate);
        }
      }
      for (const relocateData of relocateNodes) {
        const nodeToRelocate = relocateData.$nodeToRelocate$;
        const slotRefNode = relocateData.$slotRefNode$;
        if (slotRefNode) {
          const parentNodeRef = slotRefNode.parentNode;
          let insertBeforeNode = slotRefNode.nextSibling;
          {
            let orgLocationNode = (_a = nodeToRelocate["s-ol"]) == null ? void 0 : _a.previousSibling;
            while (orgLocationNode) {
              let refNode = (_b = orgLocationNode["s-nr"]) != null ? _b : null;
              if (refNode && refNode["s-sn"] === nodeToRelocate["s-sn"] && parentNodeRef === refNode.parentNode) {
                refNode = refNode.nextSibling;
                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode["s-sr"])) {
                  refNode = refNode == null ? void 0 : refNode.nextSibling;
                }
                if (!refNode || !refNode["s-nr"]) {
                  insertBeforeNode = refNode;
                  break;
                }
              }
              orgLocationNode = orgLocationNode.previousSibling;
            }
          }
          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {
            if (nodeToRelocate !== insertBeforeNode) {
              if (!nodeToRelocate["s-hn"] && nodeToRelocate["s-ol"]) {
                nodeToRelocate["s-hn"] = nodeToRelocate["s-ol"].parentNode.nodeName;
              }
              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);
              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {
                nodeToRelocate.hidden = (_c = nodeToRelocate["s-ih"]) != null ? _c : false;
              }
            }
          }
          nodeToRelocate && typeof slotRefNode["s-rf"] === "function" && slotRefNode["s-rf"](nodeToRelocate);
        } else {
          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {
            if (isInitialLoad) {
              nodeToRelocate["s-ih"] = (_d = nodeToRelocate.hidden) != null ? _d : false;
            }
            nodeToRelocate.hidden = true;
          }
        }
      }
    }
    if (checkSlotFallbackVisibility) {
      updateFallbackSlotVisibility(rootVnode.$elm$);
    }
    plt.$flags$ &= ~1 /* isTmpDisconnected */;
    relocateNodes.length = 0;
  }
  contentRef = void 0;
};
var slotReferenceDebugNode = (slotVNode) => doc.createComment(
  `<slot${slotVNode.$name$ ? ' name="' + slotVNode.$name$ + '"' : ""}> (host=${hostTagName.toLowerCase()})`
);
var originalLocationDebugNode = (nodeToRelocate) => doc.createComment(
  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate["s-hn"]})` : `[${nodeToRelocate.textContent}]`)
);

// src/runtime/update-component.ts
var attachToAncestor = (hostRef, ancestorComponent) => {
  if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent["s-p"]) {
    ancestorComponent["s-p"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));
  }
};
var scheduleUpdate = (hostRef, isInitialLoad) => {
  {
    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;
  }
  if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {
    hostRef.$flags$ |= 512 /* needsRerender */;
    return;
  }
  attachToAncestor(hostRef, hostRef.$ancestorComponent$);
  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);
  return writeTask(dispatch) ;
};
var dispatchHooks = (hostRef, isInitialLoad) => {
  const elm = hostRef.$hostElement$;
  const endSchedule = createTime("scheduleUpdate", hostRef.$cmpMeta$.$tagName$);
  const instance = hostRef.$lazyInstance$ ;
  if (!instance) {
    throw new Error(
      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \`externalRuntime: true\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`
    );
  }
  let maybePromise;
  if (isInitialLoad) {
    {
      hostRef.$flags$ |= 256 /* isListenReady */;
      if (hostRef.$queuedListeners$) {
        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));
        hostRef.$queuedListeners$ = void 0;
      }
    }
    {
      maybePromise = safeCall(instance, "componentWillLoad");
    }
  }
  endSchedule();
  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));
};
var enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {
  console.error(err2);
  fn();
}) : fn();
var isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === "function";
var updateComponent = async (hostRef, instance, isInitialLoad) => {
  var _a;
  const elm = hostRef.$hostElement$;
  const endUpdate = createTime("update", hostRef.$cmpMeta$.$tagName$);
  const rc = elm["s-rc"];
  if (isInitialLoad) {
    attachStyles(hostRef);
  }
  const endRender = createTime("render", hostRef.$cmpMeta$.$tagName$);
  {
    await callRender(hostRef, instance, elm, isInitialLoad);
  }
  {
    try {
      serverSideConnected(elm);
      if (isInitialLoad) {
        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {
          elm["s-en"] = "";
        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {
          elm["s-en"] = "c";
        }
      }
    } catch (e) {
      consoleError(e, elm);
    }
  }
  if (rc) {
    rc.map((cb) => cb());
    elm["s-rc"] = void 0;
  }
  endRender();
  endUpdate();
  {
    const childrenPromises = (_a = elm["s-p"]) != null ? _a : [];
    const postUpdate = () => postUpdateComponent(hostRef);
    if (childrenPromises.length === 0) {
      postUpdate();
    } else {
      Promise.all(childrenPromises).then(postUpdate);
      hostRef.$flags$ |= 4 /* isWaitingForChildren */;
      childrenPromises.length = 0;
    }
  }
};
var callRender = (hostRef, instance, elm, isInitialLoad) => {
  try {
    instance = instance.render() ;
    {
      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;
    }
    {
      hostRef.$flags$ |= 2 /* hasRendered */;
    }
    {
      {
        {
          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));
        }
      }
    }
  } catch (e) {
    consoleError(e, hostRef.$hostElement$);
  }
  return null;
};
var postUpdateComponent = (hostRef) => {
  const tagName = hostRef.$cmpMeta$.$tagName$;
  const elm = hostRef.$hostElement$;
  const endPostUpdate = createTime("postUpdate", tagName);
  const instance = hostRef.$lazyInstance$ ;
  const ancestorComponent = hostRef.$ancestorComponent$;
  {
    safeCall(instance, "componentDidRender");
  }
  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {
    hostRef.$flags$ |= 64 /* hasLoadedComponent */;
    {
      addHydratedFlag(elm);
    }
    {
      safeCall(instance, "componentDidLoad");
    }
    endPostUpdate();
    {
      hostRef.$onReadyResolve$(elm);
      if (!ancestorComponent) {
        appDidLoad();
      }
    }
  } else {
    {
      safeCall(instance, "componentDidUpdate");
    }
    endPostUpdate();
  }
  {
    hostRef.$onInstanceResolve$(elm);
  }
  {
    if (hostRef.$onRenderResolve$) {
      hostRef.$onRenderResolve$();
      hostRef.$onRenderResolve$ = void 0;
    }
    if (hostRef.$flags$ & 512 /* needsRerender */) {
      nextTick(() => scheduleUpdate(hostRef, false));
    }
    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);
  }
};
var appDidLoad = (who) => {
  {
    addHydratedFlag(doc.documentElement);
  }
  nextTick(() => emitEvent(win, "appload", { detail: { namespace: NAMESPACE } }));
};
var safeCall = (instance, method, arg) => {
  if (instance && instance[method]) {
    try {
      return instance[method](arg);
    } catch (e) {
      consoleError(e);
    }
  }
  return void 0;
};
var addHydratedFlag = (elm) => {
  var _a;
  return elm.classList.add((_a = BUILD.hydratedSelectorName) != null ? _a : "hydrated") ;
};
var serverSideConnected = (elm) => {
  const children = elm.children;
  if (children != null) {
    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {
      const childElm = children[i2];
      if (typeof childElm.connectedCallback === "function") {
        childElm.connectedCallback();
      }
      serverSideConnected(childElm);
    }
  }
};

// src/runtime/set-value.ts
var getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);
var setValue = (ref, propName, newVal, cmpMeta) => {
  const hostRef = getHostRef(ref);
  if (!hostRef) {
    throw new Error(
      `Couldn't find host element for "${cmpMeta.$tagName$}" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`
    );
  }
  const elm = hostRef.$hostElement$ ;
  const oldVal = hostRef.$instanceValues$.get(propName);
  const flags = hostRef.$flags$;
  const instance = hostRef.$lazyInstance$ ;
  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);
  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);
  const didValueChange = newVal !== oldVal && !areBothNaN;
  if ((!(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {
    hostRef.$instanceValues$.set(propName, newVal);
    if (instance) {
      if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {
        const watchMethods = cmpMeta.$watchers$[propName];
        if (watchMethods) {
          watchMethods.map((watchMethodName) => {
            try {
              instance[watchMethodName](newVal, oldVal, propName);
            } catch (e) {
              consoleError(e, elm);
            }
          });
        }
      }
      if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {
        scheduleUpdate(hostRef, false);
      }
    }
  }
};

// src/runtime/proxy-component.ts
var proxyComponent = (Cstr, cmpMeta, flags) => {
  var _a, _b;
  const prototype = Cstr.prototype;
  if (cmpMeta.$members$ || (cmpMeta.$watchers$ || Cstr.watchers)) {
    if (Cstr.watchers && !cmpMeta.$watchers$) {
      cmpMeta.$watchers$ = Cstr.watchers;
    }
    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});
    members.map(([memberName, [memberFlags]]) => {
      if ((memberFlags & 31 /* Prop */ || (flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {
        Object.defineProperty(prototype, memberName, {
          get() {
            return getValue(this, memberName);
          },
          set(newValue) {
            setValue(this, memberName, newValue, cmpMeta);
          },
          configurable: true,
          enumerable: true
        });
      } else if (flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {
        Object.defineProperty(prototype, memberName, {
          value(...args) {
            var _a2;
            const ref = getHostRef(this);
            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {
              var _a3;
              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);
            });
          }
        });
      }
    });
    if ((flags & 1 /* isElementConstructor */)) {
      const attrNameToPropName = /* @__PURE__ */ new Map();
      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {
        plt.jmp(() => {
          var _a2;
          const propName = attrNameToPropName.get(attrName);
          if (this.hasOwnProperty(propName)) {
            newValue = this[propName];
            delete this[propName];
          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === "number" && // cast type to number to avoid TS compiler issues
          this[propName] == newValue) {
            return;
          } else if (propName == null) {
            const hostRef = getHostRef(this);
            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;
            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {
              const instance = hostRef.$lazyInstance$ ;
              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];
              entry == null ? void 0 : entry.forEach((callbackName) => {
                if (instance[callbackName] != null) {
                  instance[callbackName].call(instance, newValue, oldValue, attrName);
                }
              });
            }
            return;
          }
          this[propName] = newValue === null && typeof this[propName] === "boolean" ? false : newValue;
        });
      };
      Cstr.observedAttributes = Array.from(
        /* @__PURE__ */ new Set([
          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),
          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {
            var _a2;
            const attrName = m[1] || propName;
            attrNameToPropName.set(attrName, propName);
            if (m[0] & 512 /* ReflectAttr */) {
              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);
            }
            return attrName;
          })
        ])
      );
    }
  }
  return Cstr;
};

// src/runtime/initialize-component.ts
var initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {
  let Cstr;
  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {
    hostRef.$flags$ |= 32 /* hasInitializedComponent */;
    const bundleId = cmpMeta.$lazyBundleId$;
    if (bundleId) {
      const CstrImport = loadModule(cmpMeta);
      if (CstrImport && "then" in CstrImport) {
        const endLoad = uniqueTime();
        Cstr = await CstrImport;
        endLoad();
      } else {
        Cstr = CstrImport;
      }
      if (!Cstr) {
        throw new Error(`Constructor for "${cmpMeta.$tagName$}#${hostRef.$modeName$}" was not found`);
      }
      if (!Cstr.isProxied) {
        {
          cmpMeta.$watchers$ = Cstr.watchers;
        }
        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);
        Cstr.isProxied = true;
      }
      const endNewInstance = createTime("createInstance", cmpMeta.$tagName$);
      {
        hostRef.$flags$ |= 8 /* isConstructingInstance */;
      }
      try {
        new Cstr(hostRef);
      } catch (e) {
        consoleError(e);
      }
      {
        hostRef.$flags$ &= ~8 /* isConstructingInstance */;
      }
      {
        hostRef.$flags$ |= 128 /* isWatchReady */;
      }
      endNewInstance();
      fireConnectedCallback(hostRef.$lazyInstance$);
    } else {
      Cstr = elm.constructor;
      const cmpTag = elm.localName;
      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);
    }
    if (Cstr && Cstr.style) {
      let style;
      if (typeof Cstr.style === "string") {
        style = Cstr.style;
      }
      const scopeId2 = getScopeId(cmpMeta);
      if (!styles.has(scopeId2)) {
        const endRegisterStyles = createTime("registerStyles", cmpMeta.$tagName$);
        registerStyle(scopeId2, style);
        endRegisterStyles();
      }
    }
  }
  const ancestorComponent = hostRef.$ancestorComponent$;
  const schedule = () => scheduleUpdate(hostRef, true);
  if (ancestorComponent && ancestorComponent["s-rc"]) {
    ancestorComponent["s-rc"].push(schedule);
  } else {
    schedule();
  }
};
var fireConnectedCallback = (instance) => {
  {
    safeCall(instance, "connectedCallback");
  }
};

// src/runtime/connected-callback.ts
var connectedCallback = (elm) => {
  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {
    const hostRef = getHostRef(elm);
    const cmpMeta = hostRef.$cmpMeta$;
    const endConnected = createTime("connectedCallback", cmpMeta.$tagName$);
    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {
      hostRef.$flags$ |= 1 /* hasConnected */;
      let hostId;
      {
        hostId = elm.getAttribute(HYDRATE_ID);
        if (hostId) {
          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {
            const scopeId2 = addStyle(elm.shadowRoot, cmpMeta);
            elm.classList.remove(scopeId2 + "-h", scopeId2 + "-s");
          }
          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);
        }
      }
      if (!hostId) {
        {
          setContentReference(elm);
        }
      }
      {
        let ancestorComponent = elm;
        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {
          if (ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute("s-id") && ancestorComponent["s-p"] || ancestorComponent["s-p"]) {
            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);
            break;
          }
        }
      }
      {
        initializeComponent(elm, hostRef, cmpMeta);
      }
    } else {
      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);
      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {
        fireConnectedCallback(hostRef.$lazyInstance$);
      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {
        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));
      }
    }
    endConnected();
  }
};
var setContentReference = (elm) => {
  const contentRefElm = elm["s-cr"] = doc.createComment(
    ""
  );
  contentRefElm["s-cn"] = true;
  insertBefore(elm, contentRefElm, elm.firstChild);
};
var addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {
  if (listeners) {
    listeners.map(([flags, name, method]) => {
      const target = getHostListenerTarget(elm, flags) ;
      const handler = hostListenerProxy(hostRef, method);
      const opts = hostListenerOpts(flags);
      plt.ael(target, name, handler, opts);
      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));
    });
  }
};
var hostListenerProxy = (hostRef, methodName) => (ev) => {
  var _a;
  try {
    {
      if (hostRef.$flags$ & 256 /* isListenReady */) {
        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);
      } else {
        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);
      }
    }
  } catch (e) {
    consoleError(e);
  }
};
var getHostListenerTarget = (elm, flags) => {
  if (flags & 8 /* TargetWindow */) return win;
  return elm;
};
var hostListenerOpts = (flags) => (flags & 2 /* Capture */) !== 0;

// src/runtime/vdom/vdom-annotations.ts
var insertVdomAnnotations = (doc2, staticComponents) => {
  if (doc2 != null) {
    const docData = {
      hostIds: 0,
      rootLevelIds: 0,
      staticComponents: new Set(staticComponents)
    };
    const orgLocationNodes = [];
    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);
    orgLocationNodes.forEach((orgLocationNode) => {
      var _a;
      if (orgLocationNode != null && orgLocationNode["s-nr"]) {
        const nodeRef = orgLocationNode["s-nr"];
        let hostId = nodeRef["s-host-id"];
        let nodeId = nodeRef["s-node-id"];
        let childId = `${hostId}.${nodeId}`;
        if (hostId == null) {
          hostId = 0;
          docData.rootLevelIds++;
          nodeId = docData.rootLevelIds;
          childId = `${hostId}.${nodeId}`;
          if (nodeRef.nodeType === 1 /* ElementNode */) {
            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);
          } else if (nodeRef.nodeType === 3 /* TextNode */) {
            if (hostId === 0) {
              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();
              if (textContent === "") {
                orgLocationNode.remove();
                return;
              }
            }
            const commentBeforeTextNode = doc2.createComment(childId);
            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;
            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);
          }
        }
        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;
        const orgLocationParentNode = orgLocationNode.parentElement;
        if (orgLocationParentNode) {
          if (orgLocationParentNode["s-en"] === "") {
            orgLocationNodeId += `.`;
          } else if (orgLocationParentNode["s-en"] === "c") {
            orgLocationNodeId += `.c`;
          }
        }
        orgLocationNode.nodeValue = orgLocationNodeId;
      }
    });
  }
};
var parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {
  var _a;
  if (node == null) {
    return;
  }
  if (node["s-nr"] != null) {
    orgLocationNodes.push(node);
  }
  if (node.nodeType === 1 /* ElementNode */) {
    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];
    childNodes.forEach((childNode) => {
      const hostRef = getHostRef(childNode);
      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {
        const cmpData = {
          nodeIds: 0
        };
        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);
      }
      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);
    });
  }
};
var insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {
  if (vnode != null) {
    const hostId = ++docData.hostIds;
    hostElm.setAttribute(HYDRATE_ID, hostId);
    if (hostElm["s-cr"] != null) {
      hostElm["s-cr"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;
    }
    if (vnode.$children$ != null) {
      const depth = 0;
      vnode.$children$.forEach((vnodeChild, index) => {
        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);
      });
    }
    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {
      const parent = hostElm.parentElement;
      if (parent && parent.childNodes) {
        const parentChildNodes = Array.from(parent.childNodes);
        const comment = parentChildNodes.find(
          (node) => node.nodeType === 8 /* CommentNode */ && node["s-sr"]
        );
        if (comment) {
          const index = parentChildNodes.indexOf(hostElm) - 1;
          vnode.$elm$.setAttribute(
            HYDRATE_CHILD_ID,
            `${comment["s-host-id"]}.${comment["s-node-id"]}.0.${index}`
          );
        }
      }
    }
  }
};
var insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {
  const childElm = vnodeChild.$elm$;
  if (childElm == null) {
    return;
  }
  const nodeId = cmpData.nodeIds++;
  const childId = `${hostId}.${nodeId}.${depth}.${index}`;
  childElm["s-host-id"] = hostId;
  childElm["s-node-id"] = nodeId;
  if (childElm.nodeType === 1 /* ElementNode */) {
    childElm.setAttribute(HYDRATE_CHILD_ID, childId);
  } else if (childElm.nodeType === 3 /* TextNode */) {
    const parentNode = childElm.parentNode;
    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;
    if (nodeName !== "STYLE" && nodeName !== "SCRIPT") {
      const textNodeId = `${TEXT_NODE_ID}.${childId}`;
      const commentBeforeTextNode = doc2.createComment(textNodeId);
      insertBefore(parentNode, commentBeforeTextNode, childElm);
    }
  } else if (childElm.nodeType === 8 /* CommentNode */) {
    if (childElm["s-sr"]) {
      const slotName = childElm["s-sn"] || "";
      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;
      childElm.nodeValue = slotNodeId;
    }
  }
  if (vnodeChild.$children$ != null) {
    const childDepth = depth + 1;
    vnodeChild.$children$.forEach((vnode, index2) => {
      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);
    });
  }
};

// src/hydrate/platform/h-async.ts
var hAsync = (nodeName, vnodeData, ...children) => {
  if (Array.isArray(children) && children.length > 0) {
    const flatChildren = children.flat(Infinity);
    if (flatChildren.some((child) => child instanceof Promise)) {
      return Promise.all(flatChildren).then((resolvedChildren) => {
        return h(nodeName, vnodeData, ...resolvedChildren);
      }).catch((err2) => {
        return h(nodeName, vnodeData);
      });
    }
    return h(nodeName, vnodeData, ...flatChildren);
  }
  return h(nodeName, vnodeData);
};
function proxyHostElement(elm, cmpMeta) {
  if (typeof elm.componentOnReady !== "function") {
    elm.componentOnReady = componentOnReady;
  }
  if (typeof elm.forceUpdate !== "function") {
    elm.forceUpdate = forceUpdate2;
  }
  if (!elm.shadowRoot && !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */)) {
    {
      elm.attachShadow({ mode: "open" });
    }
  }
  if (cmpMeta.$members$ != null) {
    const hostRef = getHostRef(elm);
    const members = Object.entries(cmpMeta.$members$);
    members.forEach(([memberName, m]) => {
      var _a, _b;
      const memberFlags = m[0];
      if (memberFlags & 31 /* Prop */) {
        const attributeName = m[1] || memberName;
        let attrValue = elm.getAttribute(attributeName);
        if ((attrValue == null ? void 0 : attrValue.startsWith("{")) && attrValue.endsWith("}") || (attrValue == null ? void 0 : attrValue.startsWith("[")) && attrValue.endsWith("]")) {
          try {
            attrValue = JSON.parse(attrValue);
          } catch (e) {
          }
        }
        if (attrValue != null) {
          const parsedAttrValue = parsePropertyValue(attrValue, memberFlags);
          (_a = hostRef == null ? void 0 : hostRef.$instanceValues$) == null ? void 0 : _a.set(memberName, parsedAttrValue);
        }
        const ownValue = elm[memberName];
        if (ownValue !== void 0) {
          (_b = hostRef == null ? void 0 : hostRef.$instanceValues$) == null ? void 0 : _b.set(memberName, ownValue);
          delete elm[memberName];
        }
        Object.defineProperty(elm, memberName, {
          get() {
            return getValue(this, memberName);
          },
          set(newValue) {
            setValue(this, memberName, newValue, cmpMeta);
          },
          configurable: true,
          enumerable: true
        });
      } else if (memberFlags & 64 /* Method */) {
        Object.defineProperty(elm, memberName, {
          value(...args) {
            var _a2;
            const ref = getHostRef(this);
            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {
              var _a3;
              return (_a3 = ref == null ? void 0 : ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);
            }).catch(consoleError);
          }
        });
      }
    });
  }
}
function componentOnReady() {
  var _a;
  return (_a = getHostRef(this)) == null ? void 0 : _a.$onReadyPromise$;
}
function forceUpdate2() {
}

// src/hydrate/platform/hydrate-app.ts
function hydrateApp(win2, opts, results, afterHydrate, resolve) {
  const connectedElements = /* @__PURE__ */ new Set();
  const createdElements = /* @__PURE__ */ new Set();
  const waitingElements = /* @__PURE__ */ new Set();
  const orgDocumentCreateElement = win2.document.createElement;
  const orgDocumentCreateElementNS = win2.document.createElementNS;
  const resolved2 = Promise.resolve();
  let tmrId;
  let ranCompleted = false;
  function hydratedComplete() {
    globalThis.clearTimeout(tmrId);
    createdElements.clear();
    connectedElements.clear();
    if (!ranCompleted) {
      ranCompleted = true;
      try {
        if (opts.clientHydrateAnnotations) {
          insertVdomAnnotations(win2.document, opts.staticComponents);
        }
        win2.dispatchEvent(new win2.Event("DOMContentLoaded"));
        win2.document.createElement = orgDocumentCreateElement;
        win2.document.createElementNS = orgDocumentCreateElementNS;
      } catch (e) {
        renderCatchError(opts, results, e);
      }
    }
    afterHydrate(win2, opts, results, resolve);
  }
  function hydratedError(err2) {
    renderCatchError(opts, results, err2);
    hydratedComplete();
  }
  function timeoutExceeded() {
    hydratedError(`Hydrate exceeded timeout${waitingOnElementsMsg(waitingElements)}`);
  }
  try {
    let patchedConnectedCallback2 = function() {
      return connectElement2(this);
    }, patchElement2 = function(elm) {
      if (isValidComponent(elm, opts)) {
        const hostRef = getHostRef(elm);
        if (!hostRef) {
          const Cstr = loadModule(
            {
              $tagName$: elm.nodeName.toLowerCase(),
              $flags$: null
            });
          if (Cstr != null && Cstr.cmpMeta != null) {
            createdElements.add(elm);
            elm.connectedCallback = patchedConnectedCallback2;
            registerHost(elm, Cstr.cmpMeta);
            proxyHostElement(elm, Cstr.cmpMeta);
          }
        }
      }
    }, patchChild2 = function(elm) {
      if (elm != null && elm.nodeType === 1) {
        patchElement2(elm);
        const children = elm.children;
        for (let i2 = 0, ii = children.length; i2 < ii; i2++) {
          patchChild2(children[i2]);
        }
      }
    }, connectElement2 = function(elm) {
      createdElements.delete(elm);
      if (isValidComponent(elm, opts) && results.hydratedCount < opts.maxHydrateCount) {
        if (!connectedElements.has(elm) && shouldHydrate(elm)) {
          connectedElements.add(elm);
          return hydrateComponent.call(elm, win2, results, elm.nodeName, elm, waitingElements);
        }
      }
      return resolved2;
    }, waitLoop2 = function() {
      const toConnect = Array.from(createdElements).filter((elm) => elm.parentElement);
      if (toConnect.length > 0) {
        return Promise.all(toConnect.map(connectElement2)).then(waitLoop2);
      }
      return resolved2;
    };
    win2.document.createElement = function patchedCreateElement(tagName) {
      const elm = orgDocumentCreateElement.call(win2.document, tagName);
      patchElement2(elm);
      return elm;
    };
    win2.document.createElementNS = function patchedCreateElement(namespaceURI, tagName) {
      const elm = orgDocumentCreateElementNS.call(win2.document, namespaceURI, tagName);
      patchElement2(elm);
      return elm;
    };
    tmrId = globalThis.setTimeout(timeoutExceeded, opts.timeout);
    plt.$resourcesUrl$ = new URL(opts.resourcesUrl || "./", doc.baseURI).href;
    patchChild2(win2.document.body);
    waitLoop2().then(hydratedComplete).catch(hydratedError);
  } catch (e) {
    hydratedError(e);
  }
}
async function hydrateComponent(win2, results, tagName, elm, waitingElements) {
  tagName = tagName.toLowerCase();
  const Cstr = loadModule(
    {
      $tagName$: tagName,
      $flags$: null
    });
  if (Cstr != null) {
    const cmpMeta = Cstr.cmpMeta;
    if (cmpMeta != null) {
      waitingElements.add(elm);
      const hostRef = getHostRef(this);
      addHostEventListeners(this, hostRef, cmpMeta.$listeners$);
      try {
        connectedCallback(elm);
        await elm.componentOnReady();
        results.hydratedCount++;
        const ref = getHostRef(elm);
        const modeName = !ref.$modeName$ ? "$" : ref.$modeName$;
        if (!results.components.some((c) => c.tag === tagName && c.mode === modeName)) {
          results.components.push({
            tag: tagName,
            mode: modeName,
            count: 0,
            depth: -1
          });
        }
      } catch (e) {
        win2.console.error(e);
      }
      waitingElements.delete(elm);
    }
  }
}
function isValidComponent(elm, opts) {
  if (elm != null && elm.nodeType === 1) {
    const tagName = elm.nodeName;
    if (typeof tagName === "string" && tagName.includes("-")) {
      if (opts.excludeComponents.includes(tagName.toLowerCase())) {
        return false;
      }
      return true;
    }
  }
  return false;
}
function shouldHydrate(elm) {
  if (elm.nodeType === 9) {
    return true;
  }
  if (NO_HYDRATE_TAGS.has(elm.nodeName)) {
    return false;
  }
  if (elm.hasAttribute("no-prerender")) {
    return false;
  }
  const parentNode = elm.parentNode;
  if (parentNode == null) {
    return true;
  }
  return shouldHydrate(parentNode);
}
var NO_HYDRATE_TAGS = /* @__PURE__ */ new Set([
  "CODE",
  "HEAD",
  "IFRAME",
  "INPUT",
  "OBJECT",
  "OUTPUT",
  "NOSCRIPT",
  "PRE",
  "SCRIPT",
  "SELECT",
  "STYLE",
  "TEMPLATE",
  "TEXTAREA"
]);
function renderCatchError(opts, results, err2) {
  const diagnostic = {
    level: "error",
    type: "build",
    header: "Hydrate Error",
    messageText: "",
    relFilePath: void 0,
    absFilePath: void 0,
    lines: []
  };
  if (opts.url) {
    try {
      const u = new URL(opts.url);
      if (u.pathname !== "/") {
        diagnostic.header += ": " + u.pathname;
      }
    } catch (e) {
    }
  }
  if (err2 != null) {
    if (err2.stack != null) {
      diagnostic.messageText = err2.stack.toString();
    } else if (err2.message != null) {
      diagnostic.messageText = err2.message.toString();
    } else {
      diagnostic.messageText = err2.toString();
    }
  }
  results.diagnostics.push(diagnostic);
}
function printTag(elm) {
  let tag = `<${elm.nodeName.toLowerCase()}`;
  if (Array.isArray(elm.attributes)) {
    for (let i2 = 0; i2 < elm.attributes.length; i2++) {
      const attr = elm.attributes[i2];
      tag += ` ${attr.name}`;
      if (attr.value !== "") {
        tag += `="${attr.value}"`;
      }
    }
  }
  tag += `>`;
  return tag;
}
function waitingOnElementMsg(waitingElement) {
  let msg = "";
  if (waitingElement) {
    const lines = [];
    msg = " - waiting on:";
    let elm = waitingElement;
    while (elm && elm.nodeType !== 9 && elm.nodeName !== "BODY") {
      lines.unshift(printTag(elm));
      elm = elm.parentElement;
    }
    let indent = "";
    for (const ln of lines) {
      indent += "  ";
      msg += `
${indent}${ln}`;
    }
  }
  return msg;
}
function waitingOnElementsMsg(waitingElements) {
  return Array.from(waitingElements).map(waitingOnElementMsg);
}
var cmpModules = /* @__PURE__ */ new Map();
var getModule = (tagName) => {
  if (typeof tagName === "string") {
    tagName = tagName.toLowerCase();
    const cmpModule = cmpModules.get(tagName);
    if (cmpModule != null) {
      return cmpModule[tagName];
    }
  }
  return null;
};
var loadModule = (cmpMeta, _hostRef, _hmrVersionId) => {
  return getModule(cmpMeta.$tagName$);
};
var isMemberInElement = (elm, memberName) => {
  if (elm != null) {
    if (memberName in elm) {
      return true;
    }
    const cstr = getModule(elm.nodeName);
    if (cstr != null) {
      const hostRef = cstr;
      if (hostRef != null && hostRef.cmpMeta != null && hostRef.cmpMeta.$members$ != null) {
        return memberName in hostRef.cmpMeta.$members$;
      }
    }
  }
  return false;
};
var registerComponents = (Cstrs) => {
  for (const Cstr of Cstrs) {
    const exportName = Cstr.cmpMeta.$tagName$;
    cmpModules.set(exportName, {
      [exportName]: Cstr
    });
  }
};
var win = window;
var doc = win.document;
var writeTask = (cb) => {
  nextTick(() => {
    try {
      cb();
    } catch (e) {
      consoleError(e);
    }
  });
};
var resolved = /* @__PURE__ */ Promise.resolve();
var nextTick = (cb) => resolved.then(cb);
var defaultConsoleError = (e) => {
  if (e != null) {
    console.error(e.stack || e.message || e);
  }
};
var consoleError = (e, el) => (defaultConsoleError)(e, el);
var plt = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: (h2) => h2(),
  raf: (h2) => requestAnimationFrame(h2),
  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),
  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),
  ce: (eventName, opts) => new win.CustomEvent(eventName, opts)
};
var supportsShadow = BUILD.shadowDom;
var hostRefs = /* @__PURE__ */ new WeakMap();
var getHostRef = (ref) => hostRefs.get(ref);
var registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);
var registerHost = (elm, cmpMeta) => {
  const hostRef = {
    $flags$: 0,
    $cmpMeta$: cmpMeta,
    $hostElement$: elm,
    $instanceValues$: /* @__PURE__ */ new Map(),
    $renderCount$: 0
  };
  hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);
  hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);
  elm["s-p"] = [];
  elm["s-rc"] = [];
  return hostRefs.set(elm, hostRef);
};
var styles = /* @__PURE__ */ new Map();

//
// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a
// string. This is useful because we can't use slot.textContent as an alternative.
//
function getTextContent(slot) {
    const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];
    let text = '';
    [...nodes].map((node) => {
        if (node.nodeType === Node.TEXT_NODE) {
            text += node.textContent;
        }
    });
    return text;
}
//
// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named
// slot, otherwise it will look for a "default" slot (e.g. a non-empty text node or an element with no slot attribute).
//
function hasSlot(el, name) {
    // Look for a named slot
    if (name != null && name !== '') {
        return el.querySelector(`[slot="${name}"]`) !== null;
    }
    // Look for a default slot
    return Array.from(el.childNodes).some((node) => {
        var _a;
        if (node.nodeType === node.TEXT_NODE && ((_a = node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {
            return true;
        }
        if (node.nodeType === node.ELEMENT_NODE) {
            const el = node;
            if (!el.hasAttribute('slot')) {
                return true;
            }
        }
        return false;
    });
}
function getSlot(element, slotName) {
    if (element == null)
        return null;
    return element.querySelector(`[slot="${slotName}"]`);
}

const sixAlertCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:contents;margin:0}.alert{position:relative;display:flex;align-items:stretch;background-color:var(--six-color-white);border:solid 1px var(--six-color-web-rock-200);border-top-width:3px;border-radius:var(--six-border-radius-medium);box-shadow:var(--box-shadow);font-family:var(--six-font-sans);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-normal);line-height:1.6;color:var(--six-color-web-rock-700);opacity:0;transform:scale(0.9);transition:var(--six-transition-medium) opacity ease, var(--six-transition-medium) transform ease;margin:inherit}.alert:not(.alert--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.alert--shadow{box-shadow:var(--six-shadow-medium)}.alert--open{opacity:1;transform:none}.alert__icon{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-large)}.alert__icon ::slotted(*){margin-left:var(--six-spacing-large)}.alert--primary{border-top-color:var(--six-color-web-rock-900)}.alert--primary .alert__icon{color:var(--six-color-web-rock-900)}.alert--success{border-top-color:var(--six-color-success-600)}.alert--success .alert__icon{color:var(--six-color-success-600)}.alert--info{border-top-color:var(--six-color-action-500)}.alert--info .alert__icon{color:var(--six-color-action-500)}.alert--warning{border-top-color:var(--six-color-warning-800)}.alert--warning .alert__icon{color:var(--six-color-warning-800)}.alert--danger{border-top-color:var(--six-color-danger-900)}.alert--danger .alert__icon{color:var(--six-color-danger-900)}.alert__message{flex:1 1 auto;padding:var(--six-spacing-large);overflow:hidden}.alert__close{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-large);padding-right:var(--six-spacing-medium)}";
var SixAlertStyle0 = sixAlertCss;

const toastStack = Object.assign(document.createElement('div'), { className: 'six-toast-stack' });
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The alert's content.
 * @slot icon - An icon to show in the alert.
 *
 * @part base - The component's base wrapper.
 * @part icon - The container that wraps the alert icon.
 * @part message - The alert message.
 * @part close-button - The close button.
 */
class SixAlert {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-alert-show", 7);
        this.sixAfterShow = createEvent(this, "six-alert-after-show", 7);
        this.sixHide = createEvent(this, "six-alert-hide", 7);
        this.sixAfterHide = createEvent(this, "six-alert-after-hide", 7);
        this.handleCloseClick = () => {
            this.hide();
        };
        this.handleMouseEnter = () => {
            this.pauseAutoHide();
        };
        this.handleMouseLeave = () => {
            this.resetAutoHide();
        };
        this.handleTransitionEnd = (event) => {
            const target = event.target;
            // Ensure we only emit one event when the target element is no longer visible
            if (event.propertyName === 'opacity' && target.classList.contains('alert')) {
                this.isVisible = this.open;
                this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();
            }
        };
        this.isVisible = false;
        this.open = false;
        this.closable = false;
        this.type = 'primary';
        this.duration = Infinity;
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
    }
    handleDurationChange() {
        this.restartAutoHide();
    }
    componentWillLoad() {
        // Show on init if open
        if (this.open) {
            this.show();
        }
    }
    /** Shows the alert. */
    async show() {
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (this.isVisible) {
            return;
        }
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.isVisible = true;
        this.open = true;
        if (this.duration < Infinity) {
            this.autoHideTimeout = window.setTimeout(() => this.hide(), this.duration);
        }
    }
    /** Hides the alert */
    async hide() {
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (!this.isVisible) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        clearTimeout(this.autoHideTimeout);
        this.isVisible = false;
        this.open = false;
    }
    /**
     * Displays the alert as a toast notification. This will move the alert out of its position in the DOM and, when
     * dismissed, it will be removed from the DOM completely. By storing a reference to the alert, you can reuse it by
     * calling this method again. The returned promise will resolve after the alert is hidden.
     * @param adjustPosition  If true, the top and right position of the toast stack is shifted according to the
     *                        six-root header's height and the presence of a vertical scrollbar.
     */
    async toast(adjustPosition = true) {
        return new Promise((resolve) => {
            var _a;
            if (!toastStack.parentElement) {
                document.body.append(toastStack);
            }
            toastStack.append(this.host);
            if (adjustPosition) {
                const sixRoot = document.querySelector('six-root');
                const headerSlot = getSlot(sixRoot, 'header');
                const mainSlot = (_a = sixRoot === null || sixRoot === void 0 ? void 0 : sixRoot.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('host main');
                if (mainSlot != null && mainSlot instanceof HTMLElement) {
                    const scrollbarWidth = mainSlot.offsetWidth - mainSlot.clientWidth;
                    toastStack.style.right = `${scrollbarWidth}px`;
                }
                if (headerSlot != null) {
                    const rect = headerSlot === null || headerSlot === void 0 ? void 0 : headerSlot.getBoundingClientRect();
                    toastStack.style.top = `${rect.top + rect.height}px`;
                }
            }
            else {
                toastStack.style.top = '0';
                toastStack.style.right = '0';
            }
            requestAnimationFrame(() => this.show());
            this.host.addEventListener('six-alert-after-hide', () => {
                this.host.remove();
                resolve();
                // Remove the toast stack from the DOM when there are no more alerts
                if (toastStack.querySelector('six-alert') === null) {
                    toastStack.remove();
                }
            }, { once: true });
        });
    }
    pauseAutoHide() {
        clearTimeout(this.autoHideTimeout);
    }
    resetAutoHide() {
        if (this.open && this.duration < Infinity) {
            this.autoHideTimeout = window.setTimeout(() => this.hide(), this.duration);
        }
    }
    restartAutoHide() {
        this.pauseAutoHide();
        this.resetAutoHide();
    }
    render() {
        const asToast = this.host.closest('.six-toast-stack') != null;
        return (hAsync("div", { key: 'cd9d14bef5923cf2ec8add1f61e92733aa9dd59f', part: "base", class: {
                alert: true,
                'alert--open': this.open,
                'alert--visible': this.isVisible,
                'alert--closable': this.closable,
                'alert--primary': this.type === 'primary',
                'alert--success': this.type === 'success',
                'alert--info': this.type === 'info',
                'alert--warning': this.type === 'warning',
                'alert--danger': this.type === 'danger',
                'alert--shadow': asToast,
            }, role: "alert", "aria-live": "assertive", "aria-atomic": "true", "aria-hidden": this.open ? 'false' : 'true', onTransitionEnd: this.handleTransitionEnd, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave }, hAsync("span", { key: 'fb6e8cf52eb87ddb1a81a797482457b3afccaa98', part: "icon", class: "alert__icon" }, hAsync("slot", { key: '3d97a399ac05620214ef8a4d6a19c37a103f76a2', name: "icon" })), hAsync("span", { key: '3984ce04838d33a688b6cfafb7827646e0e9d582', part: "message", class: "alert__message" }, hAsync("slot", { key: 'f84ff31b7b74571b2ff9f074b617cb344313939e' })), this.closable && (hAsync("span", { key: '5291d4a747001042ad9882c32427094019e16dbb', class: "alert__close" }, hAsync("six-icon-button", { key: '48a38b0a283400ae84ed95df38a43ee6a41e1fb0', name: "clear", exportparts: "base:close-button", onClick: this.handleCloseClick })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"],
        "duration": ["handleDurationChange"]
    }; }
    static get style() { return SixAlertStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-alert",
        "$members$": {
            "open": [1540],
            "closable": [516],
            "type": [513],
            "duration": [2],
            "isVisible": [32],
            "show": [64],
            "hide": [64],
            "toast": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"], ["closable", "closable"], ["type", "type"]]
    }; }
}

const sixAvatarCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block;--size:2rem}.avatar{display:inline-flex;align-items:center;justify-content:center;position:relative;width:var(--size);height:var(--size);background-color:var(--six-avatar-background-color);font-family:var(--six-font-sans);font-size:calc(var(--size) * 0.5);font-weight:var(--six-font-weight-normal);color:var(--six-avatar-color);overflow:hidden;user-select:none;vertical-align:middle;cursor:pointer;outline:none}.avatar:hover{box-shadow:var(--six-shadow-medium)}.avatar--circle{border-radius:var(--six-border-radius-circle)}.avatar--rounded{border-radius:var(--six-border-radius-medium)}.avatar--square{border-radius:0}.avatar__icon{display:flex;align-items:center;justify-content:center;position:absolute;top:0;left:0;width:100%;height:100%}.avatar__initials{line-height:1;text-transform:uppercase}.avatar__image{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover}";
var SixAvatarStyle0 = sixAvatarCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot icon - The default icon to use when no image or initials are present.
 *
 * @part base - The component's base wrapper.
 * @part icon - The container that wraps the avatar icon.
 * @part initials - The container that wraps the avatar initials.
 * @part image - The avatar image.
 */
class SixAvatar {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.handleImageError = () => {
            this.hasError = true;
        };
        this.hasError = false;
        this.image = '';
        this.alt = '';
        this.initials = '';
        this.shape = 'circle';
    }
    render() {
        return (hAsync("div", { key: '2a76d2e154958ee61ff52642b9ecbfda16701b25', part: "base", class: {
                avatar: true,
                'avatar--circle': this.shape === 'circle',
                'avatar--rounded': this.shape === 'rounded',
                'avatar--square': this.shape === 'square',
            }, role: "image", "aria-label": this.alt, tabIndex: 0 }, this.initials === '' && (hAsync("div", { key: '7a5a16e6c2a09c62e321cd3487630dca8c01e38d', part: "icon", class: "avatar__icon" }, hAsync("slot", { key: 'ea9da268e893e431afdefa1ff56047859d4b669f', name: "icon" }, hAsync("six-icon", { key: 'ef9e7e4471bb5c7e9a87071d32e3ce809c393ce3' }, "person")))), this.initials && (hAsync("div", { key: '03d05790514501eb466305351ec99701e3a7ce84', part: "initials", class: "avatar__initials" }, this.initials)), this.image && !this.hasError && (hAsync("img", { key: '4c5ad967457ed0a0ea6e6c7ccbec67372c717d46', part: "image", class: "avatar__image", src: this.image, onError: this.handleImageError }))));
    }
    static get style() { return SixAvatarStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-avatar",
        "$members$": {
            "image": [1],
            "alt": [1],
            "initials": [1],
            "shape": [1],
            "hasError": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixBadgeCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-flex}.badge{display:inline-flex;align-items:center;justify-content:center;font-family:var(--six-font-family);font-size:var(--six-font-size-x-small);font-weight:var(--six-font-weight-semibold);letter-spacing:var(--six-letter-spacing-normal);line-height:1;border-radius:var(--six-border-radius-small);white-space:nowrap;padding:3px 6px;user-select:none;cursor:inherit}.badge--info{background-color:var(--six-color-web-rock-900);color:var(--six-color-white)}.badge--success{background-color:var(--six-color-success-500);color:var(--six-color-web-rock-900)}.badge--warning{background-color:var(--six-color-warning-700);color:var(--six-color-web-rock-900)}.badge--danger{background-color:var(--six-color-danger-800);color:var(--six-color-white)}.badge--action{background-color:var(--six-color-action-500);color:var(--six-color-white)}.badge--primary{background-color:var(--six-color-clay-50);color:var(--six-color-black)}.badge--pill{border-radius:var(--six-border-radius-pill)}.badge--pulse{animation:pulse 1.5s infinite}.badge--pulse.badge--info{--pulse-color:var(--six-color-web-rock-900)}.badge--pulse.badge--success{--pulse-color:var(--six-color-success-500)}.badge--pulse.badge--warning{--pulse-color:var(--six-color-warning-700)}.badge--pulse.badge--danger{--pulse-color:var(--six-color-danger-800)}.badge--pulse.badge--action{--pulse-color:var(--six-color-action-500)}.badge--pulse.badge--primary{--pulse-color:var(--six-color-clay-50)}@keyframes pulse{0%{box-shadow:0 0 0 0 var(--pulse-color)}70%{box-shadow:0 0 0 0.5rem transparent}100%{box-shadow:0 0 0 0 transparent}}";
var SixBadgeStyle0 = sixBadgeCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The badge's content.
 *
 * @part base - The base wrapper
 */
class SixBadge {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.type = 'primary';
        this.pill = false;
        this.pulse = false;
    }
    render() {
        return (hAsync("span", { key: '23abdb168494d38a44857402773c283617865376', part: "base", class: {
                badge: true,
                // Types
                'badge--primary': this.type === 'primary',
                'badge--secondary': this.type === 'secondary',
                'badge--success': this.type === 'success',
                'badge--warning': this.type === 'warning',
                'badge--danger': this.type === 'danger',
                'badge--action': this.type === 'action',
                'badge--info': this.type === 'info',
                'badge--pill': this.pill,
                'badge--pulse': this.pulse,
            }, role: "status" }, hAsync("slot", { key: '7de84841ba8881ae53e103d5ba07a496f801e254' })));
    }
    static get style() { return SixBadgeStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-badge",
        "$members$": {
            "type": [1],
            "pill": [4],
            "pulse": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

function submitForm(element) {
    const form = element.closest('form');
    if (form != null) {
        // Calling form.submit() would bypass the submit event and constraint validation.
        // To prevent this, we inject a native submit button into the form, "click" it,
        // then remove it to simulate a standard form submission.
        const fakeButton = document.createElement('button');
        fakeButton.type = 'submit';
        fakeButton.style.display = 'none';
        form.appendChild(fakeButton);
        fakeButton.click();
        fakeButton.remove();
    }
}

const sixButtonCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block;width:auto;cursor:pointer}.button{display:inline-flex;align-items:stretch;justify-content:center;width:100%;border-style:solid;border-width:var(--six-border-width);border-radius:0;font-family:var(--six-font-family);font-weight:var(--six-font-weight-semibold);text-decoration:none;user-select:none;white-space:nowrap;vertical-align:middle;padding:0;transition:var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) border, var(--six-transition-fast) box-shadow;cursor:inherit}.button::-moz-focus-inner{border:0}.button:focus{outline:none}.button.button--disabled{pointer-events:none}.button ::slotted(six-icon){pointer-events:none;transform:translateY(-1.5px)}.button-wrapper--disabled{cursor:not-allowed}.button__prefix,.button__suffix{flex:0 0 auto;display:flex;align-items:center}.button:focus-visible{outline:var(--six-focus-ring);outline-offset:var(--six-focus-ring-offset)}.button.button--secondary{background-color:var(--six-color-white);border-color:var(--six-color-web-rock-900);color:var(--six-color-web-rock-900)}.button.button--secondary.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--secondary:hover:not(.button--disabled){background-color:var(--six-color-web-rock-100)}.button.button--secondary:focus:not(.button--disabled){background-color:var(--six-color-web-rock-100);border-color:var(--six-color-web-rock-400)}.button.button--secondary:active:not(.button--disabled){background-color:var(--six-color-web-rock-300);border-color:var(--six-color-web-rock-900);border-width:1px}.button.button--primary{background-color:var(--six-color-web-rock-900);border-color:var(--six-color-web-rock-900);color:var(--six-color-white)}.button.button--primary.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--primary:hover:not(.button--disabled){background-color:var(--six-color-web-rock-800);border-color:var(--six-color-web-rock-800)}.button.button--primary:active:not(.button--disabled){background-color:var(--six-color-web-rock-900);border-color:var(--six-color-web-rock-900);opacity:70%}.button.button--link{background-color:transparent;border-color:transparent;color:var(--six-color-action-500)}.button.button--link.button--disabled{color:var(--six-color-web-rock-400)}.button.button--link:hover:not(.button--disabled){color:var(--six-color-action-600)}.button.button--link:active:not(.button--disabled){color:var(--six-color-action-light-to-be-defined)}.button.button--danger{background-color:var(--six-color-danger-800);border-color:var(--six-color-danger-800);color:var(--six-color-white)}.button.button--danger.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--danger:hover:not(.button--disabled){background-color:var(--six-color-danger-900);border-color:var(--six-color-danger-900)}.button.button--danger:active:not(.button--disabled){background-color:var(--six-color-danger-800);border-color:var(--six-color-danger-800);opacity:70%}.button.button--warning{background-color:var(--six-color-warning-700);border-color:var(--six-color-warning-700);color:var(--six-color-web-rock-900)}.button.button--warning.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--warning:hover:not(.button--disabled){background-color:var(--six-color-warning-800);border-color:var(--six-color-warning-800)}.button.button--warning:active:not(.button--disabled){background-color:var(--six-color-warning-700);border-color:var(--six-color-warning-700);opacity:70%}.button.button--success{background-color:var(--six-color-success-500);border-color:var(--six-color-success-500);color:var(--six-color-web-rock-900)}.button.button--success.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--success:hover:not(.button--disabled){background-color:var(--six-color-success-600);border-color:var(--six-color-success-600)}.button.button--success:active:not(.button--disabled){background-color:var(--six-color-success-500);border-color:var(--six-color-success-500);opacity:70%}.button.button--action{background-color:var(--six-color-action-500);border-color:var(--six-color-action-500);color:var(--six-color-white)}.button.button--action.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--action:hover:not(.button--disabled){background-color:var(--six-color-action-600);border-color:var(--six-color-action-600)}.button.button--action:active:not(.button--disabled){background-color:var(--six-color-action-500);border-color:var(--six-color-action-500);opacity:70%}.button.button--action-outline{border-color:var(--six-color-action-500);background-color:var(--six-color-white);color:var(--six-color-action-500)}.button.button--action-outline.button--disabled{background-color:var(--six-color-web-rock-400);border-color:var(--six-color-web-rock-400);color:var(--six-color-web-rock-700)}.button.button--action-outline:hover:not(.button--disabled){background-color:var(--six-color-web-rock-100)}.button.button--action-outline:active:not(.button--disabled){border-color:var(--six-color-action-500);opacity:70%}.button--small{font-size:var(--six-button-font-size-small);height:var(--six-height-small);line-height:calc(var(--six-height-small) - var(--six-border-width) * 2)}.button--medium{font-size:var(--six-button-font-size-medium);height:var(--six-height-medium);line-height:calc(var(--six-height-medium) - var(--six-border-width) * 2)}.button--large{font-size:var(--six-button-font-size-large);height:var(--six-height-large);line-height:calc(var(--six-height-large) - var(--six-border-width) * 2)}.button--pill.button--small{border-radius:var(--six-height-small)}.button--pill.button--medium{border-radius:var(--six-height-medium)}.button--pill.button--large{border-radius:var(--six-height-large)}.button--circle{padding-left:0;padding-right:0;font-size:revert}.button--circle.button--small{width:var(--six-height-small);border-radius:50%}.button--circle.button--medium{width:var(--six-height-medium);border-radius:50%}.button--circle.button--large{width:var(--six-height-large);border-radius:50%}.button--circle .button__prefix,.button--circle .button__suffix,.button--circle .button__caret{display:none}.button--circle .button__prefix svg,.button--circle .button__suffix svg,.button--circle .button__caret svg{color:var(--six-color-web-rock-900)}.button--caret .button__suffix{display:none}.button--caret .button__caret{display:flex;align-items:center}.button--caret .button__caret svg{color:var(--six-color-web-rock-900);width:1em;height:1em}.button--primary .button__caret svg,.button--action .button__caret svg,.button--danger .button__caret svg{color:var(--six-color-white)}.button--loading{position:relative;cursor:wait}.button--loading .button__prefix,.button--loading .button__label,.button--loading .button__suffix,.button--loading .button__caret{visibility:hidden}.button--loading six-spinner{--indicator-color:currentColor;position:absolute;height:1em;width:1em;top:calc(50% - 0.5em);left:calc(50% - 0.5em)}.button ::slotted(six-badge){position:absolute;top:0;right:0;transform:translateY(-50%) translateX(50%);pointer-events:none}.button--has-label.button--small .button__label{padding:0 var(--six-spacing-small)}.button--has-label.button--medium .button__label{padding:0 var(--six-spacing-medium)}.button--has-label.button--large .button__label{padding:0 var(--six-spacing-large)}.button--has-prefix.button--small{padding-left:var(--six-spacing-x-small)}.button--has-prefix.button--small .button__label{padding-left:var(--six-spacing-x-small)}.button--has-prefix.button--medium{padding-left:var(--six-spacing-small)}.button--has-prefix.button--medium .button__label{padding-left:var(--six-spacing-small)}.button--has-prefix.button--large{padding-left:var(--six-spacing-small)}.button--has-prefix.button--large .button__label{padding-left:var(--six-spacing-small)}.button--has-suffix.button--small,.button--caret.button--small{padding-right:var(--six-spacing-x-small)}.button--has-suffix.button--small .button__label,.button--caret.button--small .button__label{padding-right:var(--six-spacing-x-small)}.button--has-suffix.button--medium,.button--caret.button--medium{padding-right:var(--six-spacing-small)}.button--has-suffix.button--medium .button__label,.button--caret.button--medium .button__label{padding-right:var(--six-spacing-small)}.button--has-suffix.button--large,.button--caret.button--large{padding-right:var(--six-spacing-small)}.button--has-suffix.button--large .button__label,.button--caret.button--large .button__label{padding-right:var(--six-spacing-small)}";
var SixButtonStyle0 = sixButtonCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The button's label.
 * @slot prefix - Used to prepend an icon or similar element to the button.
 * @slot suffix - Used to append an icon or similar element to the button.
 *
 * @part base - The component's base wrapper.
 * @part prefix - The prefix container.
 * @part label - The button's label.
 * @part suffix - The suffix container.
 * @part caret - The button's caret.
 */
class SixButton {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixBlur = createEvent(this, "six-button-blur", 7);
        this.sixFocus = createEvent(this, "six-button-focus", 7);
        this.handleSlotChange = () => {
            this.hasLabel = hasSlot(this.host);
            this.hasPrefix = hasSlot(this.host, 'prefix');
            this.hasSuffix = hasSlot(this.host, 'suffix');
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleClick = (event) => {
            if (this.disabled || this.loading) {
                event.preventDefault();
                event.stopPropagation();
                return;
            }
            if (this.submit) {
                event.preventDefault();
                submitForm(this.host);
            }
        };
        this.hasFocus = false;
        this.hasLabel = false;
        this.hasPrefix = false;
        this.hasSuffix = false;
        this.type = 'primary';
        this.size = 'medium';
        this.caret = false;
        this.disabled = false;
        this.loading = false;
        this.pill = false;
        this.circle = false;
        this.submit = false;
        this.reset = false;
        this.name = '';
        this.value = '';
        this.href = undefined;
        this.target = undefined;
        this.download = undefined;
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    /** Sets focus on the button. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeButton) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the button. */
    async removeFocus() {
        var _a;
        (_a = this.nativeButton) === null || _a === void 0 ? void 0 : _a.blur();
    }
    render() {
        const isLink = this.href != null;
        const isButton = !isLink;
        const Button = isLink ? 'a' : 'button';
        return (hAsync("div", { key: '2cd90894b14168322a23d219c0b21da8f379d5e2', onClick: this.handleClick, class: { 'button-wrapper--disabled': this.disabled } }, hAsync(Button, { key: 'b09de02adbfb8628689cc8084e381bebd1e839f8', ref: (el) => (this.nativeButton = el), part: "base", class: {
                button: true,
                // Types
                'button--secondary': this.type === 'secondary',
                'button--primary': this.type === 'primary',
                'button--link': this.type === 'link',
                'button--success': this.type === 'success',
                'button--warning': this.type === 'warning',
                'button--danger': this.type === 'danger',
                'button--action': this.type === 'action',
                'button--action-outline': this.type === 'action-outline',
                // Sizes
                'button--small': this.size === 'small',
                'button--medium': this.size === 'medium',
                'button--large': this.size === 'large',
                // Modifiers
                'button--caret': this.caret,
                'button--circle': this.circle,
                'button--disabled': this.disabled,
                'button--focused': this.hasFocus,
                'button--loading': this.loading,
                'button--pill': this.pill,
                'button--has-label': this.hasLabel,
                'button--has-prefix': this.hasPrefix,
                'button--has-suffix': this.hasSuffix,
            }, disabled: isButton ? this.disabled : undefined, tabindex: this.disabled ? '-1' : undefined, type: isButton ? (this.submit ? 'submit' : this.reset ? 'reset' : 'button') : undefined, name: isButton ? this.name : undefined, value: isButton ? this.value : undefined, href: isLink ? this.href : undefined, target: isLink && this.target != null ? this.target : undefined, download: isLink && this.download != null ? this.download : undefined, rel: isLink && this.target != null ? 'noreferrer noopener' : undefined, onBlur: this.handleBlur, onFocus: this.handleFocus, "data-testid": "button" }, hAsync("span", { key: 'df5d79a6bf46b4c3ea3adf6e68e3978aa2acb18e', part: "prefix", class: "button__prefix" }, hAsync("slot", { key: 'e78449a92a82939e3d1ba5c8fdcd2fcbe63a1ce1', onSlotchange: this.handleSlotChange, name: "prefix" })), hAsync("span", { key: '392781b1720026d57987b911772944970245fefd', part: "label", class: "button__label" }, hAsync("slot", { key: '0bb149fcf825c5ddbe0b40f49df019864e671824', onSlotchange: this.handleSlotChange })), hAsync("span", { key: 'c78c7c657c9117151f32482d0a98b37308288304', part: "suffix", class: "button__suffix" }, hAsync("slot", { key: '579fa531656c5e9f9e4341a7f6ea49d01062e63b', onSlotchange: this.handleSlotChange, name: "suffix" })), this.caret && (hAsync("span", { key: 'de61f96d9a9fef93b2f471093d6f75015e0f765a', part: "caret", class: "button__caret" }, hAsync("svg", { key: 'f4a2af2484f93de8da2d8eb4396acae6b7a4668c', viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" }, hAsync("polyline", { key: '91dd04bce9eba1265390cc633004b5524cc5b42f', points: "6 9 12 15 18 9" })))), this.loading && hAsync("six-spinner", { key: '6c182105a54a74d8b68c9fb47a866a69ebcb4573' }))));
    }
    get host() { return getElement(this); }
    static get style() { return SixButtonStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-button",
        "$members$": {
            "type": [513],
            "size": [513],
            "caret": [4],
            "disabled": [516],
            "loading": [516],
            "pill": [516],
            "circle": [516],
            "submit": [516],
            "reset": [516],
            "name": [1],
            "value": [1],
            "href": [1],
            "target": [1],
            "download": [1],
            "hasFocus": [32],
            "hasLabel": [32],
            "hasPrefix": [32],
            "hasSuffix": [32],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["type", "type"], ["size", "size"], ["disabled", "disabled"], ["loading", "loading"], ["pill", "pill"], ["circle", "circle"], ["submit", "submit"], ["reset", "reset"]]
    }; }
}

const sixCardCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block;box-shadow:var(--six-shadow-medium);border:1px solid var(--six-color-web-rock-100);padding:var(--six-spacing-medium)}";
var SixCardStyle0 = sixCardCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the content of the card.
 */
class SixCard {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (hAsync(Host, { key: '57b9d5502d3afd1e3f4bf2f58301dc1bd42105e0' }, hAsync("slot", { key: 'a0dac50eb9ecb0c01f48b705de76e3a6cca34c2e' })));
    }
    static get style() { return SixCardStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-card",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const FormControl = (props, children) => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const errorMessages = (Array.isArray(props.errorText) ? props.errorText : [props.errorText]).filter((text) => text != null && text.trim() !== '');
    const hasLabel = props.label != null && props.label.trim() !== '' ? true : (_a = props.hasLabelSlot) !== null && _a !== void 0 ? _a : false;
    const hasHelpText = props.helpText != null && props.helpText.trim() !== '' ? true : (_b = props.hasHelpTextSlot) !== null && _b !== void 0 ? _b : false;
    const hasErrorText = (errorMessages.length > 0 || ((_c = props.hasErrorTextSlot) !== null && _c !== void 0 ? _c : false)) && ((_d = props.displayError) !== null && _d !== void 0 ? _d : false);
    return (hAsync("div", { part: "form-control", class: {
            'form-control': true,
            'form-control--small': props.size === 'small',
            'form-control--medium': props.size === 'medium',
            'form-control--large': props.size === 'large',
            'form-control--has-label': hasLabel,
            'form-control--has-help-text': hasHelpText,
            'form-control--has-error-text': hasErrorText,
            'form-control--disabled': (_e = props.disabled) !== null && _e !== void 0 ? _e : false,
            'form-control--invalid': ((_f = props.displayError) !== null && _f !== void 0 ? _f : false) && !props.disabled,
        } },
        hAsync("label", { part: "label", id: props.labelId, class: {
                'form-control__label': true,
                'form-control__label__required': (_g = props.required) !== null && _g !== void 0 ? _g : false,
            }, htmlFor: props.inputId, "aria-hidden": hasLabel ? 'false' : 'true', onClick: props.onLabelClick },
            hAsync("slot", { name: "label" }, props.label)),
        hAsync("div", { class: "form-control__input" }, children),
        hAsync("div", { part: "error-text", id: props.errorTextId, class: "form-control__error-text", "aria-hidden": hasErrorText ? 'false' : 'true' },
            hAsync("slot", { name: "error-text" }, errorMessages.slice(0, (_h = props.errorTextCount) !== null && _h !== void 0 ? _h : 1).map((text) => (hAsync("six-error", null, text))))),
        hAsync("div", { part: "help-text", id: props.helpTextId, class: "form-control__help-text", "aria-hidden": hasHelpText ? 'false' : 'true' },
            hAsync("slot", { name: "help-text" }, props.helpText))));
};

class EventListeners {
    constructor() {
        this.eventListeners = [];
        this.add = (el, name, listener, identifier = null) => {
            this.eventListeners.push({ el, name, listener, identifier });
            el.addEventListener(name, listener);
        };
        this.remove = (el, name, listener) => {
            this.eventListeners = this.getFilteredEventListeners((eventListener) => eventListener.listener == listener && eventListener.el === el && eventListener.name === name);
        };
        this.removeByIdentifier = (identifier) => {
            const sameItem = (el) => el.identifier === identifier;
            const foundListener = this.eventListeners.find(sameItem) !== undefined;
            if (!foundListener) {
                return;
            }
            this.eventListeners = this.getFilteredEventListeners(sameItem);
        };
        this.removeAll = () => {
            while (this.eventListeners.length > 0) {
                const eventListener = this.eventListeners.pop();
                if (eventListener != null) {
                    eventListener.el.removeEventListener(eventListener.name, eventListener.listener);
                }
            }
        };
    }
    getFilteredEventListeners(sameItem) {
        return this.eventListeners.filter((item) => {
            if (sameItem(item)) {
                item.el.removeEventListener(item.name, item.listener);
                return false;
            }
            else {
                return true;
            }
        });
    }
    forward(from, to, host) {
        switch (to) {
            case 'input':
                this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));
                break;
            case 'change':
                this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));
                break;
            case 'blur':
                this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));
                break;
            case 'focus':
                this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));
                break;
        }
    }
}

const sixCheckboxCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:inline-block}.checkbox{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.checkbox--focused .checkbox__control{outline:var(--six-focus-ring);outline-offset:0}.checkbox__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--six-selection-control-toggle-size);min-width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size);border:solid var(--six-border-width) var(--six-input-border-color);border-radius:0;background-color:var(--six-input-background-color);color:var(--six-checkbox-color);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow}.checkbox__control input[type=checkbox]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none;min-width:var(--six-selection-control-toggle-size)}.checkbox__control .checkbox__icon{display:inline-flex;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size)}.checkbox__control .checkbox__icon svg{width:100%;height:100%}.checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-hover)}.checkbox--checked .checkbox__control,.checkbox--indeterminate .checkbox__control{border-color:var(--six-selection-control-color);background-color:var(--six-selection-control-color)}.checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__control:hover,.checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-focus);background-color:var(--six-input-border-color-focus)}.checkbox--disabled{cursor:not-allowed;color:var(--six-input-color-disabled)}.checkbox--disabled .checkbox__control{border-color:var(--six-input-border-color-disabled)}.checkbox--disabled.checkbox--checked .checkbox__control,.checkbox--disabled.checkbox--indeterminate .checkbox__control{background-color:var(--six-selection-control-color-disabled)}.checkbox--invalid:not(.checkbox--disabled) .checkbox__control{border-color:var(--six-input-border-color-danger)}.checkbox__text{line-height:var(--six-selection-control-toggle-size);margin-left:0.5em;user-select:none}";
var SixCheckboxStyle0 = sixCheckboxCss;

let id$e = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot label - The checkbox label.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part control - The checkbox control.
 * @part checked-icon - The container the wraps the checked icon.
 * @part indeterminate-icon - The container that wraps the indeterminate icon.
 * @part text - The checkbox text rendered to the right.
 */
class SixCheckbox {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixBlur = createEvent(this, "six-checkbox-blur", 7);
        this.sixChange = createEvent(this, "six-checkbox-change", 7);
        this.sixFocus = createEvent(this, "six-checkbox-focus", 7);
        this.inputId = `checkbox-${++id$e}`;
        this.labelId = `checkbox-label-${id$e}`;
        this.textId = `checkbox-text-${id$e}`;
        this.errorTextId = `input-error-text-${id$e}`;
        this.eventListeners = new EventListeners();
        this.handleChange = () => {
            if (this.nativeInput != null) {
                this.checked = this.nativeInput.checked;
                this.indeterminate = false;
                this.sixChange.emit();
            }
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleMouseDown = (event) => {
            var _a;
            // Prevent clicks on the label from briefly blurring the input
            event.preventDefault();
            (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus();
        };
        this.hasFocus = false;
        this.hasLabelSlot = false;
        this.hasErrorSlot = false;
        this.name = '';
        this.value = 'on';
        this.disabled = false;
        this.required = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.checked = false;
        this.indeterminate = false;
    }
    handleCheckedChange() {
        if (this.nativeInput == null)
            return;
        this.nativeInput.checked = this.checked;
        this.checked = this.nativeInput.checked;
        this.nativeInput.indeterminate = this.indeterminate;
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.forward('six-checkbox-change', 'change', this.host);
        this.eventListeners.forward('six-checkbox-blur', 'blur', this.host);
        this.eventListeners.forward('six-checkbox-focus', 'focus', this.host);
    }
    disconnectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    componentDidLoad() {
        const nativeInput = this.nativeInput;
        if (nativeInput == null) {
            return;
        }
        nativeInput.indeterminate = this.indeterminate;
    }
    /** Sets focus on the checkbox. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the checkbox. */
    async removeFocus() {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.blur();
    }
    handleSlotChange() {
        this.hasLabelSlot = hasSlot(this.host, 'label');
        this.hasErrorSlot = hasSlot(this.host, 'error-text');
    }
    render() {
        return (hAsync(FormControl, { key: '559223a5b607e90c425563bb7562cc841bb37b4a', inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, errorTextId: this.errorTextId, hasErrorTextSlot: this.hasErrorSlot, errorText: this.errorText, errorTextCount: this.errorTextCount, size: "medium", disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("label", { key: '41020a952865aade603a27da643500dde1577d9a', part: "base", class: {
                checkbox: true,
                'checkbox--checked': this.checked,
                'checkbox--disabled': this.disabled,
                'checkbox--focused': this.hasFocus,
                'checkbox--invalid': this.invalid,
                'checkbox--indeterminate': this.indeterminate,
            }, htmlFor: this.inputId, onMouseDown: this.handleMouseDown }, hAsync("span", { key: 'e8ca565702d0f28a8268419b1922377de019aeb9', part: "control", class: "checkbox__control" }, this.checked && (hAsync("span", { key: '9f2766870cca805718bcb354f1b9f8fa816058a3', part: "checked-icon", class: "checkbox__icon" }, hAsync("svg", { key: 'b723d2fe38eac6458817a52b4cd817d406b6b168', viewBox: "0 0 16 16" }, hAsync("g", { key: '7c666760a32d708289f4b2be73d7ddf741c9224f', stroke: "none", "stroke-width": "1", fill: "none", "fill-rule": "evenodd", "stroke-linecap": "round" }, hAsync("g", { key: '9504107d0784555ab6d1706ee6650f465e9f4f14', stroke: "currentColor", "stroke-width": "2" }, hAsync("g", { key: 'aba8c4fbc2241f72ca7e69e1df55b1aeb131eba4', transform: "translate(3.428571, 3.428571)" }, hAsync("path", { key: '8c94324eacc3775f4670431b1893ffed23eb9022', d: "M0,5.71428571 L3.42857143,9.14285714" }), hAsync("path", { key: '2956ea4fcd3f60c11122f9b9ded05e2fea91dc5f', d: "M9.14285714,0 L3.42857143,9.14285714" }))))))), !this.checked && this.indeterminate && (hAsync("span", { key: '8a5299ac61e23fececb5a4a31e92170c35e3ea16', part: "indeterminate-icon", class: "checkbox__icon" }, hAsync("svg", { key: '67d397a1dad6d040a8173f33e79f96d9b79074a4', viewBox: "0 0 16 16" }, hAsync("g", { key: 'a3bdc58b383787142ca0c4bbbaf4d42c01ddbcef', stroke: "none", "stroke-width": "1", fill: "none", "fill-rule": "evenodd", "stroke-linecap": "round" }, hAsync("g", { key: '1e750eec7684c2776776bbeeb52bc1ed121410c2', stroke: "currentColor", "stroke-width": "2" }, hAsync("g", { key: '73c759793a9fdb8eb97e7b2b23577e71b952f6fd', transform: "translate(2.285714, 6.857143)" }, hAsync("path", { key: '318d6b4e2784e0e4fa24daff80b0a5f459ccbff5', d: "M10.2857143,1.14285714 L1.14285714,1.14285714" }))))))), hAsync("input", { key: '6a12322684da921310573ac048dd6690e70b452f', ref: (el) => (this.nativeInput = el), id: this.inputId, type: "checkbox", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, required: this.required, role: "checkbox", "aria-checked": this.checked ? 'true' : 'false', "aria-labelledby": this.labelId, onChange: this.handleChange, onBlur: this.handleBlur, onFocus: this.handleFocus })), hAsync("span", { key: 'd3f29202344b2daddbef69927c447f61a1936760', part: "text", id: this.textId, class: "checkbox__text" }, hAsync("slot", { key: '53fc91b65194dd3966e27d767e0c713fc16b9bd2' })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "checked": ["handleCheckedChange"],
        "indeterminate": ["handleCheckedChange"],
        "errorText": ["handleLabelChange"],
        "label": ["handleLabelChange"]
    }; }
    static get style() { return SixCheckboxStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-checkbox",
        "$members$": {
            "name": [1],
            "value": [1],
            "disabled": [4],
            "required": [4],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "checked": [1540],
            "indeterminate": [1540],
            "hasFocus": [32],
            "hasLabelSlot": [32],
            "hasErrorSlot": [32],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["invalid", "invalid"], ["checked", "checked"], ["indeterminate", "indeterminate"]]
    }; }
}

const isString = (value) => typeof value === 'string';
// only use '==' instead of '===' to also catch undefined and void
const isNil = (value) => value == null;

/* eslint-disable */
const i18nDate = {
    en: {
        months: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
        ],
        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        monthsShortGrouped: [
            ['Jan', 'Feb', 'Mar', 'Apr'],
            ['May', 'Jun', 'Jul', 'Aug'],
            ['Sep', 'Oct', 'Nov', 'Dec'],
        ],
        weekdays: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
        weekdaysShort: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        weekdaysMin: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],
    },
    de: {
        months: [
            'Januar',
            'Februar',
            'März',
            'April',
            'Mai',
            'Juni',
            'Juli',
            'August',
            'September',
            'Oktober',
            'November',
            'Dezember',
        ],
        monthsShort: ['Jan.', 'Feb.', 'März', 'Apr.', 'Mai', 'Juni', 'Juli', 'Aug.', 'Sep.', 'Okt.', 'Nov.', 'Dez.'],
        monthsShortGrouped: [
            ['Jan.', 'Feb.', 'März', 'Apr.'],
            ['Mai', 'Juni', 'Juli', 'Aug.'],
            ['Sep.', 'Okt.', 'Nov.', 'Dez.'],
        ],
        weekdays: ['Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag', 'Sonntag'],
        weekdaysShort: ['Mo.', 'Di.', 'Mi.', 'Do.', 'Fr.', 'Sa.', 'So.'],
        weekdaysMin: ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'],
    },
    fr: {
        months: [
            'janvier',
            'février',
            'mars',
            'avril',
            'mai',
            'juin',
            'juillet',
            'août',
            'septembre',
            'octobre',
            'novembre',
            'décembre',
        ],
        monthsShort: ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],
        monthsShortGrouped: [
            ['janv.', 'févr.', 'mars', 'avr.'],
            ['mai', 'juin', 'juil.', 'août'],
            ['sept.', 'oct.', 'nov.', 'déc.'],
        ],
        weekdays: ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'],
        weekdaysShort: ['lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.', 'dim.'],
        weekdaysMin: ['lu', 'ma', 'me', 'je', 've', 'sa', 'di'],
    },
    it: {
        months: [
            'gennaio',
            'febbraio',
            'marzo',
            'aprile',
            'maggio',
            'giugno',
            'luglio',
            'agosto',
            'settembre',
            'ottobre',
            'novembre',
            'dicembre',
        ],
        monthsShort: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],
        monthsShortGrouped: [
            ['gen', 'feb', 'mar', 'apr'],
            ['mag', 'giu', 'lug', 'ago'],
            ['set', 'ott', 'nov', 'dic'],
        ],
        weekdays: ['lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato', 'domenica'],
        weekdaysShort: ['lun', 'mar', 'mer', 'gio', 'ven', 'sab', 'dom'],
        weekdaysMin: ['lu', 'ma', 'me', 'gi', 've', 'sa', 'do'],
    },
    es: {
        months: [
            'enero',
            'febrero',
            'marzo',
            'abril',
            'mayo',
            'junio',
            'julio',
            'agosto',
            'septiembre',
            'octubre',
            'noviembre',
            'diciembre',
        ],
        monthsShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],
        monthsShortGrouped: [
            ['ene', 'feb', 'mar', 'abr'],
            ['may', 'jun', 'jul', 'ago'],
            ['sep', 'oct', 'nov', 'dic'],
        ],
        weekdays: ['lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado', 'domingo'],
        weekdaysShort: ['lun', 'mar', 'mié', 'jue', 'vie', 'sáb', 'dom'],
        weekdaysMin: ['lu', 'ma', 'mi', 'ju', 'vi', 'sa', 'do'],
    },
};
/**
 * Returns a JS Date instance of the exact moment
 *
 * ```typescript
 * const date = now()
 * // Wed Mar 10 2021 20:30:32 GMT+0100 (Central European Standard Time)
 * ```
 */
const now = () => new Date();
const removeTime = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());
/**
 * Returns `true` if the given date is valid
 */
const isValidDate = (value) => {
    return value instanceof Date && !isNaN(value.getTime()) && new Date(value).toString() !== 'Invalid Date';
};
/**
 * Returns the year number of the given date
 *
 * ```typescript
 * year(new Date(2020, 0, 1)) // 2020
 * ```
 */
const year = (date) => {
    if (date && isValidDate(date)) {
        return date.getFullYear();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the month number of the given date
 *
 * ```typescript
 * month(new Date(2020, 0, 1)) // 0
 * ```
 */
const month = (date) => {
    if (date && isValidDate(date)) {
        return date.getMonth();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the day number of the given date
 *
 * ```typescript
 * day(new Date(2020, 0, 1)) // 1
 * ```
 */
const day = (date) => {
    if (date && isValidDate(date)) {
        return date.getDate();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the hours of the given date
 */
const hours = (date) => {
    if (date && isValidDate(date)) {
        return date.getHours();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the minutes of the given date
 */
const minutes = (date) => {
    if (date && isValidDate(date)) {
        return date.getMinutes();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the seconds of the given date
 */
const seconds = (date) => {
    if (date && isValidDate(date)) {
        return date.getSeconds();
    }
    throw new Error('Not a valid date');
};
/**
 * Returns the first day of the week of the given date.
 */
const getFirstDayOfTheWeek = (date) => {
    const weekdayDiff = [6, 0, 1, 2, 3, 4, 5];
    const day = new Date(date);
    day.setDate(day.getDate() - weekdayDiff[day.getDay()]);
    return day;
};
/**
 * Returns `true` when the year of the dates are the same
 */
const isSameYear = (a, b) => (a === null || a === void 0 ? void 0 : a.getFullYear()) === (b === null || b === void 0 ? void 0 : b.getFullYear());
/**
 * Returns `true` when the month of the dates are the same
 */
const isSameMonth = (a, b) => isSameYear(a, b) && (a === null || a === void 0 ? void 0 : a.getMonth()) === (b === null || b === void 0 ? void 0 : b.getMonth());
/**
 * Returns `true` when the day of the dates are the same
 */
const isSameDay = (a, b) => isSameMonth(a, b) && (a === null || a === void 0 ? void 0 : a.getDate()) === (b === null || b === void 0 ? void 0 : b.getDate());
/**
 * Returns `true` when the week of the dates are the same
 */
const isSameWeek = (a, b) => isSameDay(getFirstDayOfTheWeek(a), getFirstDayOfTheWeek(b));
/**
 * Returns `true` if the given datestring is valid
 */
const isValidDateString = (datestring, format) => {
    if (!isString(datestring) || !isString(format)) {
        return false;
    }
    if (datestring.length < 6 || format.length < 6) {
        return false;
    }
    const { day, month } = getDateParts(datestring, format);
    if (day > 31 || month > 11 || day <= 0 || month < 0) {
        return false;
    }
    const date = toDate(datestring, format);
    if (isNil(date)) {
        return false;
    }
    return date.toString() !== 'Invalid Date';
};
/**
 * Returns `true` when the given date is not smaller than the minDate and not bigger than the maxDate.
 *
 * ```typescript
 * isInRange(new Date(2020, 1, 1), new Date(2020, 0, 1), new Date(2020, 2, 1)) // true
 * ```
 */
const isInRange = (date, minDate, maxDate) => {
    if (!date) {
        return true;
    }
    if (minDate && date < minDate) {
        return false;
    }
    if (maxDate && maxDate < date) {
        return false;
    }
    return true;
};
const lookAhead = (iFormat, format, match, length = 2) => {
    const increment = length - 1;
    const followingCharacterMatches = format.charAt(iFormat + increment) === match;
    const hasProperLength = iFormat + increment < format.length;
    return hasProperLength && followingCharacterMatches;
};
const formatNumber = (value, len) => {
    let num = String(value);
    while (num.length < len) {
        num = '0' + num;
    }
    return num;
};
const formatDate = (date, format) => {
    if (date == null) {
        return '';
    }
    let output = '';
    for (let iFormat = 0; iFormat < format.length; iFormat++) {
        switch (format.charAt(iFormat)) {
            case 'd':
                if (lookAhead(iFormat, format, 'd')) {
                    output += formatNumber(date.getDate(), 2);
                    iFormat++;
                }
                else {
                    output += String(date.getDate());
                }
                break;
            case 'm':
                if (lookAhead(iFormat, format, 'm')) {
                    output += formatNumber(date.getMonth() + 1, 2);
                    iFormat++;
                }
                else {
                    output += String(date.getMonth() + 1);
                }
                break;
            case 'y':
                if (lookAhead(iFormat, format, 'y', 4)) {
                    iFormat += 3;
                    output += date.getFullYear();
                }
                else {
                    output += (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);
                    iFormat++;
                }
                break;
            case 'h':
                if (lookAhead(iFormat, format, 'h')) {
                    output += formatNumber(date.getHours(), 2);
                    iFormat++;
                }
                else {
                    output += String(date.getHours());
                }
                break;
            case 'M':
                if (lookAhead(iFormat, format, 'M')) {
                    output += formatNumber(date.getMinutes(), 2);
                    iFormat++;
                }
                else {
                    output += String(date.getMinutes());
                }
                break;
            case 's':
                if (lookAhead(iFormat, format, 's')) {
                    output += formatNumber(date.getSeconds(), 2);
                    iFormat++;
                }
                else {
                    output += String(date.getSeconds());
                }
                break;
            default:
                output += format.charAt(iFormat);
        }
    }
    return output;
};
const FORMATTING_TOKENS = /(\[[^\[]*\])|(mm|dd|yyyy|yy|hh|MM|ss|.)/g;
const TWO_NUMERICS_REGEX = /\d\d/; // 00 - 99
const FOUR_NUMERICS_REGEX = /\d{4}/; // 0000 - 9999
const NON_NUMERIC_REGEX = /[^0-9]/g;
const YEAR = 'year';
const MONTH = 'month';
const DAY = 'day';
const HOUR = 'hour';
const MINUTE = 'minute';
const SECOND = 'second';
const parseFlags = {};
const addParseFlag = (token, regex, callback) => {
    const tokens = Array.isArray(token) ? token : [token];
    let func;
    if (typeof callback === 'string') {
        func = (input) => {
            const value = parseInt(input, 10);
            return { [callback]: value };
        };
    }
    else {
        func = callback;
    }
    tokens.forEach((key) => {
        parseFlags[key] = [regex, func];
    });
};
addParseFlag('yy', TWO_NUMERICS_REGEX, (input) => {
    const year = new Date().getFullYear();
    const cent = Math.floor(year / 100);
    let value = parseInt(input, 10);
    value = (value > 68 ? cent - 1 : cent) * 100 + value;
    return { [YEAR]: value };
});
addParseFlag('yyyy', FOUR_NUMERICS_REGEX, YEAR);
addParseFlag('mm', TWO_NUMERICS_REGEX, (input) => ({ [MONTH]: parseInt(input, 10) - 1 }));
addParseFlag('dd', TWO_NUMERICS_REGEX, DAY);
addParseFlag('hh', TWO_NUMERICS_REGEX, HOUR);
addParseFlag('MM', TWO_NUMERICS_REGEX, MINUTE);
addParseFlag('ss', TWO_NUMERICS_REGEX, SECOND);
const getFullInputArray = (input, backupDate = new Date()) => {
    const result = [0, 0, 1, 0, 0, 0];
    const backupArr = [
        backupDate.getFullYear(),
        backupDate.getMonth(),
        backupDate.getDate(),
        backupDate.getHours(),
        backupDate.getMinutes(),
        backupDate.getSeconds(),
    ];
    let useBackup = true;
    for (let i = 0; i < 7; i++) {
        if (input[i] === undefined) {
            result[i] = useBackup ? backupArr[i] : result[i];
        }
        else {
            result[i] = input[i];
            useBackup = false;
        }
    }
    return result;
};
const createDate = (year, month, day, hour, minute, second) => {
    if (!(year < 100 && year >= 0)) {
        return new Date(year, month, day, hour, minute, second);
    }
    const date = new Date(year + 400, month, day, hour, minute, second);
    if (isFinite(date.getFullYear())) {
        date.setFullYear(year);
    }
    return date;
};
const makeParser = (dateString, format) => {
    const tokens = format.match(FORMATTING_TOKENS);
    if (!tokens) {
        throw new Error();
    }
    const { length } = tokens;
    let mark = {};
    for (let i = 0; i < length; i += 1) {
        const token = tokens[i];
        const parseTo = parseFlags[token];
        if (!parseTo) {
            const word = token.replace(/^\[|\]$/g, '');
            if (dateString.indexOf(word) === 0) {
                dateString = dateString.substr(word.length);
            }
            else {
                throw new Error('not match');
            }
        }
        else {
            const regex = parseTo[0];
            const parser = parseTo[1];
            const value = (regex.exec(dateString) || [])[0];
            const obj = parser(value);
            mark = Object.assign(Object.assign({}, mark), obj);
            dateString = dateString.replace(value, '');
        }
    }
    return mark;
};
const getCleanDateString = (dirtyDateString, format) => {
    if (dirtyDateString.length === format.length) {
        return dirtyDateString;
    }
    const separator = dirtyDateString.match(NON_NUMERIC_REGEX)[0];
    // pad signle digits to follow supported dateformats
    return dirtyDateString
        .split(separator)
        .map((s) => (s.length === 1 ? '0' + s : s))
        .join(separator);
};
const getDateParts = (dirtyDateString, format) => {
    const dateString = getCleanDateString(dirtyDateString, format);
    return makeParser(dateString, format);
};
const toDate = (dirtyDateString, format) => {
    try {
        const { backupDate = new Date() } = {};
        const { year, month, day, hour, minute, second, date } = getDateParts(dirtyDateString, format);
        if (date != null) {
            return date;
        }
        const inputArray = [year, month, day, hour, minute, second];
        const result = getFullInputArray(inputArray, backupDate);
        return createDate(...result);
    }
    catch (e) {
        return new Date(NaN);
    }
};
const createCalendarGrid = (calendarGridArguments) => {
    const { firstDateOfBox, allowedDates, dateFormat, selectedDate, minDate, maxDate, pointerDate } = calendarGridArguments;
    const weekDatePointer = new Date(firstDateOfBox);
    const dayDatePointer = new Date(firstDateOfBox);
    let calendar = [];
    do {
        let row = [];
        do {
            row = [
                ...row,
                {
                    date: new Date(dayDatePointer),
                    display: formatDate(dayDatePointer, dateFormat),
                    dateString: formatDate(dayDatePointer, dateFormat),
                    label: day(dayDatePointer).toString(),
                    isToday: isSameDay(dayDatePointer, now()),
                    isSelected: selectedDate && isSameDay(dayDatePointer, selectedDate),
                    isDisabled: !allowedDates(dayDatePointer) || !isInRange(dayDatePointer, minDate, maxDate),
                    isOutdated: pointerDate.month !== dayDatePointer.getMonth() || !isInRange(dayDatePointer, minDate, maxDate),
                },
            ];
            dayDatePointer.setDate(dayDatePointer.getDate() + 1);
        } while (isSameWeek(dayDatePointer, weekDatePointer));
        calendar = [...calendar, row];
        weekDatePointer.setDate(weekDatePointer.getDate() + 7);
    } while (isSameMonth(new Date(pointerDate.year, pointerDate.month, pointerDate.day), dayDatePointer));
    return calendar;
};
/**
 * Returns a range of numbers around the given number grouped into buckets of 5.
 * @param number the given number around which you want to get the other numbers
 * @param range range of numbers to include in the result
 */
function rangeAround(number, range) {
    const itemsPerGroup = 5;
    return [...Array(range).keys()]
        .map((n) => n + number - Math.floor(range / 2))
        .reduce((curr, item, index) => {
        if (index % itemsPerGroup === 0) {
            curr.push([]);
        }
        curr[curr.length - 1].push(item);
        return curr;
    }, []);
}

const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;
const DEFAULT_DEBOUNCE_FAST = 300;
/**
 * Debounce function to implement a timeframe to wait for no new changes before executing a callback

 *  example usages:
 *    debounce(() => saveInput());
 *    debounce(() => saveInput(), 750);
 *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));
 *
 *  regarding default timeout check https://lawsofux.com/doherty-threshold/
 *
 * @param callback
 * @param timeout
 */
const debounce$1 = (callback, timeout = DEFAULT_DEBOUNCE_FAST) => {
    let timer;
    return (args) => {
        clearTimeout(timer);
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        timer = setTimeout(() => callback(args), timeout);
    };
};
/**
 * Debounce an event
 *
 * @param event
 * @param timeout
 */
const debounceEvent = (event, timeout) => {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const original = event._original || event;
    const emit = debounce$1(original.emit.bind(original), timeout);
    return {
        _original: event,
        emit: emit,
    };
};

// eslint-disable-next-line @stencil-community/ban-exported-const-enums
var SixDateFormats;
(function (SixDateFormats) {
    SixDateFormats["DDMMYYY_DOT"] = "dd.mm.yyyy";
    SixDateFormats["YYYYMMDD_DASH"] = "yyyy-mm-dd";
    SixDateFormats["DDMMYYYY_DASH"] = "dd-mm-yyyy";
    SixDateFormats["DDMMYYYY_SLASH"] = "dd/mm/yyyy";
    SixDateFormats["YYYYMMDD_SLASH"] = "yyyy/mm/dd";
    SixDateFormats["DDMMYY_DOT"] = "dd.mm.yy";
    SixDateFormats["YYMMDD_DASH"] = "yy-mm-dd";
    SixDateFormats["DDMMYY_DASH"] = "dd-mm-yy";
    SixDateFormats["DDMMYY_SLASH"] = "dd/mm/yy";
    SixDateFormats["YYMMDD_SLASH"] = "yy/mm/dd";
    SixDateFormats["DDMMYYY_DOT_TIME"] = "dd.mm.yyyy hh:MM:ss";
    SixDateFormats["YYYYMMDD_DASH_TIME"] = "yyyy-mm-dd hh:MM:ss";
    SixDateFormats["DDMMYYYY_DASH_TIME"] = "dd-mm-yyyy hh:MM:ss";
    SixDateFormats["DDMMYYYY_SLASH_TIME"] = "dd/mm/yyyy hh:MM:ss";
    SixDateFormats["YYYYMMDD_SLASH_TIME"] = "yyyy/mm/dd hh:MM:ss";
    SixDateFormats["DDMMYY_DOT_TIME"] = "dd.mm.yy hh:MM:ss";
    SixDateFormats["YYMMDD_DASH_TIME"] = "yy-mm-dd hh:MM:ss";
    SixDateFormats["DDMMYY_DASH_TIME"] = "dd-mm-yy hh:MM:ss";
    SixDateFormats["DDMMYY_SLASH_TIME"] = "dd/mm/yy hh:MM:ss";
    SixDateFormats["YYMMDD_SLASH_TIME"] = "yy/mm/dd hh:MM:ss";
})(SixDateFormats || (SixDateFormats = {}));

const MonthSelection = (monthSelectionParams) => {
    const locale = monthSelectionParams.locale;
    const isToday = (value) => locale.monthsShort[now().getMonth()] === value;
    const isSelectedMonth = (value) => { var _a; return ((_a = monthSelectionParams.selectedDate) === null || _a === void 0 ? void 0 : _a.getMonth()) === locale.monthsShort.findIndex((m) => m === value); };
    return (hAsync("table", { class: "datepicker-table", part: "month-selection" },
        hAsync("tbody", null, locale.monthsShortGrouped.map((row) => (hAsync("tr", { class: "datepicker-table__row" }, row.map((month) => (hAsync("td", { onClick: () => monthSelectionParams.onClickMonthCell(month), class: {
                'datepicker-table__cell': true,
                'datepicker-table__cell--is-today': isToday(month),
                'datepicker-table__cell--is-selected': isSelectedMonth(month),
            } }, month)))))))));
};

const DaySelection = (daySelectionParams) => {
    return (hAsync("table", { class: "datepicker-table", part: "day-selection" },
        hAsync("thead", { part: "weekday-header" }, daySelectionParams.locale.weekdaysMin.map((weekday) => (hAsync("th", { class: "datepicker__cell" }, weekday)))),
        hAsync("tbody", null, daySelectionParams.calendarGrid.map((row) => (hAsync("tr", { class: "datepicker-table__row" }, row.map((cell) => (hAsync("td", { "data-date": cell.dateString, onClick: () => daySelectionParams.onClickDateCell(cell), class: {
                'datepicker-table__cell': true,
                'datepicker-table__cell--is-today': cell.isToday,
                'datepicker-table__cell--is-selected': cell.isSelected,
                'datepicker-table__cell--is-outdated': cell.isOutdated,
                'datepicker-table__cell--is-disabled': cell.isDisabled,
                'datepicker-table__cell--is-selectable': !cell.isDisabled,
            } }, cell.label)))))))));
};

const YearSelection = (yearSelectionParams) => {
    return (hAsync("table", { class: "datepicker-table", part: "year-selection" },
        hAsync("tbody", null, yearSelectionParams.yearSelection.map((row) => (hAsync("tr", { class: "datepicker-table__row" }, row.map((year) => {
            var _a;
            return (hAsync("td", { onClick: () => yearSelectionParams.onClickYearCell(year), class: {
                    'datepicker-table__cell': true,
                    'datepicker-table__cell--is-today': now().getFullYear() === year,
                    'datepicker-table__cell--is-selected': ((_a = yearSelectionParams.selectedDate) === null || _a === void 0 ? void 0 : _a.getFullYear()) === year,
                } }, year));
        })))))));
};

/**
 * If the popup is hoisted we popup is hoisted its position will change to fix to not be clipped of by a containing container.
 * To render the popup correctly we render it normally, and then assign this screenposition to the fixed popup
 */
function adjustPopupForHoisting(hoist, popup, inputElement, wrapper, minPopupHeight, dropdownDirectionChanged) {
    if (!hoist || popup == null || inputElement == null || wrapper == null) {
        return;
    }
    // take a snapshot of normally rendered popup
    const popupDimensions = setPopupAsFixPosition(popup);
    const inputDimensions = inputElement.getBoundingClientRect();
    const inputTop = inputDimensions.top;
    const popupTop = popupDimensions.top;
    const isUp = calcIsDropDownContentUp(inputElement, wrapper, minPopupHeight);
    // check screen position to check whether the popup should be moved above or below the trigger element
    if (isUp && inputTop < popupTop) {
        //  move popup above input field if datepicker is at bottom of screen
        popup.style.top = `${popupTop - popupDimensions.height - inputDimensions.height}px`;
    }
    dropdownDirectionChanged(isUp);
}
/*
 * For small screens the datepicker popup could be cut-off even though there might still be space within the viewport.
 * This is because the popup is always aligned with the trigger input field. However in the scenario of small screens
 * we should reposition the popup to use the space available.
 */
function adjustPopupForSmallScreens(popup) {
    // execute after dropdown has been rendered to make sure the popup reference is correctly set
    setTimeout(() => {
        if (popup == null) {
            return;
        }
        const popupDimensions = popup.getBoundingClientRect();
        if (popupDimensions.y < 0 &&
            window.innerHeight - popupDimensions.height > 0 &&
            Math.abs(popupDimensions.y) <= popupDimensions.height) {
            // handle case where popup is cut-off on top but there is still space available
            setPopupAsFixPosition(popup);
            popup.style.top = '0px';
        }
        else if (window.innerHeight < popupDimensions.y + popupDimensions.height &&
            window.innerHeight > popupDimensions.height &&
            Math.abs(popupDimensions.y - window.innerHeight) <= popupDimensions.height) {
            // handle case where popup is cut-off at the bottom but there is still space available above
            // apply screen position to fixed popup
            setPopupAsFixPosition(popup);
            popup.style.top = `${window.innerHeight - popupDimensions.height}px`;
        }
        if (window.innerWidth < popupDimensions.x + popupDimensions.width &&
            window.innerWidth > popupDimensions.width &&
            Math.abs(popupDimensions.x - window.innerWidth) <= popupDimensions.width) {
            // handle case where popup is cut-off to the right
            setPopupAsFixPosition(popup);
            popup.style.left = `${window.innerWidth - popupDimensions.width}px`;
        }
    }, 0);
}
function calcIsDropDownContentUp(inputElement, wrapper, minPopupHeight) {
    const inputBoundingRect = inputElement.getBoundingClientRect();
    const wrapperBoundingRect = wrapper.getBoundingClientRect();
    const popupHeight = Math.max(wrapperBoundingRect.height, minPopupHeight);
    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;
    return moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + popupHeight;
}
function setPopupAsFixPosition(popup) {
    const popupDimensions = popup.getBoundingClientRect();
    popup.style.position = 'fixed';
    popup.style.top = popupDimensions['top'] + 'px';
    popup.style.left = popupDimensions['left'] + 'px';
    popup.style.width = popupDimensions['width'] + 'px';
    popup.style.minHeight = 'fit-content';
    return popupDimensions;
}
/*
 * The position of the hoisted datepicker needs to be correctly calculated since the position changes to fixed.
 * Thus if the user scrolls or adjusts the screen size we need to recalculate the datepicker position.
 */
function movePopup(hoist, open, popup, inputElement, wrapper, minPopupHeight) {
    if (!hoist || !open || popup == null || inputElement == null || wrapper == null) {
        return;
    }
    const popupBoundingClientRect = popup.getBoundingClientRect();
    const popupHeight = popupBoundingClientRect.height;
    const inputBoundingClientRect = inputElement.getBoundingClientRect();
    const inputTop = inputBoundingClientRect.top;
    const inputHeight = inputBoundingClientRect.height;
    const isUp = calcIsDropDownContentUp(inputElement, wrapper, minPopupHeight);
    if (isUp) {
        popup.style.top = `${inputTop - popupHeight}px`;
    }
    else {
        popup.style.top = `${inputTop + inputHeight}px`;
    }
}

const sixDatepickerCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block;font-family:var(--six-font-family)}.datepicker__container{position:relative}.datepicker__popup{min-width:400px;background-color:white;padding:0.5em 0.5em 1.5em;box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);user-select:none;position:absolute;z-index:var(--six-z-index-dropdown);right:0;left:0}.datepicker__popup--is-up{bottom:100%;min-height:382px}.datepicker__popup--is-inline{position:initial;box-shadow:none;border:1px solid var(--six-color-web-rock-400)}.datepicker-header{display:flex;justify-content:space-between;border-bottom:1px solid var(--six-color-web-rock-400);padding:0.5em;margin-bottom:1em}.datepicker-header svg{fill:var(--six-color-web-rock-900);stroke:none}.datepicker-header__btn{cursor:pointer;width:2.5em;height:2.5em;display:flex;vertical-align:middle;align-items:center;justify-content:center}.datepicker-header__btn:hover{background-color:var(--six-color-web-rock-100);border-radius:100%}.datepicker-header__label{display:flex}.datepicker-header__label>div{cursor:pointer;padding:0.5em;display:flex;vertical-align:middle;align-items:center;justify-content:center}.datepicker-header__label>div:hover{background-color:var(--six-color-web-rock-100)}.datepicker-table{width:100%}.datepicker-table__cell{text-align:center;width:2.5rem;height:2.5rem;cursor:pointer}.datepicker-table__cell:hover{background-color:var(--six-color-web-rock-100)}.datepicker-table__cell--is-today{border:1px solid var(--six-color-web-rock-400)}.datepicker-table__cell--is-selected{background-color:var(--six-color-red);color:var(--six-color-white)}.datepicker-table__cell--is-disabled{background-color:var(--six-color-web-rock-200);cursor:initial}.datepicker-table__cell--is-disabled:hover{background-color:var(--six-color-web-rock-200)}.datepicker-table__cell--is-outdated{color:var(--six-color-web-rock-400)}.datepicker-clear{display:inline-flex;align-items:center;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;padding:0;transition:var(--six-transition-fast) color;cursor:pointer}.datepicker-clear:hover{color:var(--six-input-icon-color-hover)}.datepicker-clear:focus{outline:none}.datepicker-clear--right{right:0;position:absolute}.datepicker-clear--left{right:35px;position:absolute}.input--empty .datepicker-clear{visibility:hidden}.prefix{cursor:pointer}.prefix--right{right:0;display:inline-flex;position:absolute;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;margin-right:var(--six-input-spacing-medium);transition:var(--six-transition-fast) color}six-timepicker::part(popup){border:none;padding:0.5em 0.5em 0;min-height:0}";
var SixDatepickerStyle0 = sixDatepickerCss;

const NUMBER_OF_YEARS_SHOWN = 25;
const MIN_POPUP_HEIGHT$1 = 400;
var SelectionMode;
(function (SelectionMode) {
    SelectionMode["DAY"] = "day";
    SelectionMode["MONTH"] = "month";
    SelectionMode["YEAR"] = "year";
})(SelectionMode || (SelectionMode = {}));
/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define a footer for the date picker.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 */
class SixDatepicker {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixSelect = createEvent(this, "six-datepicker-select", 7);
        this.sixClear = createEvent(this, "six-datepicker-clear", 7);
        this.sixBlur = createEvent(this, "six-datepicker-blur", 7);
        this.eventListeners = new EventListeners();
        this.previousUnit = () => {
            if (this.selectionMode === SelectionMode.DAY) {
                this.previousMonth();
            }
            else if (this.selectionMode === SelectionMode.MONTH) {
                this.previousYear();
            }
            else if (this.selectionMode === SelectionMode.YEAR) {
                this.previousYearGroup();
            }
        };
        this.nextUnit = () => {
            if (this.selectionMode === SelectionMode.DAY) {
                this.nextMonth();
            }
            else if (this.selectionMode === SelectionMode.MONTH) {
                this.nextYear();
            }
            else if (this.selectionMode === SelectionMode.YEAR) {
                this.nextYearGroup();
            }
        };
        this.handleDocumentKeyDown = (event) => {
            var _a;
            const keyboardEvent = event;
            // Close when escape is pressed
            if (this.open && keyboardEvent.key === 'Escape') {
                keyboardEvent.stopPropagation();
                this.closePopup();
                void ((_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setFocus());
            }
            // Handle tabbing
            if (keyboardEvent.key === 'Tab') {
                this.closePopup();
            }
        };
        this.handleDocumentMouseDown = (event) => {
            // Close when clicking outside the containing element
            const path = event.composedPath();
            if (!path.includes(this.container)) {
                this.closePopup();
                return;
            }
        };
        this.handleClearClick = async (event) => {
            event.stopPropagation();
            await this.select(undefined);
            this.sixClear.emit();
        };
        this.onTimepickerChange = (sixTimepickerChange) => {
            const time = sixTimepickerChange.detail.value;
            const newDate = new Date();
            if (this.selectedDate != null) {
                newDate.setFullYear(this.selectedDate.getFullYear(), this.selectedDate.getMonth(), this.selectedDate.getDate());
            }
            if (time != null) {
                const hours = time.hours;
                const minutes = time.minutes;
                const seconds = time.seconds;
                if (hours != null) {
                    newDate.setHours(hours, minutes, seconds);
                }
            }
            this.updateValue(newDate);
            this.updatePointerDates();
        };
        this.onClickDateCell = (cell) => {
            if (!cell.isDisabled) {
                void this.select(cell.dateString);
            }
        };
        this.onClickMonthCell = (selectedMonth) => {
            const month = i18nDate[this.locale].monthsShort.findIndex((monthShort) => monthShort === selectedMonth);
            this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { month });
            this.selectionMode = SelectionMode.DAY;
        };
        this.onClickYearCell = (year) => {
            this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { year });
            this.selectionMode = SelectionMode.DAY;
        };
        this.handleInputChange = (event) => {
            if (this.inputElement == null) {
                return;
            }
            event.stopPropagation();
            const inputValue = this.inputElement.value;
            if (!isValidDateString(inputValue, this.dateFormat)) {
                return;
            }
            const inputValueDate = toDate(inputValue, this.dateFormat);
            if (inputValueDate === undefined) {
                return;
            }
            this.updateIfChanged(inputValueDate);
            const datesOnly = inputValue.replace(/[^\d]/g, '');
            if (datesOnly.length >= 6) {
                const date = toDate(inputValue, this.dateFormat);
                const dateAsString = formatDate(date, this.dateFormat);
                if (isValidDateString(dateAsString, this.dateFormat)) {
                    this.selectedDate = toDate(dateAsString, this.dateFormat);
                    this.updatePointerDates();
                    this.updateValue(this.selectedDate);
                }
            }
        };
        this.handleOnBlur = (event) => {
            var _a, _b, _c;
            event.stopPropagation();
            // clear the value if the user deleted the date
            if (((_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.value) === '' && isValidDate(this.value)) {
                this.value = undefined;
                this.sixSelect.emit(this.value);
            }
            const currentDate = toDate((_b = this.inputElement) === null || _b === void 0 ? void 0 : _b.value, this.dateFormat);
            if (isValidDate(currentDate) && ((_c = this.value) === null || _c === void 0 ? void 0 : _c.getTime()) !== (currentDate === null || currentDate === void 0 ? void 0 : currentDate.getTime())) {
                // Set the value if the input field's value has changed. This can happen if the blur occurs
                // before the change event had a chance to fire due to its debouncing.
                this.value = currentDate;
            }
            if (this.inputElement != null) {
                this.inputElement.value = formatDate(this.value, this.dateFormat);
            }
            this.sixBlur.emit(this.value);
        };
        this.pointerDate = SixDatepicker.getCurrentDateAsPointer();
        this.selectionMode = SelectionMode.DAY;
        this.isDropDownContentUp = false;
        this.type = 'date';
        this.locale = 'en';
        this.open = false;
        this.inline = false;
        this.readonly = false;
        this.disabled = false;
        this.allowedDates = () => true;
        this.min = undefined;
        this.max = undefined;
        this.closeOnSelect = this.type === 'date';
        this.placement = undefined;
        this.size = 'medium';
        this.required = false;
        this.defaultDate = undefined;
        this.placeholder = undefined;
        this.value = undefined;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.containingElement = undefined;
        this.dateFormat = SixDateFormats.DDMMYYY_DOT;
        this.debounce = DEFAULT_DEBOUNCE_FAST;
        this.name = '';
        this.clearable = false;
        this.iconPosition = 'left';
        this.hoist = false;
    }
    debounceChanged() {
        this.sixSelect = debounceEvent(this.sixSelect, this.debounce);
    }
    /**
     * Update the native input element when the value changes
     */
    valueChanged() {
        if (this.value != null && !isValidDate(this.value)) {
            console.warn('invalid date value: ', this.value);
            this.value = undefined;
            this.sixSelect.emit(this.value);
        }
        this.selectedDate = this.value;
        this.updatePointerDates();
    }
    async resizeHandler() {
        this.updateDropdownDirection();
        this.moveOpenHoistedPopup();
        this.adjustPopupPosition();
    }
    async scrollHandler() {
        this.updateDropdownDirection();
        this.moveOpenHoistedPopup();
    }
    moveOpenHoistedPopup() {
        movePopup(this.hoist, this.open, this.popup, this.inputElement, this.wrapper, MIN_POPUP_HEIGHT$1);
    }
    get container() {
        return this.containingElement || this.host;
    }
    get firstDateOfBox() {
        const date = new Date(this.pointerDate.year, this.pointerDate.month, 1);
        return getFirstDayOfTheWeek(date);
    }
    /** Sets focus on the datepickers input. */
    async setFocus(options) {
        var _a;
        (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setFocus(options);
    }
    get calendarGrid() {
        return createCalendarGrid({
            firstDateOfBox: this.firstDateOfBox,
            allowedDates: this.allowedDates,
            dateFormat: this.dateFormat,
            locale: this.locale,
            selectedDate: this.selectedDate,
            minDate: this.min,
            maxDate: this.max,
            pointerDate: this.pointerDate,
        });
    }
    updateDropdownDirection() {
        if (this.inputElement == null || this.wrapper == null) {
            return;
        }
        this.isDropDownContentUp = calcIsDropDownContentUp(this.inputElement, this.wrapper, MIN_POPUP_HEIGHT$1);
    }
    getMonthStringForIndex(index) {
        return i18nDate[this.locale].months[index];
    }
    previousYear() {
        this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { year: this.pointerDate.year - 1 });
    }
    previousYearGroup() {
        this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { year: this.pointerDate.year - NUMBER_OF_YEARS_SHOWN });
    }
    previousMonth() {
        if (this.pointerDate.month === 0) {
            this.pointerDate = { year: this.pointerDate.year - 1, month: 11, day: 1, hours: 0, minutes: 0, seconds: 0 };
        }
        else {
            this.pointerDate = {
                year: this.pointerDate.year,
                month: this.pointerDate.month - 1,
                day: 1,
                hours: 0,
                minutes: 0,
                seconds: 0,
            };
        }
    }
    nextMonth() {
        if (this.pointerDate.month === 11) {
            this.pointerDate = { year: this.pointerDate.year + 1, month: 0, day: 1, hours: 0, minutes: 0, seconds: 0 };
        }
        else {
            this.pointerDate = {
                year: this.pointerDate.year,
                month: this.pointerDate.month + 1,
                day: 1,
                hours: 0,
                minutes: 0,
                seconds: 0,
            };
        }
    }
    nextYear() {
        this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { year: this.pointerDate.year + 1 });
    }
    nextYearGroup() {
        this.pointerDate = Object.assign(Object.assign({}, this.pointerDate), { year: this.pointerDate.year + NUMBER_OF_YEARS_SHOWN });
    }
    openCalendar() {
        if (!this.open && !this.disabled) {
            this.open = true;
            this.setupEventListenersForOpenPopup();
        }
    }
    setupEventListenersForOpenPopup() {
        this.eventListeners.add(document, 'keydown', this.handleDocumentKeyDown);
        this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);
    }
    closePopup() {
        if (this.inline) {
            return;
        }
        this.open = false;
        this.eventListeners.remove(document, 'keydown', this.handleDocumentKeyDown);
        this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);
        this.selectionMode = SelectionMode.DAY;
    }
    updatePointerDates() {
        const date = this.getPointerDate();
        if (this.differsFromPointerDate(date)) {
            this.pointerDate = {
                year: year(date),
                month: month(date),
                day: day(date),
                hours: hours(date),
                minutes: minutes(date),
                seconds: seconds(date),
            };
        }
    }
    differsFromPointerDate(date) {
        return (this.pointerDate.day !== day(date) ||
            this.pointerDate.month !== month(date) ||
            this.pointerDate.year !== year(date) ||
            this.pointerDate.hours !== hours(date) ||
            this.pointerDate.minutes !== minutes(date) ||
            this.pointerDate.seconds !== seconds(date));
    }
    getPointerDate() {
        if (this.selectedDate !== undefined && this.selectedDate !== null) {
            return this.selectedDate;
        }
        if (this.defaultDate == null) {
            return this.type === 'date' ? removeTime(now()) : now();
        }
        else {
            return toDate(this.defaultDate, this.dateFormat);
        }
    }
    updateValue(newDate) {
        this.updateIfChanged(newDate);
    }
    updateIfChanged(newDate) {
        var _a;
        if (((_a = this.value) === null || _a === void 0 ? void 0 : _a.getTime()) === (newDate === null || newDate === void 0 ? void 0 : newDate.getTime())) {
            return;
        }
        this.value = newDate;
        this.sixSelect.emit(this.value);
    }
    /**
     * Selects an option
     */
    async select(datestring) {
        if (datestring == null) {
            this.updateValue(undefined);
        }
        else {
            const newDate = toDate(datestring, this.dateFormat);
            newDate === null || newDate === void 0 ? void 0 : newDate.setHours(this.pointerDate.hours, this.pointerDate.minutes, this.pointerDate.seconds);
            this.updateValue(newDate);
        }
        this.updatePointerDates();
        if (this.closeOnSelect) {
            this.closePopup();
        }
    }
    componentWillLoad() {
        this.selectedDate = this.value;
        this.updatePointerDates();
        this.updateValue(this.value);
        if (this.inline) {
            this.open = true;
        }
        if (this.open) {
            this.setupEventListenersForOpenPopup();
        }
    }
    componentDidLoad() {
        if (this.inputElement != null) {
            this.eventListeners.add(this.inputElement, 'six-input-input', debounce$1(this.handleInputChange, this.debounce));
            this.eventListeners.add(this.inputElement, 'six-input-blur', this.handleOnBlur);
        }
    }
    componentDidRender() {
        this.adjustPopupPosition();
    }
    renderHeader() {
        return (hAsync("header", { class: "datepicker-header", part: "header" }, hAsync("div", { class: "datepicker-header__btn prev", onClick: this.previousUnit }, hAsync("svg", { viewBox: "0 5 13 13", width: "14", height: "23" }, hAsync("path", { d: "M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z" }))), hAsync("div", { class: "datepicker-header__label" }, this.selectionMode === SelectionMode.DAY && (hAsync("div", { onClick: () => (this.selectionMode = SelectionMode.MONTH) }, hAsync("span", { class: "datepicker-header__label-month" }, this.getMonthStringForIndex(this.pointerDate.month)), hAsync("span", null, hAsync("svg", { viewBox: "-3 -4 24 24", width: "20", height: "20" }, hAsync("polyline", { points: "6 9 12 15 18 9" }))))), this.selectionMode !== SelectionMode.YEAR && (hAsync("div", { onClick: () => (this.selectionMode = SelectionMode.YEAR) }, hAsync("span", { class: "datepicker-header__label-year" }, this.pointerDate.year), hAsync("span", null, hAsync("svg", { viewBox: "-3 -4 24 24", width: "20", height: "20" }, hAsync("polyline", { points: "6 9 12 15 18 9" }))))), this.selectionMode === SelectionMode.YEAR && (hAsync("div", null, this.pointerDate.year - Math.floor(NUMBER_OF_YEARS_SHOWN / 2), " \u2013", ' ', this.pointerDate.year + Math.floor(NUMBER_OF_YEARS_SHOWN / 2)))), hAsync("div", { class: "datepicker-header__btn next", onClick: this.nextUnit }, hAsync("svg", { viewBox: "5 5 13 13", width: "14", height: "23" }, hAsync("path", { d: "M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z" })))));
    }
    renderBody() {
        switch (this.selectionMode) {
            case SelectionMode.DAY:
                return (hAsync(DaySelection, { locale: i18nDate[this.locale], calendarGrid: this.calendarGrid, onClickDateCell: this.onClickDateCell }));
            case SelectionMode.MONTH:
                return (hAsync(MonthSelection, { locale: i18nDate[this.locale], selectedDate: this.selectedDate, onClickMonthCell: this.onClickMonthCell }));
            case SelectionMode.YEAR:
                return (hAsync(YearSelection, { selectedDate: this.selectedDate, yearSelection: rangeAround(this.pointerDate.year, NUMBER_OF_YEARS_SHOWN), onClickYearCell: this.onClickYearCell }));
        }
    }
    renderCustomIcon() {
        const icon = hasSlot(this.host, 'custom-icon') ? (hAsync("slot", { name: "custom-icon" })) : (hAsync("six-icon", { size: this.size === 'large' ? 'medium' : this.size }, "today"));
        return (hAsync("span", { slot: "prefix", part: "icon", class: {
                prefix: true,
                'prefix--right': this.iconPosition === 'right',
            } }, icon));
    }
    renderClearable() {
        return (this.clearable && (hAsync("button", { slot: "suffix", class: {
                'datepicker-clear': true,
                'datepicker-clear--right': this.iconPosition === 'left',
                'datepicker-clear--left': this.iconPosition === 'right',
            }, type: "button", onClick: this.handleClearClick, tabindex: "-1" }, hAsync("six-icon", { size: "small" }, "clear"))));
    }
    render() {
        var _a, _b, _c;
        this.adjustPopupPosition();
        return (hAsync("div", { key: 'b5ba1d95babef5f6f47bd176f607756df09f293b', ref: (el) => (this.wrapper = el), class: "datepicker__container" }, hAsync("six-input", { key: 'bbc7941bb975cb5e66eda215fea89dc3455724a3', part: "base", value: formatDate(this.value, this.dateFormat), ref: (el) => (this.inputElement = el), placeholder: this.placeholder, readonly: this.readonly, disabled: this.disabled, name: this.name, label: this.label, required: this.required, errorText: this.errorText, errorTextCount: this.errorTextCount, invalid: this.invalid, onClick: () => this.openCalendar(), size: this.size, class: { 'input--empty': this.value == null } }, this.renderCustomIcon(), this.renderClearable(), hasSlot(this.host, 'label') ? (hAsync("span", { slot: "label" }, hAsync("slot", { name: "label" }))) : null, hasSlot(this.host, 'error-text') ? (hAsync("span", { slot: "error-text" }, hAsync("slot", { name: "error-text" }))) : null), this.open && (hAsync("div", { key: 'ceaf12686b514b8708e1b254e8ed8990c519e19b', part: "popup", ref: (el) => (this.popup = el), class: {
                datepicker__popup: true,
                'datepicker__popup--is-up': this.placement != null ? this.placement === 'top' : this.isDropDownContentUp,
                'datepicker__popup--is-inline': this.inline,
            } }, this.renderHeader(), this.renderBody(), this.type === 'date-time' && (hAsync("six-timepicker", { key: 'c978d4bf39f7b212eb6f4f37acbfc2f5533e2ebc', debounce: this.debounce, inline: true, "onSix-timepicker-change-debounced": (event) => this.onTimepickerChange(event), value: ((_a = this.selectedDate) === null || _a === void 0 ? void 0 : _a.getHours()) +
                ':' +
                ((_b = this.selectedDate) === null || _b === void 0 ? void 0 : _b.getMinutes()) +
                ':' +
                ((_c = this.selectedDate) === null || _c === void 0 ? void 0 : _c.getSeconds()) })), hAsync("div", { key: 'ffaec9fff60951e6f8134437f31b359d93b3b91e', class: "datepicker__footer" }, hAsync("slot", { key: '58655ebaf55d53e2524eee16e87ecf629fe9eb29' }))))));
    }
    adjustPopupPosition() {
        adjustPopupForHoisting(this.hoist, this.popup, this.inputElement, this.wrapper, MIN_POPUP_HEIGHT$1, (isUp) => (this.isDropDownContentUp = isUp));
        adjustPopupForSmallScreens(this.popup);
    }
    connectedCallback() {
        this.eventListeners.forward('six-datepicker-select', 'change', this.host);
        this.eventListeners.forward('six-datepicker-blur', 'blur', this.host);
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    static getCurrentDateAsPointer() {
        return {
            year: year(now()),
            month: month(now()),
            day: day(now()),
            hours: hours(now()),
            minutes: minutes(now()),
            seconds: seconds(now()),
        };
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "debounce": ["debounceChanged"],
        "value": ["valueChanged"]
    }; }
    static get style() { return SixDatepickerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-datepicker",
        "$members$": {
            "type": [1],
            "locale": [1],
            "open": [1540],
            "inline": [516],
            "readonly": [4],
            "disabled": [4],
            "allowedDates": [16],
            "min": [16],
            "max": [16],
            "closeOnSelect": [4, "close-on-select"],
            "placement": [1],
            "size": [1],
            "required": [4],
            "defaultDate": [1, "default-date"],
            "placeholder": [1],
            "value": [1040],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "containingElement": [16],
            "dateFormat": [1, "date-format"],
            "debounce": [2],
            "name": [513],
            "clearable": [4],
            "iconPosition": [1, "icon-position"],
            "hoist": [4],
            "pointerDate": [32],
            "selectionMode": [32],
            "isDropDownContentUp": [32],
            "setFocus": [64],
            "select": [64]
        },
        "$listeners$": [[9, "resize", "resizeHandler"], [9, "scroll", "scrollHandler"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"], ["inline", "inline"], ["invalid", "invalid"], ["name", "name"]]
    }; }
}

//
// Simulates :focus-visible behavior on an element by watching for certain keyboard and mouse heuristics and toggling a
// `focus-visible` class. Works at the component level so no global polyfill is necessary.
//
// This will eventually be removed pending better :focus-visible support: https://caniuse.com/#search=focus-visible
//
const listeners = new WeakMap();
function observe(el) {
    if (el == null)
        return;
    const keys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End', 'PageDown', 'PageUp'];
    const is = (event) => {
        if (keys.includes(event.key)) {
            el.classList.add('focus-visible');
        }
    };
    const isNot = () => el.classList.remove('focus-visible');
    listeners.set(el, { is, isNot });
    el.addEventListener('keydown', is);
    el.addEventListener('keyup', is);
    el.addEventListener('mousedown', isNot);
    el.addEventListener('mousedown', isNot);
}
function unobserve(el) {
    if (el == null)
        return;
    const listener = listeners.get(el);
    if (!listener) {
        return;
    }
    const { is, isNot } = listener;
    el.classList.remove('focus-visible');
    el.removeEventListener('keydown', is);
    el.removeEventListener('keyup', is);
    el.removeEventListener('mousedown', isNot);
    el.removeEventListener('mousedown', isNot);
}
const focusVisible = {
    observe,
    unobserve,
};

const sixDetailsCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--hide-duration:var(--six-transition-medium);--hide-timing-function:ease;--show-duration:var(--six-transition-medium);--show-timing-function:ease;--horizontal-padding:var(--six-spacing-medium);font-family:var(--six-font-family);display:block}.details{border:solid var(--six-border-width) var(--six-input-border-color);border-radius:var(--six-border-radius-medium);color:var(--six-details-color);overflow-anchor:none;font-size:var(--six-input-font-size-medium)}.details:hover:not(.details--disabled):not(.details--open){border-color:var(--six-input-border-color-hover)}.details.inline{border:none;color:var(--six-sidebar-color)}.details.inline:hover{background-color:var(--six-sidebar-hover-background-color)}.details.inline.details--open{background-color:var(--six-color-web-rock-50)}.details.inline.details--open:hover{border:none;box-shadow:none}.details.inline.details--open>.details__header{color:var(--six-sidebar-color);font-weight:var(--six-font-weight-bold);background-color:var(--six-sidebar-header-background-color)}.details--disabled{background-color:var(--six-input-background-color-disabled);border-color:var(--six-input-border-color-disabled);color:var(--six-input-color-disabled)}.details__header{display:flex;align-items:center;border-radius:inherit;padding:var(--six-spacing-medium) var(--horizontal-padding);user-select:none;cursor:pointer}.details__header:focus{outline:none}.details--disabled .details__header{cursor:not-allowed;border-width:1px}.details--disabled .details__header:focus{outline:none;box-shadow:none}.details__summary{flex:1 1 auto;display:flex;align-items:center}.details__summary-icon{flex:0 0 auto;display:flex;align-items:center;font-size:1.2em;transition:var(--six-transition-medium) transform ease}.details--open .details__summary-icon--animate{transform:rotate(-180deg)}.details__body{height:0;overflow:hidden;transition-property:height;transition-duration:var(--hide-duration);transition-timing-function:var(--hide-timing-function)}.details--open .details__body{transition-duration:var(--show-duration);transition-timing-function:var(--show-timing-function)}.details__content{padding:var(--six-spacing-medium)}";
var SixDetailsStyle0 = sixDetailsCss;

let id$d = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The details' content.
 * @slot summary - The details' summary. Alternatively, you can use the summary prop.
 *
 * @part base - The component's base wrapper.
 * @part header - The summary header.
 * @part summary - The details summary.
 * @part summary-icon - The expand/collapse summary icon.
 * @part content - The details content.
 */
class SixDetails {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-details-show", 7);
        this.sixAfterShow = createEvent(this, "six-details-after-show", 7);
        this.sixHide = createEvent(this, "six-details-hide", 7);
        this.sixAfterHide = createEvent(this, "six-details-after-hide", 7);
        this.componentId = `details-${++id$d}`;
        this.isVisible = false;
        this.handleBodyTransitionEnd = (event) => {
            if (this.body == null)
                return;
            const target = event.target;
            // Ensure we only emit one event when the target element is no longer visible
            if (event.propertyName === 'height' && target.classList.contains('details__body')) {
                this.body.style.overflow = this.open ? 'visible' : 'hidden';
                this.body.style.height = this.open ? 'auto' : '0';
                this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();
                this.body.hidden = !this.open;
            }
        };
        this.handleSummaryClick = () => {
            var _a;
            if (!this.disabled && (this.hasContent || this.selectableEmpty)) {
                this.open ? this.hide() : this.show();
                (_a = this.header) === null || _a === void 0 ? void 0 : _a.focus();
            }
        };
        this.handleSummaryKeyDown = (event) => {
            if (event.key === 'Enter' || event.key === ' ') {
                event.preventDefault();
                this.open ? this.hide() : this.show();
            }
            if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {
                event.preventDefault();
                this.hide();
            }
            if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {
                event.preventDefault();
                this.show();
            }
        };
        this.animateSummaryIcon = true;
        this.open = false;
        this.summary = '';
        this.summaryIcon = undefined;
        this.summaryIconSize = 'inherit';
        this.disabled = false;
        this.inline = false;
        this.selectableEmpty = false;
        this.hasContent = true;
    }
    handleOpenChange() {
        if (this.body != null) {
            this.open ? this.show() : this.hide();
        }
    }
    componentDidLoad() {
        if (this.details == null || this.body == null)
            return;
        focusVisible.observe(this.details);
        this.body.hidden = !this.open;
        // Show on init if open
        if (this.open) {
            this.show();
        }
    }
    disconnectedCallback() {
        if (this.details != null) {
            focusVisible.unobserve(this.details);
        }
    }
    /** Shows the detail body */
    async show() {
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (this.isVisible || this.body == null)
            return;
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.body.hidden = false;
        if (this.body.scrollHeight === 0) {
            // When the scroll height can't be measured, use auto. This prevents a borked open state when the details is open
            // initially, but not immediately visible (i.e. in a tab panel).
            this.body.style.height = 'auto';
            this.body.style.overflow = 'visible';
        }
        else {
            this.body.style.height = `${this.body.scrollHeight}px`;
            this.body.style.overflow = 'hidden';
        }
        this.isVisible = true;
        this.open = true;
    }
    /** Hides the detail body */
    async hide() {
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (!this.isVisible || this.body == null)
            return;
        const body = this.body;
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        // We can't transition out of `height: auto`, so let's set it to the current height first
        body.style.height = `${body.scrollHeight}px`;
        body.style.overflow = 'hidden';
        requestAnimationFrame(() => {
            body.style.height = '0';
        });
        this.isVisible = false;
        this.open = false;
    }
    render() {
        const summaryIcon = this.hasContent && (this.summaryIcon || 'expand_more');
        return (hAsync("div", { key: 'e9dc92b5eb412ccc12d84679fd1165a7f485929e', ref: (el) => (this.details = el), part: "base", class: {
                details: true,
                'details--open': this.open,
                'details--disabled': this.disabled,
                inline: this.inline,
            } }, hAsync("header", { key: '1ac0a1e7e530ec158c8835dda6fc862dd862bbf3', ref: (el) => (this.header = el), part: "header", id: `${this.componentId}-header`, class: "details__header", role: "button", "aria-expanded": this.open ? 'true' : 'false', "aria-controls": `${this.componentId}-content`, "aria-disabled": this.disabled ? 'true' : 'false', tabIndex: this.disabled ? -1 : 0, onClick: this.handleSummaryClick, onKeyDown: this.handleSummaryKeyDown }, hAsync("div", { key: '5192800ec9cf1e15babf1ad8c05dd95d70ba1d61', part: "summary", class: "details__summary" }, hAsync("slot", { key: 'de784713c59c30e73d35574f61fd2052a61c44a9', name: "summary" }, this.summary)), hAsync("span", { key: 'bb4e39cb1774a3812108d368cf839c2b47aa439e', part: "summary-icon", class: {
                'details__summary-icon': true,
                'details__summary-icon--animate': this.animateSummaryIcon,
            } }, hAsync("slot", { key: 'd7740d440a226c65290720cd91f6511194577a67', name: "summary-icon", onSlotchange: () => (this.animateSummaryIcon = false) }, summaryIcon && hAsync("six-icon", { key: '69b3397df20bc3848bca2bd0ac7f5b5eff607889', size: this.summaryIconSize }, summaryIcon)))), hAsync("div", { key: 'a819ae789261cbefbf1397c6310177bb6d137b90', ref: (el) => (this.body = el), class: "details__body", onTransitionEnd: this.handleBodyTransitionEnd }, hAsync("div", { key: 'c20bbe76c4be98ca7df21851cca3e61b3bcf5350', part: "content", id: `${this.componentId}-content`, class: "details__content", role: "region", "aria-labelledby": `${this.componentId}-header` }, hAsync("slot", { key: 'c250b8f12b6d66f8e3f385c9930ad892d1672619' })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"]
    }; }
    static get style() { return SixDetailsStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-details",
        "$members$": {
            "open": [1540],
            "summary": [1],
            "summaryIcon": [1, "summary-icon"],
            "summaryIconSize": [513, "summary-icon-size"],
            "disabled": [4],
            "inline": [4],
            "selectableEmpty": [4, "selectable-empty"],
            "hasContent": [4, "has-content"],
            "animateSummaryIcon": [32],
            "show": [64],
            "hide": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"], ["summaryIconSize", "summary-icon-size"]]
    }; }
}

//
// Returns an element's offset relative to its parent. Similar to element.offsetTop and element.offsetLeft, except the
// parent doesn't have to be positioned relative or absolute.
//
// NOTE: This was created to work around what appears to be a bug in Chrome where a slotted element's offsetParent
// seems to ignore elements inside the surrounding shadow DOM: https://bugs.chromium.org/p/chromium/issues/detail?id=920069
//
function getOffset(element, parent) {
    return {
        top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),
        left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left),
    };
}

const locks = new Set();
//
// Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible
// without premature unlocking.
//
function lockBodyScrolling(lockingEl) {
    locks.add(lockingEl);
    document.body.classList.add('six-scroll-lock');
}
//
// Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method.
//
function unlockBodyScrolling(lockingEl) {
    locks.delete(lockingEl);
    if (locks.size === 0) {
        document.body.classList.remove('six-scroll-lock');
    }
}
//
// Scrolls an element into view of its container. If the element is already in view, nothing will happen.
//
function scrollIntoView(element, container, direction = 'vertical', behavior = 'smooth') {
    const offset = getOffset(element, container);
    const offsetTop = offset.top + container.scrollTop;
    const offsetLeft = offset.left + container.scrollLeft;
    const minX = container.scrollLeft;
    const maxX = container.scrollLeft + container.offsetWidth;
    const minY = container.scrollTop;
    const maxY = container.scrollTop + container.offsetHeight;
    if (direction === 'horizontal' || direction === 'both') {
        if (offsetLeft < minX) {
            container.scrollTo({ left: offsetLeft, behavior });
        }
        else if (offsetLeft + element.clientWidth > maxX) {
            container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });
        }
    }
    if (direction === 'vertical' || direction === 'both') {
        if (offsetTop < minY) {
            container.scrollTo({ top: offsetTop, behavior });
        }
        else if (offsetTop + element.clientHeight > maxY) {
            container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });
        }
    }
}

let activeModals = [];
class Modal {
    constructor(element, options) {
        this.element = element;
        this.options = options;
        this.handleFocusIn = this.handleFocusIn.bind(this);
    }
    activate() {
        activeModals.push(this.element);
        document.addEventListener('focusin', this.handleFocusIn);
    }
    deactivate() {
        activeModals = activeModals.filter((modal) => modal !== this.element);
        document.removeEventListener('focusin', this.handleFocusIn);
    }
    isActive() {
        // The "active" modal is always the most recent one shown
        return activeModals[activeModals.length - 1] === this.element;
    }
    handleFocusIn(event) {
        var _a, _b;
        const target = event.target;
        const tagName = this.element.tagName.toLowerCase();
        // If focus is lost while the modal is active, run the onFocusOut callback
        if (this.isActive() && target.closest(tagName) !== this.element && typeof ((_a = this.options) === null || _a === void 0 ? void 0 : _a.onFocusOut) === 'function') {
            (_b = this.options) === null || _b === void 0 ? void 0 : _b.onFocusOut(event);
        }
    }
}

const sixDialogCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--width:31rem;display:contents}.dialog{display:flex;align-items:center;justify-content:center;position:fixed;top:0;right:0;bottom:0;left:0;z-index:var(--six-z-index-dialog);color:var(--six-color-web-rock-900)}.dialog:not(.dialog--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.dialog__panel{display:flex;flex-direction:column;z-index:2;width:var(--width);max-width:calc(100% - var(--six-spacing-xx-large));max-height:calc(100% - var(--six-spacing-xx-large));background-color:var(--six-panel-background-color);border-radius:var(--six-border-radius-medium);box-shadow:var(--six-shadow-large);opacity:0;transform:scale(0.8);transition:var(--six-transition-medium) opacity, var(--six-transition-medium) transform}.dialog__panel:focus{outline:none}@media screen and (max-width: 420px){.dialog__panel{max-height:80vh}}.dialog--open .dialog__panel{display:flex;opacity:1;transform:none}.dialog__header{flex:0 0 auto;display:flex}.dialog__title{flex:1 1 auto;font-size:var(--six-font-size-x-large);font-weight:var(--six-font-weight-bold);line-height:var(--six-line-height-dense);padding:var(--six-spacing-large) var(--six-spacing-large) var(--six-spacing-small)}.dialog__close{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-x-large);padding:0 var(--six-spacing-x-small)}.dialog__body{flex:1 1 auto;padding:var(--six-spacing-small) var(--six-spacing-large) var(--six-spacing-large);overflow:auto;-webkit-overflow-scrolling:touch}.dialog__footer{flex:0 0 auto;text-align:right;padding:var(--six-spacing-large)}.dialog__footer ::slotted(six-button:not(:first-of-type)){margin-left:var(--six-spacing-xx-small)}.dialog:not(.dialog--has-footer) .dialog__footer{display:none}.dialog__overlay{position:fixed;top:0;right:0;bottom:0;left:0;background-color:var(--six-overlay-background-color);opacity:0;transition:var(--six-transition-medium) opacity}.dialog--open .dialog__overlay{opacity:0.8}";
var SixDialogStyle0 = sixDialogCss;

let id$c = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The dialog's content.
 * @slot label - The dialog's label. Alternatively, you can use the label prop.
 * @slot footer - The dialog's footer, usually one or more buttons representing various options.
 *
 * @part base - The component's base wrapper.
 * @part overlay - The overlay.
 * @part panel - The dialog panel (where the dialog and its content is rendered).
 * @part header - The dialog header.
 * @part title - The dialog title.
 * @part close-button - The close button.
 * @part body - The dialog body.
 * @part footer - The dialog footer.
 *
 */
class SixDialog {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-dialog-show", 7);
        this.sixAfterShow = createEvent(this, "six-dialog-after-show", 7);
        this.sixHide = createEvent(this, "six-dialog-hide", 7);
        this.sixAfterHide = createEvent(this, "six-dialog-after-hide", 7);
        this.sixInitialFocus = createEvent(this, "six-dialog-initial-focus", 7);
        this.sixOverlayDismiss = createEvent(this, "six-dialog-overlay-dismiss", 7);
        this.componentId = `dialog-${++id$c}`;
        this.willShow = false;
        this.willHide = false;
        this.handleCloseClick = () => {
            this.hide();
        };
        this.handleKeyDown = (event) => {
            if (event.key === 'Escape') {
                this.hide();
            }
        };
        this.handleOverlayClick = () => {
            const sixOverlayDismiss = this.sixOverlayDismiss.emit();
            if (!sixOverlayDismiss.defaultPrevented) {
                this.hide();
            }
        };
        this.handleSlotChange = () => {
            this.hasFooter = hasSlot(this.host, 'footer');
        };
        this.handleTransitionEnd = (event) => {
            const target = event.target;
            // Ensure we only emit one event when the target element is no longer visible
            if (event.propertyName === 'opacity' && target.classList.contains('dialog__panel')) {
                this.isVisible = this.open;
                this.willShow = false;
                this.willHide = false;
                this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();
            }
        };
        this.hasFooter = false;
        this.isVisible = false;
        this.open = false;
        this.label = '';
        this.noHeader = false;
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
    }
    connectedCallback() {
        this.modal = new Modal(this.host, {
            onFocusOut: () => { var _a; return (_a = this.panel) === null || _a === void 0 ? void 0 : _a.focus(); },
        });
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    componentDidLoad() {
        // Show on init if open
        if (this.open) {
            this.show();
        }
    }
    disconnectedCallback() {
        unlockBodyScrolling(this.host);
    }
    /** Shows the dialog */
    async show() {
        if (this.willShow || this.modal == null || this.panel == null || this.dialog == null) {
            return;
        }
        const panel = this.panel;
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.willShow = true;
        this.isVisible = true;
        this.open = true;
        this.modal.activate();
        lockBodyScrolling(this.host);
        if (this.open) {
            requestAnimationFrame(() => {
                const sixInitialFocus = this.sixInitialFocus.emit();
                if (!sixInitialFocus.defaultPrevented) {
                    panel.focus({ preventScroll: true });
                }
            });
        }
    }
    /** Hides the dialog */
    async hide() {
        if (this.willHide || this.modal == null) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        this.willHide = true;
        this.open = false;
        this.modal.deactivate();
        unlockBodyScrolling(this.host);
    }
    render() {
        return (hAsync("div", { key: 'ca2f75786e6b9bca6e8163d6bb963c7cd7ea8a1a', ref: (el) => (this.dialog = el), part: "base", class: {
                dialog: true,
                'dialog--open': this.open,
                'dialog--visible': this.isVisible,
                'dialog--has-footer': this.hasFooter,
            }, onKeyDown: this.handleKeyDown, onTransitionEnd: this.handleTransitionEnd }, hAsync("div", { key: 'a273d85c8bfd251ad2ae2e6d5f3eb92826108a50', part: "overlay", class: "dialog__overlay", onClick: this.handleOverlayClick }), hAsync("div", { key: 'abe0a634c395be75a1d818209b084f963beeafa7', ref: (el) => (this.panel = el), part: "panel", class: "dialog__panel", role: "dialog", "aria-modal": "true", "aria-hidden": this.open ? 'false' : 'true', "aria-label": this.noHeader ? this.label : null, "aria-labelledby": !this.noHeader ? `${this.componentId}-title` : null, tabIndex: 0 }, !this.noHeader && (hAsync("header", { key: '2513644ffd4404c26415a22a191e6ea584c50ff2', part: "header", class: "dialog__header" }, hAsync("span", { key: '02ee4a441ca2f643841810d074fbb6835dbf6745', part: "title", class: "dialog__title", id: `${this.componentId}-title` }, hAsync("slot", { key: '62011be47150243227b1fe6f90250148c1b70161', name: "label" }, this.label || String.fromCharCode(65279))), hAsync("six-icon-button", { key: '4b9a9cd54fe34d74034d76d40be1db034983918d', exportparts: "base:close-button", class: "dialog__close", name: "close", onClick: this.handleCloseClick }))), hAsync("div", { key: 'b289e42038528d65fea205ca31d8ff9cca875fc1', part: "body", class: "dialog__body" }, hAsync("slot", { key: 'dd58a5abcb760bd0b8fab8bf182a67f91905f1e7' })), hAsync("footer", { key: '158e8de8f815c36bccd90c51481959afdeddb207', part: "footer", class: "dialog__footer" }, hAsync("slot", { key: 'cc4a08e857def0f600136964f0044eb620f056d2', name: "footer", onSlotchange: this.handleSlotChange })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"]
    }; }
    static get style() { return SixDialogStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-dialog",
        "$members$": {
            "open": [1540],
            "label": [1],
            "noHeader": [4, "no-header"],
            "hasFooter": [32],
            "isVisible": [32],
            "show": [64],
            "hide": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"]]
    }; }
}

const sixDrawerCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--size:25rem;display:contents}.drawer{top:0;left:0;width:100%;height:100%;pointer-events:none;overflow:hidden}.drawer:not(.drawer--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.drawer--contained{position:absolute;z-index:initial}.drawer--fixed{position:fixed;z-index:var(--six-z-index-drawer)}.drawer__panel{position:absolute;display:flex;flex-direction:column;z-index:2;max-width:100%;max-height:100%;background-color:var(--six-drawer-background-color);color:var(--six-drawer-color);box-shadow:var(--six-shadow-large);transition:var(--six-transition-medium) transform;overflow:auto;pointer-events:all}.drawer__panel:focus{outline:none}.drawer--top .drawer__panel{top:0;right:auto;bottom:auto;left:0;width:100%;height:var(--size);transform:translate(0, -100%)}.drawer--right .drawer__panel{top:0;right:0;bottom:auto;left:auto;width:var(--size);height:100%;transform:translate(100%, 0)}.drawer--bottom .drawer__panel{top:auto;right:auto;bottom:0;left:0;width:100%;height:var(--size);transform:translate(0, 100%)}.drawer--left .drawer__panel{top:0;right:auto;bottom:auto;left:0;width:var(--size);height:100%;transform:translate(-100%, 0)}.drawer--open .drawer__panel{transform:none}.drawer__header{display:flex}.drawer__title{flex:1 1 auto;font-size:var(--six-font-size-large);line-height:var(--six-line-height-dense);padding:var(--six-spacing-large)}.drawer__close{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-x-large);padding:0 var(--six-spacing-large)}.drawer__body{flex:1 1 auto;padding:var(--six-spacing-large);overflow:auto;-webkit-overflow-scrolling:touch}.drawer__footer{text-align:right;padding:var(--six-spacing-large)}.drawer__footer ::slotted(six-button:not(:last-of-type)){margin-right:var(--six-spacing-x-small)}.drawer:not(.drawer--has-footer) .drawer__footer{display:none}.drawer__overlay{display:block;position:fixed;top:0;right:0;bottom:0;left:0;background-color:var(--six-overlay-background-color);opacity:0;transition:var(--six-transition-medium) opacity;pointer-events:all}.drawer--contained .drawer__overlay{position:absolute}.drawer--open .drawer__overlay{opacity:0.4}";
var SixDrawerStyle0 = sixDrawerCss;

let id$b = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The drawer's content.
 * @slot label - The drawer's label. Alternatively, you can use the label prop.
 * @slot footer - The drawer's footer, usually one or more buttons representing various options.
 *
 * @part base - The component's base wrapper.
 * @part overlay - The overlay.
 * @part panel - The drawer panel (where the drawer and its content is rendered).
 * @part header - The drawer header.
 * @part title - The drawer title.
 * @part close-button - The close button.
 * @part body - The drawer body.
 * @part footer - The drawer footer.
 */
class SixDrawer {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-drawer-show", 7);
        this.sixAfterShow = createEvent(this, "six-drawer-after-show", 7);
        this.sixHide = createEvent(this, "six-drawer-hide", 7);
        this.sixAfterHide = createEvent(this, "six-drawer-after-hide", 7);
        this.sixInitialFocus = createEvent(this, "six-drawer-initial-focus", 7);
        this.sixOverlayDismiss = createEvent(this, "six-drawer-overlay-dismiss", 7);
        this.componentId = `drawer-${++id$b}`;
        this.willShow = false;
        this.willHide = false;
        this.handleCloseClick = () => {
            this.hide();
        };
        this.handleKeyDown = (event) => {
            if (event.key === 'Escape') {
                this.hide();
            }
        };
        this.handleOverlayClick = () => {
            const sixOverlayDismiss = this.sixOverlayDismiss.emit();
            if (!sixOverlayDismiss.defaultPrevented) {
                this.hide();
            }
        };
        this.handleSlotChange = () => {
            this.hasFooter = hasSlot(this.host, 'footer');
        };
        this.handleTransitionEnd = (event) => {
            const target = event.target;
            // Ensure we only emit one event when the target element is no longer visible
            if (event.propertyName === 'transform' && target.classList.contains('drawer__panel')) {
                this.resetTransitionVariables();
            }
        };
        this.hasFooter = false;
        this.isVisible = false;
        this.open = false;
        this.label = '';
        this.placement = 'right';
        this.contained = false;
        this.noHeader = false;
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
    }
    connectedCallback() {
        this.modal = new Modal(this.host, {
            onFocusOut: () => { var _a; return (this.contained ? null : (_a = this.panel) === null || _a === void 0 ? void 0 : _a.focus()); },
        });
    }
    componentWillLoad() {
        this.handleSlotChange();
        // Show on init if open
        if (this.open) {
            this.show();
            // if the sidebar is open by default we need to manually reset the
            // transition variables since there will be no transition event
            this.resetTransitionVariables();
        }
    }
    disconnectedCallback() {
        unlockBodyScrolling(this.host);
    }
    /** Shows the drawer */
    async show() {
        if (this.willShow || this.modal == null || this.panel == null || this.drawer == null) {
            return;
        }
        const panel = this.panel;
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.willShow = true;
        this.isVisible = true;
        this.open = true;
        // Lock body scrolling only if the drawer isn't contained
        if (!this.contained) {
            this.modal.activate();
            lockBodyScrolling(this.host);
        }
        if (this.open) {
            // Wait for the next frame before setting initial focus so the dialog is technically visible
            requestAnimationFrame(() => {
                const sixInitialFocus = this.sixInitialFocus.emit();
                if (!sixInitialFocus.defaultPrevented) {
                    panel.focus({ preventScroll: true });
                }
            });
        }
    }
    /** Hides the drawer */
    async hide() {
        if (this.willHide || this.modal == null) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        this.willHide = true;
        this.open = false;
        this.modal.deactivate();
        unlockBodyScrolling(this.host);
    }
    resetTransitionVariables() {
        this.isVisible = this.open;
        this.willShow = false;
        this.willHide = false;
        this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();
    }
    render() {
        return (hAsync("div", { key: 'f02d426d2a68efc12cc6590f6ee95f8e1b94105b', ref: (el) => (this.drawer = el), part: "base", class: {
                drawer: true,
                'drawer--open': this.open,
                'drawer--visible': this.isVisible,
                'drawer--top': this.placement === 'top',
                'drawer--right': this.placement === 'right',
                'drawer--bottom': this.placement === 'bottom',
                'drawer--left': this.placement === 'left',
                'drawer--contained': this.contained,
                'drawer--fixed': !this.contained,
                'drawer--has-footer': this.hasFooter,
            }, onKeyDown: this.handleKeyDown, onTransitionEnd: this.handleTransitionEnd }, hAsync("div", { key: '81876b59d861e53ff8955e482fe2dd3df71d68a6', part: "overlay", class: "drawer__overlay", onClick: this.handleOverlayClick, tabIndex: -1 }), hAsync("div", { key: '0473bed790cf275faab8ca67e048afc225eb0648', ref: (el) => (this.panel = el), part: "panel", class: "drawer__panel", role: "dialog", "aria-modal": "true", "aria-hidden": this.open ? 'false' : 'true', "aria-label": this.noHeader ? this.label : null, "aria-labelledby": !this.noHeader ? `${this.componentId}-title` : null, tabIndex: 0 }, !this.noHeader && (hAsync("header", { key: 'efb5e8bd2e2a68ee85055c072bac41f9ff6baee5', part: "header", class: "drawer__header" }, hAsync("span", { key: '4cd3e96ff627b33857f2b2b4887a11a37bcb980a', part: "title", class: "drawer__title", id: `${this.componentId}-title` }, hAsync("slot", { key: 'e4a7045fcf2c1bcc9e179205f66d755d98018c28', name: "label" }, this.label || String.fromCharCode(65279))), hAsync("six-icon-button", { key: 'd87a631f89b62c8a0c678b044d951082f03d6ac8', exportparts: "base:close-button", class: "drawer__close", name: "close", onClick: this.handleCloseClick }))), hAsync("div", { key: '34efa989c2ddd9bf49dcd21aada4927daf70d6b1', part: "body", class: "drawer__body" }, hAsync("slot", { key: 'c2af5a3a0df3350117a4a71b67f9f33db1d93129' })), hAsync("footer", { key: '8e52a6326a7b98872fd967fbda28d607300871b6', part: "footer", class: "drawer__footer" }, hAsync("slot", { key: 'cb76e761b9f92429059d68a8f324f36732b745d8', name: "footer", onSlotchange: this.handleSlotChange })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"]
    }; }
    static get style() { return SixDrawerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-drawer",
        "$members$": {
            "open": [1540],
            "label": [1],
            "placement": [1],
            "contained": [4],
            "noHeader": [4, "no-header"],
            "hasFooter": [32],
            "isVisible": [32],
            "show": [64],
            "hide": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"]]
    }; }
}

function isTabbable(el) {
    const tabIndex = el.tabIndex;
    return tabIndex > -1;
}
function getNearestTabbableElement(el) {
    // Check the element
    if (isTabbable(el)) {
        return el;
    }
    // Check the element's shadow root
    if (el.shadowRoot != null) {
        const tabbableShadowChild = [...el.shadowRoot.children].find((e) => isTabbable(e));
        if (tabbableShadowChild != null) {
            return tabbableShadowChild;
        }
    }
    // Check the element's children
    if (el.children != null) {
        return [...el.children].map((e) => getNearestTabbableElement(e)).at(0);
    }
    return undefined;
}

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var max = Math.max;
var min = Math.min;
var round = Math.round;

function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = isElement(element) ? getWindow(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$1(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

function getVariation(placement) {
  return placement.split('-')[1];
}

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = offset + overflow[mainSide];
    var max$1 = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

//
class Popover {
    constructor(anchor, popover, options) {
        this.handleTransitionEnd = this.handleTransitionEnd.bind(this);
        this.anchor = anchor;
        this.popover = popover;
        this.options = Object.assign({
            skidding: 0,
            distance: 0,
            placement: 'bottom-start',
            strategy: 'absolute',
            transitionElement: this.popover,
            visibleClass: 'popover-visible',
            onAfterShow: () => Promise,
            onAfterHide: () => Promise,
            onTransitionEnd: () => Promise,
        }, options);
        this.isVisible = false;
        this.popover.hidden = true;
        if (this.options.visibleClass != null) {
            this.popover.classList.remove(this.options.visibleClass);
        }
        this.popover.addEventListener('transitionend', this.handleTransitionEnd);
    }
    handleTransitionEnd(event) {
        var _a, _b;
        const target = event.target;
        // Make sure the transition event originates from from the correct element, and not one that has bubbled up
        if (target === this.options.transitionElement) {
            // This is called before the element is hidden so users can do things like reset scroll. It will fire once for
            // every transition property. Use `event.propertyName` to determine which property has finished transitioning.
            (_a = this.options.onTransitionEnd) === null || _a === void 0 ? void 0 : _a.call(this, event);
            // Make sure we only do this once, since transitionend will fire for every transition
            if (!this.isVisible && !this.popover.hidden) {
                this.popover.hidden = true;
                if (this.options.visibleClass != null) {
                    this.popover.classList.remove(this.options.visibleClass);
                }
                (_b = this.options.onAfterHide) === null || _b === void 0 ? void 0 : _b.call(this);
            }
        }
    }
    destroy() {
        this.popover.removeEventListener('transitionend', this.handleTransitionEnd);
        if (this.popper) {
            this.popper.destroy();
            this.popper = undefined;
        }
    }
    show() {
        this.isVisible = true;
        this.popover.hidden = false;
        requestAnimationFrame(() => {
            if (this.options.visibleClass != null) {
                this.popover.classList.add(this.options.visibleClass);
            }
        });
        if (this.popper) {
            this.popper.destroy();
        }
        this.popper = createPopper(this.anchor, this.popover, {
            placement: this.options.placement,
            strategy: this.options.strategy,
            modifiers: [
                {
                    name: 'flip',
                    options: {
                        boundary: 'viewport',
                    },
                },
                {
                    name: 'offset',
                    options: {
                        offset: [this.options.skidding, this.options.distance],
                    },
                },
            ],
        });
        this.popover.addEventListener('transitionend', () => { var _a; return (_a = this.options.onAfterShow) === null || _a === void 0 ? void 0 : _a.call(this); }, { once: true });
        // Reposition the menu after it appears in case a modifier kicked in
        requestAnimationFrame(() => { var _a; return (_a = this.popper) === null || _a === void 0 ? void 0 : _a.update(); });
    }
    reposition() {
        var _a;
        (_a = this.popper) === null || _a === void 0 ? void 0 : _a.update();
    }
    hide() {
        // Apply the hidden styles and wait for the transition before hiding completely
        this.isVisible = false;
        if (this.options.visibleClass != null) {
            this.popover.classList.remove(this.options.visibleClass);
        }
    }
    setOptions(options) {
        this.options = Object.assign(this.options, options);
        if (this.options.visibleClass != null) {
            this.isVisible
                ? this.popover.classList.add(this.options.visibleClass)
                : this.popover.classList.remove(this.options.visibleClass);
        }
        // Update popper options
        if (this.popper != null) {
            void this.popper.setOptions({
                placement: this.options.placement,
                strategy: this.options.strategy,
            });
            requestAnimationFrame(() => { var _a; return (_a = this.popper) === null || _a === void 0 ? void 0 : _a.update(); });
        }
    }
}

const sixDropdownCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block}.dropdown{position:relative}.dropdown__trigger{display:block}.dropdown__positioner{position:absolute;z-index:var(--six-z-index-dropdown)}.dropdown__positioner__filtered{width:100%}.dropdown__panel{font-family:var(--six-font-sans);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-normal);color:var(--color);background-color:var(--six-panel-background-color);border-radius:var(--six-border-radius-medium);border:1px solid var(--six-color-web-rock-300);box-shadow:var(--six-shadow-small);opacity:0;pointer-events:none;transform:scale(0.9);transition:var(--six-transition-fast) opacity, var(--six-transition-fast) transform;max-width:90vw}.dropdown__panel__scroll{max-height:18.75rem;overflow-y:auto;overflow-x:hidden;overscroll-behavior:none}.dropdown__panel__scroll--virtual{overflow-y:hidden;overflow-x:hidden}.filter-hidden{display:none}.dropdown__positioner[data-popper-placement^=top] .dropdown__panel{transform-origin:bottom}.dropdown__positioner[data-popper-placement^=bottom] .dropdown__panel{transform-origin:top}.dropdown__positioner[data-popper-placement^=left] .dropdown__panel{transform-origin:right}.dropdown__positioner[data-popper-placement^=right] .dropdown__panel{transform-origin:left}.dropdown__positioner.popover-visible .dropdown__panel{opacity:1;transform:none;pointer-events:all}.filter{border-bottom:1px solid var(--six-color-web-rock-300)}.filter__icon{color:var(--six-color-web-rock-600)}";
var SixDropdownStyle0 = sixDropdownCss;

let id$a = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot trigger - The dropdown's trigger, usually a `<six-button>` element.
 * @slot dropdown-footer - The dropdown's footer area.
 * @slot - The dropdown's content.
 *
 * @part base - The component's base wrapper.
 * @part trigger - The container that wraps the trigger.
 * @part panel - The panel that gets shown when the dropdown is open.
 */
class SixDropdown {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-dropdown-show", 7);
        this.sixAfterShow = createEvent(this, "six-dropdown-after-show", 7);
        this.sixHide = createEvent(this, "six-dropdown-hide", 7);
        this.sixAfterHide = createEvent(this, "six-dropdown-after-hide", 7);
        this.sixAutoFilter = createEvent(this, "six-dropdown-auto-filter-fired", 7);
        this.sixAsyncFilterFired = createEvent(this, "six-async-filter-fired", 7);
        this.sixScroll = createEvent(this, "six-dropdown-scroll", 7);
        this.componentId = `dropdown-${++id$a}`;
        this.isVisible = false;
        this.resizeObserver = new ResizeObserver(debounce$1(() => this.updatePanelPosition(), 100));
        this.eventListeners = new EventListeners();
        this.getMenuItems = () => {
            var _a, _b, _c, _d;
            if (this.options.length > 0) {
                return {
                    sixMenuItems: this.renderedOptions.map((option) => (hAsync("six-menu-item", { value: option.value }, option.label))),
                    selectionContainerItems: [],
                };
            }
            if (this.panel == null)
                return { sixMenuItems: [], selectionContainerItems: [] };
            // Relies on the implementation of six-select. Its dropdown slot contains two elements,
            // one for the selected menu items, and one for the other items.
            const selectionContainer = (_a = this.panelSlot) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }).filter(isSelectionContainer).at(0);
            const sixMenuElement = (_b = this.panelSlot) === null || _b === void 0 ? void 0 : _b.assignedElements({ flatten: true }).filter(isSixMenu).at(0);
            const selectionContainerItems = (selectionContainer === null || selectionContainer === void 0 ? void 0 : selectionContainer.querySelectorAll('six-menu-item')) || [];
            let sixMenuItems = ((_c = sixMenuElement === null || sixMenuElement === void 0 ? void 0 : sixMenuElement.querySelector('slot')) === null || _c === void 0 ? void 0 : _c.assignedElements().filter((el) => isSixMenuItem(el))) || [];
            if (sixMenuItems.length === 0) {
                sixMenuItems = Array.from(((_d = sixMenuElement === null || sixMenuElement === void 0 ? void 0 : sixMenuElement.shadowRoot) === null || _d === void 0 ? void 0 : _d.querySelectorAll('six-menu-item')) || []);
            }
            if (selectionContainerItems.length > 0 || sixMenuItems.length > 0) {
                return { sixMenuItems, selectionContainerItems: [...selectionContainerItems] };
            }
            else {
                return {
                    sixMenuItems: sixMenuElement ? Array.from(sixMenuElement.querySelectorAll('six-menu-item')) : [],
                    selectionContainerItems: [],
                };
            }
        };
        this.handleDocumentKeyDown = (event) => {
            var _a;
            const keyboardEvent = event;
            // Close when escape is pressed
            if (keyboardEvent.key === 'Escape') {
                void this.hide();
                this.focusOnTrigger();
                return;
            }
            if (this.filterInputElement === ((_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement)) {
                if (keyboardEvent.key === 'ArrowDown') {
                    const { sixMenuItems, selectionContainerItems } = this.getMenuItems();
                    const item = [...selectionContainerItems, ...sixMenuItems].find((item) => item.style.display !== 'none');
                    if (item != null) {
                        item.setFocus();
                    }
                }
            }
            // Handle tabbing
            if (keyboardEvent.key === 'Tab') {
                // Tabbing within an open menu should close the dropdown and refocus the trigger
                if (this.open && document.activeElement != null && isSixMenuItem(document.activeElement)) {
                    keyboardEvent.preventDefault();
                    void this.hide();
                    this.focusOnTrigger();
                    return;
                }
                // Tabbing outside the containing element closes the panel
                //
                // If the dropdown is used within a shadow DOM, we need to obtain the activeElement within that shadowRoot,
                // otherwise `document.activeElement` will only return the name of the parent shadow DOM element.
                setTimeout(() => {
                    var _a, _b;
                    const activeElement = this.container.getRootNode() instanceof ShadowRoot
                        ? (_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement
                        : document.activeElement;
                    if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest(this.container.tagName.toLowerCase())) !== this.container) {
                        void this.hide();
                        return;
                    }
                });
            }
        };
        this.handleDocumentMouseDown = (event) => {
            // Close when clicking outside the containing element
            const path = event.composedPath();
            if (!path.includes(this.container)) {
                void this.hide();
                return;
            }
        };
        this.handlePanelSelect = (event) => {
            const target = event.target;
            // Hide the dropdown when a menu item is selected
            if (this.closeOnSelect && isSixMenu(target)) {
                void this.hide();
                this.focusOnTrigger();
            }
        };
        this.handleTriggerClick = () => {
            this.open ? this.hide() : this.show();
        };
        this.handleTriggerKeyDown = (event) => {
            // Close when escape or tab is pressed
            if (event.key === 'Escape') {
                this.focusOnTrigger();
                void this.hide();
                return;
            }
            // When spacebar/enter is pressed, show the panel but don't focus on the menu. This let's the user press the same
            // key again to hide the menu in case they don't want to make a selection.
            if (!this.disableHideOnEnterAndSpace && [' ', 'Enter'].includes(event.key)) {
                event.preventDefault();
                this.open ? void this.hide() : void this.show();
                return;
            }
            const menu = this.getMenu();
            // When up/down is pressed, we make the assumption that the user is familiar with the menu and plans to make a
            // selection. Rather than toggle the panel, we focus on the menu (if one exists) and activate the first item for
            // faster navigation.
            if (['ArrowDown', 'ArrowUp'].includes(event.key)) {
                event.preventDefault();
                // Show the menu if it's not already open
                if (!this.open) {
                    void this.show();
                }
                if (menu == null) {
                    return;
                }
                const menuItems = [...menu.querySelectorAll('six-menu-item')];
                const firstMenuItem = menuItems.at(0);
                const lastMenuItem = menuItems.at(menuItems.length - 1);
                // Focus on a menu item
                if (event.key === 'ArrowDown' && firstMenuItem != null) {
                    firstMenuItem.setFocus();
                    return;
                }
                if (event.key === 'ArrowUp' && lastMenuItem != null) {
                    lastMenuItem.setFocus();
                    return;
                }
            }
            // Other keys bring focus to the menu and initiate type-to-select behavior
            const ignoredKeys = ['Tab', 'Shift', 'Meta', 'Ctrl', 'Alt'];
            if (this.open && menu != null && !ignoredKeys.includes(event.key)) {
                void menu.typeToSelect(event.key);
                return;
            }
        };
        this.handleTriggerKeyUp = (event) => {
            // Prevent space from triggering a click event in Firefox
            if (event.key === ' ') {
                event.preventDefault();
            }
        };
        this.handleTriggerSlotChange = () => {
            this.updateAccessibleTrigger();
        };
        this.handleDropdownScroll = () => {
            if (this.scrollPanel == null)
                return;
            this.sixScroll.emit({
                scrollHeight: this.scrollPanel.scrollHeight,
                scrollTop: this.scrollPanel.scrollTop,
                scrollbarHeight: this.scrollPanel.offsetHeight * (this.scrollPanel.offsetHeight / this.scrollPanel.scrollHeight),
                scrollRatio: this.scrollPanel.scrollTop / (this.scrollPanel.scrollHeight - this.scrollPanel.clientHeight),
            });
        };
        this.open = false;
        this.placement = 'bottom-start';
        this.closeOnSelect = true;
        this.distance = 4;
        this.skidding = 0;
        this.hoist = false;
        this.containingElement = undefined;
        this.filter = false;
        this.asyncFilter = false;
        this.filterPlaceholder = 'Filter...';
        this.autofocusFilter = true;
        this.filterDebounce = 0;
        this.disableHideOnEnterAndSpace = false;
        this.options = [];
        this.virtualScroll = false;
        this.matchTriggerWidth = false;
        this.renderedOptions = [];
    }
    get filterEnabled() {
        return this.filter || this.asyncFilter;
    }
    get container() {
        return this.containingElement || this.host;
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
        this.updateAccessibleTrigger();
    }
    handlePopoverOptionsChange() {
        if (this.popover == null)
            return;
        this.popover.setOptions({
            strategy: this.hoist ? 'fixed' : 'absolute',
            placement: this.placement,
            distance: this.distance,
            skidding: this.skidding,
        });
    }
    handleOptionsChange() {
        this.validateOptions();
    }
    validateOptions() {
        if (!Array.isArray(this.options)) {
            this.options = [];
        }
        if (this.virtualScroll && this.options.length === 0) {
            console.error('Options must be defined when using virtual scrolling');
        }
        this.renderedOptions = [...this.options];
    }
    componentWillLoad() {
        this.validateOptions();
        if (this.asyncFilter) {
            this.filterDebounce = DEFAULT_DEBOUNCE_FAST;
        }
    }
    componentDidLoad() {
        this.init();
        if (this.open) {
            void this.show();
        }
    }
    connectedCallback() {
        this.init();
    }
    init() {
        this.initPopover();
        // listen to filter
        const filterInputElement = this.filterInputElement;
        if (filterInputElement != null) {
            this.eventListeners.add(filterInputElement, 'six-input-input', debounce$1(() => {
                var _a;
                const filterValue = (_a = filterInputElement.value) !== null && _a !== void 0 ? _a : '';
                if (this.filter) {
                    this.applyFilter(filterValue);
                }
                this.emitFilterEvents(filterValue);
            }, this.filterDebounce));
        }
    }
    applyFilter(filterTerm) {
        var _a;
        const lowerCaseFilterTerm = ((_a = filterTerm.toLowerCase()) === null || _a === void 0 ? void 0 : _a.trim()) || '';
        if (this.options.length > 0) {
            this.renderedOptions = this.options.filter((option) => {
                var _a, _b, _c, _d;
                return (option.label && ((_b = (_a = String(option.label)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(lowerCaseFilterTerm))) ||
                    (option.value && ((_d = (_c = String(option.value)) === null || _c === void 0 ? void 0 : _c.toLowerCase()) === null || _d === void 0 ? void 0 : _d.includes(lowerCaseFilterTerm)));
            });
        }
        else {
            const { selectionContainerItems, sixMenuItems } = this.getMenuItems();
            const selectionContainerValues = selectionContainerItems.map((s) => s.value);
            // Filter items in selection container
            selectionContainerItems.forEach(async (menuItem) => {
                menuItem.style.display = (await containsFilterTerm(menuItem, lowerCaseFilterTerm)) ? 'unset' : 'none';
            });
            // Filter other items. Always hide items which contained in the selection container.
            sixMenuItems.forEach(async (menuItem) => {
                menuItem.style.display =
                    (await containsFilterTerm(menuItem, lowerCaseFilterTerm)) &&
                        !selectionContainerValues.includes(menuItem.value)
                        ? 'unset'
                        : 'none';
            });
        }
    }
    resetFilter() {
        if (this.filterInputElement != null) {
            this.filterInputElement.value = '';
            this.emitFilterEvents('');
        }
        if (this.options.length > 0) {
            this.renderedOptions = [...this.options];
        }
        else {
            const { selectionContainerItems, sixMenuItems } = this.getMenuItems();
            [...selectionContainerItems, ...sixMenuItems].forEach((item) => (item.style.display = 'unset'));
        }
    }
    emitFilterEvents(filterValue) {
        if (this.filter) {
            this.sixAutoFilter.emit({ filterValue });
        }
        else if (this.asyncFilter) {
            this.sixAsyncFilterFired.emit({ filterValue });
        }
    }
    initPopover() {
        if (this.trigger == null || this.positioner == null)
            return;
        this.popover = new Popover(this.trigger, this.positioner, {
            strategy: this.hoist ? 'fixed' : 'absolute',
            placement: this.placement,
            distance: this.distance,
            skidding: this.skidding,
            transitionElement: this.panel,
            onAfterHide: () => {
                if (this.filterEnabled) {
                    this.resetFilter();
                }
                this.sixAfterHide.emit();
            },
            onAfterShow: async () => {
                this.sixAfterShow.emit();
            },
            onTransitionEnd: () => {
                if (!this.open && this.scrollPanel != null) {
                    this.scrollPanel.scrollTop = 0;
                }
            },
        });
    }
    disconnectedCallback() {
        var _a;
        this.resizeObserver.disconnect();
        this.eventListeners.removeAll();
        void this.hide();
        (_a = this.popover) === null || _a === void 0 ? void 0 : _a.destroy();
        this.popover = undefined;
    }
    /** Shows the dropdown panel */
    async show() {
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (this.isVisible || this.popover == null || this.panel == null) {
            return;
        }
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.eventListeners.add(this.panel, 'six-menu-item-selected', this.handlePanelSelect);
        this.eventListeners.add(document, 'keydown', this.handleDocumentKeyDown);
        this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);
        this.isVisible = true;
        this.open = true;
        if (this.trigger != null) {
            this.resizeObserver.observe(this.trigger);
        }
        this.updatePanelPosition();
        this.popover.show();
        if (this.filterEnabled && this.autofocusFilter) {
            requestAnimationFrame(() => {
                var _a;
                (_a = this.filterInputElement) === null || _a === void 0 ? void 0 : _a.setFocus();
            });
        }
    }
    /**
     * Set min width of dropdown panel to the width of the trigger element
     */
    updatePanelPosition() {
        if (!this.open) {
            return;
        }
        if (this.matchTriggerWidth && this.trigger != null && this.panel != null) {
            const width = this.trigger.getBoundingClientRect().width;
            this.panel.style.minWidth = `${width}px`;
        }
        if (this.popover != null) {
            this.popover.reposition();
        }
    }
    /** Hides the dropdown panel */
    async hide() {
        this.resizeObserver.disconnect();
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (!this.isVisible || this.panel == null || this.popover == null) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        this.eventListeners.remove(this.panel, 'six-menu-item-selected', this.handlePanelSelect);
        this.eventListeners.remove(document, 'keydown', this.handleDocumentKeyDown);
        this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);
        this.isVisible = false;
        this.open = false;
        this.popover.hide();
    }
    focusOnTrigger() {
        var _a;
        if (this.trigger == null)
            return;
        const trigger = (_a = this.triggerSlot) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }).at(0);
        if (trigger != null) {
            if (typeof trigger.setFocus === 'function') {
                trigger.setFocus();
            }
            else if (typeof trigger.focus === 'function') {
                trigger.focus();
            }
        }
    }
    getMenu() {
        var _a;
        return (_a = this.panelSlot) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }).filter(isSixMenu).at(0);
    }
    /**
     * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu
     * is activated.
     *
     * @deprecated: use the property `matchTriggerWidth` instead.
     */
    async reposition() {
        if (this.open && this.popover != null) {
            this.popover.reposition();
        }
    }
    //
    // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and
    // `aria-expanded`. These must be applied to the "accessible trigger" (the tabbable portion of the trigger element
    // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,
    // a child of the slotted element, or an element in the slotted element's shadow root.
    //
    // For example, the accessible trigger of an <sl-button> is a <button> located inside its shadow root.
    //
    // To determine this, we assume the first tabbable element in the trigger slot is the "accessible trigger."
    //
    updateAccessibleTrigger() {
        var _a;
        if (this.trigger == null)
            return;
        const assignedElements = (((_a = this.triggerSlot) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true })) || []);
        const accessibleTrigger = assignedElements.map(getNearestTabbableElement).at(0);
        if (accessibleTrigger != null) {
            accessibleTrigger.setAttribute('aria-haspopup', 'true');
            accessibleTrigger.setAttribute('aria-expanded', this.open ? 'true' : 'false');
        }
    }
    render() {
        return (hAsync("div", { key: '26cba1568dfda35efa2791df5c2228aa51201fb9', part: "base", id: this.componentId, class: {
                dropdown: true,
                'dropdown--open': this.open,
            } }, hAsync("span", { key: '5bd9acd7e1470a88158b233df327090cccaf6707', part: "trigger", class: "dropdown__trigger", ref: (el) => (this.trigger = el), onClick: this.handleTriggerClick, onKeyDown: this.handleTriggerKeyDown, onKeyUp: this.handleTriggerKeyUp }, hAsync("slot", { key: 'ab3915fb99a943f5e1ab8b9ad6c0339e6312614f', name: "trigger", ref: (el) => (this.triggerSlot = el), onSlotchange: this.handleTriggerSlotChange })), hAsync("div", { key: 'f9615d2a48275ce167a683ffc5b6f1b4f3945732', ref: (el) => (this.positioner = el), class: {
                dropdown__positioner: true,
                dropdown__positioner__filtered: (this.filter || this.asyncFilter) && !this.hoist,
            } }, hAsync("div", { key: '121185720985a0650aa7a03d697fa66bb9752c35', ref: (el) => (this.panel = el), part: "panel", class: "dropdown__panel", role: "menu", "aria-hidden": this.open ? 'false' : 'true', "aria-labelledby": this.componentId }, this.filterEnabled && (hAsync("six-input", { key: '7422f2a0179806aa116c7ae42aa71bcb79167395', class: {
                filter: true,
                'filter-hidden': !this.open,
            }, "dropdown-search": true, "aria-hidden": this.open ? 'false' : 'true', ref: (el) => (this.filterInputElement = el), placeholder: this.filterPlaceholder }, hAsync("six-icon", { key: '5e22ddbdb949c2ec389bb238202e02e0b5905c66', class: "filter__icon", slot: "suffix", size: "small" }, "search"))), hAsync("div", { key: '3212216bf8a156711ff7ea68ce916626146c1828', class: {
                dropdown__panel__scroll: true,
                'dropdown__panel__scroll--virtual': this.virtualScroll,
            }, onScroll: this.handleDropdownScroll, ref: (el) => (this.scrollPanel = el) }, hAsync("slot", { key: '37626706d68beb0e3894e5db14af370a7433e5e0', ref: (el) => (this.panelSlot = el) }), this.options.length > 0 && (hAsync("six-menu", { key: '014217ffca577be6a6d46aa212df955eb93f3233', part: "menu", items: this.renderedOptions, virtualScroll: this.virtualScroll }))), hAsync("slot", { key: 'a9fd4bc79298e9e720f9608717dec61c3bbc3100', name: "dropdown-footer" })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"],
        "distance": ["handlePopoverOptionsChange"],
        "hoist": ["handlePopoverOptionsChange"],
        "placement": ["handlePopoverOptionsChange"],
        "skidding": ["handlePopoverOptionsChange"],
        "options": ["handleOptionsChange"],
        "virtualScroll": ["handleOptionsChange"]
    }; }
    static get style() { return SixDropdownStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-dropdown",
        "$members$": {
            "open": [1540],
            "placement": [1],
            "closeOnSelect": [4, "close-on-select"],
            "distance": [2],
            "skidding": [2],
            "hoist": [4],
            "containingElement": [16],
            "filter": [4],
            "asyncFilter": [4, "async-filter"],
            "filterPlaceholder": [1, "filter-placeholder"],
            "autofocusFilter": [4, "autofocus-filter"],
            "filterDebounce": [1026, "filter-debounce"],
            "disableHideOnEnterAndSpace": [4, "disable-hide-on-enter-and-space"],
            "options": [1040],
            "virtualScroll": [4, "virtual-scroll"],
            "matchTriggerWidth": [4, "match-trigger-width"],
            "renderedOptions": [32],
            "show": [64],
            "hide": [64],
            "reposition": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"]]
    }; }
}
function isSixMenu(el) {
    return (el === null || el === void 0 ? void 0 : el.tagName.toLowerCase()) === 'six-menu';
}
function isSixMenuItem(el) {
    return (el === null || el === void 0 ? void 0 : el.tagName.toLowerCase()) === 'six-menu-item';
}
function isSelectionContainer(el) {
    var _a;
    return ((_a = el === null || el === void 0 ? void 0 : el.getAttribute('class')) === null || _a === void 0 ? void 0 : _a.includes('selection-container')) || false;
}
async function containsFilterTerm(menuItem, lowerCaseFilterTerm) {
    return (menuItem.value.toLowerCase().includes(lowerCaseFilterTerm) ||
        (await menuItem.getTextLabel()).toLowerCase().includes(lowerCaseFilterTerm));
}

const sixErrorCss = ".six-error-container{text-align:left;color:var(--six-color-danger-800);width:100%;font-size:var(--six-input-help-text-font-size-medium)}";
var SixErrorStyle0 = sixErrorCss;

/**
 * @since 4.0
 * @status beta
 *
 * @slot default - The error's message content
 */
class SixError {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (hAsync("div", { key: 'dc966ba9b5f28544d4cab98d2fb1b95222155778', class: "six-error-container" }, hAsync("slot", { key: 'fc21a42d199af3b1292607ae79abe955d2bff6f9' })));
    }
    static get style() { return SixErrorStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-error",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixErrorPageCss = ".six-error-page__title{display:flex;justify-content:center;font-size:var(--six-font-size-xx-large);font-weight:bold;margin-bottom:var(--six-spacing-large)}.six-error-page__description>*{text-align:center}.six-error-page__icon-container{display:flex;justify-content:center}.six-error-page__icon::part(icon){background-color:var(--six-color-web-rock-300)}";
var SixErrorPageStyle0 = sixErrorPageCss;

const TITLE_PER_ERROR_CODE = {
    403: {
        en: 'Access Denied',
        de: 'Kein Zugriff',
    },
    404: {
        en: 'Not Found',
        de: 'Seite nicht gefunden',
    },
    500: {
        en: 'Ooops!',
        de: 'Ups!',
    },
};
const DESCRIPTION_PER_ERROR_CODE = {
    403: {
        en: [
            'You don’t have permission to access this page. ',
            'Please contact an administrator or click the SIX logo on top left.',
        ],
        de: [
            'Sie haben keine Zugriffsberechtigung auf diese Seite.',
            'Bitte wenden Sie sich an einen Administrator oder klicken Sie auf das SIX-Logo oben links.',
        ],
    },
    404: {
        en: ['We have not found the page you requested.', 'Please click the SIX logo on top left.'],
        de: ['Wir haben die angeforderte Seite nicht gefunden.', 'Bitte klicken Sie auf das SIX-Logo oben links.'],
    },
    500: {
        en: ['Sorry, we messed up! We try to fix this.', 'Please click the SIX logo on top left.'],
        de: [
            'Sorry, das war unser Fehler! Wir versuchen das zu beheben.',
            'Bitte klicken Sie auf das SIX-Logo oben links.',
        ],
    },
};
/*
 * @since 2.2.0
 * @status experimental
 * @part container - The whole component container
 * @part label - The language label
 * @part separator - The separator between the language labels
 */
class SixErrorPage {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.errorCode = undefined;
        this.language = 'en';
        this.customTitle = undefined;
        this.customDescription = undefined;
        this.customIcon = undefined;
    }
    getIconName() {
        if (this.customIcon != null) {
            return this.customIcon;
        }
        if (this.errorCode == null) {
            return;
        }
        if (this.errorCode === 403) {
            return 'lock';
        }
        if (this.errorCode === 404) {
            return 'find-in-page';
        }
        if (this.errorCode === 500) {
            return 'sentiment-dissatisfied';
        }
    }
    getErrorTitle() {
        if (this.customTitle != null) {
            return this.customTitle;
        }
        if (this.errorCode == null) {
            return;
        }
        return TITLE_PER_ERROR_CODE[this.errorCode][this.language];
    }
    getErrorDescription() {
        var _a;
        if (this.errorCode == null && this.customDescription == null) {
            return;
        }
        const descriptions = (_a = this.getDescriptions()) !== null && _a !== void 0 ? _a : [];
        return descriptions.map((errorMessage) => hAsync("div", null, errorMessage));
    }
    getDescriptions() {
        if (this.customDescription !== undefined) {
            return this.customDescription;
        }
        if (this.errorCode == null) {
            return;
        }
        return DESCRIPTION_PER_ERROR_CODE[this.errorCode][this.language];
    }
    render() {
        return (hAsync("div", { key: '0f3797074845032adde350dca741a4dae51f1c1c', part: "container" }, hAsync("div", { key: '2eb9fd5e237184e25d857ada02f9da9d87f40c34', class: "six-error-page__icon-container", part: "icon-container" }, hAsync("six-picto", { key: 'ef5ecee61903065ba7967b296f1a75d1939736af', size: "4xl", class: "six-error-page__icon", part: "icon" }, this.getIconName())), hAsync("div", { key: '26bdb56627f6277ee5ac0983d0115e3c9eda1fd3', class: "six-error-page__title", part: "title" }, this.getErrorTitle()), hAsync("div", { key: '22e514ed632fc726e78fed2ea3c5148de11fbb71', class: "six-error-page__description", part: "description" }, this.getErrorDescription())));
    }
    static get style() { return SixErrorPageStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-error-page",
        "$members$": {
            "errorCode": [2, "error-code"],
            "language": [1],
            "customTitle": [1, "custom-title"],
            "customDescription": [16],
            "customIcon": [1, "custom-icon"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixFileListCss = ".six-files-list__container{padding:1rem}.six-files-list__container :last-child{padding-bottom:0}";
var SixFileListStyle0 = sixFileListCss;

/**
 * @since 2.0.0
 * @status experimental
 *
 */
class SixFileList {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (hAsync("div", { key: '76ef964aaeb29acfe802d3b7a843e1387921be11', class: "six-files-list__container" }, hAsync("slot", { key: 'cd309c4ff0016237e3c162b6eb58130e444a9dbe' })));
    }
    static get style() { return SixFileListStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-file-list",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixFileListItemCss = ".six-files-list-item{padding-bottom:0.5rem}.six-files-list-item__name{color:var(--six-color-action-600);cursor:pointer}.six-files-list-item__name--disabled{cursor:inherit;color:var(--six-color-web-rock-500)}.six-files-list-item__name:hover:not(.six-files-list-item__name--disabled){color:var(--six-color-action-500)}.six-files-list-item__date{padding-left:1rem;color:var(--six-color-web-rock-600)}.six-files-list-item__size{padding-left:1rem;color:var(--six-color-web-rock-600)}.six-files-list-item__icon{padding-left:0.5rem;display:inline-block;transform:translateY(-3px);cursor:pointer;color:var(--six-color-web-rock-600)}.six-files-list-item__icon--disabled{cursor:not-allowed;color:var(--six-color-web-rock-500)}.six-files-list-item__icon:hover:not(.six-files-list-item__icon--disabled){color:var(--six-color-web-rock-900)}";
var SixFileListItemStyle0 = sixFileListItemCss;

/**
 * @since 2.0.0
 * @status experimental
 *
 */
class SixFileListItem {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.downloadEvent = createEvent(this, "six-file-list-item-download", 7);
        this.removeEvent = createEvent(this, "six-file-list-item-remove", 7);
        this.downloadFile = () => {
            if (this.nodownload) {
                return;
            }
            this.downloadEvent.emit({ fileId: this.identifier, name: this.name });
        };
        this.removeFile = () => {
            if (this.nodelete) {
                return;
            }
            this.removeEvent.emit({ fileId: this.identifier, name: this.name });
        };
        this.identifier = '';
        this.name = '';
        this.date = '';
        this.size = undefined;
        this.nodownload = false;
        this.nodelete = false;
    }
    render() {
        return (hAsync("div", { key: '65ea17f1ce1ff3d9cb48696bbf25465f126ca879', class: "six-files-list-item" }, hAsync("span", { key: '53749104860721fd92bbb07b84029e2d3a22c0c0', class: {
                'six-files-list-item__name': true,
                'six-files-list-item__name--disabled': this.nodownload,
            }, onClick: this.downloadFile }, this.name), hAsync("span", { key: '637a12f8bb040e3cf5392ebe7ac488e3d08ae6fb', class: "six-files-list-item__date" }, this.date), this.size != null && hAsync("span", { key: '208e19ce7a5fa642b0b860fdba2d0dc83feb12fc', class: "six-files-list-item__size" }, Math.round(this.size / 1024), " KB"), hAsync("six-icon", { key: 'ecca120c27d87cd450f99ab24ec26f056d014d71', class: {
                'six-files-list-item__icon': true,
                'six-files-list-item__icon--disabled': this.nodelete,
            }, size: "small", onClick: this.removeFile }, "delete")));
    }
    static get style() { return SixFileListItemStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-file-list-item",
        "$members$": {
            "identifier": [513],
            "name": [513],
            "date": [513],
            "size": [514],
            "nodownload": [516],
            "nodelete": [516]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["identifier", "identifier"], ["name", "name"], ["date", "date"], ["size", "size"], ["nodownload", "nodownload"], ["nodelete", "nodelete"]]
    }; }
}

const sixFileUploadCss = ".sc-six-file-upload-h{position:relative;box-sizing:border-box}.sc-six-file-upload-h *.sc-six-file-upload,.sc-six-file-upload-h *.sc-six-file-upload:before,.sc-six-file-upload-h *.sc-six-file-upload:after{box-sizing:border-box}.sc-six-file-upload-h{position:static;display:block}.six-file-upload.sc-six-file-upload six-card.sc-six-file-upload{box-shadow:none;padding:0;width:100%}.six-file-upload__label--highlighted.sc-six-file-upload{color:var(--six-color-action-600)}.six-file-upload__container--full.sc-six-file-upload{border:dashed 1px var(--six-color-web-rock-500)}.six-file-upload__label-icon.sc-six-file-upload{margin-right:0.5rem}.six-file-upload__drop-zone.sc-six-file-upload{padding:2rem 0;display:flex;justify-content:center;width:100%;transition:background-color 0.3s}.six-file-upload__drop-zone__spinner-container.sc-six-file-upload{display:flex;align-items:center}.six-file-upload__drop-zone__spinner-container.sc-six-file-upload six-spinner.sc-six-file-upload{margin-right:var(--six-spacing-x-small)}.six-file-upload__drop-zone--compact.sc-six-file-upload{padding:0}.six-file-upload__input.sc-six-file-upload{cursor:pointer;position:absolute;top:0;left:0;width:100%;user-select:none;height:100%;opacity:0;outline:none}.six-file-upload--disabled.sc-six-file-upload .six-file-upload__drop-zone.sc-six-file-upload{background-color:var(--six-color-inactive);cursor:not-allowed}.six-file-upload.sc-six-file-upload:not(.six-file-upload--disabled) .six-file-upload__drop-zone.sc-six-file-upload:hover,.six-file-upload__drop-zone--hover.sc-six-file-upload{background-color:var(--six-color-action-light-to-be-defined)}.six-file-upload.sc-six-file-upload:not(.six-file-upload--disabled) .six-file-upload__drop-zone.sc-six-file-upload:hover.six-file-upload__drop-zone--compact,.six-file-upload__drop-zone--hover.six-file-upload__drop-zone--compact.sc-six-file-upload{background-color:inherit}.six-file-upload--disabled.sc-six-file-upload .six-file-upload__input.sc-six-file-upload{cursor:not-allowed}.six-file-upload__error-text.sc-six-file-upload{font-size:var(--six-input-help-text-font-size-medium)}";
var SixFileUploadStyle0 = sixFileUploadCss;

/**
 * @since 2.0.0
 * @status experimental
 *
 * @slot error-text - Error text that is shown when the status is set to invalid. Alternatively, you can use the error-text prop.
 */
class SixFileUpload {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.success = createEvent(this, "six-file-upload-success", 7);
        this.failure = createEvent(this, "six-file-upload-failure", 7);
        this.handleSlotChange = () => {
            let validType = false;
            if (this.errorText != null &&
                ((typeof this.errorText == 'string' && this.errorText.trim().length > 0) ||
                    (typeof this.errorText == 'object' && this.errorText.length > 0))) {
                validType = true;
            }
            this.hasError = validType || hasSlot(this.host, 'error-text');
        };
        this.handleFiles = (files) => {
            if (this.disabled || files.length === 0 || this.uploading) {
                return;
            }
            if (!this.multiple && files.length > 1) {
                return this.failure.emit({ reason: 'Only one file is allowed.' });
            }
            for (const file of files) {
                if (file == null) {
                    return;
                }
                let acceptedTypesList = [];
                if (this.accept != null) {
                    acceptedTypesList = this.accept.replace(/\s/g, '').split(',');
                }
                if (acceptedTypesList.length > 0 && acceptedTypesList.indexOf(file.type) === -1) {
                    const reason = files.length > 1 ? 'One or more files have invalid MIME type.' : 'File has invalid MIME type.';
                    return this.failure.emit({ reason });
                }
                if (this.maxFileSize != null && file.size > this.maxFileSize) {
                    const reason = files.length > 1 ? 'One or more files are too big' : 'File is too big.';
                    return this.failure.emit({ reason });
                }
            }
            const eventPayload = this.multiple ? { files } : { file: files[0] };
            this.success.emit(eventPayload);
        };
        this.onChange = () => {
            var _a;
            if (((_a = this.fileInput) === null || _a === void 0 ? void 0 : _a.files) != null) {
                const files = this.fileInput.files;
                this.handleFiles(files);
                this.fileInput.value = '';
            }
        };
        this.isOver = false;
        this.hasError = false;
        this.compact = false;
        this.label = undefined;
        this.disabled = false;
        this.accept = undefined;
        this.multiple = false;
        this.maxFileSize = undefined;
        this.uploading = false;
        this.errorText = '';
        this.invalid = false;
    }
    dragenterHandler() {
        if (!this.disabled) {
            this.isOver = true;
        }
    }
    dragoverHandler() {
        if (!this.disabled) {
            this.isOver = true;
        }
    }
    dragleaveHandler() {
        if (!this.disabled) {
            this.isOver = false;
        }
    }
    dropHandler({ dataTransfer }) {
        if (!this.disabled) {
            this.isOver = false;
            if (dataTransfer != null) {
                this.handleFiles(dataTransfer.files);
            }
        }
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    componentDidLoad() {
        var _a;
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {
            this.host.addEventListener(eventName, this.preventDefaults, false);
            document.body.addEventListener(eventName, this.preventDefaults, false);
        });
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
    }
    disconnectedCallback() {
        var _a;
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {
            this.host.removeEventListener(eventName, this.preventDefaults, false);
            document.body.removeEventListener(eventName, this.preventDefaults, false);
        });
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
    }
    preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }
    renderLabel() {
        var _a;
        return ((_a = this.label) !== null && _a !== void 0 ? _a : (this.compact ? ('Upload') : (hAsync("span", null, "Drop files to upload, or ", hAsync("span", { class: "six-file-upload__label--highlighted" }, "browse")))));
    }
    render() {
        const Container = this.compact ? 'six-button' : 'six-card';
        const errorMessages = (Array.isArray(this.errorText) ? this.errorText : [this.errorText]).filter((text) => text != null && text.trim() !== '');
        return (hAsync("div", { key: 'c34cb1b694fdfa5ce818c3283bc831ab7eea4ebc', class: {
                'six-file-upload': true,
                'six-file-upload--disabled': this.disabled || this.uploading,
            } }, hAsync(Container, { key: '4f678e31adc6a27b13aad0afc7fc74a512847485', disabled: this.disabled || this.uploading, "aria-invalid": this.invalid ? 'true' : 'false', class: {
                'six-file-upload__container--compact': this.compact,
                'six-file-upload__container--full': !this.compact,
            } }, this.compact && !this.uploading && (hAsync("span", { key: '44ca591aa262ae411926a791b02a80bd9ecf8ab3', slot: "prefix" }, hAsync("six-icon", { key: 'd198b17b87fe446537f3f6a6728ed6c8c0d7a5e7', class: "six-file-upload__label-icon" }, "arrow_circle_up"))), hAsync("div", { key: '401862887f522c994ba0553e7ca099ef33f59a4f', class: {
                'six-file-upload__drop-zone': true,
                'six-file-upload__drop-zone--hover': this.isOver,
                'six-file-upload__drop-zone--compact': this.compact,
            } }, this.uploading ? (hAsync("span", { class: "six-file-upload__drop-zone__spinner-container" }, hAsync("six-spinner", null), " Uploading...")) : (hAsync("div", null, hAsync("span", null, this.renderLabel()), hAsync("input", { class: "six-file-upload__input", type: "file", name: "resume", disabled: this.disabled, accept: this.accept, multiple: this.multiple, onChange: this.onChange, ref: (el) => (this.fileInput = el) }))))), hAsync("div", { key: '117259e2211571ba71569842550a865d66de2c66', "aria-hidden": this.invalid ? 'false' : 'true' }, hAsync("slot", { key: 'b475f3fe8b093e7c71160e8da5d5584f93484619', name: "error-text" }, errorMessages.map((text) => (hAsync("six-error", null, hAsync("div", { class: "six-file-upload__error-text" }, text))))))));
    }
    get host() { return getElement(this); }
    static get style() { return SixFileUploadStyle0; }
    static get cmpMeta() { return {
        "$flags$": 6,
        "$tagName$": "six-file-upload",
        "$members$": {
            "compact": [4],
            "label": [1],
            "disabled": [4],
            "accept": [1],
            "multiple": [4],
            "maxFileSize": [2, "max-file-size"],
            "uploading": [516],
            "errorText": [1, "error-text"],
            "invalid": [516],
            "isOver": [32],
            "hasError": [32]
        },
        "$listeners$": [[1, "dragenter", "dragenterHandler"], [1, "dragover", "dragoverHandler"], [1, "dragleave", "dragleaveHandler"], [1, "drop", "dropHandler"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["uploading", "uploading"], ["invalid", "invalid"]]
    }; }
}

const sixFooterCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.six-footer{color:var(--six-color-web-rock-900);padding:var(--six-spacing-x-small) 0;text-align:center;width:100%;background-color:var(--six-footer-background-color);box-shadow:var(--six-shadow-medium-top)}";
var SixFooterStyle0 = sixFooterCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the content of the footer.
 */
class SixFooter {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (hAsync("footer", { key: 'd3c9c9900cd4472f3d3756c97a6dd1f9f1a9f137', class: "six-footer" }, hAsync("slot", { key: '165e9147aa9148532b408ab339084705f88aa0b2' })));
    }
    static get style() { return SixFooterStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-footer",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixGroupLabelCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:block}";
var SixGroupLabelStyle0 = sixGroupLabelCss;

let id$9 = 0;
/**
 * @since 1.1
 * @status stable
 *
 * @slot label - The wrapped component's label. Alternatively, you can use the label prop.
 * @slot help-text - Help text that describes how to use the input.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part form-control - The form control that wraps the label, textarea, and help text.
 * @part label - The label of wrapped component.
 * @part help-text - The help text of the wrapped component.
 */
class SixGroupLabel {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.wrapperLabelId = `label-${++id$9}`;
        this.labelId = `label-label-${id$9}`;
        this.helpTextId = `label-help-text-${id$9}`;
        this.handleSlotChange = () => {
            this.hasLabelSlot = hasSlot(this.host, 'label');
            this.hasHelpTextSlot = hasSlot(this.host, 'help-text');
        };
        this.hasHelpTextSlot = false;
        this.hasLabelSlot = false;
        this.size = 'medium';
        this.label = '';
        this.helpText = '';
        this.disabled = false;
        this.required = false;
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    disconnectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
    }
    render() {
        return (hAsync(FormControl, { key: 'd706981268ce0d614e4386308d3ae4a886c0ca10', inputId: this.wrapperLabelId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, size: this.size, disabled: this.disabled, required: this.required }, hAsync("slot", { key: '5c282b7c8428a2da611a6feb97bba40af53f830d' })));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "helpText": ["handleLabelChange"],
        "label": ["handleLabelChange"]
    }; }
    static get style() { return SixGroupLabelStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-group-label",
        "$members$": {
            "size": [513],
            "label": [1],
            "helpText": [1, "help-text"],
            "disabled": [516],
            "required": [4],
            "hasHelpTextSlot": [32],
            "hasLabelSlot": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["size", "size"], ["disabled", "disabled"]]
    }; }
}

const sixHeaderCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block;user-select:none;--search-border-width:1px}::slotted(six-search-field){position:absolute;margin-left:var(--search-border-width);width:calc(100% - 2 * var(--search-border-width))}.six-header{display:flex;width:100%;height:3.75rem;background-color:var(--six-header-background-color);align-items:center;flex-wrap:wrap;box-shadow:var(--six-shadow-medium);border-bottom:var(--six-header-border-with) solid var(--six-header-border-color)}.six-header__logo{width:6rem;margin-top:0.15rem}.six-header__logo--clickable{cursor:pointer}.six-header__logo--six{height:20px;overflow:visible}.six-header__logo--bme{margin-top:6px;height:40px;overflow:visible}.six-header__placeholder{flex:1}.six-header__menu,.six-header__logo,.six-header__custom,.six-header__search,.six-header__notification,.six-header__app-switcher,.six-header__profile{height:calc(100% - 0.25rem - 1px);padding:0 1.25rem;display:flex;align-items:center;border-bottom:solid 0.25rem transparent}.six-header__menu--open,.six-header__logo--open,.six-header__custom--open,.six-header__search--open,.six-header__notification--open,.six-header__app-switcher--open,.six-header__profile--open{border-bottom:solid 0.25rem var(--six-header-border-color-open)}.six-header__app-switcher-dropdown{display:flex;align-items:center}.six-header__selected-app{cursor:pointer;font-size:0.9rem;font-weight:600;padding-right:0;padding-left:0.3rem}.six-header__selected-app:hover{color:var(--six-header-selected-app-color-hover)}.six-header__search-field{opacity:0;transform:scale(0.9);transition:var(--six-transition-fast) opacity, var(--six-transition-fast) transform;display:none}.six-header__search-field--visible{opacity:1;transform:none;display:block}.six-header__search-field--shift-content.six-header__search-field--visible{height:2.65rem;transition:var(--six-transition-fast) height}.six-header__search-field--shift-content:not(.six-header__search-field--visible){height:0;transition:var(--six-transition-fast) height}";
var SixHeaderStyle0 = sixHeaderCss;

var Section;
(function (Section) {
    Section[Section["None"] = 0] = "None";
    Section[Section["Search"] = 1] = "Search";
    Section[Section["AppSwitcher"] = 2] = "AppSwitcher";
    Section[Section["Profile"] = 3] = "Profile";
})(Section || (Section = {}));
var Slot;
(function (Slot) {
    Slot["Search"] = "search-field";
    Slot["Notifications"] = "notifications";
    Slot["AppSwitcher"] = "app-switcher-menu";
    Slot["Profile"] = "profile-menu";
    Slot["Logo"] = "logo";
})(Slot || (Slot = {}));
/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define a custom component that is included in the header.
 * @slot search-field - Used to define the search field component in the header.
 * @slot notifications - Used to define the notification component in the header.
 * @slot app-switcher-menu - Used to define the application switcher menu in the header.
 * @slot profile-menu - Used to define the profile menu in the header.
 * @slot profile-avatar - Used to define the avator in the header.
 */
class SixHeader {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixAppNameClicked = createEvent(this, "six-header-app-name-clicked", 7);
        this.sixAppSwitcherSelect = createEvent(this, "six-header-app-switcher-select", 7);
        this.sixProfileSelect = createEvent(this, "six-header-profile-select", 7);
        this.sixHamburgerClick = createEvent(this, "six-header-hamburger-menu-clicked", 7);
        this.logoClick = createEvent(this, "six-header-logo-clicked", 7);
        this.sixSearchFieldToggle = createEvent(this, "six-header-search-field-toggle", 7);
        this.eventListeners = new EventListeners();
        this.setupMenu = (el) => {
            if (el == null)
                return;
            this.eventListeners.add(el, 'click', () => this.sixHamburgerClick.emit());
        };
        this.setupLogo = (el) => {
            if (!this.clickableLogo || el == null)
                return;
            this.eventListeners.add(el, 'click', () => this.logoClick.emit());
        };
        this.setupProfile = (el) => {
            if (el == null)
                return;
            this.eventListeners.add(el, 'six-dropdown-show', this.selectSection(Section.Profile));
            this.eventListeners.add(el, 'six-dropdown-hide', this.selectSection(Section.None));
            this.eventListeners.add(el, 'six-menu-item-selected', (event) => {
                const { name, item } = event.detail;
                this.sixProfileSelect.emit({ selectedLabel: item.innerText, name, item });
            });
        };
        this.setupAppSwitcher = (el) => {
            if (el == null)
                return;
            this.eventListeners.add(el, 'six-dropdown-show', this.selectSection(Section.AppSwitcher));
            this.eventListeners.add(el, 'six-dropdown-hide', this.selectSection(Section.None));
            this.eventListeners.add(el, 'six-menu-item-selected', (event) => {
                const { name, item } = event.detail;
                this.selectedApp = item.innerText;
                this.sixAppSwitcherSelect.emit({ selectedLabel: item.innerText, name, item });
            });
        };
        this.appNameClicked = () => this.sixAppNameClicked.emit();
        this.computeSearchOpenState = () => {
            this.selectedSection = this.openSearch ? Section.Search : Section.None;
        };
        this.shiftContent = false;
        this.hideHamburgerMenu = false;
        this.openHamburgerMenu = false;
        this.openSearch = false;
        this.clickableLogo = false;
        this.logo = 'six';
        this.selectedApp = undefined;
        this.selectedSection = undefined;
    }
    handleOpenSearchChange() {
        this.computeSearchOpenState();
    }
    /** Sets open state for search */
    async setSearchOpenState(openState) {
        if (this.selectedSection === Section.Search && !openState) {
            this.selectedSection = Section.None;
        }
        else if (openState && this.selectedSection !== Section.Search) {
            this.selectedSection = Section.Search;
        }
    }
    /** Get open state for search */
    async getIsSearchOpen() {
        return this.selectedSection === Section.Search;
    }
    hasSlot(slot) {
        if (this.slots == null) {
            return false;
        }
        return this.slots[slot];
    }
    isSectionSelected(value) {
        return value === this.selectedSection;
    }
    selectSection(section) {
        return () => (this.selectedSection = section);
    }
    toggleSearch() {
        const visible = this.selectedSection !== Section.Search;
        this.selectedSection = this.selectedSection === Section.Search ? Section.None : Section.Search;
        this.sixSearchFieldToggle.emit({ visible });
        if (this.selectedSection === Section.Search) {
            // setFocus deferred due to https://github.com/ionic-team/stencil/issues/3772
            setTimeout(async () => {
                var _a, _b;
                const slot = getSlot(this.host, Slot.Search);
                (_b = (_a = slot === null || slot === void 0 ? void 0 : slot.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('six-input')) === null || _b === void 0 ? void 0 : _b.setFocus();
            }, 50);
        }
    }
    componentWillLoad() {
        this.slots = {
            [Slot.Search]: hasSlot(this.host, Slot.Search),
            [Slot.Notifications]: hasSlot(this.host, Slot.Notifications),
            [Slot.AppSwitcher]: hasSlot(this.host, Slot.AppSwitcher),
            [Slot.Profile]: hasSlot(this.host, Slot.Profile),
            [Slot.Logo]: hasSlot(this.host, Slot.Logo),
        };
        if (this.hasSlot(Slot.AppSwitcher)) {
            this.updateSelectedApp();
        }
        if (this.hasSlot(Slot.Search)) {
            this.computeSearchOpenState();
        }
    }
    connectedCallback() {
        const appSwitcherSlot = getSlot(this.host, Slot.AppSwitcher);
        if (appSwitcherSlot) {
            this.mutationObserver = new MutationObserver((mutations) => {
                if (mutations.some((mutation) => mutation.type === 'childList' || mutation.type === 'attributes')) {
                    this.updateSelectedApp();
                }
            });
            this.mutationObserver.observe(appSwitcherSlot, { attributes: true, childList: true, subtree: true });
        }
    }
    updateSelectedApp() {
        var _a;
        // there are more concise ways to select the first checked menu item, but this is one that works for jest
        const element = getSlot(this.host, Slot.AppSwitcher);
        if (element == null) {
            return undefined;
        }
        const items = Array.from(element.querySelectorAll('six-menu-item'));
        const firstCheckedMenuItem = items.find((item) => item.hasAttribute('checked') && item.getAttribute('checked') !== 'false');
        this.selectedApp = (_a = firstCheckedMenuItem === null || firstCheckedMenuItem === void 0 ? void 0 : firstCheckedMenuItem.textContent) !== null && _a !== void 0 ? _a : undefined;
    }
    disconnectedCallback() {
        var _a;
        this.eventListeners.removeAll();
        (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    }
    render() {
        const hamburgerMenu = !this.hideHamburgerMenu && (hAsync("section", { key: 'e0060caf03b4443c0c2ca0d7d6e838fe2cda9247', class: "six-header__menu" }, hAsync("six-icon-button", { key: 'afd2253fe00cab79343585182631c61273a1eb73', name: this.openHamburgerMenu ? 'menu_open' : 'menu', ref: this.setupMenu })));
        const search = this.hasSlot(Slot.Search) && (hAsync("section", { key: '7afdb12a8678768040aa8d7b13a702036f7c8944', class: {
                'six-header__search': true,
                'six-header__search--open': this.isSectionSelected(Section.Search),
            } }, hAsync("six-icon-button", { key: 'e74bfeb4b498054a5a27b47b77098df3e3127fa1', name: "search", onClick: () => this.toggleSearch(), "data-testid": "search-trigger" })));
        const notifications = this.hasSlot(Slot.Notifications) && (hAsync("section", { key: 'aaebff2380d8aa202bc9a176adc97013bd20fdd4', class: "six-header__notification" }, hAsync("slot", { key: 'f381617fa45c88ab28479bcd6fddd5056c656d5a', name: Slot.Notifications })));
        const appSwitcher = this.hasSlot(Slot.AppSwitcher) && (hAsync("section", { key: '137ebbe83f797b6060d4a740b9a7ff53310d94d2', class: {
                'six-header__app-switcher': true,
                'six-header__app-switcher--open': this.isSectionSelected(Section.AppSwitcher),
            } }, hAsync("six-dropdown", { key: 'e88ff8a735170ae22d0612f67aac519f354665e0', distance: 13, skidding: 20, placement: "bottom-end", ref: this.setupAppSwitcher }, hAsync("div", { key: '4749d501dd3bb00a3d2d34bfed0e01e50a150478', slot: "trigger", class: "six-header__app-switcher-dropdown" }, hAsync("a", { key: '961853ec68698a4671eccf636904ba77b1cf026b', onClick: this.appNameClicked, class: "six-header__selected-app" }, this.selectedApp), hAsync("six-icon-button", { key: '36fb94e411f095a07a834d5cbc6eccd88dcd43b7', name: "apps" })), hAsync("slot", { key: 'b4798537a4c0a8508625239cd1e82f5efb178d84', name: Slot.AppSwitcher }))));
        const profile = this.hasSlot(Slot.Profile) && (hAsync("section", { key: '87445efddacfdfd14295c5d7e16d1e9b88f699d9', class: {
                'six-header__profile': true,
                'six-header__profile--open': this.isSectionSelected(Section.Profile),
            } }, hAsync("six-dropdown", { key: '57438fd8a3a460ac143f88d5c712dda23f0d5db9', distance: 17, skidding: 20, placement: "bottom-end", ref: this.setupProfile }, hAsync("slot", { key: '27f5eaf2e58656318ced682c93f8e6cdb458baee', name: "profile-avatar", slot: "trigger" }), hAsync("slot", { key: '84ebebcb3459bfd20da5d634da2566021ed90589', name: "profile-menu" }))));
        const logo = this.hasSlot(Slot.Logo) ? (hAsync("section", null, hAsync("slot", { name: "logo" }))) : (hAsync("section", { class: {
                'six-header__logo': true,
                'six-header__logo--clickable': this.clickableLogo,
            }, ref: this.setupLogo }, this.logo === 'bme' ? bmeLogo() : sixLogo()));
        return (hAsync(Host, { key: '86f29e0f93e9346fd367983b8c885f67e63bbc0e' }, hAsync("header", { key: '0e99b773dfb04ec20af06b02224fc29d528fe943', part: "header", class: "six-header" }, hamburgerMenu, logo, hAsync("section", { key: '193c3f560e4a03ff8b31390c06f0910a049a5a03', class: "six-header__placeholder" }), hAsync("section", { key: 'c44735628b13467a0a2657d6c3031197d1070114', class: "six-header__custom" }, hAsync("slot", { key: 'a1df241dcadd9089ffca2ac9885fe80ef69251ea' })), search, notifications, appSwitcher, profile), hAsync("div", { key: '5c3b389ba9d5b614e8ddc3127c73f8bb7c0dc718', class: {
                'six-header__search-field': true,
                'six-header__search-field--visible': this.isSectionSelected(Section.Search),
                'six-header__search-field--shift-content': this.shiftContent,
            } }, hAsync("slot", { key: 'ea2db42b3dcb28c42014401ea424d89c0841aedc', name: Slot.Search }))));
    }
    static get assetsDirs() { return ["assets"]; }
    get host() { return getElement(this); }
    static get watchers() { return {
        "openSearch": ["handleOpenSearchChange"]
    }; }
    static get style() { return SixHeaderStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-header",
        "$members$": {
            "shiftContent": [4, "shift-content"],
            "hideHamburgerMenu": [4, "hide-hamburger-menu"],
            "openHamburgerMenu": [4, "open-hamburger-menu"],
            "openSearch": [4, "open-search"],
            "clickableLogo": [4, "clickable-logo"],
            "logo": [1],
            "selectedApp": [32],
            "selectedSection": [32],
            "setSearchOpenState": [64],
            "getIsSearchOpen": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
function sixLogo() {
    return (hAsync("svg", { class: "six-header__logo--six", viewBox: "0 0 90 26", xmlns: "http://www.w3.org/2000/svg" }, hAsync("title", null, "SIX"), hAsync("g", { fill: "#DE3919", "fill-rule": "nonzero" }, hAsync("path", { d: "m22.798 3.869c1.82-2.168 4.549-3.545 7.6-3.545h6.807v4.961h-6.807c-1.526 0-2.89.689-3.8 1.771l-12.19 14.526c-1.82 2.166-4.549 3.545-7.6 3.545h-6.808v-4.961h6.808c1.525 0 2.889-.689 3.799-1.773l12.191-14.525" }), hAsync("path", { d: "m42.16.324h5.21v24.806h-5.21z" }), hAsync("path", { d: "m66.743 3.869l4.195 4.999 4.195-4.999c1.819-2.168 4.549-3.545 7.6-3.545h6.806v4.961h-6.806c-1.526 0-2.89.689-3.8 1.771l-4.758 5.669 4.758 5.669c.91 1.084 2.274 1.773 3.8 1.773h6.806v4.961h-6.806c-3.051 0-5.781-1.379-7.6-3.545l-4.195-4.999-4.195 4.999c-1.82 2.166-4.55 3.545-7.6 3.545h-6.807v-4.961h6.807c1.525 0 2.889-.689 3.799-1.773l4.758-5.669-4.758-5.669c-.91-1.083-2.274-1.771-3.799-1.771h-6.807v-4.961h6.807c3.05 0 5.78 1.378 7.6 3.545" }))));
}
function bmeLogo() {
    return (hAsync("svg", { class: "six-header__logo--bme", viewBox: "0 0 249.38 122.47" }, hAsync("title", null, "BME Exchange"), hAsync("defs", null, hAsync("style", null, ".cls-1 ", '{', "fill: #002c5f;", '}', ".cls-1, .cls-2 ", '{', "stroke-width: 0px;", '}', ".cls-2 ", '{', "fill: #959595;", '}')), hAsync("polygon", { class: "cls-2", points: "183.07 88.18 205.3 52.02 178.8 52.02 178.8 36.16 205.3 36.16 183.07 0 202.45 0 228.71 44.09 201.32 88.18 183.07 88.18" }), hAsync("g", null, hAsync("path", { class: "cls-1", d: "M124.21,104.18c2.64,0,3.97,1.46,3.97,4.38v8.37h-1.96l-.44-1.71h-.07c-.41.66-.88,1.15-1.4,1.47-.52.31-1.17.47-1.97.47-1.05,0-1.83-.37-2.36-1.11-.53-.74-.8-1.65-.8-2.75,0-1.29.39-2.27,1.18-2.94s1.93-1.03,3.44-1.1l1.71-.07v-.6c0-.8-.14-1.38-.42-1.75-.28-.37-.7-.55-1.27-.55-.43,0-.88.08-1.35.23-.47.15-.96.36-1.46.62l-.81-1.94c1.17-.69,2.51-1.04,4.01-1.04ZM125.5,110.99l-1.11.05c-.89.05-1.53.26-1.91.63-.38.38-.58.9-.58,1.58,0,1.22.48,1.82,1.45,1.82.61,0,1.13-.26,1.53-.77.41-.51.61-1.23.61-2.16v-1.15Z" }), hAsync("path", { class: "cls-1", d: "M143.33,112.3c0,.97-.2,1.82-.61,2.55-.41.73-.99,1.3-1.74,1.71-.75.41-1.65.61-2.7.61-.74,0-1.44-.07-2.1-.21-.66-.14-1.28-.35-1.87-.64v-2.77c.61.35,1.27.63,1.96.83.69.2,1.35.3,1.98.3.75,0,1.32-.2,1.71-.61.38-.41.58-.92.58-1.53,0-.65-.2-1.17-.6-1.58-.4-.41-1.09-.86-2.08-1.37-.65-.35-1.23-.73-1.74-1.13-.52-.4-.92-.89-1.22-1.48s-.45-1.32-.45-2.21c-.02-1.37.42-2.47,1.29-3.3.88-.83,2.04-1.24,3.51-1.22.72,0,1.41.09,2.08.27.66.18,1.29.42,1.89.73l-.83,2.4c-1.11-.6-2.15-.9-3.11-.9-.66,0-1.17.18-1.52.53-.35.35-.53.81-.53,1.38,0,.45.08.82.24,1.13.16.31.44.6.83.88.39.28.93.58,1.6.92,1.14.58,2,1.23,2.57,1.95s.86,1.64.86,2.78Z" }), hAsync("path", { class: "cls-1", d: "M150.52,116.94h-6.09v-1.55l1.66-.6v-12.18l-1.66-.6v-1.55h6.09v1.55l-1.66.6v12.18l1.66.6v1.55Z" }), hAsync("path", { class: "cls-1", d: "M162.33,116.94h-3.02l-2.72-6.16-2.81,6.16h-2.91l4.15-8.49-3.81-7.98h2.93l2.47,5.72,2.47-5.72h2.93l-3.81,8.05,4.13,8.42Z" }), hAsync("path", { class: "cls-1", d: "M172.04,117.17c-1.58,0-2.79-.52-3.62-1.57-.83-1.05-1.25-2.67-1.25-4.87,0-2.04.42-3.65,1.27-4.81s2.08-1.74,3.71-1.74c.63,0,1.2.07,1.71.2.51.13.96.32,1.36.57l-.76,2.12c-.37-.18-.74-.33-1.11-.44-.37-.11-.72-.16-1.06-.16-1.6,0-2.4,1.42-2.4,4.27s.8,4.15,2.4,4.15c.49,0,.96-.07,1.4-.22.44-.15.87-.35,1.3-.61v2.28c-.83.55-1.81.83-2.95.83Z" }), hAsync("path", { class: "cls-1", d: "M186.25,110.64c0,1.28-.18,2.4-.54,3.38-.36.98-.91,1.75-1.65,2.31-.74.56-1.68.84-2.81.84-1.06,0-1.96-.28-2.7-.83s-1.3-1.32-1.68-2.31c-.38-.98-.58-2.11-.58-3.39,0-1.98.42-3.56,1.25-4.72.83-1.16,2.08-1.74,3.76-1.74,1.51,0,2.71.55,3.61,1.66s1.35,2.71,1.35,4.8ZM179.03,110.66c0,1.4.18,2.46.53,3.18.35.72.92,1.08,1.71,1.08s1.38-.36,1.73-1.08c.35-.72.53-1.79.53-3.21s-.18-2.45-.53-3.15c-.35-.7-.93-1.05-1.73-1.05s-1.35.35-1.71,1.05c-.35.7-.53,1.76-.53,3.17Z" }), hAsync("path", { class: "cls-1", d: "M200.16,104.18c1.15,0,2.02.37,2.59,1.1.58.73.87,1.86.87,3.4v8.26h-2.68v-7.61c0-1.89-.53-2.84-1.59-2.84-.75,0-1.29.33-1.6.99-.32.66-.47,1.63-.47,2.91v6.55h-2.68v-7.63c0-.97-.13-1.68-.39-2.13-.26-.45-.66-.68-1.2-.68-.81,0-1.36.37-1.65,1.12s-.43,1.8-.43,3.17v6.16h-2.68v-12.52h2.1l.32,1.64h.16c.28-.62.68-1.08,1.22-1.4.54-.32,1.15-.47,1.84-.47.78,0,1.42.17,1.91.52.49.34.85.8,1.06,1.37h.18c.64-1.26,1.68-1.89,3.09-1.89Z" }), hAsync("path", { class: "cls-1", d: "M211.78,104.18c1.28,0,2.27.55,2.99,1.66s1.07,2.72,1.07,4.84-.36,3.66-1.07,4.79c-.71,1.13-1.69,1.7-2.92,1.7-.69,0-1.29-.16-1.8-.48s-.92-.77-1.24-1.34h-.12c.03.38.06.74.08,1.06.02.32.03.61.03.88v5.19h-2.68v-18.06h2.17l.37,1.66h.14c.69-1.26,1.68-1.89,2.98-1.89ZM211.02,106.42c-.78,0-1.35.32-1.7.95-.35.63-.52,1.61-.52,2.95v.51c0,1.37.17,2.39.51,3.06.34.67.91,1,1.73,1,1.38,0,2.08-1.4,2.08-4.2,0-1.4-.17-2.46-.51-3.18-.34-.72-.87-1.08-1.59-1.08Z" }), hAsync("path", { class: "cls-1", d: "M222.16,104.18c2.64,0,3.97,1.46,3.97,4.38v8.37h-1.96l-.44-1.71h-.07c-.41.66-.88,1.15-1.4,1.47-.52.31-1.17.47-1.97.47-1.05,0-1.83-.37-2.37-1.11-.53-.74-.8-1.65-.8-2.75,0-1.29.39-2.27,1.18-2.94.78-.67,1.93-1.03,3.44-1.1l1.71-.07v-.6c0-.8-.14-1.38-.41-1.75-.28-.37-.7-.55-1.27-.55-.43,0-.88.08-1.35.23-.47.15-.96.36-1.47.62l-.81-1.94c1.17-.69,2.51-1.04,4.01-1.04ZM223.45,110.99l-1.11.05c-.89.05-1.53.26-1.91.63-.38.38-.58.9-.58,1.58,0,1.22.48,1.82,1.45,1.82.61,0,1.13-.26,1.53-.77.41-.51.61-1.23.61-2.16v-1.15Z" }), hAsync("path", { class: "cls-1", d: "M234.32,104.18c1.14,0,2.02.37,2.65,1.1s.95,1.85.95,3.36v8.3h-2.68v-7.66c0-.92-.13-1.62-.38-2.09s-.68-.7-1.28-.7c-.85,0-1.43.34-1.76,1.01-.33.68-.5,1.76-.5,3.25v6.18h-2.68v-12.52h2.1l.32,1.64h.16c.31-.62.73-1.08,1.27-1.4s1.15-.47,1.82-.47Z" }), hAsync("path", { class: "cls-1", d: "M238.98,104.41h2.84l1.84,6.64c.11.43.21.86.3,1.3s.16.87.21,1.28h.09c.05-.37.12-.77.22-1.2.1-.43.21-.89.33-1.38l1.78-6.64h2.79l-4.2,14.05c-.43,1.38-.97,2.4-1.63,3.04-.65.65-1.5.97-2.55.97-.28,0-.53-.02-.77-.05-.24-.03-.46-.08-.68-.14v-2.28c.17.05.34.08.52.11s.35.05.52.05c.54,0,.95-.18,1.23-.53.28-.35.56-.94.82-1.75l.28-1.04-3.94-12.43Z" })), hAsync("polygon", { class: "cls-1", points: "249.37 88.18 231.12 88.18 218.67 67.95 227.9 53.08 249.37 88.18" }), hAsync("polygon", { class: "cls-1", points: "218.53 18.92 229.99 0 249.37 0 227.9 34.66 218.53 18.92" }), hAsync("polygon", { class: "cls-1", points: "112.98 72.41 155.28 72.41 155.28 62.51 123.42 62.51 123.42 49.18 146.37 49.18 146.37 39.27 123.42 39.27 123.42 25.79 155.28 25.79 155.28 15.89 112.98 15.89 112.98 39.27 123.42 39.27 123.42 49.18 112.98 49.18 112.98 72.41" }), hAsync("path", { class: "cls-1", d: "M10.44,48.38h20.6c4.68,0,8.1,3.06,8.1,7.11s-3.42,7.02-8.1,7.02H10.44v-14.13ZM10.44,25.79h18.54c4.59,0,7.02,2.96,7.02,6.29s-2.43,6.39-7.02,6.39H10.44v-12.68ZM0,72.41h32.21c9.9,0,17.37-6.3,17.37-16.38,0-7.2-4.23-11.89-10.08-13.77,4.23-1.89,6.93-6.03,6.93-11.25,0-10.08-7.65-15.12-16.29-15.12H0v22.59h10.44v9.9H0v24.03Z" }), hAsync("polygon", { class: "cls-1", points: "56.47 72.37 66.91 72.37 66.91 37.45 81.58 52.31 96.25 37.45 96.25 72.37 106.69 72.37 106.69 14.68 81.58 39.72 56.47 14.68 56.47 72.37" }), hAsync("path", { class: "cls-1", d: "M1.69,82.58c.19,0,.46,0,.62,0,.51,0,.96.18.96.79,0,.49-.37.7-.48.76-.23.1-.73.1-1.1.1v-1.64ZM1.69,85.33c.71-.01,1.12-.01,1.39.15.27.17.37.46.37.76,0,.42-.23.68-.57.8-.28.09-.79.09-1.19.08v-1.81ZM1.76,88.18c.87.02,1.95.04,2.65-.44.62-.44.78-1.06.78-1.59,0-.6-.25-1.15-.78-1.42-.18-.08-.38-.12-.58-.17.32-.13.69-.29.93-.79.11-.22.15-.44.15-.65,0-.3-.08-.71-.38-1.05-.39-.42-1-.53-1.92-.53-.32,0-.89,0-1.21.02l-1.3.02-.06.05c.04.9.05,1.24.05,2.53s0,2.65-.03,3.99l.07.03h1.63Z" }), hAsync("path", { class: "cls-1", d: "M10.17,83.04c.19.21.27.49.33.75.08.36.09.7.1.93.04,1.4-.26,2.42-1.35,2.42-1.29,0-1.38-1.52-1.38-2.36,0-1.12.27-1.7.71-1.98.25-.15.5-.19.68-.19.35,0,.69.16.91.43M11.65,82.44c-.16-.2-.34-.38-.56-.52-.48-.33-1.13-.47-1.79-.47-.58,0-1.17.1-1.67.39-1.14.65-1.35,1.73-1.42,2.13-.06.32-.09.64-.09.96,0,.64.07,1.83.96,2.65.71.66,1.68.76,2.16.76.72,0,1.45-.18,2-.63.93-.77,1.12-2.04,1.12-2.83,0-1.47-.47-2.14-.7-2.43" }), hAsync("path", { class: "cls-1", d: "M17.76,86.9c-1.02.06-1.83.07-2.12.07h-.18c-.02-2.5,0-3.13.07-5.37l-.06-.05c-.8.03-1.01.03-1.66.03l-.05.05c.04.75.04.98.04,2.09,0,1.47,0,2.95,0,4.43l.04.05c1.84-.03,2.17-.03,3.86-.03l.05-.05.07-1.18-.04-.04Z" }), hAsync("path", { class: "cls-1", d: "M21.15,84.16c-.79-.33-1.19-.5-1.19-.92,0-.28.27-.66.88-.66.71,0,1.13.29,1.48.53l.08-.03.07-1.23-.04-.07c-.4-.17-.83-.35-1.74-.35-1.75,0-2.37.99-2.37,1.99,0,1.14.88,1.55,1.41,1.79l.31.14c.65.28,1.14.51,1.14,1,0,.35-.31.77-1.12.77-.85,0-1.33-.37-1.6-.59l-.09.03-.07,1.32.06.07c.1.04.21.08.31.11.22.08.77.24,1.47.24.28,0,.99-.04,1.56-.3.78-.38,1.12-1.09,1.12-1.89,0-.53-.21-1.11-.7-1.49-.25-.18-.5-.3-.72-.4l-.24-.09Z" }), hAsync("path", { class: "cls-1", d: "M25.56,85.29l.47-1.58.32-1.1.29,1.22.35,1.46h-1.43ZM27.54,81.55c-.9.02-1.09.02-2.09.02l-.07.06c-.49,1.59-.79,2.54-2.17,6.48l.04.07h1.46l.06-.06.46-1.7h2.02l.4,1.73.06.06c.68-.03.87-.03,1.63-.03l.04-.07c-1.13-4.01-1.26-4.44-1.8-6.51l-.06-.05Z" }), hAsync("path", { class: "cls-1", d: "M32.94,84.16c-.79-.33-1.2-.5-1.2-.92,0-.28.26-.66.89-.66.71,0,1.13.29,1.47.53l.08-.03.07-1.23-.04-.07c-.41-.17-.83-.35-1.74-.35-1.75,0-2.37.99-2.37,1.99,0,1.14.88,1.55,1.41,1.79l.31.14c.64.28,1.14.51,1.14,1,0,.35-.31.77-1.12.77-.85,0-1.33-.37-1.6-.59l-.09.03-.07,1.32.06.07c.1.04.2.08.31.11.21.08.76.24,1.47.24.27,0,.99-.04,1.55-.3.78-.38,1.12-1.09,1.12-1.89,0-.53-.21-1.11-.7-1.49-.26-.18-.49-.3-.72-.4l-.24-.09Z" }), hAsync("path", { class: "cls-1", d: "M41.67,88.12c-.05-1.22-.06-1.55-.06-2.75l2.06-3.77-.03-.06c-.7.02-.89.02-1.47.02l-.05.06c-.54,1.17-.8,1.67-1.19,2.43-.1-.21-.58-1.11-.67-1.29-.17-.34-.3-.62-.57-1.22l-.07-.04c-.8.04-1,.06-1.78.06l-.03.08c.28.48,1.52,2.6,1.76,3.03.13.25.26.48.4.73v.29c0,.93-.01,1.34-.07,2.44l.05.06c.78-.03.99-.03,1.65-.03l.06-.06Z" }), hAsync("path", { class: "cls-1", d: "M54.31,81.55c-.98.02-1.14.02-2.17.02l-.06.06-.43,1.52-.37,1.35-.44,1.63-.41-1.68-.26-1.06-.47-1.8-.04-.05c-1,.02-1.17.02-2.22.02l-.06.06c-.1,2.8-.13,3.52-.34,6.52l.04.06c.6-.03.78-.03,1.32-.03l.05-.06.03-1.79.06-1.81.04-1.77.41,1.66.36,1.33.63,2.42.06.06c.58-.03.74-.03,1.4-.03l.05-.06.54-1.99.38-1.37.52-1.96v1.68l.03,1.42v2.25l.04.06c.65-.03.9-.03,1.62-.03l.05-.06c-.06-1.07-.13-2.14-.16-3.22-.03-.59-.05-1.18-.08-1.77-.04-.87-.05-.98-.05-1.54l-.05-.05Z" }), hAsync("path", { class: "cls-1", d: "M60.62,86.92c-1.11.06-1.37.07-2.57.07v-1.64s2.17,0,2.17,0l.07-.05.06-1.06-.05-.06-2.26.04v-1.49c1.06,0,1.27,0,2.4.03l.04-.06.07-1.09-.04-.04h-4.11l-.06.06c.06.91.08,1.25.08,3.76,0,1.18-.02,1.77-.05,2.74l.05.04h4.12l.08-.06.06-1.14-.05-.07Z" }), hAsync("path", { class: "cls-1", d: "M63.49,82.69c.13,0,.27,0,.39,0,.37,0,1.09,0,1.09.82,0,.26-.07.61-.41.82-.26.16-.59.18-1.07.19v-1.83ZM63.93,85.61c.63,1.07.77,1.35,1.37,2.57l.08.05c.29-.01.57-.03.86-.05.29,0,.59-.01.88-.01l.06-.11c-.36-.46-.46-.6-1.13-1.68-.3-.48-.45-.73-.69-1.14.43-.19,1.28-.58,1.28-1.77,0-.41-.11-1.26-.88-1.67-.49-.25-.99-.26-2.09-.25h-.66s-1.14.01-1.14.01l-.05.06c.05.94.08,1.92.08,4.46,0,.88,0,1.29-.03,2.07l.05.06c.68-.04.83-.04,1.6-.04l.06-.05c-.08-1.08-.08-1.38-.09-2.49l.46-.02Z" }), hAsync("path", { class: "cls-1", d: "M72.95,86.51c-.22.17-.69.52-1.47.52-1.06,0-1.82-.8-1.82-2.12,0-.8.28-2.21,1.8-2.21.71,0,1.09.27,1.33.45l.08-.02.08-1.29-.04-.05c-.34-.13-.91-.34-1.73-.34-2.42,0-3.26,1.86-3.26,3.51,0,1.79,1.1,3.37,3.38,3.37.78,0,1.3-.2,1.6-.32l.05-.06.06-1.4-.06-.04Z" }), hAsync("path", { class: "cls-1", d: "M75.77,85.29l.47-1.58.33-1.1.28,1.22.34,1.46h-1.42ZM77.75,81.55c-.9.02-1.08.02-2.08.02l-.07.06c-.5,1.59-.8,2.54-2.18,6.48l.04.07h1.46l.06-.06.46-1.7h2.02l.4,1.73.07.06c.69-.03.87-.03,1.63-.03l.05-.07c-1.13-4.01-1.26-4.44-1.8-6.51l-.07-.05Z" }), hAsync("path", { class: "cls-1", d: "M82.34,86.98c-.02-.92-.03-1.79-.03-2.69,0-.5,0-1.01,0-1.51.19-.02.38-.03.57-.03.57,0,1.69,0,1.69,2,0,1.17-.44,1.69-.67,1.88-.42.34-1.07.34-1.58.34M81.83,88.18c.24.02.49.02.74.02,1.05,0,2.74-.04,3.43-1.71.25-.61.31-1.37.31-1.78,0-.89-.2-1.56-.43-1.98-.63-1.16-1.84-1.2-2.91-1.2-.43,0-.86.02-1.29.04h-1s-.05.06-.05.06c.04.9.08,1.69.08,4.28,0,.92,0,1.47-.03,2.24l.06.03h1.1Z" }), hAsync("path", { class: "cls-1", d: "M91.57,83.04c.19.21.27.49.33.75.07.36.09.7.1.93.04,1.4-.27,2.42-1.35,2.42-1.3,0-1.38-1.52-1.38-2.36,0-1.12.27-1.7.71-1.98.25-.15.51-.19.68-.19.35,0,.68.16.91.43M93.04,82.44c-.16-.2-.34-.38-.56-.52-.48-.33-1.13-.47-1.79-.47-.58,0-1.18.1-1.67.39-1.15.65-1.35,1.73-1.43,2.13-.05.32-.08.64-.08.96,0,.64.08,1.83.95,2.65.72.66,1.69.76,2.16.76.72,0,1.46-.18,2.01-.63.93-.77,1.11-2.04,1.11-2.83,0-1.47-.47-2.14-.7-2.43" }), hAsync("path", { class: "cls-1", d: "M97.83,84.16c-.79-.33-1.2-.5-1.2-.92,0-.28.27-.66.89-.66.71,0,1.13.29,1.48.53l.08-.03.07-1.23-.04-.07c-.4-.17-.83-.35-1.73-.35-1.76,0-2.37.99-2.37,1.99,0,1.14.88,1.55,1.41,1.79l.31.14c.64.28,1.14.51,1.14,1,0,.35-.31.77-1.12.77-.86,0-1.33-.37-1.6-.59l-.09.03-.06,1.32.06.07c.1.04.2.08.3.11.22.08.76.24,1.47.24.28,0,1-.04,1.56-.3.78-.38,1.12-1.09,1.12-1.89,0-.53-.2-1.11-.7-1.49-.25-.18-.5-.3-.73-.4l-.24-.09Z" }), hAsync("path", { class: "cls-1", d: "M107.67,86.92c-1.1.06-1.36.07-2.56.07l-.03-1.64h2.19l.07-.05.05-1.06-.04-.06-2.27.04v-1.49c1.06,0,1.28,0,2.41.03l.05-.06.06-1.09-.05-.04h-4.11l-.06.06c.06.91.08,1.25.08,3.76,0,1.18-.02,1.77-.05,2.74l.05.04h4.12l.07-.06.07-1.14-.06-.07Z" }), hAsync("path", { class: "cls-1", d: "M111.38,84.16c-.79-.33-1.2-.5-1.2-.92,0-.28.27-.66.89-.66.71,0,1.13.29,1.47.53l.08-.03.08-1.23-.05-.07c-.4-.17-.82-.35-1.73-.35-1.76,0-2.37.99-2.37,1.99,0,1.14.88,1.55,1.4,1.79l.31.14c.64.28,1.14.51,1.14,1,0,.35-.31.77-1.12.77s-1.32-.37-1.6-.59l-.09.03-.07,1.32.05.07c.11.04.2.08.31.11.21.08.77.24,1.47.24.28,0,.99-.04,1.55-.3.79-.38,1.12-1.09,1.12-1.89,0-.53-.2-1.11-.7-1.49-.26-.18-.5-.3-.72-.4l-.24-.09Z" }), hAsync("path", { class: "cls-1", d: "M115.85,82.69c.21-.01.41-.01.61-.01.82.02,1.05.44,1.05.99,0,.12,0,.67-.5.95-.26.14-.6.15-1.16.15v-2.07ZM115.43,81.55l-1.19.03-.06.05c.04,1.22.07,2.03.07,3.1,0,1.14-.03,2.28-.06,3.42l.06.05c.69-.03.84-.03,1.59-.03l.05-.05c-.04-1.01-.04-1.25-.04-2.21,1.05,0,2.17,0,2.84-.81.26-.32.49-.85.49-1.51,0-.4-.09-1.3-.87-1.73-.56-.33-1.36-.33-2.06-.33h-.83Z" }), hAsync("path", { class: "cls-1", d: "M121.28,85.29l.46-1.58.33-1.1.28,1.22.35,1.46h-1.42ZM123.25,81.55c-.9.02-1.08.02-2.08.02l-.07.06c-.49,1.59-.79,2.54-2.16,6.48l.03.07h1.46l.07-.06.46-1.7h2.02l.41,1.73.05.06c.69-.03.87-.03,1.64-.03l.04-.07c-1.13-4.01-1.26-4.44-1.79-6.51l-.07-.05Z" }), hAsync("path", { class: "cls-1", d: "M130.5,79.65c-.2.18-.48.42-.81.42-.21,0-.41-.07-.61-.14l-.37-.12c-.17-.06-.31-.09-.5-.09-.43,0-.62.16-.83.31l-.04.06v1s.04.02.04.02c.21-.14.47-.31.8-.31.21,0,.42.07.64.14l.28.1c.19.07.33.13.54.13.4,0,.66-.2.87-.37l.04-.07v-1.05l-.07-.03ZM131.76,81.55c-.59.02-.75.03-1.33.02l-.04.06.06,1.27.04,1.29.04,1.53-.02.02c-.25-.46-.3-.54-.77-1.25l-.85-1.24c-.71-1.06-.85-1.27-1.08-1.65l-.06-.04c-.75.03-.86.03-1.54.02l-.05.06c.05,1.45.08,2.53.08,3.78,0,.92-.02,1.83-.03,2.74l.04.06c.63-.03.83-.03,1.37-.03l.04-.06-.1-2.05-.03-1.14-.05-1.24.02-.02c.42.73.57.98,1.21,1.91l.93,1.37.84,1.22.07.04c.57-.03.74-.03,1.24-.03l.04-.04c0-1.36-.02-2.28-.02-3.4,0-1.04.01-2.08.02-3.14l-.05-.05Z" }), hAsync("path", { class: "cls-1", d: "M137.07,83.04c.19.21.27.49.33.75.08.36.09.7.11.93.04,1.4-.27,2.42-1.35,2.42-1.3,0-1.39-1.52-1.39-2.36,0-1.12.27-1.7.71-1.98.25-.15.51-.19.68-.19.35,0,.69.16.91.43M138.55,82.44c-.16-.2-.35-.38-.56-.52-.48-.33-1.13-.47-1.79-.47-.58,0-1.17.1-1.67.39-1.14.65-1.35,1.73-1.43,2.13-.06.32-.08.64-.08.96,0,.64.07,1.83.95,2.65.71.66,1.69.76,2.16.76.72,0,1.45-.18,2-.63.93-.77,1.11-2.04,1.11-2.83,0-1.47-.46-2.14-.7-2.43" }), hAsync("path", { class: "cls-1", d: "M144.65,86.9c-1.02.06-1.84.07-2.12.07h-.19c-.02-2.5,0-3.13.07-5.37l-.06-.05c-.8.03-1.02.03-1.66.03l-.05.05c.04.75.05.98.05,2.09,0,1.47,0,2.95,0,4.43l.04.05c1.84-.03,2.17-.03,3.86-.03l.05-.05.07-1.18-.04-.04Z" }), hAsync("path", { class: "cls-1", d: "M150.03,86.92c-1.1.06-1.37.07-2.57.07v-1.64s2.17,0,2.17,0l.07-.05.05-1.06-.04-.06-2.26.04v-1.49c1.05,0,1.27,0,2.4.03l.05-.06.06-1.09-.04-.04h-4.11l-.05.06c.05.91.07,1.25.07,3.76,0,1.18-.01,1.77-.04,2.74l.04.04h4.13l.08-.06.06-1.14-.05-.07Z" }), hAsync("path", { class: "cls-1", d: "M153.74,84.16c-.79-.33-1.2-.5-1.2-.92,0-.28.27-.66.88-.66.71,0,1.14.29,1.49.53l.08-.03.08-1.23-.04-.07c-.41-.17-.83-.35-1.74-.35-1.76,0-2.37.99-2.37,1.99,0,1.14.88,1.55,1.4,1.79l.31.14c.64.28,1.14.51,1.14,1,0,.35-.31.77-1.12.77-.85,0-1.33-.37-1.6-.59l-.1.03-.07,1.32.06.07c.1.04.2.08.31.11.21.08.77.24,1.47.24.28,0,.99-.04,1.55-.3.79-.38,1.12-1.09,1.12-1.89,0-.53-.2-1.11-.7-1.49-.25-.18-.5-.3-.72-.4l-.24-.09Z" })));
}

const sixIconCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-flex;vertical-align:middle}.material-icons{vertical-align:middle;font-weight:normal;font-style:normal;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\";user-select:none}.material-icons-filled{font-family:\"Material Icons\"}.material-icons-outlined{font-family:\"Material Icons Outlined\"}.icon--xsmall{font-size:12px}.icon--small{font-size:18px}.icon--medium{font-size:24px}.icon--large{font-size:36px}.icon--xlarge{font-size:48px}.icon--xxlarge{font-size:72px}.icon--xxxlarge{font-size:96px}.icon--inherit{font-size:1.5em}";
var SixIconStyle0 = sixIconCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the material icon name.
 */
class SixIcon {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = 'inherit';
        this.filled = false;
    }
    render() {
        return (hAsync("i", { key: '0df61da1a314e6860fe03bf12a391f93c9d61944', class: {
                'material-icons': true,
                'material-icons-outlined': !this.filled,
                'material-icons-filled': this.filled,
                'icon--xsmall': this.size === 'xSmall',
                'icon--small': this.size === 'small',
                'icon--medium': this.size === 'medium',
                'icon--large': this.size === 'large',
                'icon--xlarge': this.size === 'xLarge',
                'icon--xxlarge': this.size === 'xxLarge',
                'icon--xxxlarge': this.size === 'xxxLarge',
                'icon--inherit': this.size === 'inherit',
            } }, hAsync("slot", { key: '83f13f05cfb7771b169ac8d7a45312d8e7139335' })));
    }
    static get style() { return SixIconStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-icon",
        "$members$": {
            "size": [513],
            "filled": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["size", "size"]]
    }; }
}

const sixIconButtonCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block}.icon-button{flex:0 0 auto;display:flex;align-items:center;background:none;border:none;border-radius:var(--six-border-radius-medium);font-size:inherit;color:var(--six-input-icon-color);padding:var(--six-spacing-x-small);cursor:pointer;transition:var(--six-transition-medium) color;-webkit-appearance:none}.icon-button:hover:not(.icon-button--disabled),.icon-button:focus:not(.icon-button--disabled){color:var(--six-input-icon-color-hover)}.icon-button:active:not(.icon-button--disabled){color:var(--six-input-icon-color)}.icon-button:focus{outline:none}.icon-button:focus-visible{outline:var(--six-focus-ring);outline-offset:var(--six-focus-ring-offset)}.icon-button--disabled{opacity:0.5;pointer-events:none}.icon-button-wrapper--disabled{cursor:not-allowed}.icon-button ::slotted(six-badge){position:absolute;top:0;right:0;pointer-events:none}.icon-button six-icon[size=xLarge]+::slotted(six-badge){transform:translateY(40%) translateX(-35%)}.icon-button six-icon[size=large]+::slotted(six-badge){transform:translateY(20%) translateX(-20%)}.icon-button six-icon[size=medium]+::slotted(six-badge){transform:translateY(10%) translateX(50%)}.icon-button six-icon[size=xSmall]+::slotted(six-badge){transform:translateY(-25%) translateX(25%)}";
var SixIconButtonStyle0 = sixIconButtonCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @part base - The component's base wrapper.
 */
class SixIconButton {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.handleClickEvent = (event) => {
            if (this.disabled) {
                event.preventDefault();
                event.stopPropagation();
            }
        };
        this.name = undefined;
        this.size = 'medium';
        this.label = undefined;
        this.disabled = false;
        this.html = undefined;
    }
    componentDidLoad() {
        if (this.button != null) {
            focusVisible.observe(this.button);
        }
    }
    disconnectedCallback() {
        if (this.button != null) {
            focusVisible.unobserve(this.button);
        }
    }
    render() {
        const html = this.html && hAsync("span", { key: '7b231c5c4181a3677e3f7c078cb704c559e267d2', innerHTML: this.html });
        return (hAsync("div", { key: '7be3cdd23dda1b8879bd78b061beaef8b10ca897', onClick: this.handleClickEvent, class: { 'icon-button-wrapper--disabled': this.disabled } }, hAsync("button", { key: 'd3e02b7cb24e1f9ff64878784242f620ad1828b4', ref: (el) => (this.button = el), part: "base", disabled: this.disabled, class: {
                'icon-button': true,
                'icon-button--disabled': this.disabled,
            }, type: "button", "aria-label": this.label }, hAsync("six-icon", { key: 'df2435fefbd21985ee1c358acca4ed56dc0d1d48', "aria-hidden": "true", size: this.size }, this.name), hAsync("slot", { key: '43098717ef3cc59f72e27330307cff41e049bec7' }), html)));
    }
    static get style() { return SixIconButtonStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-icon-button",
        "$members$": {
            "name": [513],
            "size": [513],
            "label": [513],
            "disabled": [516],
            "html": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["name", "name"], ["size", "size"], ["label", "label"], ["disabled", "disabled"], ["html", "html"]]
    }; }
}

const sixInputCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:block}.input{display:inline-flex;align-items:stretch;justify-content:start;position:relative;width:100%;font-family:var(--six-font-family);font-weight:var(--six-input-font-weight);letter-spacing:var(--six-input-letter-spacing);background-color:var(--six-input-background-color);border:solid var(--six-border-width) var(--six-input-border-color);vertical-align:middle;overflow:hidden;transition:var(--six-transition-fast) color, var(--six-transition-fast) border, var(--six-transition-fast) box-shadow;cursor:text}.input--line{border:none;border-bottom:solid var(--six-border-width) var(--six-input-border-color)}.input:hover:not(.input--disabled){background-color:var(--six-input-background-color-hover);border-color:var(--six-input-border-color-hover)}.input:hover:not(.input--disabled) .input__control{color:var(--six-input-color-hover)}.input:hover.input--dropdown-search{border-color:transparent}.input--dropdown-search{border-color:transparent}.input--dropdown-search.input--focused{border-color:var(--six-input-border-color)}.input.input--focused:not(.input--disabled){background-color:var(--six-input-background-color-focus);border-bottom-color:var(--six-input-border-color-focus);box-shadow:0 1px 0 0 var(--six-input-border-color-focus)}.input.input--focused:not(.input--disabled):not(.input--line){border-color:var(--six-input-border-color-focus);box-shadow:var(--six-input-focus-shadow)}.input.input--focused:not(.input--disabled) .input__control{color:var(--six-input-color-focus)}.input.input--disabled{background-color:var(--six-input-background-color-disabled);border-color:var(--six-input-border-color-disabled);cursor:not-allowed}.input.input--disabled .input__control{color:var(--six-input-color-disabled)}.input.input--disabled .input__control::placeholder{color:var(--six-input-placeholder-color-disabled)}.input.input--invalid:not(.input--disabled):not(.input--focused){border-bottom-color:var(--six-input-border-color-danger)}.input.input--invalid:not(.input--disabled):not(.input--focused):not(.input--line){border-color:var(--six-input-border-color-danger)}.input__control{flex:1 1 auto;width:100%;font-family:inherit;font-size:inherit;font-weight:inherit;min-width:0;color:var(--six-input-color);border:none;background:none;box-shadow:none;padding:0;margin:0;cursor:inherit;-webkit-appearance:none}.input__control::-webkit-search-decoration,.input__control::-webkit-search-cancel-button,.input__control::-webkit-search-results-button,.input__control::-webkit-search-results-decoration{-webkit-appearance:none}.input__control:-webkit-autofill,.input__control:-webkit-autofill:hover,.input__control:-webkit-autofill:focus,.input__control:-webkit-autofill:active{box-shadow:0 0 0 var(--six-height-large) var(--six-input-background-color-hover) inset !important;-webkit-text-fill-color:var(--six-color-primary-500)}.input__control::placeholder{color:var(--six-input-placeholder-color);user-select:none}.input__control:focus{outline:none}.input__control::-ms-reveal{display:none}.input__prefix,.input__suffix{display:inline-flex;flex:0 0 auto;align-items:center;cursor:default}.input__prefix ::slotted(six-icon),.input__suffix ::slotted(six-icon){color:var(--six-input-icon-color)}.input.input--disabled ::slotted(six-icon){cursor:not-allowed}.input--small{border-radius:var(--six-input-border-radius-small);font-size:var(--six-input-font-size-small);height:var(--six-height-small)}.input--small .input__control{height:calc(var(--six-height-small) - var(--six-border-width) * 2);margin:0 var(--six-input-spacing-small)}.input--small .input__control__prefix{margin:0 var(--six-input-prefix-spacing-small)}.input--small .input__clear,.input--small .input__password-toggle{margin-right:var(--six-input-spacing-small)}.input--small .input__prefix ::slotted(*){margin-left:var(--six-input-prefix-spacing-small)}.input--small .input__suffix ::slotted(*){margin-right:var(--six-input-prefix-spacing-small)}.input--medium{border-radius:var(--six-input-border-radius-medium);font-size:var(--six-input-font-size-medium);height:var(--six-height-medium)}.input--medium .input__control{height:calc(var(--six-height-medium) - var(--six-border-width) * 2);margin:0 var(--six-input-spacing-medium)}.input--medium .input__control__prefix{margin:0 var(--six-input-prefix-spacing-medium)}.input--medium .input__clear,.input--medium .input__password-toggle{margin-right:var(--six-input-spacing-medium)}.input--medium .input__prefix ::slotted(*){margin-left:var(--six-input-prefix-spacing-medium)}.input--medium .input__suffix ::slotted(*){margin-right:var(--six-input-prefix-spacing-medium)}.input--large{border-radius:var(--six-input-border-radius-large);font-size:var(--six-input-font-size-large);height:var(--six-height-large)}.input--large .input__control{height:calc(var(--six-height-large) - var(--six-border-width) * 2);margin:0 var(--six-input-spacing-large)}.input--large .input__control__prefix{margin:0 var(--six-input-prefix-spacing-large)}.input--large .input__clear,.input--large .input__password-toggle{margin-right:var(--six-input-spacing-large)}.input--large .input__prefix ::slotted(*){margin-left:var(--six-input-prefix-spacing-large)}.input--large .input__suffix ::slotted(*){margin-right:var(--six-input-prefix-spacing-large)}.input--pill.input--small{border-radius:var(--six-height-small)}.input--pill.input--medium{border-radius:var(--six-height-medium)}.input--pill.input--large{border-radius:var(--six-height-large)}.input__clear,.input__password-toggle{display:inline-flex;align-items:center;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;padding:0;transition:var(--six-transition-fast) color;cursor:pointer}.input__clear:hover,.input__password-toggle:hover{color:var(--six-input-icon-color-hover)}.input__clear:focus,.input__password-toggle:focus{outline:none}.input--empty .input__clear{visibility:hidden}";
var SixInputStyle0 = sixInputCss;

const ICON_SIZES = {
    large: 'medium',
    medium: 'small',
    small: 'xSmall',
};
let id$8 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot label - The input's label. Alternatively, you can use the label prop.
 * @slot prefix - Used to prepend an icon or similar element to the input.
 * @slot suffix - Used to append an icon or similar element to the input.
 * @slot clear-icon - An icon to use in lieu of the default clear icon.
 * @slot show-password-icon - An icon to use in lieu of the default show password icon.
 * @slot hide-password-icon - An icon to use in lieu of the default hide password icon.
 * @slot help-text - Help text that describes how to use the input. Alternatively, you can use the help-text prop.
 * @slot error-text - Error text that is shown when the status is set to invalid. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part form-control - The form control that wraps the label, input, error-text and help-text.
 * @part label - The input label.
 * @part input - The input control.
 * @part prefix - The input prefix container.
 * @part clear-button - The clear button.
 * @part password-toggle-button - The password toggle button.
 * @part suffix - The input suffix container.
 * @part help-text - The input help text.
 * @part error-text - The input error text.
 */
class SixInput {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-input-change", 7);
        this.sixClear = createEvent(this, "six-input-clear", 7);
        this.sixInput = createEvent(this, "six-input-input", 7);
        this.sixFocus = createEvent(this, "six-input-focus", 7);
        this.sixBlur = createEvent(this, "six-input-blur", 7);
        this.inputId = `input-${++id$8}`;
        this.labelId = `input-label-${id$8}`;
        this.helpTextId = `input-help-text-${id$8}`;
        this.errorTextId = `input-error-text-${id$8}`;
        this.eventListeners = new EventListeners();
        this.handleChange = (event) => {
            event.stopPropagation();
            if (this.nativeInput != null) {
                this.value = this.nativeInput.value;
                this.sixChange.emit();
            }
        };
        this.handleInput = (event) => {
            event.stopPropagation();
            if (this.nativeInput != null) {
                this.value = this.nativeInput.value;
                this.sixInput.emit();
            }
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleClearClick = (event) => {
            this.value = '';
            this.sixClear.emit();
            this.sixInput.emit();
            this.sixChange.emit();
            if (this.nativeInput != null) {
                this.nativeInput.focus();
            }
            event.stopPropagation();
        };
        this.handleKeyDown = (event) => {
            const hasModifier = event.metaKey || event.ctrlKey || event.shiftKey || event.altKey;
            if (event.key === 'Enter' && !hasModifier) {
                setTimeout(() => {
                    if (!event.defaultPrevented && !event.isComposing) {
                        submitForm(this.host);
                    }
                });
            }
        };
        this.handlePasswordToggle = () => {
            this.isPasswordVisible = !this.isPasswordVisible;
        };
        this.handleSlotChange = () => {
            this.hasHelpTextSlot = hasSlot(this.host, 'help-text');
            this.hasLabelSlot = hasSlot(this.host, 'label');
            this.hasErrorSlot = hasSlot(this.host, 'error-text');
        };
        this.hasFocus = false;
        this.hasHelpTextSlot = false;
        this.hasLabelSlot = false;
        this.hasErrorSlot = false;
        this.isPasswordVisible = false;
        this.type = 'text';
        this.size = 'medium';
        this.name = '';
        this.value = '';
        this.pill = false;
        this.helpText = '';
        this.placeholder = undefined;
        this.disabled = false;
        this.readonly = false;
        this.minlength = undefined;
        this.maxlength = undefined;
        this.min = undefined;
        this.max = undefined;
        this.step = undefined;
        this.pattern = undefined;
        this.dropdownSearch = false;
        this.required = false;
        this.autocapitalize = 'off';
        this.autocorrect = 'off';
        this.autocomplete = 'off';
        this.autofocus = false;
        this.spellcheck = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.clearable = false;
        this.togglePassword = false;
        this.inputmode = undefined;
        this.line = false;
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    handleValueChange() {
        this.value = this.getValue();
        if (this.nativeInput != null && this.nativeInput.value !== this.value) {
            this.nativeInput.value = this.value;
        }
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.forward('six-input-input', 'input', this.host);
        this.eventListeners.forward('six-input-change', 'change', this.host);
        this.eventListeners.forward('six-input-focus', 'focus', this.host);
        this.eventListeners.forward('six-input-blur', 'blur', this.host);
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    disconnectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    /** Sets focus on the input. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the input. */
    async removeFocus() {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.blur();
    }
    /** Selects all the text in the input. */
    async select() {
        var _a;
        return (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.select();
    }
    /** Sets the start and end positions of the text selection (0-based). */
    async setSelectionRange(selectionStart, selectionEnd, selectionDirection = 'none') {
        var _a;
        return (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.setSelectionRange(selectionStart, selectionEnd, selectionDirection);
    }
    /** Returns the start and end positions of the text selection */
    async getSelectionRange() {
        var _a, _b, _c, _d, _e, _f;
        return {
            selectionStart: (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.selectionStart) !== null && _b !== void 0 ? _b : undefined,
            selectionEnd: (_d = (_c = this.nativeInput) === null || _c === void 0 ? void 0 : _c.selectionEnd) !== null && _d !== void 0 ? _d : undefined,
            selectionDirection: (_f = (_e = this.nativeInput) === null || _e === void 0 ? void 0 : _e.selectionDirection) !== null && _f !== void 0 ? _f : undefined,
        };
    }
    /** Replaces a range of text with a new string. */
    async setRangeText(replacement, start, end, selectMode = 'preserve') {
        if (this.nativeInput == null) {
            return;
        }
        this.nativeInput.setRangeText(replacement, start, end, selectMode);
        if (this.getValue() !== this.nativeInput.value) {
            this.value = this.nativeInput.value;
            this.sixChange.emit();
            this.sixInput.emit();
        }
    }
    getValue() {
        var _a;
        return ((_a = this.value) !== null && _a !== void 0 ? _a : '').toString();
    }
    render() {
        return (hAsync(FormControl, { key: 'c8abff068de4ec76276e9a6d1d8a7948363ed6f1', inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, errorTextId: this.errorTextId, errorText: this.errorText, errorTextCount: this.errorTextCount, hasErrorTextSlot: this.hasErrorSlot, size: this.size, disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("div", { key: '3c023310780a757dc79e8f892cf633243d38f5ed', part: "base", class: {
                input: true,
                // Sizes
                'input--small': this.size === 'small',
                'input--medium': this.size === 'medium',
                'input--large': this.size === 'large',
                // States
                'input--line': this.line,
                'input--pill': this.pill,
                'input--disabled': this.disabled,
                'input--dropdown-search': this.dropdownSearch,
                'input--focused': this.hasFocus,
                'input--empty': this.getValue().length === 0,
                'input--invalid': this.invalid,
            } }, hAsync("span", { key: 'c5f2eb65a8a83d3e03091f7c008540080f097c74', part: "prefix", class: "input__prefix" }, hAsync("slot", { key: 'ad3ab17d4c8f01c6b13d1073fccc0bcdc130f771', name: "prefix" })), hAsync("input", { key: 'd8106ecada971513c41d7702435ee00e885e039e', part: "input", ref: (el) => (this.nativeInput = el), id: this.inputId, size: 1, class: {
                input__control: true,
                input__control__prefix: hasSlot(this.host, 'prefix'),
            }, type: this.type === 'password' && this.isPasswordVisible ? 'text' : this.type, name: this.name, placeholder: this.placeholder, disabled: this.disabled, readonly: this.readonly, minLength: this.minlength, maxLength: this.maxlength, min: this.min, max: this.max, step: this.step, value: this.getValue(), autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, spellcheck: this.spellcheck, pattern: this.pattern, required: this.required, inputMode: this.inputmode, "aria-labelledby": this.labelId, "aria-describedby": this.helpTextId, "aria-invalid": this.invalid ? 'true' : 'false', onChange: this.handleChange, onInput: this.handleInput, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, "data-testid": "input-control" }), this.clearable && !this.disabled && (hAsync("button", { key: '2ae4910e2a0bd42ae4343beafc51be98310e10fe', part: "clear-button", class: "input__clear", type: "button", onClick: this.handleClearClick, tabindex: "-1", "data-testid": "input-clear-button" }, hAsync("slot", { key: '36590d6b6b62da59f60b550c545002f6e28fc3a5', name: "clear-icon" }, hAsync("six-icon", { key: '0db38e18ff06b2884a82995144fda13e6dbe7c41', size: ICON_SIZES[this.size] }, "clear")))), this.togglePassword && (hAsync("button", { key: '7b22999dd36f22c9f94b28f42f4b3ff132aa46b4', part: "password-toggle-button", class: "input__password-toggle", type: "button", onClick: this.handlePasswordToggle, tabindex: "-1" }, this.isPasswordVisible ? (hAsync("slot", { name: "show-password-icon" }, hAsync("six-icon", { size: ICON_SIZES[this.size] }, "visibility_off"))) : (hAsync("slot", { name: "hide-password-icon" }, hAsync("six-icon", { size: ICON_SIZES[this.size] }, "visibility"))))), hAsync("span", { key: 'a257e3e6b931f6229fa6c4e6a1e4b588fb549392', part: "suffix", class: "input__suffix" }, hAsync("slot", { key: 'ccd8ebed2f44ab8b082cb3fc8479c9d772a875a5', name: "suffix" })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "helpText": ["handleLabelChange"],
        "errorText": ["handleLabelChange"],
        "label": ["handleLabelChange"],
        "value": ["handleValueChange"]
    }; }
    static get style() { return SixInputStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-input",
        "$members$": {
            "type": [513],
            "size": [513],
            "name": [513],
            "value": [1537],
            "pill": [516],
            "helpText": [1, "help-text"],
            "placeholder": [1],
            "disabled": [516],
            "readonly": [516],
            "minlength": [514],
            "maxlength": [514],
            "min": [514],
            "max": [514],
            "step": [514],
            "pattern": [513],
            "dropdownSearch": [4, "dropdown-search"],
            "required": [4],
            "autocapitalize": [1],
            "autocorrect": [1],
            "autocomplete": [1],
            "autofocus": [4],
            "spellcheck": [4],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "clearable": [4],
            "togglePassword": [4, "toggle-password"],
            "inputmode": [1],
            "line": [4],
            "hasFocus": [32],
            "hasHelpTextSlot": [32],
            "hasLabelSlot": [32],
            "hasErrorSlot": [32],
            "isPasswordVisible": [32],
            "setFocus": [64],
            "removeFocus": [64],
            "select": [64],
            "setSelectionRange": [64],
            "getSelectionRange": [64],
            "setRangeText": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["type", "type"], ["size", "size"], ["name", "name"], ["value", "value"], ["pill", "pill"], ["disabled", "disabled"], ["readonly", "readonly"], ["minlength", "minlength"], ["maxlength", "maxlength"], ["min", "min"], ["max", "max"], ["step", "step"], ["pattern", "pattern"], ["invalid", "invalid"]]
    }; }
}

// eslint-disable-next-line @stencil-community/ban-exported-const-enums
var ItemPickerType;
(function (ItemPickerType) {
    ItemPickerType["NUMBER"] = "number";
    ItemPickerType["LETTER"] = "letter";
    ItemPickerType["CAPITAL_LETTER"] = "capital-letter";
    ItemPickerType["LOWER_LETTER"] = "lower-letter";
    ItemPickerType["CUSTOM"] = "custom";
})(ItemPickerType || (ItemPickerType = {}));
// eslint-disable-next-line @stencil-community/ban-exported-const-enums
var ItemPickerPaddingDirection;
(function (ItemPickerPaddingDirection) {
    ItemPickerPaddingDirection["BEFORE"] = "before";
    ItemPickerPaddingDirection["AFTER"] = "after";
})(ItemPickerPaddingDirection || (ItemPickerPaddingDirection = {}));

const sixItemPickerCss = ".item_picker__container{width:2.5em;display:flex;flex-wrap:wrap;justify-content:center}.item_picker__container:focus-visible{outline:var(--six-focus-ring);outline-offset:0}.item_picker__content{font-size:1.5rem}.item_picker__btn{cursor:pointer;width:2.5em;height:2.5em;display:flex;vertical-align:middle;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:var(--six-color-web-rock-500)}.item_picker__btn:hover{background-color:var(--six-color-web-rock-100);border-radius:100%}.item_picker__btn:active{color:var(--six-color-web-rock-400)}.item_picker__btn--disabled{color:var(--six-color-web-rock-300);cursor:not-allowed}.item_picker__btn--disabled:hover{background-color:initial}.item_picker__btn--disabled:active{color:var(--six-color-web-rock-300)}.item_picker__btn:focus-visible{outline:var(--six-focus-ring);outline-offset:0}";
var SixItemPickerStyle0 = sixItemPickerCss;

const uppercaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
const upperAndLowercaseLetters = [...uppercaseLetters].flatMap((c) => [c, c.toLowerCase()]);
const ALPHABET = {
    alphabet: upperAndLowercaseLetters,
    letterIndexes: Object.fromEntries(upperAndLowercaseLetters.map((c, i) => [c, i])),
};
const CAPITAL_ALPHABET = {
    alphabet: [...uppercaseLetters].flatMap((c) => [c]),
    letterIndexes: Object.fromEntries([...uppercaseLetters].map((c, i) => [c, i])),
};
const LOWERCASE_ALPHABET = {
    alphabet: [...uppercaseLetters.toLowerCase()].flatMap((c) => [c]),
    letterIndexes: Object.fromEntries([...uppercaseLetters.toLowerCase()].map((c, i) => [c, i])),
};
const createItemIndexes = (arr) => {
    return Object.fromEntries([...arr].map((c, i) => [c, i]));
};
const TAG = `[SIX-ITEM-PICKER]`;
const subtract = (a, b) => a - b;
const add = (a, b) => a + b;
const DEBOUNCE_ITEM_PICKER_LISTENER = 'debounced-item-picker';
/**
 * @since 2.0.0
 * @status experimental
 * @part container - The whole component container
 * @part up - The up button
 * @part content - The content area
 * @part down - The down button
 *
 */
class SixItemPicker {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-item-picker-change", 7);
        this.sixChangeDebounced = createEvent(this, "six-item-picker-change-debounced", 7);
        this.eventListeners = new EventListeners();
        this.handleSixItemPickerChangeDebounced = () => {
            this.sixChangeDebounced.emit(this.value);
        };
        this.value = '';
        this.type = ItemPickerType.NUMBER;
        this.min = undefined;
        this.max = undefined;
        this.roundtrip = true;
        this.step = 1;
        this.items = undefined;
        this.padded = false;
        this.paddingLength = 2;
        this.paddingChar = '0';
        this.paddingDirection = ItemPickerPaddingDirection.BEFORE;
        this.timeout = DEFAULT_DEBOUNCE_FAST;
        this.interval = DEFAULT_DEBOUNCE_INSANELY_FAST;
        this.debounce = DEFAULT_DEBOUNCE_FAST;
        this._items = [];
        this._itemIndexes = {};
    }
    handleValueChange() {
        this.setup();
    }
    debounceChanged() {
        this.eventListeners.removeByIdentifier(DEBOUNCE_ITEM_PICKER_LISTENER);
        this.eventListeners.add(this.host, 'six-item-picker-change', debounce$1(this.handleSixItemPickerChangeDebounced, this.debounce), DEBOUNCE_ITEM_PICKER_LISTENER);
    }
    handleSetChange() {
        this.setup();
        this.min = this._items[0];
        this.max = this.getLastStringItem();
    }
    componentWillLoad() {
        this.setup();
    }
    componentDidLoad() {
        this.eventListeners.add(this.host, 'six-item-picker-change', debounce$1(this.handleSixItemPickerChangeDebounced, this.debounce), DEBOUNCE_ITEM_PICKER_LISTENER);
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    setup() {
        if (this.isNumber()) {
            this.setupNumberItems();
        }
        else {
            this.setUpStringItems();
        }
    }
    setupNumberItems() {
        var _a;
        if (this.isInvalidNumber()) {
            console.warn(`${TAG} Expected number but value is not a number: "${this.value}"`);
            console.info(`${TAG} Will set value to either minimum or if not provided to zero.`);
            this.value = (_a = this.min) !== null && _a !== void 0 ? _a : 0;
        }
    }
    setUpStringItems() {
        this._items = this.getStringItems();
        this._itemIndexes = this.getItemIndexes();
        const itemsMissValue = this._items.find((i) => String(i) === String(this.value)) === undefined;
        if (itemsMissValue) {
            console.warn(`${TAG} Expected item from item set but value was not found in set: "${this.value}"`);
            console.info(`${TAG} Will set value to either minimum or if not provided to "${this._items[0]}".`);
            this.value = this._items[0];
        }
        if (this.min === undefined) {
            if (!this.roundtrip) {
                console.warn(`${TAG} Expected a min value`);
                console.info(`${TAG} Will set min value to ${this._items[0]}`);
            }
            this.min = this._items[0];
        }
        if (this.max === undefined) {
            const maxItem = this.getLastStringItem();
            if (!this.roundtrip) {
                console.warn(`${TAG} Expected a min value if roundtrip is enabled`);
                console.info(`${TAG} Will set min value to ${maxItem}`);
            }
            this.max = maxItem;
        }
    }
    getLastStringItem() {
        return this._items[this._items.length - 1];
    }
    getStringItems() {
        switch (this.type) {
            case ItemPickerType.NUMBER:
                console.warn(`${TAG}: unexpected type ${this.type}`);
                return [];
            case ItemPickerType.LETTER:
                return ALPHABET.alphabet;
            case ItemPickerType.CAPITAL_LETTER:
                return CAPITAL_ALPHABET.alphabet;
            case ItemPickerType.LOWER_LETTER:
                return LOWERCASE_ALPHABET.alphabet;
            case ItemPickerType.CUSTOM:
                if (this.items == null || this.items.length === 0) {
                    console.warn(`${TAG}: no items defined for type ${this.type}`);
                    return [];
                }
                return this.items;
        }
    }
    getItemIndexes() {
        switch (this.type) {
            case ItemPickerType.NUMBER:
                console.warn(`${TAG}: unexpected type ${this.type}`);
                return {};
            case ItemPickerType.LETTER:
                return ALPHABET.letterIndexes;
            case ItemPickerType.CAPITAL_LETTER:
                return CAPITAL_ALPHABET.letterIndexes;
            case ItemPickerType.LOWER_LETTER:
                return LOWERCASE_ALPHABET.letterIndexes;
            case ItemPickerType.CUSTOM:
                return createItemIndexes(this._items);
        }
    }
    previousItem() {
        if (this.isNumber()) {
            this.previousNumber();
        }
        else {
            this.previousStringItem();
        }
        this.sixChange.emit(this.value);
    }
    previousNumber() {
        this.changeValue({
            isNextItemAllowed: () => !this.isPreviousNumberDisabled(),
            getNextItem: () => Number(this.value) - this.step,
            getRoundtripItem: () => Number(this.max),
            isRoundtripPossible: () => this.max === undefined && this.roundtrip,
        });
    }
    previousStringItem() {
        const value = String(this.value);
        const minLetter = String(this.min);
        this.changeValue({
            isNextItemAllowed: () => minLetter === undefined || this.getStringItemIndex(value) > this.getStringItemIndex(minLetter),
            getNextItem: () => this.getNextItemByOperation(subtract),
            getRoundtripItem: () => String(this.max),
            isRoundtripPossible: () => this.max == null && this.roundtrip,
        });
    }
    nextItem() {
        if (this.isNumber()) {
            this.nextNumber();
        }
        else {
            this.nextStringItem();
        }
        this.sixChange.emit(this.value);
    }
    nextNumber() {
        this.changeValue({
            isNextItemAllowed: () => !this.isNextNumberDisabled(),
            getNextItem: () => Number(this.value) + this.step,
            getRoundtripItem: () => Number(this.min),
            isRoundtripPossible: () => this.min === undefined && this.roundtrip,
        });
    }
    getStringItemIndex(char) {
        return this._itemIndexes[char];
    }
    nextStringItem() {
        const value = String(this.value);
        const maxLetter = String(this.max);
        this.changeValue({
            isNextItemAllowed: () => maxLetter === undefined || this.getStringItemIndex(value) < this.getStringItemIndex(maxLetter),
            getNextItem: () => this.getNextItemByOperation(add),
            getRoundtripItem: () => String(this.min),
            isRoundtripPossible: () => this.min === undefined && this.roundtrip,
        });
    }
    getNextItemByOperation(operation, increment = this.step) {
        const value = String(this.value);
        const nextIndexCandidate = operation(this.getStringItemIndex(value), increment);
        const numberOfItems = this._items.length;
        const nextIndex = ((nextIndexCandidate % numberOfItems) + numberOfItems) % numberOfItems;
        return this._items[nextIndex];
    }
    changeValue(params) {
        if (params.isNextItemAllowed()) {
            this.value = params.getNextItem();
            return;
        }
        if (params.isRoundtripPossible()) {
            console.error(`${TAG} Item picker is expected to perform a roundtrip, but either max or min value is missing so a roundtrip is not possible`);
            return;
        }
        if (this.roundtrip) {
            this.value = params.getRoundtripItem();
            return;
        }
        console.warn(`${TAG} Roundtrip is not allowed, but was still triggered, please report this issue to the developer of six-item-picker`);
        this.sixChange.emit(this.value);
    }
    isNumber() {
        return this.type === ItemPickerType.NUMBER;
    }
    isInvalidNumber() {
        return this.value === '' || isNaN(this.value);
    }
    isNextDisabled() {
        if (this.roundtrip) {
            return false;
        }
        if (this.isNumber()) {
            return this.isNextNumberDisabled();
        }
        else {
            return this._itemIndexes[String(this.value)] + this.step > this._itemIndexes[String(this.max)];
        }
    }
    isNextNumberDisabled() {
        var _a;
        return Number(this.value) + this.step > Number((_a = this.max) !== null && _a !== void 0 ? _a : Infinity);
    }
    isPrevDisabled() {
        if (this.roundtrip) {
            return false;
        }
        if (this.isNumber()) {
            return this.isPreviousNumberDisabled();
        }
        else {
            return this._itemIndexes[String(this.value)] - this.step < this._itemIndexes[String(this.min)];
        }
    }
    isPreviousNumberDisabled() {
        var _a;
        return Number(this.value) - this.step < Number((_a = this.min) !== null && _a !== void 0 ? _a : -Infinity);
    }
    onMouseDownNext() {
        if (this.isNextDisabled()) {
            return;
        }
        this.nextItem();
        this._timeoutNext = setTimeout(() => {
            this._intervalNext = setInterval(() => {
                this.nextItem();
            }, this.interval);
        }, this.timeout);
    }
    onMouseUpNext() {
        clearTimeout(this._timeoutNext);
        clearInterval(this._intervalNext);
    }
    onMouseDownPrev() {
        if (this.isPrevDisabled()) {
            return;
        }
        this.previousItem();
        this._timeoutPrev = setTimeout(() => {
            this._intervalPrev = setInterval(() => {
                this.previousItem();
            }, this.interval);
        }, this.timeout);
    }
    onMouseUpPrev() {
        clearTimeout(this._timeoutPrev);
        clearInterval(this._intervalPrev);
    }
    getFormattedValue() {
        if (this.value === undefined || this.value === null) {
            return this.value;
        }
        if (!this.padded) {
            return this.value;
        }
        if (this.paddingDirection === ItemPickerPaddingDirection.BEFORE) {
            return String(this.value).padStart(this.paddingLength, this.paddingChar);
        }
        else if (this.paddingDirection === ItemPickerPaddingDirection.AFTER) {
            return String(this.value).padEnd(this.paddingLength, this.paddingChar);
        }
        return this.value;
    }
    handleKeyPress(event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            if (event.target === this.upButton) {
                this.nextItem();
            }
            else if (event.target === this.downButton) {
                this.previousItem();
            }
        }
        else if (event.key === 'ArrowUp') {
            event.preventDefault();
            this.nextItem();
        }
        else if (event.key === 'ArrowDown') {
            event.preventDefault();
            this.previousItem();
        }
        else if (event.key === 'PageUp') {
            event.preventDefault();
            this.pageUp();
        }
        else if (event.key === 'PageDown') {
            event.preventDefault();
            this.pageDown();
        }
        else if (event.key === 'Home') {
            event.preventDefault();
            this.goToMin();
        }
        else if (event.key === 'End') {
            event.preventDefault();
            this.goToMax();
        }
    }
    pageUp() {
        if (this.isNumber()) {
            this.changeValue({
                isNextItemAllowed: () => !this.isNextNumberDisabled(),
                getNextItem: () => Number(this.value) + 5 * this.step,
                getRoundtripItem: () => Number(this.min),
                isRoundtripPossible: () => this.min === undefined && this.roundtrip,
            });
        }
        else {
            const value = String(this.value);
            const minLetter = String(this.min);
            this.changeValue({
                isNextItemAllowed: () => minLetter === undefined || this.getStringItemIndex(value) > this.getStringItemIndex(minLetter),
                getNextItem: () => this.getNextItemByOperation(add, 5),
                getRoundtripItem: () => String(this.min),
                isRoundtripPossible: () => this.min === undefined && this.roundtrip,
            });
        }
    }
    pageDown() {
        if (this.isNumber()) {
            this.changeValue({
                isNextItemAllowed: () => !this.isPreviousNumberDisabled(),
                getNextItem: () => Number(this.value) - 5 * this.step,
                getRoundtripItem: () => Number(this.max),
                isRoundtripPossible: () => this.max === undefined && this.roundtrip,
            });
        }
        else {
            const value = String(this.value);
            const maxLetter = String(this.max);
            this.changeValue({
                isNextItemAllowed: () => maxLetter === undefined || this.getStringItemIndex(value) < this.getStringItemIndex(maxLetter),
                getNextItem: () => this.getNextItemByOperation(subtract, 5),
                getRoundtripItem: () => String(this.max),
                isRoundtripPossible: () => this.max == null && this.roundtrip,
            });
        }
    }
    goToMin() {
        var _a;
        if (this.isNumber()) {
            this.value = (_a = this.min) !== null && _a !== void 0 ? _a : 0;
        }
        else {
            this.value = this._items[0];
        }
        this.sixChange.emit(this.value);
    }
    goToMax() {
        var _a;
        if (this.isNumber()) {
            this.value = (_a = this.max) !== null && _a !== void 0 ? _a : Infinity;
        }
        else {
            this.value = this.getLastStringItem();
        }
        this.sixChange.emit(this.value);
    }
    render() {
        return (hAsync("div", { key: '9696809f37fa9db9f3b3212ea6c21cccb648ccab', part: "container", class: "item_picker__container", onKeyDown: (event) => this.handleKeyPress(event), tabindex: "0" }, hAsync("div", { key: '5864af2b6f193d090e3411c8cd54842f58fe6609', ref: (el) => (this.upButton = el), part: "up", class: {
                item_picker__btn: true,
                'item_picker__btn--disabled': this.isNextDisabled(),
            }, onMouseDown: () => this.onMouseDownNext(), onMouseUp: () => this.onMouseUpNext(), tabindex: "-1" }, hAsync("six-icon", { key: '37ac08eea928d8eaa2b3113879bd48a422261bb2', size: "large" }, "expand_less")), hAsync("div", { key: '54948f29b05477d73228d00825c0b10b2f62d8bb', part: "content", class: "item_picker__content" }, this.getFormattedValue()), hAsync("div", { key: '911a69c54e9151dd508d962867642e38eb8f0652', ref: (el) => (this.downButton = el), part: "down", class: {
                item_picker__btn: true,
                'item_picker__btn--disabled': this.isPrevDisabled(),
            }, onMouseDown: () => this.onMouseDownPrev(), onMouseUp: () => this.onMouseUpPrev(), tabindex: "-1" }, hAsync("six-icon", { key: '86785c1389e748d3a3c54dd09d5b8fc892882ee8', size: "large" }, "expand_more"))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "value": ["handleValueChange"],
        "debounce": ["debounceChanged"],
        "items": ["handleSetChange"]
    }; }
    static get style() { return SixItemPickerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-item-picker",
        "$members$": {
            "value": [1544],
            "type": [1],
            "min": [1544],
            "max": [1544],
            "roundtrip": [516],
            "step": [514],
            "items": [16],
            "padded": [4],
            "paddingLength": [2, "padding-length"],
            "paddingChar": [1, "padding-char"],
            "paddingDirection": [1, "padding-direction"],
            "timeout": [2],
            "interval": [2],
            "debounce": [2],
            "_items": [32],
            "_itemIndexes": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["value", "value"], ["min", "min"], ["max", "max"], ["roundtrip", "roundtrip"], ["step", "step"]]
    }; }
}

const sixLanguageSwitcherCss = ".language-switcher__container{display:flex}.language-switcher__separator{padding:0 0.25rem}.language-switcher__label{cursor:pointer}.language-switcher__label:hover{color:var(--six-color-web-rock-600)}.language-switcher__label:focus-visible{outline:var(--six-focus-ring);outline-offset:var(--six-focus-ring-offset)}.language-switcher__label--selected{color:var(--six-color-black);text-decoration:underline}";
var SixLanguageSwitcherStyle0 = sixLanguageSwitcherCss;

const DEFAULT_LANGUAGES = ['EN', 'DE', 'ES'];
/*
 * @since 2.2.0
 * @status experimental
 * @part container - The whole component container
 * @part label - The language label
 * @part separator - The separator between the language labels
 */
class SixLanguageSwitcher {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-language-switcher-change", 7);
        this.handleLanguageSwitching = (newLanguage, languageValue) => () => {
            if (languageValue !== undefined) {
                this.sixChange.emit(languageValue);
            }
            else {
                this.sixChange.emit(newLanguage);
            }
            this.selected = newLanguage;
        };
        this.selected = undefined;
        this.languages = DEFAULT_LANGUAGES;
    }
    handleChangesLanguages(newValue) {
        if (!Array.isArray(newValue)) {
            throw new Error('languages is expected to be an array');
        }
        this.updateSelectedLanguage();
    }
    componentWillLoad() {
        if (this.selected === undefined) {
            this.updateSelectedLanguage();
        }
    }
    updateSelectedLanguage() {
        const selectedLanguage = this.languages[0];
        if (typeof selectedLanguage === 'string') {
            this.selected = selectedLanguage;
            this.sixChange.emit(this.selected);
        }
        else {
            this.selected = selectedLanguage.key;
            this.sixChange.emit(selectedLanguage.value);
        }
    }
    render() {
        return (hAsync("div", { key: '99c0dfcad069480bceb2a4167363248e119b341e', part: "container", class: "language-switcher__container" }, this.languages.map((lang, index) => {
            const language = typeof lang === 'string' ? lang : lang.key;
            return (hAsync("div", { onClick: this.handleLanguageSwitching(language, typeof lang === 'string' ? lang : lang.value), onKeyDown: (e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                        this.handleLanguageSwitching(language, typeof lang === 'string' ? lang : lang.value)();
                    }
                } }, hAsync("span", { part: "label", tabindex: "0", class: {
                    'language-switcher__label': true,
                    'language-switcher__label--selected': this.selected === language,
                } }, language), index < this.languages.length - 1 && (hAsync("span", { part: "separator", class: "language-switcher__separator" }, "|"))));
        })));
    }
    static get watchers() { return {
        "languages": ["handleChangesLanguages"]
    }; }
    static get style() { return SixLanguageSwitcherStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-language-switcher",
        "$members$": {
            "selected": [1537],
            "languages": [16]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["selected", "selected"]]
    }; }
}

const sixLayoutGridCss = ":host{display:grid;grid-template-columns:repeat(var(--no-of-columns), 1fr);grid-column-gap:1rem}";
var SixLayoutGridStyle0 = sixLayoutGridCss;

/**
 * @since 1.01
 * @status stable
 *
 * @slot - The grid's content
 */
class SixLayoutGrid {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.columns = undefined;
    }
    handleColumnsChange() {
        if (typeof this.columns !== 'number' || this.columns === 0) {
            this.columns = 12;
        }
        this.host.style.setProperty('--no-of-columns', String(this.columns));
    }
    componentWillLoad() {
        this.handleColumnsChange();
    }
    render() {
        return (hAsync(Host, { key: 'ddc61df108af02e8f30005246c189cf0364e2b4f' }, hAsync("slot", { key: '6e03f8fc47d2fa8466796cf08aaed0e85cf1b080' })));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "columns": ["handleColumnsChange"]
    }; }
    static get style() { return SixLayoutGridStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-layout-grid",
        "$members$": {
            "columns": [1026]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixMainContainerCss = ":host{display:flex;flex-wrap:nowrap;min-width:fit-content}.left-margin,.right-margin{flex:1 6 10rem;min-width:var(--six-spacing-xxx-large)}.content{flex:6 1 60rem;min-width:48rem;max-width:100rem}.content--padded{padding:var(--six-spacing-xxx-large) 0}";
var SixMainContainerStyle0 = sixMainContainerCss;

/**
 * @since 1.01
 * @status stable
 *
 * @slot - The main container's content.
 *
 * @part left-margin  - The component's left margin area.
 * @part content      - The component's content area.
 * @part right-margin - The component's right margin area.
 */
class SixMainContainer {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.padded = true;
    }
    render() {
        return (hAsync(Host, { key: '675ccb3864609f004ff5cddc1829c99daf7e0873' }, hAsync("div", { key: '8fc5b7af1c4043d102f33b09c130360c4bdc9a06', part: "left-margin", class: "left-margin" }), hAsync("div", { key: 'fe50eba01294c073b19297f0bcec2a1823ff99a4', part: "content", class: { content: true, 'content--padded': this.padded } }, hAsync("slot", { key: '76c8f28afa0276b1d5ddbf74026a73e448b60aff' })), hAsync("div", { key: 'd75ea99a29181a2ebd904ba89f431435afa6551b', part: "right-margin", class: "right-margin" })));
    }
    get host() { return getElement(this); }
    static get style() { return SixMainContainerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-main-container",
        "$members$": {
            "padded": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixMenuCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.menu{padding:var(--six-spacing-xx-small) 0;border:none;box-shadow:var(--six-shadow-small);overflow-y:auto;overflow-x:hidden}.menu:focus{outline:none}.no-shadow{box-shadow:none}";
var SixMenuStyle0 = sixMenuCss;

const isFocusedMenuItem = (menuItem) => { var _a, _b, _c; return (_c = (_b = (_a = menuItem === null || menuItem === void 0 ? void 0 : menuItem.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.menu-item')) === null || _b === void 0 ? void 0 : _b.classList) === null || _c === void 0 ? void 0 : _c.contains('menu-item--focused'); };
const isSIXMenuItemElement = (el) => (el === null || el === void 0 ? void 0 : el.tagName.toLowerCase()) === 'six-menu-item';
const mapToMenuItem = ({ value, label }) => (hAsync("six-menu-item", { key: value, value: value }, label));
const DEFAULT_NUMBER_OF_ITEMS_SHOWN_FOR_VIRTUAL_SCROLLING = 5;
const DEFAULT_SIX_MENU_ITEM_HEIGHT_FOR_VIRTUAL_SCROLLING = 48;
const DEFAULT_SIX_MENU_ITEM_HEIGHT = 64;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The menu's content, including menu items, menu dividers, and menu labels.
 *
 * @part base - The component's base wrapper.
 */
class SixMenu {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixMenuItemSelected = createEvent(this, "six-menu-item-selected", 7);
        this.eventListeners = new EventListeners();
        this.typeToSelectString = '';
        this.handleScrolling = () => {
            if (this.menuWrapper == null)
                return;
            // for performance improvements we only update the DOM if the scrollRatio change "enough"
            this.scrollingIndex = Math.floor(this.menuWrapper.scrollTop / this.sixMenuItemHeight);
        };
        this.removeBoxShadow = false;
        this.items = null;
        this.itemsShown = undefined;
        this.virtualScroll = false;
        this.itemSize = 10;
        this.scrollingDebounce = 15;
        this.disableKeyboardHandling = false;
        this.scrollingIndex = 0;
        this.sixMenuItemHeight = this.virtualScroll
            ? DEFAULT_SIX_MENU_ITEM_HEIGHT_FOR_VIRTUAL_SCROLLING
            : DEFAULT_SIX_MENU_ITEM_HEIGHT;
    }
    connectedCallback() {
        this.handleClick = this.handleClick.bind(this);
        this.handleKeyDown = this.handleKeyDown.bind(this);
    }
    componentWillLoad() {
        if (this.items === null) {
            return;
        }
    }
    componentDidLoad() {
        this.setupForVirtualScrollingAfterRendering();
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    /**
     * Initiates type-to-select logic, which automatically selects an option based on what the user is currently typing.
     * The key passed will be appended to the internal query and the selection will be updated. After a brief period, the
     * internal query is cleared automatically. This method is intended to be used with the keydown event. Useful for
     * enabling type-to-select when the menu doesn't have focus.
     */
    async typeToSelect(key) {
        var _a;
        clearTimeout(this.typeToSelectTimeout);
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        this.typeToSelectTimeout = setTimeout(() => (this.typeToSelectString = ''), 750);
        this.typeToSelectString += key.toLowerCase();
        const items = this.getItems();
        for (const item of items) {
            const slot = (_a = item.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('slot:not([name])');
            const label = getTextContent(slot).toLowerCase().trim();
            if (label.substring(0, this.typeToSelectString.length) === this.typeToSelectString) {
                item.setFocus();
                break;
            }
        }
    }
    getItemsShown() {
        var _a;
        const defaultItemsShown = this.virtualScroll ? DEFAULT_NUMBER_OF_ITEMS_SHOWN_FOR_VIRTUAL_SCROLLING : 0;
        if (this.items && this.items.length === 1) {
            return 0;
        }
        return (_a = this.itemsShown) !== null && _a !== void 0 ? _a : defaultItemsShown;
    }
    setupForVirtualScrollingAfterRendering() {
        var _a, _b;
        if (!this.virtualScroll || this.menuWrapper == null)
            return;
        this.eventListeners.add(this.menuWrapper, 'scroll', debounce$1(this.handleScrolling, this.scrollingDebounce));
        // set menu height to proper height once the item is rendered.
        const menuItemHeight = (_b = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector('six-menu-item')) === null || _b === void 0 ? void 0 : _b.clientHeight;
        if (menuItemHeight != null && menuItemHeight > 0) {
            this.sixMenuItemHeight = menuItemHeight;
        }
    }
    getItems() {
        if (this.menu == null)
            return [];
        if (this.items != null) {
            return this.items.map(mapToMenuItem);
        }
        const slot = this.menu.querySelector('slot');
        if (slot == null)
            return [];
        return [...slot.assignedElements({ flatten: true })].filter((el) => isSIXMenuItemElement(el) && !el.disabled);
    }
    getActiveItemIndex() {
        const items = this.getItems();
        const selectedItem = this.getActiveItem();
        if (selectedItem != null) {
            const itemIndex = items.indexOf(selectedItem);
            if (itemIndex > -1) {
                return itemIndex;
            }
        }
        const sixMenuItems = this.extractItemsFromDOM();
        return sixMenuItems.findIndex(isFocusedMenuItem);
    }
    getActiveItem() {
        var _a;
        const activeElement = this.getItems().find((i) => i === document.activeElement);
        if (activeElement != null) {
            return activeElement;
        }
        return (_a = this.extractItemsFromDOM()) === null || _a === void 0 ? void 0 : _a.find(isFocusedMenuItem);
    }
    extractItemsFromDOM() {
        var _a, _b;
        return Array.from((_b = (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelectorAll('six-menu-item')) !== null && _b !== void 0 ? _b : []);
    }
    setActiveItem(item) {
        item === null || item === void 0 ? void 0 : item.setFocus();
    }
    handleClick(event) {
        const target = event.target;
        const clickedItem = target.closest('six-menu-item');
        if (clickedItem && !clickedItem.disabled) {
            this.sixMenuItemSelected.emit({ name: clickedItem.value, item: clickedItem });
        }
    }
    handleKeyDown(event) {
        if (this.disableKeyboardHandling) {
            return;
        }
        // Make a selection when pressing enter
        if (event.key === 'Enter') {
            const activeItem = this.getActiveItem();
            event.preventDefault();
            if (activeItem != null) {
                this.sixMenuItemSelected.emit({ name: activeItem.value, item: activeItem });
            }
        }
        // Prevent scrolling when space is pressed
        if (event.key === ' ') {
            event.preventDefault();
        }
        // Move the selection when pressing down or up
        if (['ArrowDown', 'ArrowUp', 'Home', 'End'].includes(event.key)) {
            const items = this.items === null ? this.getItems() : this.extractItemsFromDOM();
            let indexOfActiveItem = this.getActiveItemIndex();
            if (items.length > 0) {
                event.preventDefault();
                if (event.key === 'ArrowDown') {
                    indexOfActiveItem++;
                }
                else if (event.key === 'ArrowUp') {
                    indexOfActiveItem--;
                }
                else if (event.key === 'Home') {
                    indexOfActiveItem = 0;
                }
                else if (event.key === 'End') {
                    indexOfActiveItem = items.length - 1;
                }
                if (indexOfActiveItem < 0)
                    indexOfActiveItem = 0;
                if (indexOfActiveItem > items.length - 1)
                    indexOfActiveItem = items.length - 1;
                this.setActiveItem(items[indexOfActiveItem]);
                return;
            }
        }
        void this.typeToSelect(event.key);
    }
    getMenuWrapperStyle() {
        var _a;
        const styles = {};
        if (this.getItemsShown() > 0) {
            // calculate the proper height to show the correct number of items
            styles.height = `${((_a = this.getItemsShown()) !== null && _a !== void 0 ? _a : 0) * this.sixMenuItemHeight}px`;
        }
        else if (this.items && this.items.length === 1) {
            styles.height = 'auto';
        }
        return Object.assign({}, styles);
    }
    getMenuContainerStyle() {
        const styles = {};
        if (this.virtualScroll) {
            // calculate height of content are if all items would be rendered so the scrollbar has the proper size
            styles.transform = `translateY(${this.sixMenuItemHeight * this.scrollingIndex}px)`;
        }
        return Object.assign({}, styles);
    }
    getScrollbarGhostStyle() {
        const styles = {};
        if (this.virtualScroll && this.items !== null && this.items.length > 1) {
            styles.height = `${this.items.length * this.sixMenuItemHeight - this.itemSize * this.sixMenuItemHeight}px`;
        }
        return Object.assign({}, styles);
    }
    renderItems() {
        if (this.items === undefined || this.items === null) {
            return;
        }
        if (!this.virtualScroll) {
            return this.items.map(mapToMenuItem);
        }
        return this.items
            .slice(this.scrollingIndex, Math.min(this.items.length, this.itemSize + this.scrollingIndex))
            .map(({ value, label }) => (hAsync("six-menu-item", { checkType: "check", key: value, value: value }, label)));
    }
    render() {
        return (hAsync("div", { key: 'a346d393b279517ec252289e173e1d2e1ac82147', ref: (el) => (this.menuWrapper = el), style: this.getMenuWrapperStyle(), part: "wrapper", class: {
                menu: true,
                '.no-shadow': this.removeBoxShadow,
            } }, hAsync("div", { key: 'eeca9d33ecede486adc958510b2bc7028517a79a', ref: (el) => (this.menu = el), part: "base", role: "menu", onClick: this.handleClick, onKeyDown: this.handleKeyDown, tabIndex: 0, style: this.getMenuContainerStyle() }, hAsync("slot", { key: 'c46d98b34ddaec7d041ee2ad4aa40a048a93cc80' }), this.renderItems()), this.virtualScroll && hAsync("div", { key: '535cf4f968da60291f420da2722fc1692c0c064a', style: this.getScrollbarGhostStyle() })));
    }
    get host() { return getElement(this); }
    static get style() { return SixMenuStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-menu",
        "$members$": {
            "removeBoxShadow": [4, "remove-box-shadow"],
            "items": [16],
            "itemsShown": [2, "items-shown"],
            "virtualScroll": [4, "virtual-scroll"],
            "itemSize": [2, "item-size"],
            "scrollingDebounce": [2, "scrolling-debounce"],
            "disableKeyboardHandling": [4, "disable-keyboard-handling"],
            "scrollingIndex": [32],
            "sixMenuItemHeight": [32],
            "typeToSelect": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixMenuDividerCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.menu-divider{border-top:solid var(--six-border-width) var(--six-menu-divider-color);margin-top:var(--six-spacing-xx-small);margin-bottom:var(--six-spacing-xx-small)}";
var SixMenuDividerStyle0 = sixMenuDividerCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @part base - The component's base wrapper.
 */
class SixMenuDivider {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return hAsync("div", { key: 'f7bb5661311ecbe68cafafde1508ca9e75393c2e', part: "base", class: "menu-divider", role: "separator", "aria-hidden": "true" });
    }
    static get style() { return SixMenuDividerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-menu-divider",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixMenuItemCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}:focus{outline:none}.menu-item{position:relative;display:flex;align-items:stretch;font-family:var(--six-font-sans);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-normal);line-height:var(--six-line-height-normal);letter-spacing:var(--six-letter-spacing-normal);text-align:left;color:var(--six-input-color);border-radius:var(--six-border-radius-medium);padding:var(--six-spacing-x-small) var(--six-spacing-medium);transition:var(--six-transition-fast) fill;user-select:none;white-space:nowrap;cursor:pointer}.menu-item.menu-item--focused:not(.menu-item--disabled){outline:none;background-color:var(--six-menu-item-background-color)}.menu-item.menu-item--active:not(.menu-item--disabled){outline:none;background-color:var(--six-menu-item-background-color)}.menu-item.menu-item--disabled{outline:none;color:var(--six-input-color-disabled);cursor:not-allowed}.menu-item .menu-item__label{flex:1 1 auto;align-self:center}.menu-item .menu-item__prefix{flex:0 0 auto;display:flex;align-items:center}.menu-item .menu-item__prefix ::slotted(:last-child){margin-right:0.5em}.menu-item .menu-item__suffix{flex:0 0 auto;display:flex;align-items:center}.menu-item .menu-item__suffix ::slotted(:first-child){margin-left:0.5em}.menu-item .menu-item__check{flex:0 0 auto;display:flex;align-items:center;margin-left:var(--six-spacing-small);visibility:hidden;font-size:inherit}.menu-item .menu-item__checkbox{margin-top:-1px}.menu-item--checked .menu-item__check{visibility:visible}";
var SixMenuItemStyle0 = sixMenuItemCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The menu item's label.
 * @slot prefix - Used to prepend an icon or similar element to the menu item.
 * @slot suffix - Used to append an icon or similar element to the menu item.
 *
 * @part base - The component's base wrapper.
 * @part checked-icon - The container that wraps the checked icon.
 * @part prefix - The prefix container.
 * @part label - The menu item label.
 * @part suffix - The suffix container.
 */
class SixMenuItem {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.handleCheckboxChange = () => {
            this.host.dispatchEvent(new Event('click', { bubbles: true, cancelable: true }));
        };
        this.hasFocus = false;
        this.active = false;
        this.checkType = 'check';
        this.checked = false;
        this.value = '';
        this.disabled = false;
    }
    connectedCallback() {
        this.handleBlur = this.handleBlur.bind(this);
        this.handleFocus = this.handleFocus.bind(this);
        this.handleMouseEnter = this.handleMouseEnter.bind(this);
        this.handleMouseLeave = this.handleMouseLeave.bind(this);
        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);
    }
    /** Sets focus on the button. */
    async setFocus(options) {
        var _a;
        (_a = this.menuItem) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the button. */
    async removeFocus() {
        var _a;
        (_a = this.menuItem) === null || _a === void 0 ? void 0 : _a.blur();
    }
    /** Returns a text label based on the contents of the menu item's default slot. */
    getTextLabel() {
        return Promise.resolve(getTextContent(this.defaultSlot));
    }
    handleBlur() {
        this.hasFocus = false;
    }
    handleFocus() {
        this.hasFocus = true;
    }
    handleMouseEnter() {
        this.active = true;
    }
    handleMouseLeave() {
        this.active = false;
        this.hasFocus = false;
    }
    render() {
        return (hAsync("div", { key: 'f647b33a30530a35002cd20e43d9c9648f58bad5', ref: (el) => (this.menuItem = el), part: "base", class: {
                'menu-item': true,
                'menu-item--checked': this.checked,
                'menu-item--disabled': this.disabled,
                'menu-item--focused': this.hasFocus,
                'menu-item--active': this.active,
            }, role: "menuitem", "aria-disabled": this.disabled ? 'true' : 'false', "aria-checked": this.checked ? 'true' : 'false', tabIndex: !this.disabled ? 0 : undefined, onFocus: this.handleFocus, onBlur: this.handleBlur, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave }, this.checkType === 'checkbox' && (hAsync("span", { key: '19d8fd859bba88255a513497daded93f909ade4c', class: "menu-item__checkbox" }, hAsync("six-checkbox", { key: '76e4229e46605223d87fe9a6ec9822864b83e4c9', "onSix-checkbox-change": this.handleCheckboxChange, disabled: this.disabled, checked: this.checked }))), hAsync("span", { key: '224d593a927d1934fea26e9c27ce95308420cc20', part: "prefix", class: "menu-item__prefix" }, hAsync("slot", { key: 'ebc4e6c98ddd608e7b56943b88947425ed483e28', name: "prefix" })), hAsync("span", { key: 'f141f6a80f219bcca96dc54984889afc3e06273b', part: "label", class: "menu-item__label" }, hAsync("slot", { key: '52b8aa7aabb7c84a438ef00f4a7ec793a326dce8', ref: (el) => (this.defaultSlot = el) })), hAsync("span", { key: '81d71a96259b76ec9a882b869509c9ebde4372a2', part: "suffix", class: "menu-item__suffix" }, hAsync("slot", { key: '37760d1c1d8b8437c8b92274bf94d0b9e781cef5', name: "suffix" })), this.checkType === 'check' && (hAsync("span", { key: 'dc1f2e9b2249846594a1388fca31f7c8639485a3', part: "checked-icon", class: "menu-item__check" }, hAsync("six-icon", { key: 'c7ffd5fad6db7e8f766b8a6926fdabc0ec52a14b', size: "small", "aria-hidden": "true" }, "check")))));
    }
    get host() { return getElement(this); }
    static get style() { return SixMenuItemStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-menu-item",
        "$members$": {
            "checkType": [1, "check-type"],
            "checked": [516],
            "value": [513],
            "disabled": [516],
            "hasFocus": [32],
            "active": [32],
            "setFocus": [64],
            "removeFocus": [64],
            "getTextLabel": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["checked", "checked"], ["value", "value"], ["disabled", "disabled"]]
    }; }
}

const sixMenuLabelCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.menu-label{font-family:var(--six-font-sans);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-normal);line-height:var(--six-line-height-normal);letter-spacing:var(--six-letter-spacing-normal);color:var(--six-input-label-color);padding:var(--six-spacing-xx-small) var(--six-spacing-small);user-select:none}";
var SixMenuLabelStyle0 = sixMenuLabelCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The menu label's content.
 *
 * @part base - The component's base wrapper.
 */
class SixMenuLabel {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (hAsync("div", { key: '4497dab15753514286bcf21a66aa80ad0f723f94', part: "base", class: "menu-label" }, hAsync("slot", { key: '219a40c3465e8344532c1c7a8a73563e6b6a484b' })));
    }
    static get style() { return SixMenuLabelStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-menu-label",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixPictoCss = ":host div{height:24px;width:24px;display:inline-block;background-color:var(--six-color-black);background-size:cover;background-repeat:no-repeat}:host div.is-size-xSmall{height:12px;width:12px}:host div.is-size-small{height:18px;width:18px}:host div.is-size-medium{height:24px;width:24px}:host div.is-size-large{height:36px;width:36px}:host div.is-size-xLarge{height:48px;width:48px}:host div.is-size-xxLarge{height:72px;width:72px}:host div.is-size-xxxLarge{height:96px;width:96px}:host div.is-size-4xl{height:250px;width:250px}:host .search{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M348.4 298.6h28.3v127h-28.3z\" transform=\"rotate(-45 362.6 362)\" /><path d=\"M219.6 332.8c62.4 0 113.3-50.8 113.3-113.3 0-62.4-50.8-113.3-113.3-113.3a113.4 113.4 0 0 0 0 226.6zm0-198.2a85 85 0 0 1 0 169.8 85 85 0 0 1 0-169.8z\" /></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M348.4 298.6h28.3v127h-28.3z\" transform=\"rotate(-45 362.6 362)\" /><path d=\"M219.6 332.8c62.4 0 113.3-50.8 113.3-113.3 0-62.4-50.8-113.3-113.3-113.3a113.4 113.4 0 0 0 0 226.6zm0-198.2a85 85 0 0 1 0 169.8 85 85 0 0 1 0-169.8z\" /></svg>')}:host .reporting{mask-image:url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" enable-background=\"new 0 0 16 16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"XMLID_71_\"><path id=\"XMLID_700_\" d=\"m13.2 0v2.7h2.7c-.4-1.3-1.4-2.3-2.7-2.7z\" /><path id=\"XMLID_723_\" d=\"m6.4 3.7c0-1.3.5-2.6 1.2-3.5h-6.5c-.5 0-1 .4-1 1v13.8c0 .5.4 1 1 1h12.1c.5 0 1-.4 1-1v-5.9c-.6.2-1.3.4-2.1.4-3.1 0-5.7-2.6-5.7-5.8zm-1.3 9.3h-2v-4.7h2zm3.1 0h-2v-3.3h2zm3.1 0h-2v-1.9h2z\" /><path id=\"XMLID_1313_\" d=\"m11.2 4.7v-4.7c-1.9.5-3.2 2.4-2.7 4.6.3 1.4 1.4 2.5 2.8 2.8 2.2.5 4.1-.8 4.6-2.7z\" /></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" enable-background=\"new 0 0 16 16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"XMLID_71_\"><path id=\"XMLID_700_\" d=\"m13.2 0v2.7h2.7c-.4-1.3-1.4-2.3-2.7-2.7z\" /><path id=\"XMLID_723_\" d=\"m6.4 3.7c0-1.3.5-2.6 1.2-3.5h-6.5c-.5 0-1 .4-1 1v13.8c0 .5.4 1 1 1h12.1c.5 0 1-.4 1-1v-5.9c-.6.2-1.3.4-2.1.4-3.1 0-5.7-2.6-5.7-5.8zm-1.3 9.3h-2v-4.7h2zm3.1 0h-2v-3.3h2zm3.1 0h-2v-1.9h2z\" /><path id=\"XMLID_1313_\" d=\"m11.2 4.7v-4.7c-1.9.5-3.2 2.4-2.7 4.6.3 1.4 1.4 2.5 2.8 2.8 2.2.5 4.1-.8 4.6-2.7z\" /></g></svg>')}:host .movie-camera{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M398.8 206.3a19.6 19.6 0 0 0-12.2 4.4L344.2 237v-13.3a27.9 27.9 0 0 0-24.7-27.6 70.5 70.5 0 1 0-120.8-69.5 49.8 49.8 0 0 0-70.5 69.3h-2.8a27.9 27.9 0 0 0-27.8 27.8v99a27.9 27.9 0 0 0 27.8 28h56.3l-41.2 62.1a14.2 14.2 0 1 0 23.6 15.7l51.7-77.9H231l51.7 77.9a14.2 14.2 0 0 0 11.8 6.3 14.2 14.2 0 0 0 11.8-22L265 350.7h51.3a27.9 27.9 0 0 0 27.8-27.8v-2.8l42.2 26.1a19.4 19.4 0 0 0 12.4 4.5c11.7 0 20.8-10.3 20.8-23.4v-97.6c0-13-9.1-23.3-20.9-23.3zm-134.4-96.2a42.2 42.2 0 1 1-42.2 42.2 42.2 42.2 0 0 1 42.2-42.2zm-96.7 34a21.5 21.5 0 1 1-21.5 21.6 21.5 21.5 0 0 1 21.5-21.5zm148.2 178.3H126v-98h189.9zm75.4-6.5l-38-23.5v-27.6l38-23.6z\" /></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M398.8 206.3a19.6 19.6 0 0 0-12.2 4.4L344.2 237v-13.3a27.9 27.9 0 0 0-24.7-27.6 70.5 70.5 0 1 0-120.8-69.5 49.8 49.8 0 0 0-70.5 69.3h-2.8a27.9 27.9 0 0 0-27.8 27.8v99a27.9 27.9 0 0 0 27.8 28h56.3l-41.2 62.1a14.2 14.2 0 1 0 23.6 15.7l51.7-77.9H231l51.7 77.9a14.2 14.2 0 0 0 11.8 6.3 14.2 14.2 0 0 0 11.8-22L265 350.7h51.3a27.9 27.9 0 0 0 27.8-27.8v-2.8l42.2 26.1a19.4 19.4 0 0 0 12.4 4.5c11.7 0 20.8-10.3 20.8-23.4v-97.6c0-13-9.1-23.3-20.9-23.3zm-134.4-96.2a42.2 42.2 0 1 1-42.2 42.2 42.2 42.2 0 0 1 42.2-42.2zm-96.7 34a21.5 21.5 0 1 1-21.5 21.6 21.5 21.5 0 0 1 21.5-21.5zm148.2 178.3H126v-98h189.9zm75.4-6.5l-38-23.5v-27.6l38-23.6z\" /></svg>')}:host .info{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"255\" cy=\"134.7\" r=\"21.2\" /><path d=\"M292.3 365.6a71 71 0 0 1-23-52.3v-129H241V313.5a99.4 99.4 0 0 0 32.2 73.2l14.9 13.7 19.1-20.9-14.9-13.9z\" /></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"255\" cy=\"134.7\" r=\"21.2\" /><path d=\"M292.3 365.6a71 71 0 0 1-23-52.3v-129H241V313.5a99.4 99.4 0 0 0 32.2 73.2l14.9 13.7 19.1-20.9-14.9-13.9z\" /></svg>')}:host .home{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M141.7 425.2h226.8a42.6 42.6 0 0 0 42.5-42.5V266.8c0-11.3-4.4-22-12.4-30l-.3-.3L274 125.4c-3-2.7-4.7-6.5-4.7-10.6V78H241v36.9c0 12.1 5.2 23.6 14.2 31.7l123.6 110.5c2.5 2.6 3.9 6.1 3.9 9.8v115.8c0 7.8-6.4 14.2-14.2 14.2h-99.2V326H241v70.9h-99.2c-7.8 0-14.2-6.4-14.2-14.2V266.9c0-3.7 1.4-7.1 3.9-9.8l108.2-95.2-18.7-21.3-108.6 95.6-.7.6c-8 8-12.5 18.7-12.5 30.1v115.8a42.6 42.6 0 0 0 42.5 42.5z\" /> </svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M141.7 425.2h226.8a42.6 42.6 0 0 0 42.5-42.5V266.8c0-11.3-4.4-22-12.4-30l-.3-.3L274 125.4c-3-2.7-4.7-6.5-4.7-10.6V78H241v36.9c0 12.1 5.2 23.6 14.2 31.7l123.6 110.5c2.5 2.6 3.9 6.1 3.9 9.8v115.8c0 7.8-6.4 14.2-14.2 14.2h-99.2V326H241v70.9h-99.2c-7.8 0-14.2-6.4-14.2-14.2V266.9c0-3.7 1.4-7.1 3.9-9.8l108.2-95.2-18.7-21.3-108.6 95.6-.7.6c-8 8-12.5 18.7-12.5 30.1v115.8a42.6 42.6 0 0 0 42.5 42.5z\" /> </svg>')}:host .lock{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"><path d=\"M11 44q-1.25 0-2.125-.875T8 41V19.3q0-1.25.875-2.125T11 16.3h3.5v-4.8q0-3.95 2.775-6.725Q20.05 2 24 2q3.95 0 6.725 2.775Q33.5 7.55 33.5 11.5v4.8H37q1.25 0 2.125.875T40 19.3V41q0 1.25-.875 2.125T37 44Zm6.5-27.7h13v-4.8q0-2.7-1.9-4.6Q26.7 5 24 5q-2.7 0-4.6 1.9-1.9 1.9-1.9 4.6ZM11 41h26V19.3H11V41Zm13-7q1.6 0 2.725-1.1t1.125-2.65q0-1.5-1.125-2.725T24 26.3q-1.6 0-2.725 1.225T20.15 30.25q0 1.55 1.125 2.65Q22.4 34 24 34Zm0-3.85Z\"/> </svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"> <path d=\"M11 44q-1.25 0-2.125-.875T8 41V19.3q0-1.25.875-2.125T11 16.3h3.5v-4.8q0-3.95 2.775-6.725Q20.05 2 24 2q3.95 0 6.725 2.775Q33.5 7.55 33.5 11.5v4.8H37q1.25 0 2.125.875T40 19.3V41q0 1.25-.875 2.125T37 44Zm6.5-27.7h13v-4.8q0-2.7-1.9-4.6Q26.7 5 24 5q-2.7 0-4.6 1.9-1.9 1.9-1.9 4.6ZM11 41h26V19.3H11V41Zm13-7q1.6 0 2.725-1.1t1.125-2.65q0-1.5-1.125-2.725T24 26.3q-1.6 0-2.725 1.225T20.15 30.25q0 1.55 1.125 2.65Q22.4 34 24 34Zm0-3.85Z\"/> </svg>')}:host .find-in-page{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"> <path d=\"M24 30.4q1.85 0 3.1-1.25t1.25-3.1q0-1.85-1.25-3.1T24 21.7q-1.85 0-3.1 1.25t-1.25 3.1q0 1.85 1.25 3.1T24 30.4ZM36.8 41l-8.7-8.7q-1 .6-1.975.85-.975.25-2.125.25-3.1 0-5.225-2.125-2.125-2.125-2.125-5.225 0-3.1 2.125-5.225Q20.9 18.7 24 18.7q3.1 0 5.225 2.125 2.125 2.125 2.125 5.225 0 1.15-.325 2.2-.325 1.05-.975 1.85L37 37.05V16.9L28.4 7H11v34ZM11 44q-1.2 0-2.1-.9Q8 42.2 8 41V7q0-1.2.9-2.1Q9.8 4 11 4h18.6L40 15.95V41q0 1.2-.9 2.1-.9.9-2.1.9Zm14.5-18.9Z\"/> </svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"> <path d=\"M24 30.4q1.85 0 3.1-1.25t1.25-3.1q0-1.85-1.25-3.1T24 21.7q-1.85 0-3.1 1.25t-1.25 3.1q0 1.85 1.25 3.1T24 30.4ZM36.8 41l-8.7-8.7q-1 .6-1.975.85-.975.25-2.125.25-3.1 0-5.225-2.125-2.125-2.125-2.125-5.225 0-3.1 2.125-5.225Q20.9 18.7 24 18.7q3.1 0 5.225 2.125 2.125 2.125 2.125 5.225 0 1.15-.325 2.2-.325 1.05-.975 1.85L37 37.05V16.9L28.4 7H11v34ZM11 44q-1.2 0-2.1-.9Q8 42.2 8 41V7q0-1.2.9-2.1Q9.8 4 11 4h18.6L40 15.95V41q0 1.2-.9 2.1-.9.9-2.1.9Zm14.5-18.9Z\"/> </svg>')}:host .sentiment-dissatisfied{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"> <path d=\"M31.3 21.35q1.15 0 1.925-.775Q34 19.8 34 18.65t-.775-1.925q-.775-.775-1.925-.775t-1.925.775q-.775.775-.775 1.925t.775 1.925q.775.775 1.925.775Zm-14.6 0q1.15 0 1.925-.775.775-.775.775-1.925t-.775-1.925q-.775-.775-1.925-.775t-1.925.775Q14 17.5 14 18.65t.775 1.925q.775.775 1.925.775Zm7.3 5.8q-3.35 0-6.075 1.875T13.9 34h2.65q1.1-2.1 3.125-3.25t4.375-1.15q2.35 0 4.325 1.15T31.5 34h2.6q-1.25-3.1-4-4.975-2.75-1.875-6.1-1.875ZM24 44q-4.1 0-7.75-1.575-3.65-1.575-6.375-4.3-2.725-2.725-4.3-6.375Q4 28.1 4 23.95q0-4.1 1.575-7.75 1.575-3.65 4.3-6.35 2.725-2.7 6.375-4.275Q19.9 4 24.05 4q4.1 0 7.75 1.575 3.65 1.575 6.35 4.275 2.7 2.7 4.275 6.35Q44 19.85 44 24q0 4.1-1.575 7.75-1.575 3.65-4.275 6.375t-6.35 4.3Q28.15 44 24 44Zm0-20Zm0 17q7.1 0 12.05-4.975Q41 31.05 41 24q0-7.1-4.95-12.05Q31.1 7 24 7q-7.05 0-12.025 4.95Q7 16.9 7 24q0 7.05 4.975 12.025Q16.95 41 24 41Z\"/> </svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-8 -16 65 65\"> <path d=\"M31.3 21.35q1.15 0 1.925-.775Q34 19.8 34 18.65t-.775-1.925q-.775-.775-1.925-.775t-1.925.775q-.775.775-.775 1.925t.775 1.925q.775.775 1.925.775Zm-14.6 0q1.15 0 1.925-.775.775-.775.775-1.925t-.775-1.925q-.775-.775-1.925-.775t-1.925.775Q14 17.5 14 18.65t.775 1.925q.775.775 1.925.775Zm7.3 5.8q-3.35 0-6.075 1.875T13.9 34h2.65q1.1-2.1 3.125-3.25t4.375-1.15q2.35 0 4.325 1.15T31.5 34h2.6q-1.25-3.1-4-4.975-2.75-1.875-6.1-1.875ZM24 44q-4.1 0-7.75-1.575-3.65-1.575-6.375-4.3-2.725-2.725-4.3-6.375Q4 28.1 4 23.95q0-4.1 1.575-7.75 1.575-3.65 4.3-6.35 2.725-2.7 6.375-4.275Q19.9 4 24.05 4q4.1 0 7.75 1.575 3.65 1.575 6.35 4.275 2.7 2.7 4.275 6.35Q44 19.85 44 24q0 4.1-1.575 7.75-1.575 3.65-4.275 6.375t-6.35 4.3Q28.15 44 24 44Zm0-20Zm0 17q7.1 0 12.05-4.975Q41 31.05 41 24q0-7.1-4.95-12.05Q31.1 7 24 7q-7.05 0-12.025 4.95Q7 16.9 7 24q0 7.05 4.975 12.025Q16.95 41 24 41Z\"/> </svg>')}:host .gestion-de-pago{mask-image:url('data:image/svg+xml;utf8,<svg viewBox=\"-16 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m44.996094 94.265625c-8.285156 0-15-6.714844-15-15v-64.265625c0-8.285156 6.714844-15 15-15s15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m174.703125 94.265625c-8.28125 0-15-6.714844-15-15v-64.265625c0-8.285156 6.71875-15 15-15 8.285156 0 15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m304.410156 94.265625c-8.28125 0-15-6.714844-15-15v-64.265625c0-8.285156 6.71875-15 15-15 8.285156 0 15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m434.121094 94.265625c-8.285156 0-15-6.714844-15-15v-64.265625c0-8.285156 6.714844-15 15-15 8.28125 0 15 6.714844 15 15v64.265625c0 8.285156-6.71875 15-15 15zm0 0\" /><path d=\"m434.121094 124.269531c-24.8125 0-45-20.191406-45-45v-47.140625h-39.710938v47.140625c0 24.808594-20.179687 45-45 45-24.808594 0-45-20.191406-45-45v-47.140625h-39.710937v47.140625c0 24.808594-20.179688 45-45 45-24.808594 0-45-20.191406-45-45v-47.140625h-39.699219v47.140625c0 24.808594-20.191406 45-45 45h-45v324.53125c0 34.847657 28.351562 63.199219 63.199219 63.199219h353.460937c34.851563 0 63.199219-28.351562 63.199219-63.199219v-324.53125zm-214.269532 32.128907h5.078126v-17.128907c0-8.289062 6.71875-15 15-15s15 6.710938 15 15v17.128907h17.128906c8.292968 0 15 6.722656 15 15 0 8.28125-6.707032 15-15 15h-52.207032c-7.242187 0-13.121093 5.882812-13.121093 13.121093 0 7.230469 5.878906 13.109375 13.121093 13.109375h40.160157c23.777343 0 43.117187 19.351563 43.117187 43.121094s-19.339844 43.121094-43.117187 43.121094h-5.082031v17.128906c0 8.28125-6.71875 15-15 15s-15-6.71875-15-15v-17.128906h-17.128907c-8.289062 0-15-6.722656-15-15 0-8.292969 6.710938-15 15-15h52.210938c7.238281 0 13.117187-5.890625 13.117187-13.121094s-5.878906-13.121094-13.117187-13.121094h-40.160157c-23.78125 0-43.121093-19.339844-43.121093-43.109375 0-23.78125 19.339843-43.121093 43.121093-43.121093zm108.449219 303.132812h-192.800781c-8.289062 0-15-6.710938-15-15 0-8.28125 6.710938-15 15-15h192.800781c8.277344 0 15 6.71875 15 15 0 8.289062-6.722656 15-15 15zm64.257813-64.261719h-305.257813c-8.289062 0-15-6.71875-15-15 0-8.289062 6.710938-15 15-15h305.257813c8.292968 0 15 6.710938 15 15 0 8.28125-6.707032 15-15 15zm0 0\" /></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg viewBox=\"-16 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m44.996094 94.265625c-8.285156 0-15-6.714844-15-15v-64.265625c0-8.285156 6.714844-15 15-15s15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m174.703125 94.265625c-8.28125 0-15-6.714844-15-15v-64.265625c0-8.285156 6.71875-15 15-15 8.285156 0 15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m304.410156 94.265625c-8.28125 0-15-6.714844-15-15v-64.265625c0-8.285156 6.71875-15 15-15 8.285156 0 15 6.714844 15 15v64.265625c0 8.285156-6.714844 15-15 15zm0 0\" /><path d=\"m434.121094 94.265625c-8.285156 0-15-6.714844-15-15v-64.265625c0-8.285156 6.714844-15 15-15 8.28125 0 15 6.714844 15 15v64.265625c0 8.285156-6.71875 15-15 15zm0 0\" /><path d=\"m434.121094 124.269531c-24.8125 0-45-20.191406-45-45v-47.140625h-39.710938v47.140625c0 24.808594-20.179687 45-45 45-24.808594 0-45-20.191406-45-45v-47.140625h-39.710937v47.140625c0 24.808594-20.179688 45-45 45-24.808594 0-45-20.191406-45-45v-47.140625h-39.699219v47.140625c0 24.808594-20.191406 45-45 45h-45v324.53125c0 34.847657 28.351562 63.199219 63.199219 63.199219h353.460937c34.851563 0 63.199219-28.351562 63.199219-63.199219v-324.53125zm-214.269532 32.128907h5.078126v-17.128907c0-8.289062 6.71875-15 15-15s15 6.710938 15 15v17.128907h17.128906c8.292968 0 15 6.722656 15 15 0 8.28125-6.707032 15-15 15h-52.207032c-7.242187 0-13.121093 5.882812-13.121093 13.121093 0 7.230469 5.878906 13.109375 13.121093 13.109375h40.160157c23.777343 0 43.117187 19.351563 43.117187 43.121094s-19.339844 43.121094-43.117187 43.121094h-5.082031v17.128906c0 8.28125-6.71875 15-15 15s-15-6.71875-15-15v-17.128906h-17.128907c-8.289062 0-15-6.722656-15-15 0-8.292969 6.710938-15 15-15h52.210938c7.238281 0 13.117187-5.890625 13.117187-13.121094s-5.878906-13.121094-13.117187-13.121094h-40.160157c-23.78125 0-43.121093-19.339844-43.121093-43.109375 0-23.78125 19.339843-43.121093 43.121093-43.121093zm108.449219 303.132812h-192.800781c-8.289062 0-15-6.710938-15-15 0-8.28125 6.710938-15 15-15h192.800781c8.277344 0 15 6.71875 15 15 0 8.289062-6.722656 15-15 15zm64.257813-64.261719h-305.257813c-8.289062 0-15-6.71875-15-15 0-8.289062 6.710938-15 15-15h305.257813c8.292968 0 15 6.710938 15 15 0 8.28125-6.707032 15-15 15zm0 0\" /></svg>')}:host .gestion-de-instrucciones{mask-image:url('data:image/svg+xml;utf8,<svg id=\"Capa_1\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><g><path d=\"m361 0h-305c-30.327 0-55 24.673-55 55v5h360z\" /><path d=\"m456 0h-65v60h120v-5c0-30.327-24.673-55-55-55z\" /></g><path d=\"m456 332h-400c-30.327 0-55 24.673-55 55v70c0 30.327 24.673 55 55 55h400c30.327 0 55-24.673 55-55v-70c0-30.327-24.673-55-55-55zm-200 45c8.284 0 15 6.716 15 15s-6.716 15-15 15-15-6.716-15-15 6.716-15 15-15zm-60 0c8.284 0 15 6.716 15 15s-6.716 15-15 15-15-6.716-15-15 6.716-15 15-15zm-120 90c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm180 60h-120c-8.284 0-15-6.716-15-15s6.716-15 15-15h120c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 0c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60h-60c-8.284 0-15-6.716-15-15s6.716-15 15-15h60c8.284 0 15 6.716 15 15s-6.716 15-15 15z\" /><g><path d=\"m91 151h120v30h-120z\" /><path d=\"m1 90v232.269c14.837-12.626 34.038-20.269 55-20.269h400c20.962 0 40.163 7.643 55 20.269v-232.269zm225 181h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15zm15-75c0 8.284-6.716 15-15 15h-150c-8.284 0-15-6.716-15-15v-60c0-8.284 6.716-15 15-15h150c8.284 0 15 6.716 15 15zm195 75h-90c-8.284 0-15-6.716-15-15s6.716-15 15-15h90c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15z\" /></g></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg id=\"Capa_1\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><g><path d=\"m361 0h-305c-30.327 0-55 24.673-55 55v5h360z\" /><path d=\"m456 0h-65v60h120v-5c0-30.327-24.673-55-55-55z\" /></g><path d=\"m456 332h-400c-30.327 0-55 24.673-55 55v70c0 30.327 24.673 55 55 55h400c30.327 0 55-24.673 55-55v-70c0-30.327-24.673-55-55-55zm-200 45c8.284 0 15 6.716 15 15s-6.716 15-15 15-15-6.716-15-15 6.716-15 15-15zm-60 0c8.284 0 15 6.716 15 15s-6.716 15-15 15-15-6.716-15-15 6.716-15 15-15zm-120 90c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm180 60h-120c-8.284 0-15-6.716-15-15s6.716-15 15-15h120c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 60c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm60 0c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm0-60h-60c-8.284 0-15-6.716-15-15s6.716-15 15-15h60c8.284 0 15 6.716 15 15s-6.716 15-15 15z\" /><g><path d=\"m91 151h120v30h-120z\" /><path d=\"m1 90v232.269c14.837-12.626 34.038-20.269 55-20.269h400c20.962 0 40.163 7.643 55 20.269v-232.269zm225 181h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15zm15-75c0 8.284-6.716 15-15 15h-150c-8.284 0-15-6.716-15-15v-60c0-8.284 6.716-15 15-15h150c8.284 0 15 6.716 15 15zm195 75h-90c-8.284 0-15-6.716-15-15s6.716-15 15-15h90c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-150c-8.284 0-15-6.716-15-15s6.716-15 15-15h150c8.284 0 15 6.716 15 15s-6.716 15-15 15z\" /></g></g></svg>')}:host .gestion-de-fallidos{mask-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"><g><path d=\"M185.7,416.1v20.2h-30v-20.1c-21.5-3.1-38.2-21.7-38.2-44.1h30c0,8,6.5,14.6,14.6,14.6h16.8c8.3,0,15.1-6.8,15.1-15.1 s-6.8-15.1-15.1-15.1h-16.5c-24.9,0-45.1-20.2-45.1-45.1c0-22.6,16.7-41.4,38.4-44.6v-20.2h30v20.2c21.5,3.4,38,22.1,38,44.6h-30 c0-8.3-6.8-15.1-15.1-15.1h-16.2c-8.3,0-15.1,6.8-15.1,15.1s6.8,15.1,15.1,15.1h16.5c24.9,0,45.1,20.2,45.1,45.1 C224.1,394,207.4,412.8,185.7,416.1L185.7,416.1z\" /><path d=\"M0,341.3v70.1C0,466.9,45.1,512,100.6,512h70.1C76.4,512,0,435.5,0,341.3z\" /><path d=\"M512,100.6c0-42.6-26.6-79-64-93.7v77.7h32v24.6l-64,63.9l-64-64V84.6h32V0H100.6C45.1,0,0,45.1,0,100.6v240.7 c0-94.2,76.4-170.6,170.6-170.7c94.3,0,170.7,76.4,170.7,170.7S264.9,512,170.7,512h105.5c17.3-10.5,34.8-25.8,47.1-40.4H492 c6.7-9,11.9-19.1,15.4-30H344.5c7.9-13.6,14.4-29,18.4-42.6H512v-30H369.4c1.3-9.1,1.9-18.4,1.9-27.7c0-5-0.2-9.9-0.5-14.9H512v-30 H366.3c-3.1-13.6-8.6-29-14-40.4H512V100.6z\" /></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"><g><path d=\"M185.7,416.1v20.2h-30v-20.1c-21.5-3.1-38.2-21.7-38.2-44.1h30c0,8,6.5,14.6,14.6,14.6h16.8c8.3,0,15.1-6.8,15.1-15.1 s-6.8-15.1-15.1-15.1h-16.5c-24.9,0-45.1-20.2-45.1-45.1c0-22.6,16.7-41.4,38.4-44.6v-20.2h30v20.2c21.5,3.4,38,22.1,38,44.6h-30 c0-8.3-6.8-15.1-15.1-15.1h-16.2c-8.3,0-15.1,6.8-15.1,15.1s6.8,15.1,15.1,15.1h16.5c24.9,0,45.1,20.2,45.1,45.1 C224.1,394,207.4,412.8,185.7,416.1L185.7,416.1z\" /><path d=\"M0,341.3v70.1C0,466.9,45.1,512,100.6,512h70.1C76.4,512,0,435.5,0,341.3z\" /><path d=\"M512,100.6c0-42.6-26.6-79-64-93.7v77.7h32v24.6l-64,63.9l-64-64V84.6h32V0H100.6C45.1,0,0,45.1,0,100.6v240.7 c0-94.2,76.4-170.6,170.6-170.7c94.3,0,170.7,76.4,170.7,170.7S264.9,512,170.7,512h105.5c17.3-10.5,34.8-25.8,47.1-40.4H492 c6.7-9,11.9-19.1,15.4-30H344.5c7.9-13.6,14.4-29,18.4-42.6H512v-30H369.4c1.3-9.1,1.9-18.4,1.9-27.7c0-5-0.2-9.9-0.5-14.9H512v-30 H366.3c-3.1-13.6-8.6-29-14-40.4H512V100.6z\" /></g></svg>')}:host .external-link{mask-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 510.24 510.24\"><g><path d=\"M268.86,258.45l42.24-42.24l73.75-73.75l7.19,80.84l28.24-2.51L409.35,97.91L286.47,86.98l-2.51,28.24 l80.87,7.19l-73.76,73.76l-42.24,42.24c-13.05,13.05-31.08,19.62-49.45,18.01l-47.17-4.2l-2.51,28.23l47.19,4.2 C223.63,287,249.87,277.45,268.86,258.45z\" /></g><g><polygon points=\"364.71,412.31 89.96,412.31 89.96,137.56 227.33,137.56 227.33,162.56 114.96,162.56 114.96,387.31 339.71,387.31 339.71,274.93 364.71,274.93 \t\" /></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 510.24 510.24\"><g><path d=\"M268.86,258.45l42.24-42.24l73.75-73.75l7.19,80.84l28.24-2.51L409.35,97.91L286.47,86.98l-2.51,28.24 l80.87,7.19l-73.76,73.76l-42.24,42.24c-13.05,13.05-31.08,19.62-49.45,18.01l-47.17-4.2l-2.51,28.23l47.19,4.2 C223.63,287,249.87,277.45,268.86,258.45z\" /></g><g><polygon points=\"364.71,412.31 89.96,412.31 89.96,137.56 227.33,137.56 227.33,162.56 114.96,162.56 114.96,387.31 339.71,387.31 339.71,274.93 364.71,274.93 \t\" /></g></svg>')}:host .copy{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142.4 455.9H355V238L248 115.7H142.4a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H142.4c-7.8 0-14.2-6.4-14.2-14.2V158.3z\" /><path d=\"M311.1 106.19999999999999l53.8 61.5h-53.8v-61.5zM183.5 132.4V96.9c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1h-40.1v28.3h68.5V176.6l-107-122.3H197.7a42.6 42.6 0 0 0-42.5 42.5l.3 35.6h28z\" /></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142.4 455.9H355V238L248 115.7H142.4a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H142.4c-7.8 0-14.2-6.4-14.2-14.2V158.3z\" /><path d=\"M311.1 106.19999999999999l53.8 61.5h-53.8v-61.5zM183.5 132.4V96.9c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1h-40.1v28.3h68.5V176.6l-107-122.3H197.7a42.6 42.6 0 0 0-42.5 42.5l.3 35.6h28z\" /></svg>')}:host .configuracion-de-servicio{mask-image:url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"setting_manage\" data-name=\"setting manage\"><path d=\"m26 13c-.61 0-.29.13-7.42-7h-11.58a1 1 0 0 0 -1 1v34a1 1 0 0 0 1 1h34a1 1 0 0 0 1-1v-28zm-7-3a1 1 0 0 1 0 2 1 1 0 0 1 0-2zm-8 2a1 1 0 0 1 0-2 1 1 0 0 1 0 2zm3-1a1 1 0 0 1 2 0 1 1 0 0 1 -2 0zm19 15.67a2.57 2.57 0 0 1 .74 1.81c0 .88-.24 1.1-1.76 3.75a2.55 2.55 0 0 1 -2.88 1.2 8 8 0 0 1 -1.16.68 2.6 2.6 0 0 1 -2.52 1.89h-2.84a2.6 2.6 0 0 1 -2.49-1.89 8 8 0 0 1 -1.16-.68c-2.35.62-3.2-1.76-4.3-3.66a2.6 2.6 0 0 1 .4-3.1 7.5 7.5 0 0 1 0-1.34 2.59 2.59 0 0 1 -.4-3.1c1.13-2 2-4.27 4.3-3.66a8 8 0 0 1 1.16-.68 2.6 2.6 0 0 1 2.49-1.89h2.84a2.6 2.6 0 0 1 2.49 1.89 8 8 0 0 1 1.16.68 2.55 2.55 0 0 1 2.93 1.2c1.47 2.55 1.76 2.82 1.76 3.75a2.57 2.57 0 0 1 -.76 1.81 7.5 7.5 0 0 1 0 1.34z\" /><path d=\"m41 6h-19.58c2.77 2.78-2.46-2.48 5 5h15.58v-4a1 1 0 0 0 -1-1z\" /><path d=\"m27.93 25.23a4 4 0 1 0 -6.46 3.87 4 4 0 0 0 6.46-3.87z\" /></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"setting_manage\" data-name=\"setting manage\"><path d=\"m26 13c-.61 0-.29.13-7.42-7h-11.58a1 1 0 0 0 -1 1v34a1 1 0 0 0 1 1h34a1 1 0 0 0 1-1v-28zm-7-3a1 1 0 0 1 0 2 1 1 0 0 1 0-2zm-8 2a1 1 0 0 1 0-2 1 1 0 0 1 0 2zm3-1a1 1 0 0 1 2 0 1 1 0 0 1 -2 0zm19 15.67a2.57 2.57 0 0 1 .74 1.81c0 .88-.24 1.1-1.76 3.75a2.55 2.55 0 0 1 -2.88 1.2 8 8 0 0 1 -1.16.68 2.6 2.6 0 0 1 -2.52 1.89h-2.84a2.6 2.6 0 0 1 -2.49-1.89 8 8 0 0 1 -1.16-.68c-2.35.62-3.2-1.76-4.3-3.66a2.6 2.6 0 0 1 .4-3.1 7.5 7.5 0 0 1 0-1.34 2.59 2.59 0 0 1 -.4-3.1c1.13-2 2-4.27 4.3-3.66a8 8 0 0 1 1.16-.68 2.6 2.6 0 0 1 2.49-1.89h2.84a2.6 2.6 0 0 1 2.49 1.89 8 8 0 0 1 1.16.68 2.55 2.55 0 0 1 2.93 1.2c1.47 2.55 1.76 2.82 1.76 3.75a2.57 2.57 0 0 1 -.76 1.81 7.5 7.5 0 0 1 0 1.34z\" /><path d=\"m41 6h-19.58c2.77 2.78-2.46-2.48 5 5h15.58v-4a1 1 0 0 0 -1-1z\" /><path d=\"m27.93 25.23a4 4 0 1 0 -6.46 3.87 4 4 0 0 0 6.46-3.87z\" /></g></svg>')}:host .clientesyusuarios{mask-image:url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m411.4478 0h-310.896c-55.4444 0-100.5518 45.1074-100.5518 100.5522v310.896c0 55.4444 45.1074 100.5518 100.5518 100.5518h310.896c55.4448 0 100.5522-45.1074 100.5522-100.5518v-310.896c0-55.4448-45.1074-100.5522-100.5522-100.5522zm-12.4341 415.5962h-24v-12c0-65.6245-53.3892-119.0137-119.0137-119.0137-65.6089 0-118.9858 53.3892-118.9858 119.0137v12h-24v-12c0-60.3486 37.5664-112.0861 90.538-133.049-26.7911-16.6031-44.6747-46.2638-44.6747-80.0258 0-51.8809 42.2212-94.0894 94.1177-94.0894 51.8809 0 94.0894 42.2085 94.0894 94.0894 0 32.811-16.886 61.7479-42.4201 78.5916 54.9721 19.9539 94.3493 72.7046 94.3493 134.4832v12z\" /><path d=\"m252.9951 120.4321c-38.6631 0-70.1177 31.4419-70.1177 70.0894s31.4546 70.0894 70.1177 70.0894c38.6475 0 70.0894-31.4419 70.0894-70.0894s-31.4419-70.0894-70.0894-70.0894z\" /></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m411.4478 0h-310.896c-55.4444 0-100.5518 45.1074-100.5518 100.5522v310.896c0 55.4444 45.1074 100.5518 100.5518 100.5518h310.896c55.4448 0 100.5522-45.1074 100.5522-100.5518v-310.896c0-55.4448-45.1074-100.5522-100.5522-100.5522zm-12.4341 415.5962h-24v-12c0-65.6245-53.3892-119.0137-119.0137-119.0137-65.6089 0-118.9858 53.3892-118.9858 119.0137v12h-24v-12c0-60.3486 37.5664-112.0861 90.538-133.049-26.7911-16.6031-44.6747-46.2638-44.6747-80.0258 0-51.8809 42.2212-94.0894 94.1177-94.0894 51.8809 0 94.0894 42.2085 94.0894 94.0894 0 32.811-16.886 61.7479-42.4201 78.5916 54.9721 19.9539 94.3493 72.7046 94.3493 134.4832v12z\" /><path d=\"m252.9951 120.4321c-38.6631 0-70.1177 31.4419-70.1177 70.0894s31.4546 70.0894 70.1177 70.0894c38.6475 0 70.0894-31.4419 70.0894-70.0894s-31.4419-70.0894-70.0894-70.0894z\" /></g></svg>')}:host .mail-copy{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M73.3 404.2h283.5a28.3 28.3 0 0 0 28.3-28.3V177.4a28.3 28.3 0 0 0-28.3-28.3H73.3A28.3 28.3 0 0 0 45 177.4v198.4a28.3 28.3 0 0 0 28.3 28.4zm0-28.4V205.7a10699 10699 0 0 0 124 103.3 28.2 28.2 0 0 0 35.4 0l124-103.6v170.5H73.3v-.1zm10.4-198.4H346L215 286.8c-27.3-21.9-99.4-82.6-131.3-109.4z\"></path><path d=\"M154.10000000000002 164.6l.1-37.3a1209 1209 0 0 0 42.5 37.1h44.2l-78-65.4h262.3l-73.1 61 19.5 20.7 64.3-53.7v170.5h-64.1v31.2h65.1a28.3 28.3 0 0 0 28.3-28.3V101.9a28.3 28.3 0 0 0-28.3-28.3H153.4a28.3 28.3 0 0 0-28.3 28.3v62.6l29 .1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M73.3 404.2h283.5a28.3 28.3 0 0 0 28.3-28.3V177.4a28.3 28.3 0 0 0-28.3-28.3H73.3A28.3 28.3 0 0 0 45 177.4v198.4a28.3 28.3 0 0 0 28.3 28.4zm0-28.4V205.7a10699 10699 0 0 0 124 103.3 28.2 28.2 0 0 0 35.4 0l124-103.6v170.5H73.3v-.1zm10.4-198.4H346L215 286.8c-27.3-21.9-99.4-82.6-131.3-109.4z\"></path><path d=\"M154.10000000000002 164.6l.1-37.3a1209 1209 0 0 0 42.5 37.1h44.2l-78-65.4h262.3l-73.1 61 19.5 20.7 64.3-53.7v170.5h-64.1v31.2h65.1a28.3 28.3 0 0 0 28.3-28.3V101.9a28.3 28.3 0 0 0-28.3-28.3H153.4a28.3 28.3 0 0 0-28.3 28.3v62.6l29 .1z\"></path></svg>')}:host .person{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 219.6V163a85 85 0 0 0-170 0V219.8c0 20.1 7.1 38.5 18.7 53.1l-42 35.2-41.5 34.7A56.2 56.2 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a85.1 85.1 0 0 0 129.9-72.1v-.2zm-85.1 56.8a56.7 56.7 0 0 1-56.7-56.7V163a56.7 56.7 0 0 1 113.4 0v56.7a56.8 56.8 0 0 1-56.7 56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 219.6V163a85 85 0 0 0-170 0V219.8c0 20.1 7.1 38.5 18.7 53.1l-42 35.2-41.5 34.7A56.2 56.2 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a85.1 85.1 0 0 0 129.9-72.1v-.2zm-85.1 56.8a56.7 56.7 0 0 1-56.7-56.7V163a56.7 56.7 0 0 1 113.4 0v56.7a56.8 56.8 0 0 1-56.7 56.7z\"></path></svg>')}:host .person-business{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 219.6V163a85 85 0 0 0-170 0V219.8c0 20.1 7.1 38.5 18.7 53.1l-42 35.2-41.5 34.7A56.2 56.2 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a85.1 85.1 0 0 0 129.9-72.1v-.2zm-85.1 56.8a56.7 56.7 0 0 1-56.7-56.7V163a56.7 56.7 0 0 1 113.4 0v56.7a56.8 56.8 0 0 1-56.7 56.7z\"></path><path d=\"M240.7 418.1l14.1 21.3 14.2-21.3V326h-28.3z\"></path><path d=\"M254.8 439.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 219.6V163a85 85 0 0 0-170 0V219.8c0 20.1 7.1 38.5 18.7 53.1l-42 35.2-41.5 34.7A56.2 56.2 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a85.1 85.1 0 0 0 129.9-72.1v-.2zm-85.1 56.8a56.7 56.7 0 0 1-56.7-56.7V163a56.7 56.7 0 0 1 113.4 0v56.7a56.8 56.8 0 0 1-56.7 56.7z\"></path><path d=\"M240.7 418.1l14.1 21.3 14.2-21.3V326h-28.3z\"></path><path d=\"M254.8 439.4z\"></path></svg>')}:host .person-client{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M269.3 396.9h70.9v28.3h-70.9z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M269.3 396.9h70.9v28.3h-70.9z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path></svg>')}:host .person-callcenter{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 386.2c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 33.9-28.4c-7.9-5.4-14.9-12-21-19.4l-31.1 26-41.5 34.7A56.8 56.8 0 0 0 85 386.2v39h28.3v-39z\"></path><path d=\"M354.3 177.2h28.3v49.6h-28.3z\"></path><path d=\"M393.3 184.3h7.1v35.4h-7.1z\"></path><path d=\"M170.4 226.8a85 85 0 0 0 84.4 77.9h.6a85.2 85.2 0 0 0 84.8-84.8V163a85.1 85.1 0 0 0-84.6-85h-.9a85 85 0 0 0-84.5 85v35.4h-17.7v-28.3h.5v-7.6c0-56.4 45.9-102.3 102.3-102.3v-7.1a109.6 109.6 0 0 0-109.4 109.4v7.6h-.5v56.7h25zm28-63.8a56.8 56.8 0 0 1 56.6-56.7h.1a56.8 56.8 0 0 1 56.6 56.7V219.7a56.8 56.8 0 0 1-56.6 56.7h-.1a56.8 56.8 0 0 1-56.2-49.6H255v-28.3h-56.7V163z\"></path><path d=\"M363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39c0-16.8-7.4-32.6-20.3-43.4L363.4 308z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 386.2c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 33.9-28.4c-7.9-5.4-14.9-12-21-19.4l-31.1 26-41.5 34.7A56.8 56.8 0 0 0 85 386.2v39h28.3v-39z\"></path><path d=\"M354.3 177.2h28.3v49.6h-28.3z\"></path><path d=\"M393.3 184.3h7.1v35.4h-7.1z\"></path><path d=\"M170.4 226.8a85 85 0 0 0 84.4 77.9h.6a85.2 85.2 0 0 0 84.8-84.8V163a85.1 85.1 0 0 0-84.6-85h-.9a85 85 0 0 0-84.5 85v35.4h-17.7v-28.3h.5v-7.6c0-56.4 45.9-102.3 102.3-102.3v-7.1a109.6 109.6 0 0 0-109.4 109.4v7.6h-.5v56.7h25zm28-63.8a56.8 56.8 0 0 1 56.6-56.7h.1a56.8 56.8 0 0 1 56.6 56.7V219.7a56.8 56.8 0 0 1-56.6 56.7h-.1a56.8 56.8 0 0 1-56.2-49.6H255v-28.3h-56.7V163z\"></path><path d=\"M363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39c0-16.8-7.4-32.6-20.3-43.4L363.4 308z\"></path></svg>')}:host .person-group{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M187.8 244.5c0-9.5 4.2-18.4 11.4-24.4l35.7-29.9a45.8 45.8 0 0 0 40.4 0L311 220a32 32 0 0 1 11.4 24.4v7.1h21.3v-7.1a53.2 53.2 0 0 0-19-40.8L292 176.4a45.6 45.6 0 0 0 9.2-27.6v-28.3a46.2 46.2 0 0 0-92.2 0v28.3c0 10.3 3.4 19.9 9.2 27.6l-32.7 27.4a53 53 0 0 0-19 40.7v7.1h21.3v-7.1zm42.5-124a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path><path d=\"M109.8 428.7c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v8.1h21.3v-8.1c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v8.1H422v-8.1c0-15.8-6.9-30.6-19-40.7l-30-24.7a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0v28.3a46 46 0 0 0 6.2 23L263.5 388a53.8 53.8 0 0 0-8.4 8.8 49.9 49.9 0 0 0-8.4-8.8L217 363.2a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0v28.3a46 46 0 0 0 6.2 23L107.6 388a53 53 0 0 0-19 40.7v8.1h21.3v-8.1zm198.5-116.9a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3zm-155.9 0a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M187.8 244.5c0-9.5 4.2-18.4 11.4-24.4l35.7-29.9a45.8 45.8 0 0 0 40.4 0L311 220a32 32 0 0 1 11.4 24.4v7.1h21.3v-7.1a53.2 53.2 0 0 0-19-40.8L292 176.4a45.6 45.6 0 0 0 9.2-27.6v-28.3a46.2 46.2 0 0 0-92.2 0v28.3c0 10.3 3.4 19.9 9.2 27.6l-32.7 27.4a53 53 0 0 0-19 40.7v7.1h21.3v-7.1zm42.5-124a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path><path d=\"M109.8 428.7c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v8.1h21.3v-8.1c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v8.1H422v-8.1c0-15.8-6.9-30.6-19-40.7l-30-24.7a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0v28.3a46 46 0 0 0 6.2 23L263.5 388a53.8 53.8 0 0 0-8.4 8.8 49.9 49.9 0 0 0-8.4-8.8L217 363.2a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0v28.3a46 46 0 0 0 6.2 23L107.6 388a53 53 0 0 0-19 40.7v8.1h21.3v-8.1zm198.5-116.9a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3zm-155.9 0a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path></svg>')}:host .wc-men{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 188.3a39 39 0 0 1-39-39v-28.8a39 39 0 0 1 78 0v28.8a39 39 0 0 1-39 39zm0-85.5c-9.8 0-17.7 7.9-17.7 17.7v28.8a17.7 17.7 0 1 0 35.4 0v-28.8c0-9.8-7.9-17.7-17.7-17.7z\"></path><path d=\"M265.7 297.6H287v127.6h-21.3z\"></path><path d=\"M223.2 297.6h21.3v127.6h-21.3z\"></path><path d=\"M211.4 185.7l-4.6 3.9a53 53 0 0 0-19 40.7v67.4h21.3v-67.4c0-9.5 4.2-18.4 11.4-24.4l4-3.4-13.1-16.8z\"></path><path d=\"M303.4 189.6l-4.5-3.8-14.1 15.9 5 4.2a32 32 0 0 1 11.4 24.4v67.4h21.3v-67.4c-.1-15.8-7-30.6-19.1-40.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 188.3a39 39 0 0 1-39-39v-28.8a39 39 0 0 1 78 0v28.8a39 39 0 0 1-39 39zm0-85.5c-9.8 0-17.7 7.9-17.7 17.7v28.8a17.7 17.7 0 1 0 35.4 0v-28.8c0-9.8-7.9-17.7-17.7-17.7z\"></path><path d=\"M265.7 297.6H287v127.6h-21.3z\"></path><path d=\"M223.2 297.6h21.3v127.6h-21.3z\"></path><path d=\"M211.4 185.7l-4.6 3.9a53 53 0 0 0-19 40.7v67.4h21.3v-67.4c0-9.5 4.2-18.4 11.4-24.4l4-3.4-13.1-16.8z\"></path><path d=\"M303.4 189.6l-4.5-3.8-14.1 15.9 5 4.2a32 32 0 0 1 11.4 24.4v67.4h21.3v-67.4c-.1-15.8-7-30.6-19.1-40.7z\"></path></svg>')}:host .wc-woman{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 188.3a39 39 0 0 0 39-39v-28.8a39 39 0 0 0-78 0v28.8a39 39 0 0 0 39 39zm-17.7-67.8a17.7 17.7 0 1 1 35.4 0v28.8a17.7 17.7 0 1 1-35.4 0v-28.8z\"></path><path d=\"M265.7 311.8c0 7.9-.6 15.1-1.6 21.7 2.1 11.9 5.7 21.9 9.2 31.7l2.5 7.1a176 176 0 0 0 11.2-60.6v-14.2h-21.3v14.3z\"></path><path d=\"M244.5 311.8v-14.2h-21.3v14.2c0 29.1 7.4 49.9 13.3 66.5 4.2 11.9 7.9 22.2 7.9 32.7v14.2h21.3V411a115 115 0 0 0-9.2-39.8c-5.6-15.9-12-33.9-12-59.4z\"></path><path d=\"M208.3 230.3c0-9.5 4.2-18.4 11.4-24.4l4.4-3.7-13-16.8-5.1 4.3a53 53 0 0 0-19 40.7v67.4h21.3v-67.5z\"></path><path d=\"M289.8 205.9a32 32 0 0 1 11.4 24.4v67.4h21.3v-67.4c0-15.8-6.9-30.6-19-40.7l-4.5-3.8-14.1 15.9 4.9 4.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 188.3a39 39 0 0 0 39-39v-28.8a39 39 0 0 0-78 0v28.8a39 39 0 0 0 39 39zm-17.7-67.8a17.7 17.7 0 1 1 35.4 0v28.8a17.7 17.7 0 1 1-35.4 0v-28.8z\"></path><path d=\"M265.7 311.8c0 7.9-.6 15.1-1.6 21.7 2.1 11.9 5.7 21.9 9.2 31.7l2.5 7.1a176 176 0 0 0 11.2-60.6v-14.2h-21.3v14.3z\"></path><path d=\"M244.5 311.8v-14.2h-21.3v14.2c0 29.1 7.4 49.9 13.3 66.5 4.2 11.9 7.9 22.2 7.9 32.7v14.2h21.3V411a115 115 0 0 0-9.2-39.8c-5.6-15.9-12-33.9-12-59.4z\"></path><path d=\"M208.3 230.3c0-9.5 4.2-18.4 11.4-24.4l4.4-3.7-13-16.8-5.1 4.3a53 53 0 0 0-19 40.7v67.4h21.3v-67.5z\"></path><path d=\"M289.8 205.9a32 32 0 0 1 11.4 24.4v67.4h21.3v-67.4c0-15.8-6.9-30.6-19-40.7l-4.5-3.8-14.1 15.9 4.9 4.2z\"></path></svg>')}:host .wc-handicap{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M208.6 202.6v60.3c0 15.8 6.9 30.6 19 40.7l28 23.5 13.6-16.3-28-23.5a32 32 0 0 1-11.4-24.4v-60.3h-21.2z\"></path><path d=\"M240.5 188.3a39 39 0 0 0 39-39v-28.8a39 39 0 0 0-78 0v28.8a39 39 0 0 0 39 39zm-17.7-67.8a17.7 17.7 0 1 1 35.4 0v28.8a17.7 17.7 0 1 1-35.4 0v-28.8z\"></path><path d=\"M229.9 428.7a99.4 99.4 0 0 0 99-92.1h9.9c5.9 0 11.4 2.9 14.7 7.9l34.1 51.2 17.7-11.8-34.1-51.2a38.8 38.8 0 0 0-32.4-17.4h-10.6a99.4 99.4 0 0 0-80.5-83.4v21.7a78 78 0 1 1-56.8 8.4v-23.8a99.4 99.4 0 0 0 39 190.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M208.6 202.6v60.3c0 15.8 6.9 30.6 19 40.7l28 23.5 13.6-16.3-28-23.5a32 32 0 0 1-11.4-24.4v-60.3h-21.2z\"></path><path d=\"M240.5 188.3a39 39 0 0 0 39-39v-28.8a39 39 0 0 0-78 0v28.8a39 39 0 0 0 39 39zm-17.7-67.8a17.7 17.7 0 1 1 35.4 0v28.8a17.7 17.7 0 1 1-35.4 0v-28.8z\"></path><path d=\"M229.9 428.7a99.4 99.4 0 0 0 99-92.1h9.9c5.9 0 11.4 2.9 14.7 7.9l34.1 51.2 17.7-11.8-34.1-51.2a38.8 38.8 0 0 0-32.4-17.4h-10.6a99.4 99.4 0 0 0-80.5-83.4v21.7a78 78 0 1 1-56.8 8.4v-23.8a99.4 99.4 0 0 0 39 190.5z\"></path></svg>')}:host .micro-payments{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M116.3 253.6h80.3v5h-80.3z\"></path><path d=\"M116.3 268.6h60.3v5h-60.3z\"></path><path d=\"M297.1 175.7H116.3a30.1 30.1 0 0 0-30.1 30.1v100.4a30.1 30.1 0 0 0 30.1 30.1h180.8a30.1 30.1 0 0 0 30.1-30.1V205.9a30.2 30.2 0 0 0-30.1-30.2zm0 20.1a10 10 0 0 1 10 10v10h-113c-6 0-11.6-2.6-15.4-7.2l-10.8-12.9h129.2zm0 120.5H116.3a10 10 0 0 1-10-10V205.9a10 10 0 0 1 10-10h25.4l21.6 25.8a40.2 40.2 0 0 0 30.8 14.3h113v70.3a10 10 0 0 1-10 10z\"></path><g><path d=\"M404 242.6l-5.5-5.5a63.4 63.4 0 0 0 18.7-45.2c0-17.1-6.6-33.1-18.7-45.2l5.5-5.5a71.2 71.2 0 0 1 21 50.7 70.6 70.6 0 0 1-21 50.7z\"></path><path d=\"M389 229.1l-5.5-5.5a44.2 44.2 0 0 0 0-62.4l5.5-5.5a51.8 51.8 0 0 1 0 73.4z\"></path><path d=\"M374 214.6l-5.5-5.5a24 24 0 0 0 0-34.2l5.5-5.5a31.8 31.8 0 0 1 0 45.2z\"></path><path d=\"M359 202l-5.5-5.5a6.6 6.6 0 0 0 0-9.2l5.5-5.5a14.2 14.2 0 0 1 0 20.2z\"></path></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M116.3 253.6h80.3v5h-80.3z\"></path><path d=\"M116.3 268.6h60.3v5h-60.3z\"></path><path d=\"M297.1 175.7H116.3a30.1 30.1 0 0 0-30.1 30.1v100.4a30.1 30.1 0 0 0 30.1 30.1h180.8a30.1 30.1 0 0 0 30.1-30.1V205.9a30.2 30.2 0 0 0-30.1-30.2zm0 20.1a10 10 0 0 1 10 10v10h-113c-6 0-11.6-2.6-15.4-7.2l-10.8-12.9h129.2zm0 120.5H116.3a10 10 0 0 1-10-10V205.9a10 10 0 0 1 10-10h25.4l21.6 25.8a40.2 40.2 0 0 0 30.8 14.3h113v70.3a10 10 0 0 1-10 10z\"></path><g><path d=\"M404 242.6l-5.5-5.5a63.4 63.4 0 0 0 18.7-45.2c0-17.1-6.6-33.1-18.7-45.2l5.5-5.5a71.2 71.2 0 0 1 21 50.7 70.6 70.6 0 0 1-21 50.7z\"></path><path d=\"M389 229.1l-5.5-5.5a44.2 44.2 0 0 0 0-62.4l5.5-5.5a51.8 51.8 0 0 1 0 73.4z\"></path><path d=\"M374 214.6l-5.5-5.5a24 24 0 0 0 0-34.2l5.5-5.5a31.8 31.8 0 0 1 0 45.2z\"></path><path d=\"M359 202l-5.5-5.5a6.6 6.6 0 0 0 0-9.2l5.5-5.5a14.2 14.2 0 0 1 0 20.2z\"></path></g></svg>')}:host .robotics{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M231.7 249.4a16.2 16.2 0 1 0-32.4 0v16.2a16.2 16.2 0 1 0 32.4 0v-16.2z\"></path><path d=\"M309.4 249.4a16.2 16.2 0 1 0-32.4 0v16.2a16.2 16.2 0 1 0 32.4 0v-16.2z\"></path><path d=\"M209.4 330.6h87.8v10h-87.8z\"></path><path d=\"M423.4 288.4a40.3 40.3 0 0 0-37.6-39.8v-32.7a33 33 0 0 0-32.9-32.9H301v-12.9c0-10.9-4.8-21.2-13.2-28.2l-13.1-11a18.5 18.5 0 1 0-9.8 12.4l12.8 10.7a21 21 0 0 1 7.5 16.1V183H235v-12.4c0-10.9-4.8-21.2-13.2-28.2l-13.1-11a18.5 18.5 0 1 0-9.8 12.4l12.8 10.7a21 21 0 0 1 7.5 16.1V183h-65.7a33 33 0 0 0-32.9 32.9V249a40.2 40.2 0 0 0-37.5 39.8v.2a40.2 40.2 0 0 0 37.5 39.8v30.7a33 33 0 0 0 32.9 32.9H353a33 33 0 0 0 32.9-32.9v-31.2a40.2 40.2 0 0 0 37.5-39.8v-.1c0 .1 0 0 0 0zm-302.6 20.3a20.2 20.2 0 0 1-17.5-19.8 20.2 20.2 0 0 1 17.5-19.8v39.6zm236.7-61.2v112.2c0 2.5-2 4.5-4.5 4.5H153.7c-2.5 0-4.5-2-4.5-4.5V215.8c0-2.5 2-4.5 4.5-4.5H353c2.5 0 4.5 2 4.5 4.5v31.7zm28.4 60.8v-39.5a20.2 20.2 0 0 1 17.5 19.8c-.1 10-7.7 18.4-17.5 19.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M231.7 249.4a16.2 16.2 0 1 0-32.4 0v16.2a16.2 16.2 0 1 0 32.4 0v-16.2z\"></path><path d=\"M309.4 249.4a16.2 16.2 0 1 0-32.4 0v16.2a16.2 16.2 0 1 0 32.4 0v-16.2z\"></path><path d=\"M209.4 330.6h87.8v10h-87.8z\"></path><path d=\"M423.4 288.4a40.3 40.3 0 0 0-37.6-39.8v-32.7a33 33 0 0 0-32.9-32.9H301v-12.9c0-10.9-4.8-21.2-13.2-28.2l-13.1-11a18.5 18.5 0 1 0-9.8 12.4l12.8 10.7a21 21 0 0 1 7.5 16.1V183H235v-12.4c0-10.9-4.8-21.2-13.2-28.2l-13.1-11a18.5 18.5 0 1 0-9.8 12.4l12.8 10.7a21 21 0 0 1 7.5 16.1V183h-65.7a33 33 0 0 0-32.9 32.9V249a40.2 40.2 0 0 0-37.5 39.8v.2a40.2 40.2 0 0 0 37.5 39.8v30.7a33 33 0 0 0 32.9 32.9H353a33 33 0 0 0 32.9-32.9v-31.2a40.2 40.2 0 0 0 37.5-39.8v-.1c0 .1 0 0 0 0zm-302.6 20.3a20.2 20.2 0 0 1-17.5-19.8 20.2 20.2 0 0 1 17.5-19.8v39.6zm236.7-61.2v112.2c0 2.5-2 4.5-4.5 4.5H153.7c-2.5 0-4.5-2-4.5-4.5V215.8c0-2.5 2-4.5 4.5-4.5H353c2.5 0 4.5 2 4.5 4.5v31.7zm28.4 60.8v-39.5a20.2 20.2 0 0 1 17.5 19.8c-.1 10-7.7 18.4-17.5 19.7z\"></path></svg>')}:host .machine-learning{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M225.3 258.3s0-.1 0 0a16.3 16.3 0 0 0-32.6 0v16.3a16.3 16.3 0 0 0 32.6 0v-16.3z\"></path><path d=\"M306.4 258.2a16.3 16.3 0 0 0-32.6 0v16.3a16.3 16.3 0 0 0 32.6 0v-16.3z\"></path><path d=\"M205.9 340.2h88.3v9.4h-88.3z\"></path><path d=\"M127.4 176.7v25.7l.1.7a32 32 0 0 0-9.8 23.1v36.1c-22 .2-39.9 18-40.1 40.1v.4c.2 22 18.1 39.9 40.1 40.1v28a32.1 32.1 0 0 0 32.1 32.1h200.6a32.1 32.1 0 0 0 32.1-32.1v-31.4a40.5 40.5 0 0 0 39.4-40.1v-.2-.2a40.6 40.6 0 0 0-39.4-40.1v-32.8c0-8.5-3.3-16.2-8.7-22l.1-.7v-26.8l-11.5 2.5c-34.7 7.5-69.3 15-104.1 22.3-4 .8-9.3 1.2-13.2.4l-117.7-25.1zM97.7 302.6c.1-11 8.9-19.9 19.9-20v40.1a20.5 20.5 0 0 1-19.9-20.1zm258.1 68.2c0 3-2.5 5.5-5.5 5.5H149.8c-3 0-5.5-2.5-5.5-5.5V226.2c0-3 2.5-5.5 5.5-5.5h200.6c3 0 5.5 2.5 5.5 5.5v144.6zm26.6-51.6v-40c10.6.5 19.1 9.3 19.2 20a20.2 20.2 0 0 1-19.2 20z\"></path><path d=\"M419.9 140.7c-54.2-11.6-108.4-23.3-162.6-34.7-3.8-.8-6.6-.5-10.6.3-32.1 6.7-64 13.6-96 20.5l-83.8 18.1c2.9.9 4.4 1.5 6.1 1.8 58.6 12.6 117.2 25.2 176 37.6 3.8.8 6.6.4 10.6-.4 34.4-7.2 68.7-14.6 103-22l31.7-6.8.9-.3-1.1 2.5a36.5 36.5 0 0 0-1.3 31.3l8.6 20.7-.9 1.6a18.7 18.7 0 0 0 7.9 25.1 18.7 18.7 0 0 0 25.1-7.9 18.7 18.7 0 0 0-18.3-27.1l-7.7-18.5a21.2 21.2 0 0 1 .8-17.9l7.3-14.1 24.1-5.2-19.8-4.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M225.3 258.3s0-.1 0 0a16.3 16.3 0 0 0-32.6 0v16.3a16.3 16.3 0 0 0 32.6 0v-16.3z\"></path><path d=\"M306.4 258.2a16.3 16.3 0 0 0-32.6 0v16.3a16.3 16.3 0 0 0 32.6 0v-16.3z\"></path><path d=\"M205.9 340.2h88.3v9.4h-88.3z\"></path><path d=\"M127.4 176.7v25.7l.1.7a32 32 0 0 0-9.8 23.1v36.1c-22 .2-39.9 18-40.1 40.1v.4c.2 22 18.1 39.9 40.1 40.1v28a32.1 32.1 0 0 0 32.1 32.1h200.6a32.1 32.1 0 0 0 32.1-32.1v-31.4a40.5 40.5 0 0 0 39.4-40.1v-.2-.2a40.6 40.6 0 0 0-39.4-40.1v-32.8c0-8.5-3.3-16.2-8.7-22l.1-.7v-26.8l-11.5 2.5c-34.7 7.5-69.3 15-104.1 22.3-4 .8-9.3 1.2-13.2.4l-117.7-25.1zM97.7 302.6c.1-11 8.9-19.9 19.9-20v40.1a20.5 20.5 0 0 1-19.9-20.1zm258.1 68.2c0 3-2.5 5.5-5.5 5.5H149.8c-3 0-5.5-2.5-5.5-5.5V226.2c0-3 2.5-5.5 5.5-5.5h200.6c3 0 5.5 2.5 5.5 5.5v144.6zm26.6-51.6v-40c10.6.5 19.1 9.3 19.2 20a20.2 20.2 0 0 1-19.2 20z\"></path><path d=\"M419.9 140.7c-54.2-11.6-108.4-23.3-162.6-34.7-3.8-.8-6.6-.5-10.6.3-32.1 6.7-64 13.6-96 20.5l-83.8 18.1c2.9.9 4.4 1.5 6.1 1.8 58.6 12.6 117.2 25.2 176 37.6 3.8.8 6.6.4 10.6-.4 34.4-7.2 68.7-14.6 103-22l31.7-6.8.9-.3-1.1 2.5a36.5 36.5 0 0 0-1.3 31.3l8.6 20.7-.9 1.6a18.7 18.7 0 0 0 7.9 25.1 18.7 18.7 0 0 0 25.1-7.9 18.7 18.7 0 0 0-18.3-27.1l-7.7-18.5a21.2 21.2 0 0 1 .8-17.9l7.3-14.1 24.1-5.2-19.8-4.6z\"></path></svg>')}:host .robo-advisor{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M209.3 308.7a13.5 13.5 0 0 0-27 0v13.5a13.5 13.5 0 0 0 27 0v-13.5z\"></path><path d=\"M274.1 308.7a13.5 13.5 0 0 0-27 0v13.5a13.5 13.5 0 0 0 27 0v-13.5z\"></path><path d=\"M190.8 376.3h73.1v8.3h-73.1z\"></path><path d=\"M369.1 341.2a33.6 33.6 0 0 0-31.3-33.2V280.7a27.4 27.4 0 0 0-27.4-27.4h-43.2v-10.7c0-9.1-4-17.7-11-23.5l-10.9-9.1a15.4 15.4 0 1 0-8.2 10.3l10.6 8.9c4 3.3 6.3 8.2 6.3 13.4v10.7h-41.8V243c0-9.1-4-17.7-11-23.5l-10.9-9.1a15.4 15.4 0 1 0-8.2 10.3l10.6 8.9c4 3.3 6.3 8.2 6.3 13.4v10.3H144.3a27.4 27.4 0 0 0-27.4 27.4v27.6a33.4 33.4 0 0 0-31.3 33.2v.2c.1 17.6 13.9 32 31.3 33.2v25.6a27.4 27.4 0 0 0 27.4 27.4h166.1a27.4 27.4 0 0 0 27.4-27.4v-26a33.4 33.4 0 0 0 31.3-33.2v-.1zM117 358.1a16.6 16.6 0 0 1 0-33v33zm197.2-51v93.4c0 2.1-1.7 3.8-3.8 3.8h-166a3.8 3.8 0 0 1-3.8-3.8V280.7c0-2.1 1.7-3.8 3.8-3.8h166.1c2.1 0 3.8 1.7 3.8 3.8v26.4zm23.6 50.6v-32.9a16.6 16.6 0 0 1 0 32.9z\"></path><path d=\"M327.7 220.9v-12.8c3.4 0 6.6-1.3 9-3.7L351 190a25.4 25.4 0 0 1 18.1-7.5h43.2v-83H284.6v83H336v12.8h-51.4c-7 0-12.8-5.7-12.8-12.8v-83c0-7 5.7-12.8 12.8-12.8h127.7c7 0 12.8 5.7 12.8 12.8v83c0 7-5.7 12.8-12.8 12.8h-43.2c-3.4 0-6.6 1.3-9 3.7l-14.3 14.3a25.4 25.4 0 0 1-18.1 7.6z\"></path><path d=\"M310.3 124.8h76.6v3.2h-76.6z\"></path><path d=\"M310.3 134.4h63.9v3.2h-63.9z\"></path><path d=\"M310.3 143.9h70.3v3.2h-70.3z\"></path><path d=\"M310.3 153.5h63.9v3.2h-63.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M209.3 308.7a13.5 13.5 0 0 0-27 0v13.5a13.5 13.5 0 0 0 27 0v-13.5z\"></path><path d=\"M274.1 308.7a13.5 13.5 0 0 0-27 0v13.5a13.5 13.5 0 0 0 27 0v-13.5z\"></path><path d=\"M190.8 376.3h73.1v8.3h-73.1z\"></path><path d=\"M369.1 341.2a33.6 33.6 0 0 0-31.3-33.2V280.7a27.4 27.4 0 0 0-27.4-27.4h-43.2v-10.7c0-9.1-4-17.7-11-23.5l-10.9-9.1a15.4 15.4 0 1 0-8.2 10.3l10.6 8.9c4 3.3 6.3 8.2 6.3 13.4v10.7h-41.8V243c0-9.1-4-17.7-11-23.5l-10.9-9.1a15.4 15.4 0 1 0-8.2 10.3l10.6 8.9c4 3.3 6.3 8.2 6.3 13.4v10.3H144.3a27.4 27.4 0 0 0-27.4 27.4v27.6a33.4 33.4 0 0 0-31.3 33.2v.2c.1 17.6 13.9 32 31.3 33.2v25.6a27.4 27.4 0 0 0 27.4 27.4h166.1a27.4 27.4 0 0 0 27.4-27.4v-26a33.4 33.4 0 0 0 31.3-33.2v-.1zM117 358.1a16.6 16.6 0 0 1 0-33v33zm197.2-51v93.4c0 2.1-1.7 3.8-3.8 3.8h-166a3.8 3.8 0 0 1-3.8-3.8V280.7c0-2.1 1.7-3.8 3.8-3.8h166.1c2.1 0 3.8 1.7 3.8 3.8v26.4zm23.6 50.6v-32.9a16.6 16.6 0 0 1 0 32.9z\"></path><path d=\"M327.7 220.9v-12.8c3.4 0 6.6-1.3 9-3.7L351 190a25.4 25.4 0 0 1 18.1-7.5h43.2v-83H284.6v83H336v12.8h-51.4c-7 0-12.8-5.7-12.8-12.8v-83c0-7 5.7-12.8 12.8-12.8h127.7c7 0 12.8 5.7 12.8 12.8v83c0 7-5.7 12.8-12.8 12.8h-43.2c-3.4 0-6.6 1.3-9 3.7l-14.3 14.3a25.4 25.4 0 0 1-18.1 7.6z\"></path><path d=\"M310.3 124.8h76.6v3.2h-76.6z\"></path><path d=\"M310.3 134.4h63.9v3.2h-63.9z\"></path><path d=\"M310.3 143.9h70.3v3.2h-70.3z\"></path><path d=\"M310.3 153.5h63.9v3.2h-63.9z\"></path></svg>')}:host .social-trading{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.3 131.6l-14.7 45-25.5-40.7-11.9-19a52.8 52.8 0 0 0-37.5-24.3l-27.4-3.8-2.3 16.4 27.4 3.8a36.3 36.3 0 0 1 25.8 16.7l11.7 18.7 25.7 41.1-46.9-6.5-2.3 16.4 71.3 9.8 22.3-68.4-15.7-5.2z\"></path><path d=\"M191.4 402.2a36.2 36.2 0 0 1-24.2-18.9l-10-19.5-22.1-43.1 46.2 10.5 3.7-16.1-70.2-16-28.1 66.3 15.2 6.5 18.5-43.6 21.8 42.6 10.2 20c7.1 14 20 24 35.3 27.5l26.9 6.1 3.7-16.1-26.9-6.2z\"></path><path d=\"M259.2 221.4l-21.5-18-10-8.4-12.7 15.3 10 8.4 21.4 17.9c2.7 2.3 4.3 5.7 4.3 9.2V266h19.8v-20.2c.1-9.4-4-18.3-11.3-24.4z\"></path><path d=\"M180.1 83.9a46.6 46.6 0 0 0-46.6 46.6v29.3c0 10.1 3.2 19.5 8.7 27.1l-19.8 16.6-21.5 18a32 32 0 0 0-11.4 24.4v20.2h19.8v-20.2a12 12 0 0 1 4.3-9.2l21.5-18 22-18.4a46.6 46.6 0 0 0 69.5-40.5v-29.3a46.5 46.5 0 0 0-46.5-46.6zm26.7 75.9a26.8 26.8 0 0 1-53.4 0v-29.3a26.8 26.8 0 0 1 53.4 0v29.3z\"></path><path d=\"M413.7 379.8l-21.5-18-10-8.4-12.7 15.2 10 8.4 21.4 17.9c2.7 2.3 4.3 5.7 4.3 9.2v20.2H425v-20.2c.1-9.3-4-18.2-11.3-24.3z\"></path><path d=\"M334.6 242.3a46.6 46.6 0 0 0-46.6 46.6v29.3c0 10.1 3.2 19.5 8.7 27.1l-19.8 16.6-21.5 18a32 32 0 0 0-11.4 24.4v20.2h19.8v-20.2a12 12 0 0 1 4.3-9.2l21.5-18 22-18.4a46.6 46.6 0 0 0 69.5-40.5v-29.3a46.5 46.5 0 0 0-46.5-46.6zm26.7 75.9a26.8 26.8 0 0 1-53.4 0v-29.3a26.8 26.8 0 0 1 53.4 0v29.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.3 131.6l-14.7 45-25.5-40.7-11.9-19a52.8 52.8 0 0 0-37.5-24.3l-27.4-3.8-2.3 16.4 27.4 3.8a36.3 36.3 0 0 1 25.8 16.7l11.7 18.7 25.7 41.1-46.9-6.5-2.3 16.4 71.3 9.8 22.3-68.4-15.7-5.2z\"></path><path d=\"M191.4 402.2a36.2 36.2 0 0 1-24.2-18.9l-10-19.5-22.1-43.1 46.2 10.5 3.7-16.1-70.2-16-28.1 66.3 15.2 6.5 18.5-43.6 21.8 42.6 10.2 20c7.1 14 20 24 35.3 27.5l26.9 6.1 3.7-16.1-26.9-6.2z\"></path><path d=\"M259.2 221.4l-21.5-18-10-8.4-12.7 15.3 10 8.4 21.4 17.9c2.7 2.3 4.3 5.7 4.3 9.2V266h19.8v-20.2c.1-9.4-4-18.3-11.3-24.4z\"></path><path d=\"M180.1 83.9a46.6 46.6 0 0 0-46.6 46.6v29.3c0 10.1 3.2 19.5 8.7 27.1l-19.8 16.6-21.5 18a32 32 0 0 0-11.4 24.4v20.2h19.8v-20.2a12 12 0 0 1 4.3-9.2l21.5-18 22-18.4a46.6 46.6 0 0 0 69.5-40.5v-29.3a46.5 46.5 0 0 0-46.5-46.6zm26.7 75.9a26.8 26.8 0 0 1-53.4 0v-29.3a26.8 26.8 0 0 1 53.4 0v29.3z\"></path><path d=\"M413.7 379.8l-21.5-18-10-8.4-12.7 15.2 10 8.4 21.4 17.9c2.7 2.3 4.3 5.7 4.3 9.2v20.2H425v-20.2c.1-9.3-4-18.2-11.3-24.3z\"></path><path d=\"M334.6 242.3a46.6 46.6 0 0 0-46.6 46.6v29.3c0 10.1 3.2 19.5 8.7 27.1l-19.8 16.6-21.5 18a32 32 0 0 0-11.4 24.4v20.2h19.8v-20.2a12 12 0 0 1 4.3-9.2l21.5-18 22-18.4a46.6 46.6 0 0 0 69.5-40.5v-29.3a46.5 46.5 0 0 0-46.5-46.6zm26.7 75.9a26.8 26.8 0 0 1-53.4 0v-29.3a26.8 26.8 0 0 1 53.4 0v29.3z\"></path></svg>')}:host .wearables{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M305.3 341.3h-103a20.6 20.6 0 0 1-20.6-20.6V194.6c0-11.4 9.2-20.6 20.6-20.6h103c11.4 0 20.6 9.2 20.6 20.6v126.1c0 11.4-9.2 20.6-20.6 20.6zm0-146.7h-103v126.1h103V194.6z\"></path><path d=\"M213.3 86.5h81v72.6h-81z\"></path><path d=\"M214 355.3h79.6V427H214z\"></path><path d=\"M266.6 305.1l-4.8-4.8a54.8 54.8 0 0 0 16.1-39c0-14.7-5.7-28.6-16.1-39l4.8-4.8a61.4 61.4 0 0 1 18.1 43.8c0 16.6-6.4 32.2-18.1 43.8z\"></path><path d=\"M253.7 293.5l-4.8-4.8a38.3 38.3 0 0 0 0-53.9l4.8-4.8a45.1 45.1 0 0 1 0 63.5z\"></path><path d=\"M240.7 281l-4.8-4.8a21 21 0 0 0 0-29.6l4.8-4.8a27.6 27.6 0 0 1 0 39.2z\"></path><path d=\"M227.8 270.1l-4.8-4.8a5.6 5.6 0 0 0 0-7.9l4.8-4.8a12.4 12.4 0 0 1 0 17.5z\"></path><path d=\"M332.2 241.8h12v33.1h-12z\"></path><path d=\"M337.9 255.9h23.6v4.7h-23.6z\" transform=\"matrix(.00621 -1 1 .00621 89.3 606.4)\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M305.3 341.3h-103a20.6 20.6 0 0 1-20.6-20.6V194.6c0-11.4 9.2-20.6 20.6-20.6h103c11.4 0 20.6 9.2 20.6 20.6v126.1c0 11.4-9.2 20.6-20.6 20.6zm0-146.7h-103v126.1h103V194.6z\"></path><path d=\"M213.3 86.5h81v72.6h-81z\"></path><path d=\"M214 355.3h79.6V427H214z\"></path><path d=\"M266.6 305.1l-4.8-4.8a54.8 54.8 0 0 0 16.1-39c0-14.7-5.7-28.6-16.1-39l4.8-4.8a61.4 61.4 0 0 1 18.1 43.8c0 16.6-6.4 32.2-18.1 43.8z\"></path><path d=\"M253.7 293.5l-4.8-4.8a38.3 38.3 0 0 0 0-53.9l4.8-4.8a45.1 45.1 0 0 1 0 63.5z\"></path><path d=\"M240.7 281l-4.8-4.8a21 21 0 0 0 0-29.6l4.8-4.8a27.6 27.6 0 0 1 0 39.2z\"></path><path d=\"M227.8 270.1l-4.8-4.8a5.6 5.6 0 0 0 0-7.9l4.8-4.8a12.4 12.4 0 0 1 0 17.5z\"></path><path d=\"M332.2 241.8h12v33.1h-12z\"></path><path d=\"M337.9 255.9h23.6v4.7h-23.6z\" transform=\"matrix(.00621 -1 1 .00621 89.3 606.4)\"></path></svg>')}:host .star{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M421.7 216.8a16 16 0 0 0-15.2-11.1H301.7l-32.4-99.6C267.1 99.5 261 95 254.1 95s-13.1 4.4-15.2 11.1l-32.4 99.6-104.9.2a16.1 16.1 0 0 0-9.4 29l84.8 61.6.1-.2.1.1-32.4 99.6c-2.1 6.6.2 13.8 5.8 17.9a15.9 15.9 0 0 0 18.8 0l84.8-61.6 84.8 61.6c2.8 2 6.1 3.1 9.4 3.1s6.6-1 9.4-3.1a16 16 0 0 0 5.8-17.9l-32.4-99.6 84.8-61.6a16.4 16.4 0 0 0 5.7-18zm-115.4 61.5a16 16 0 0 0-5.8 17.9l22.9 70.4-59.8-43.5a15.9 15.9 0 0 0-18.8 0L185 366.6l22.9-70.3a16 16 0 0 0-5.8-17.9l-60-43.3 74.1-.2c7 0 13.1-4.4 15.2-11.1l22.9-70.4 22.9 70.4a16 16 0 0 0 15.2 11.1h74l-60.1 43.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M421.7 216.8a16 16 0 0 0-15.2-11.1H301.7l-32.4-99.6C267.1 99.5 261 95 254.1 95s-13.1 4.4-15.2 11.1l-32.4 99.6-104.9.2a16.1 16.1 0 0 0-9.4 29l84.8 61.6.1-.2.1.1-32.4 99.6c-2.1 6.6.2 13.8 5.8 17.9a15.9 15.9 0 0 0 18.8 0l84.8-61.6 84.8 61.6c2.8 2 6.1 3.1 9.4 3.1s6.6-1 9.4-3.1a16 16 0 0 0 5.8-17.9l-32.4-99.6 84.8-61.6a16.4 16.4 0 0 0 5.7-18zm-115.4 61.5a16 16 0 0 0-5.8 17.9l22.9 70.4-59.8-43.5a15.9 15.9 0 0 0-18.8 0L185 366.6l22.9-70.3a16 16 0 0 0-5.8-17.9l-60-43.3 74.1-.2c7 0 13.1-4.4 15.2-11.1l22.9-70.4 22.9 70.4a16 16 0 0 0 15.2 11.1h74l-60.1 43.4z\"></path></svg>')}:host .analyse{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.4 298.5h28.3v127h-28.3z\" transform=\"rotate(-45 363.53 362)\"></path><path d=\"M220.5 332.7c-62.4 0-113.3-50.8-113.3-113.3 0-62.4 50.8-113.3 113.3-113.3 62.4 0 113.3 50.8 113.3 113.3S283 332.7 220.5 332.7zm0-198.2c-46.8 0-84.9 38.1-84.9 84.9 0 46.8 38.1 84.9 84.9 84.9 46.8 0 84.9-38.1 84.9-84.9 0-46.8-38.1-84.9-84.9-84.9z\"></path><path d=\"M164.6 196.5V265c4.5 6.1 10 11.5 16.3 15.9v-84.4h-16.3z\"></path><path d=\"M197.2 223.4v65.9c5.2 1.9 10.6 3.1 16.3 3.7v-69.5h-16.3z\"></path><path d=\"M229.8 173.8v118.9c5.7-.8 11.1-2.2 16.3-4.3V173.8h-16.3z\"></path><path d=\"M262.5 198.4v80.7c6.4-4.9 11.9-10.8 16.3-17.6v-63.2h-16.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.4 298.5h28.3v127h-28.3z\" transform=\"rotate(-45 363.53 362)\"></path><path d=\"M220.5 332.7c-62.4 0-113.3-50.8-113.3-113.3 0-62.4 50.8-113.3 113.3-113.3 62.4 0 113.3 50.8 113.3 113.3S283 332.7 220.5 332.7zm0-198.2c-46.8 0-84.9 38.1-84.9 84.9 0 46.8 38.1 84.9 84.9 84.9 46.8 0 84.9-38.1 84.9-84.9 0-46.8-38.1-84.9-84.9-84.9z\"></path><path d=\"M164.6 196.5V265c4.5 6.1 10 11.5 16.3 15.9v-84.4h-16.3z\"></path><path d=\"M197.2 223.4v65.9c5.2 1.9 10.6 3.1 16.3 3.7v-69.5h-16.3z\"></path><path d=\"M229.8 173.8v118.9c5.7-.8 11.1-2.2 16.3-4.3V173.8h-16.3z\"></path><path d=\"M262.5 198.4v80.7c6.4-4.9 11.9-10.8 16.3-17.6v-63.2h-16.3z\"></path></svg>')}:host .tachometer{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M297.9 254.5c-7.8 13.2-15.4 26.6-23.4 39.7a86.6 86.6 0 0 1-9.2 12.4 24.6 24.6 0 0 1-30.6 4.8 25.4 25.4 0 0 1 5.1-46.3c14.3-4.7 29.1-7 43.9-9.4l13.4-2 .8.8z\"></path><path d=\"M424.9 326.8A170 170 0 0 0 255.1 157h-.6A170 170 0 0 0 85.3 326.7h-.1v28.6l339.6-.7.1-27.8zm-311.2-.2c0-11.2 1.3-22.1 3.8-32.6H149v-11h-28.4a141.4 141.4 0 0 1 42.3-63.4l21.8 21.8 7.8-7.8-20.9-20.9a140.8 140.8 0 0 1 75.5-27.2v30.1h11v-30.3c30.4.6 58.6 10.9 81.4 27.9l-21 21 7.8 7.8 21.8-21.8c19 16.6 33.6 38.3 41.6 62.8h-28.8v11h31.9c2.4 10.3 3.8 21 3.8 32l-282.9.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M297.9 254.5c-7.8 13.2-15.4 26.6-23.4 39.7a86.6 86.6 0 0 1-9.2 12.4 24.6 24.6 0 0 1-30.6 4.8 25.4 25.4 0 0 1 5.1-46.3c14.3-4.7 29.1-7 43.9-9.4l13.4-2 .8.8z\"></path><path d=\"M424.9 326.8A170 170 0 0 0 255.1 157h-.6A170 170 0 0 0 85.3 326.7h-.1v28.6l339.6-.7.1-27.8zm-311.2-.2c0-11.2 1.3-22.1 3.8-32.6H149v-11h-28.4a141.4 141.4 0 0 1 42.3-63.4l21.8 21.8 7.8-7.8-20.9-20.9a140.8 140.8 0 0 1 75.5-27.2v30.1h11v-30.3c30.4.6 58.6 10.9 81.4 27.9l-21 21 7.8 7.8 21.8-21.8c19 16.6 33.6 38.3 41.6 62.8h-28.8v11h31.9c2.4 10.3 3.8 21 3.8 32l-282.9.6z\"></path></svg>')}:host .mobile-payment{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"252.4\" cy=\"368.2\" r=\"14.2\"></circle><path d=\"M323.3 84.8H181.5a28.3 28.3 0 0 0-28.3 28.3v283.5a28.3 28.3 0 0 0 28.3 28.3h141.7a28.3 28.3 0 0 0 28.3-28.3V113.1a28.2 28.2 0 0 0-28.2-28.3zm0 28.3v223.2H181.5V113.1h141.8zm0 283.5H181.6v-53.1h141.7v53.1z\"></path><path d=\"M280.4 201.1a44.6 44.6 0 1 0-54.8 49.4 44.5 44.5 0 1 0 54.8-49.4zM269.7 274a29.7 29.7 0 1 1 0-59.4 29.7 29.7 0 0 1 0 59.4zm-63.2-66.8A29.7 29.7 0 0 1 265 200a44.7 44.7 0 0 0-39 35.1 29.9 29.9 0 0 1-19.5-27.9z\"></path><path d=\"M269.3 259.3c-4.8 0-7.3-2.2-7.3-7.2h4.3c0 2.2.6 4 3.1 4 3.1 0 3.4-3 3.4-7.3 0-2.4-.2-5.8-3.2-5.8-1.8 0-2.9 1.2-3.2 2.9h-4.2l.5-16.5h13.6v3.3h-9.5l-.4 9.3c1.3-1.4 2.4-2.1 4.6-2.1 5.3 0 6.2 4.2 6.2 8.9.1 6-1 10.5-7.9 10.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"252.4\" cy=\"368.2\" r=\"14.2\"></circle><path d=\"M323.3 84.8H181.5a28.3 28.3 0 0 0-28.3 28.3v283.5a28.3 28.3 0 0 0 28.3 28.3h141.7a28.3 28.3 0 0 0 28.3-28.3V113.1a28.2 28.2 0 0 0-28.2-28.3zm0 28.3v223.2H181.5V113.1h141.8zm0 283.5H181.6v-53.1h141.7v53.1z\"></path><path d=\"M280.4 201.1a44.6 44.6 0 1 0-54.8 49.4 44.5 44.5 0 1 0 54.8-49.4zM269.7 274a29.7 29.7 0 1 1 0-59.4 29.7 29.7 0 0 1 0 59.4zm-63.2-66.8A29.7 29.7 0 0 1 265 200a44.7 44.7 0 0 0-39 35.1 29.9 29.9 0 0 1-19.5-27.9z\"></path><path d=\"M269.3 259.3c-4.8 0-7.3-2.2-7.3-7.2h4.3c0 2.2.6 4 3.1 4 3.1 0 3.4-3 3.4-7.3 0-2.4-.2-5.8-3.2-5.8-1.8 0-2.9 1.2-3.2 2.9h-4.2l.5-16.5h13.6v3.3h-9.5l-.4 9.3c1.3-1.4 2.4-2.1 4.6-2.1 5.3 0 6.2 4.2 6.2 8.9.1 6-1 10.5-7.9 10.5z\"></path></svg>')}:host .office{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M188.5 287.5c4.4-2.6 9.5-4 14.6-4h79.3a56.3 56.3 0 0 0 56-48.1l22.8-148.2-28-4.3-22.8 148.2a28.1 28.1 0 0 1-28 24h-79.3a56.6 56.6 0 0 0-29.2 8.1l-25.3 15.2 14.6 24.3 25.3-15.2z\"></path><path d=\"M306.4 379.7l-30.1-13.4a17.7 17.7 0 0 1-10.5-16.2v-45.4h-21.3v45.4c0 3.7.5 7.4 1.5 10.8l-42.2 18.7a38.8 38.8 0 0 0-23.1 35.6v9.9H202v-9.9c0-7 4.1-13.3 10.5-16.2l45-20c3 2.7 6.4 4.9 10.2 6.6l30.1 13.4a17.7 17.7 0 0 1 10.5 16.2v9.9h21.3v-9.9a39.2 39.2 0 0 0-23.2-35.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M188.5 287.5c4.4-2.6 9.5-4 14.6-4h79.3a56.3 56.3 0 0 0 56-48.1l22.8-148.2-28-4.3-22.8 148.2a28.1 28.1 0 0 1-28 24h-79.3a56.6 56.6 0 0 0-29.2 8.1l-25.3 15.2 14.6 24.3 25.3-15.2z\"></path><path d=\"M306.4 379.7l-30.1-13.4a17.7 17.7 0 0 1-10.5-16.2v-45.4h-21.3v45.4c0 3.7.5 7.4 1.5 10.8l-42.2 18.7a38.8 38.8 0 0 0-23.1 35.6v9.9H202v-9.9c0-7 4.1-13.3 10.5-16.2l45-20c3 2.7 6.4 4.9 10.2 6.6l30.1 13.4a17.7 17.7 0 0 1 10.5 16.2v9.9h21.3v-9.9a39.2 39.2 0 0 0-23.2-35.5z\"></path></svg>')}:host .currency{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 376.4l-32.8-32.8c19.8-24.3 31.8-55.2 31.9-88.9v-.2-.2c-.1-33.5-11.9-64.3-31.6-88.5l31.9-31.9-20-20-31.9 31.9a140.46 140.46 0 0 0-89.6-32.2c-33.7 0-64.7 11.9-89.1 31.7l-31.4-31.4-20 20 31.4 31.4a140.81 140.81 0 0 0-32 89.1v.4c.1 33.9 12.2 65 32.2 89.3l-32.4 32.4 20 20 32.4-32.4c24.3 19.7 55.2 31.5 88.8 31.5 33.8 0 64.9-12 89.2-31.9l32.8 32.8 20.2-20.1zm-142-9.2c-62.2 0-112.7-50.5-112.8-112.6.1-62.1 50.7-112.6 112.8-112.6 62.2 0 112.7 50.5 112.8 112.6-.1 62.1-50.7 112.6-112.8 112.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 376.4l-32.8-32.8c19.8-24.3 31.8-55.2 31.9-88.9v-.2-.2c-.1-33.5-11.9-64.3-31.6-88.5l31.9-31.9-20-20-31.9 31.9a140.46 140.46 0 0 0-89.6-32.2c-33.7 0-64.7 11.9-89.1 31.7l-31.4-31.4-20 20 31.4 31.4a140.81 140.81 0 0 0-32 89.1v.4c.1 33.9 12.2 65 32.2 89.3l-32.4 32.4 20 20 32.4-32.4c24.3 19.7 55.2 31.5 88.8 31.5 33.8 0 64.9-12 89.2-31.9l32.8 32.8 20.2-20.1zm-142-9.2c-62.2 0-112.7-50.5-112.8-112.6.1-62.1 50.7-112.6 112.8-112.6 62.2 0 112.7 50.5 112.8 112.6-.1 62.1-50.7 112.6-112.8 112.6z\"></path></svg>')}:host .simple-integration{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M292.3 371.9l-18.8-21.2 102.1-90.8a7.2 7.2 0 0 0 2.4-5.4c0-1.2-.3-3.5-2.4-5.4l-102.1-90.8 18.8-21.2L394.5 228a35.3 35.3 0 0 1 0 53l-102.2 90.9z\"></path><path d=\"M213.1 371.9L111 281.1a35.3 35.3 0 0 1 0-53l102.1-90.8 18.8 21.2-102.1 90.8a7.2 7.2 0 0 0-2.4 5.4c0 1.2.3 3.5 2.4 5.4l102.1 90.8-18.8 21z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M292.3 371.9l-18.8-21.2 102.1-90.8a7.2 7.2 0 0 0 2.4-5.4c0-1.2-.3-3.5-2.4-5.4l-102.1-90.8 18.8-21.2L394.5 228a35.3 35.3 0 0 1 0 53l-102.2 90.9z\"></path><path d=\"M213.1 371.9L111 281.1a35.3 35.3 0 0 1 0-53l102.1-90.8 18.8 21.2-102.1 90.8a7.2 7.2 0 0 0-2.4 5.4c0 1.2.3 3.5 2.4 5.4l102.1 90.8-18.8 21z\"></path></svg>')}:host .wallet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M371.2 150.8H138.7a28.3 28.3 0 0 0-28.3 28.3V335a28.3 28.3 0 0 0 28.3 28.3h232.4a28.3 28.3 0 0 0 28.3-28.3V179.1a28.2 28.2 0 0 0-28.2-28.3zM138.7 335.1V179.2h232.4v39.3H306a37.5 37.5 0 0 0 0 74.8h65.1v41.8H138.7zm232.5-105.6v52.8H306a26.4 26.4 0 1 1 0-52.8h65.2z\"></path><circle cx=\"308.9\" cy=\"255.7\" r=\"14.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M371.2 150.8H138.7a28.3 28.3 0 0 0-28.3 28.3V335a28.3 28.3 0 0 0 28.3 28.3h232.4a28.3 28.3 0 0 0 28.3-28.3V179.1a28.2 28.2 0 0 0-28.2-28.3zM138.7 335.1V179.2h232.4v39.3H306a37.5 37.5 0 0 0 0 74.8h65.1v41.8H138.7zm232.5-105.6v52.8H306a26.4 26.4 0 1 1 0-52.8h65.2z\"></path><circle cx=\"308.9\" cy=\"255.7\" r=\"14.2\"></circle></svg>')}:host .scales{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M201.5 276.2v-.2h-.1l-51.2-89.4L99.1 276H99v.2c.1 24.5 23 44.3 51.2 44.3 28.3 0 51.2-19.8 51.3-44.3zm-90.8-.2l39.6-69.1 39.6 69.1h-79.2z\"></path><path d=\"M409.5 276.2v-.2h-.1l-51.2-89.4-51.1 89.4h-.1v.2c.1 24.5 23 44.3 51.2 44.3 28.3 0 51.2-19.8 51.3-44.3zm-90.8-.2l39.6-69.1 39.6 69.1h-79.2z\"></path><path d=\"M306.6 137c8.4-.7 16.6 2.3 22.5 8.2l27.6 27.6 20-20-27.6-27.6a56.4 56.4 0 0 0-45-16.4l-36.9 3.3v-5.9a14.2 14.2 0 1 0-28.4 0v5.9l-36.9-3.3a56.4 56.4 0 0 0-45 16.4l-27.6 27.6 20 20 27.6-27.6a28.4 28.4 0 0 1 22.5-8.2l39.4 3.5v253h-86.3v34h201v-34h-86.4v-253l39.5-3.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M201.5 276.2v-.2h-.1l-51.2-89.4L99.1 276H99v.2c.1 24.5 23 44.3 51.2 44.3 28.3 0 51.2-19.8 51.3-44.3zm-90.8-.2l39.6-69.1 39.6 69.1h-79.2z\"></path><path d=\"M409.5 276.2v-.2h-.1l-51.2-89.4-51.1 89.4h-.1v.2c.1 24.5 23 44.3 51.2 44.3 28.3 0 51.2-19.8 51.3-44.3zm-90.8-.2l39.6-69.1 39.6 69.1h-79.2z\"></path><path d=\"M306.6 137c8.4-.7 16.6 2.3 22.5 8.2l27.6 27.6 20-20-27.6-27.6a56.4 56.4 0 0 0-45-16.4l-36.9 3.3v-5.9a14.2 14.2 0 1 0-28.4 0v5.9l-36.9-3.3a56.4 56.4 0 0 0-45 16.4l-27.6 27.6 20 20 27.6-27.6a28.4 28.4 0 0 1 22.5-8.2l39.4 3.5v253h-86.3v34h201v-34h-86.4v-253l39.5-3.5z\"></path></svg>')}:host .responsive-design{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M169.6 169.6c0-3.3 2.6-5.9 5.9-5.9h188.7c3.3 0 5.9 2.6 5.9 5.9v106.2h23.6V169.6a29.5 29.5 0 0 0-29.5-29.5H175.5a29.5 29.5 0 0 0-29.5 29.5v58.1h23.6v-58.1z\"></path><path d=\"M411.4 293.5H209.2v23.6h202.3v-23.6zm-106.1 14.7h-70.8v-5.9h70.8v5.9z\"></path><path d=\"M179.1 243.8h-60.7a12 12 0 0 0-12.1 12.1v121.5a12 12 0 0 0 12.1 12.1h60.7a12 12 0 0 0 12.1-12.1V256c0-6.7-5.4-12.2-12.1-12.2zm0 12.2v95.7h-60.7V256h60.7zm0 121.5h-60.7v-22.8h60.7v22.8z\"></path><circle cx=\"148.7\" cy=\"366.5\" r=\"6.1\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M169.6 169.6c0-3.3 2.6-5.9 5.9-5.9h188.7c3.3 0 5.9 2.6 5.9 5.9v106.2h23.6V169.6a29.5 29.5 0 0 0-29.5-29.5H175.5a29.5 29.5 0 0 0-29.5 29.5v58.1h23.6v-58.1z\"></path><path d=\"M411.4 293.5H209.2v23.6h202.3v-23.6zm-106.1 14.7h-70.8v-5.9h70.8v5.9z\"></path><path d=\"M179.1 243.8h-60.7a12 12 0 0 0-12.1 12.1v121.5a12 12 0 0 0 12.1 12.1h60.7a12 12 0 0 0 12.1-12.1V256c0-6.7-5.4-12.2-12.1-12.2zm0 12.2v95.7h-60.7V256h60.7zm0 121.5h-60.7v-22.8h60.7v22.8z\"></path><circle cx=\"148.7\" cy=\"366.5\" r=\"6.1\"></circle></svg>')}:host .wlan{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M433.3 201.8l-20 20a229.2 229.2 0 0 0-163.2-67.6c-61.6 0-119.6 24-163.2 67.6l-20-20c48.9-48.9 114-75.9 183.2-75.9s134.2 26.9 183.2 75.9z\"></path><path d=\"M384.4 256l-20 20a159.6 159.6 0 0 0-225.5 0l-20-20a187.8 187.8 0 0 1 265.5 0z\"></path><path d=\"M332 310.1l-20 20a87 87 0 0 0-123.8 0l-20-20a115.5 115.5 0 0 1 163.8 0z\"></path><path d=\"M286.6 364.3l-20 20a23.2 23.2 0 0 0-33 0l-20-20a51.4 51.4 0 0 1 73 0z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M433.3 201.8l-20 20a229.2 229.2 0 0 0-163.2-67.6c-61.6 0-119.6 24-163.2 67.6l-20-20c48.9-48.9 114-75.9 183.2-75.9s134.2 26.9 183.2 75.9z\"></path><path d=\"M384.4 256l-20 20a159.6 159.6 0 0 0-225.5 0l-20-20a187.8 187.8 0 0 1 265.5 0z\"></path><path d=\"M332 310.1l-20 20a87 87 0 0 0-123.8 0l-20-20a115.5 115.5 0 0 1 163.8 0z\"></path><path d=\"M286.6 364.3l-20 20a23.2 23.2 0 0 0-33 0l-20-20a51.4 51.4 0 0 1 73 0z\"></path></svg>')}:host .foreign-exchange{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.5 131l-14.7 45-25.5-40.8-11.9-19a52.8 52.8 0 0 0-37.5-24.3l-27.4-3.8-2.3 16.4 27.4 3.8a36.3 36.3 0 0 1 25.8 16.7l11.7 18.7 25.7 41.1-46.9-6.5-2.3 16.4 71.3 9.8 22.3-68.4-15.7-5.1z\"></path><path d=\"M183.5 398.6a36.2 36.2 0 0 1-24.2-18.9L149.2 360l-22.1-43.1 46.2 10.5 3.7-16.1-70.2-16-28.1 66.3 15.2 6.5 18.5-43.6 21.9 42.9 10.2 20c7.1 14 20 24 35.3 27.5l26.9 6.1 3.7-16.1-26.9-6.3z\"></path><path d=\"M318.2 212.9l-5.1 30.1a61.1 61.1 0 1 1-69.5 68.9l-30 5.7a91.6 91.6 0 1 0 104.6-104.7z\"></path><path d=\"M204.8 295.7a91.6 91.6 0 0 0 0-183 91.6 91.6 0 0 0 0 183zm0-152.5a61.1 61.1 0 0 1 0 122 61.1 61.1 0 0 1 0-122z\"></path><path d=\"M175.7 225.7c4.4 0 7.6-1 9.7-3.1 2.1-2.1 3.1-5.4 3.1-9.9v-1.2h-7.6v1c0 2.3-.3 4.1-.8 5.3-.9 1.7-2.4 2.5-4.5 2.5-2.5 0-4-1.3-4.8-3.8-.6-2-.9-6.3-.9-12.7 0-5.4.3-9.1.9-11 .9-2.7 2.5-4 5-4 3.3 0 4.9 2.3 4.9 6.9v.7h7.4v-.9c0-4.2-1-7.3-2.9-9.3-1.9-2-5-3-9.3-3-6 0-9.9 2-11.8 6-1.3 2.8-2 7.9-2 15.2 0 7.6.7 12.8 2 15.6 1.9 3.8 5.8 5.7 11.6 5.7z\"></path><path d=\"M201.6 206.4h10.8v18.5h7.6v-41h-7.6v16.9h-10.8v-16.9H194v41h7.6z\"></path><path d=\"M235.6 206.5h12.2V201h-12.2v-11.4h12.8v-5.7h-20.3v41h7.5z\"></path><path d=\"M302.3 266.9v7.1a16.1 16.1 0 0 0-11.5 5 16 16 0 0 0-3.1 5.2c-.7 2-1 4.2-1 6.5 0 5.1 1.4 9.1 4.2 12.2 1.6 1.8 5.1 4.3 10.3 7.5l1 .7v19.1c-3.6-.9-5.4-4.2-5.4-9.7v-1.6h-10.9v3.9c0 4.9 1.4 8.9 4.2 11.8 2.8 2.9 6.8 4.4 12.2 4.6v8h5.6V339c10.8-.8 16.2-6.7 16.2-17.8 0-4.4-1.3-8.2-3.9-11.4a36 36 0 0 0-11.1-8.2l-1.4-.8v-18.4c3.1.9 4.8 3.4 5.1 7.4l.1 1.3v.9h10.3v-2.3c0-10.3-5.2-15.6-15.5-15.8v-7.1h-5.4zm0 30.5c-3.5-2.6-5.3-5.1-5.3-7.7 0-4.1 1.8-6.5 5.3-7v14.7zm8.5 19.3c.8.6 1.3 1 1.6 1.4a7.3 7.3 0 0 1 1.6 5c0 2.1-.6 3.7-1.7 5a6.7 6.7 0 0 1-4.4 2.2v-15.7l2.9 2.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.5 131l-14.7 45-25.5-40.8-11.9-19a52.8 52.8 0 0 0-37.5-24.3l-27.4-3.8-2.3 16.4 27.4 3.8a36.3 36.3 0 0 1 25.8 16.7l11.7 18.7 25.7 41.1-46.9-6.5-2.3 16.4 71.3 9.8 22.3-68.4-15.7-5.1z\"></path><path d=\"M183.5 398.6a36.2 36.2 0 0 1-24.2-18.9L149.2 360l-22.1-43.1 46.2 10.5 3.7-16.1-70.2-16-28.1 66.3 15.2 6.5 18.5-43.6 21.9 42.9 10.2 20c7.1 14 20 24 35.3 27.5l26.9 6.1 3.7-16.1-26.9-6.3z\"></path><path d=\"M318.2 212.9l-5.1 30.1a61.1 61.1 0 1 1-69.5 68.9l-30 5.7a91.6 91.6 0 1 0 104.6-104.7z\"></path><path d=\"M204.8 295.7a91.6 91.6 0 0 0 0-183 91.6 91.6 0 0 0 0 183zm0-152.5a61.1 61.1 0 0 1 0 122 61.1 61.1 0 0 1 0-122z\"></path><path d=\"M175.7 225.7c4.4 0 7.6-1 9.7-3.1 2.1-2.1 3.1-5.4 3.1-9.9v-1.2h-7.6v1c0 2.3-.3 4.1-.8 5.3-.9 1.7-2.4 2.5-4.5 2.5-2.5 0-4-1.3-4.8-3.8-.6-2-.9-6.3-.9-12.7 0-5.4.3-9.1.9-11 .9-2.7 2.5-4 5-4 3.3 0 4.9 2.3 4.9 6.9v.7h7.4v-.9c0-4.2-1-7.3-2.9-9.3-1.9-2-5-3-9.3-3-6 0-9.9 2-11.8 6-1.3 2.8-2 7.9-2 15.2 0 7.6.7 12.8 2 15.6 1.9 3.8 5.8 5.7 11.6 5.7z\"></path><path d=\"M201.6 206.4h10.8v18.5h7.6v-41h-7.6v16.9h-10.8v-16.9H194v41h7.6z\"></path><path d=\"M235.6 206.5h12.2V201h-12.2v-11.4h12.8v-5.7h-20.3v41h7.5z\"></path><path d=\"M302.3 266.9v7.1a16.1 16.1 0 0 0-11.5 5 16 16 0 0 0-3.1 5.2c-.7 2-1 4.2-1 6.5 0 5.1 1.4 9.1 4.2 12.2 1.6 1.8 5.1 4.3 10.3 7.5l1 .7v19.1c-3.6-.9-5.4-4.2-5.4-9.7v-1.6h-10.9v3.9c0 4.9 1.4 8.9 4.2 11.8 2.8 2.9 6.8 4.4 12.2 4.6v8h5.6V339c10.8-.8 16.2-6.7 16.2-17.8 0-4.4-1.3-8.2-3.9-11.4a36 36 0 0 0-11.1-8.2l-1.4-.8v-18.4c3.1.9 4.8 3.4 5.1 7.4l.1 1.3v.9h10.3v-2.3c0-10.3-5.2-15.6-15.5-15.8v-7.1h-5.4zm0 30.5c-3.5-2.6-5.3-5.1-5.3-7.7 0-4.1 1.8-6.5 5.3-7v14.7zm8.5 19.3c.8.6 1.3 1 1.6 1.4a7.3 7.3 0 0 1 1.6 5c0 2.1-.6 3.7-1.7 5a6.7 6.7 0 0 1-4.4 2.2v-15.7l2.9 2.1z\"></path></svg>')}:host .augmented-reality{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281.7 241.5a25.2 25.2 0 0 0-50.4 0v25.2a25.2 25.2 0 0 0 50.4 0v-25.2z\"></path><path d=\"M428.4 252c-.4-2.9-1.8-5.6-4-7.9-55.2-55.2-114.2-82.1-175.3-79.9-96.1 3.4-161.3 77.5-164 80.6-3.4 3.9-4.2 9-2.8 13.6.4 2.9 1.8 5.6 4 7.8 53.1 53.1 109.8 80 168.4 80l6.9-.1c96.1-3.4 161.3-77.5 164-80.6 3.4-3.8 4.3-9 2.8-13.5zm-168 65.9c-49.8 1.7-98.6-19.5-145.2-63.2 19.3-18.4 69.7-59.8 135.1-62.1 49.8-1.8 98.7 19.5 145.5 63.1-19.6 18.5-70.2 59.9-135.4 62.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281.7 241.5a25.2 25.2 0 0 0-50.4 0v25.2a25.2 25.2 0 0 0 50.4 0v-25.2z\"></path><path d=\"M428.4 252c-.4-2.9-1.8-5.6-4-7.9-55.2-55.2-114.2-82.1-175.3-79.9-96.1 3.4-161.3 77.5-164 80.6-3.4 3.9-4.2 9-2.8 13.6.4 2.9 1.8 5.6 4 7.8 53.1 53.1 109.8 80 168.4 80l6.9-.1c96.1-3.4 161.3-77.5 164-80.6 3.4-3.8 4.3-9 2.8-13.5zm-168 65.9c-49.8 1.7-98.6-19.5-145.2-63.2 19.3-18.4 69.7-59.8 135.1-62.1 49.8-1.8 98.7 19.5 145.5 63.1-19.6 18.5-70.2 59.9-135.4 62.2z\"></path></svg>')}:host .shield{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M262.3 422.7c53.9-22.4 96.1-71.2 121.9-141a395.5 395.5 0 0 0 22.8-98.8V181v-.5c0-3.5-1.4-6.7-3.5-9-2-2.3-4.7-3.9-7.7-4.3l-.1.1-2-.2c-66 0-126.3-76.1-127-77.1-2.4-3.1-6-4.9-9.6-5.1-4.7 0-9.7.9-12.8 4.9-.6.8-61 77.1-127 77.1-7.4 0-13.4 6-13.4 13.4v2.5c.4 5 4.6 49.6 22.8 98.8 25.4 68.6 69.4 118.1 122 141.1l6.7 2.4 6.9-2.4zm-6.8-28.7a169.3 169.3 0 0 1-71.2-58.4l163.5-35.2c-22.6 45.7-53.5 77.1-92.3 93.6zm-87.4-84.3c-4.9-9-9.4-18.5-13.5-28.7l216.7-46.5a347 347 0 0 1-9.9 33.5l-193.3 41.7zm-23.5-57.1a444.4 444.4 0 0 1-12.9-59.7c56.2-7 103.8-52.8 123.8-74.8 19.9 21.9 67.6 67.9 123.9 75l-1.5 9.8-233.3 49.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M262.3 422.7c53.9-22.4 96.1-71.2 121.9-141a395.5 395.5 0 0 0 22.8-98.8V181v-.5c0-3.5-1.4-6.7-3.5-9-2-2.3-4.7-3.9-7.7-4.3l-.1.1-2-.2c-66 0-126.3-76.1-127-77.1-2.4-3.1-6-4.9-9.6-5.1-4.7 0-9.7.9-12.8 4.9-.6.8-61 77.1-127 77.1-7.4 0-13.4 6-13.4 13.4v2.5c.4 5 4.6 49.6 22.8 98.8 25.4 68.6 69.4 118.1 122 141.1l6.7 2.4 6.9-2.4zm-6.8-28.7a169.3 169.3 0 0 1-71.2-58.4l163.5-35.2c-22.6 45.7-53.5 77.1-92.3 93.6zm-87.4-84.3c-4.9-9-9.4-18.5-13.5-28.7l216.7-46.5a347 347 0 0 1-9.9 33.5l-193.3 41.7zm-23.5-57.1a444.4 444.4 0 0 1-12.9-59.7c56.2-7 103.8-52.8 123.8-74.8 19.9 21.9 67.6 67.9 123.9 75l-1.5 9.8-233.3 49.7z\"></path></svg>')}:host .rain{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M413.6 232.5a77.8 77.8 0 0 0-31.7-26.5 60.9 60.9 0 0 0-27.9-58.5 63.2 63.2 0 0 0-66.5-4.9c-27.6-27-59.8-34.8-91.8-21.9-33 13.4-51 42.4-50.7 80.8a75 75 0 0 0-42.6 27.2 72.5 72.5 0 0 0 11.4 100.5 77.9 77.9 0 0 0 49 17.5h15.1v-28.3h-15.1a46.6 46.6 0 0 1-46.6-37.8 44.6 44.6 0 0 1 8.6-34.6 48 48 0 0 1 33.5-18.1l17.4-1.8-1.6-14.2c-2.6-22.6.9-52.2 32.3-64.9 6.6-2.7 13.1-4 19.5-4 16.7 0 32.8 8.9 48.1 26.7l8.1 9.4 10.4-6.8c16.5-10.8 30.9-11.2 45.4-1.3 14 9.5 18.5 22.6 14.3 41.1l-2.8 12.2 11.8 4.3 1 .4 3.1 1.1c20.5 6.6 34.3 26.5 32.2 46.2a45.7 45.7 0 0 1-41.2 41.8c-2.3.3-4.7.4-6.9.4h-15.6v28.3h15.6a74 74 0 0 0 76.3-67.4 69.5 69.5 0 0 0-12.1-46.9z\"></path><path d=\"M251.2 382.3c-.1-.1-.1-.1 0 0l-27.5-48-27.4 47.9h-.1v.1c.1 13.1 12.3 23.7 27.5 23.7 15.1 0 27.4-10.6 27.5-23.7z\"></path><path d=\"M310.2 320c-.1-.1-.1-.1 0 0l-27.5-48-27.4 47.9h-.1v.1c.1 13.1 12.3 23.7 27.5 23.7 15.1 0 27.4-10.6 27.5-23.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M413.6 232.5a77.8 77.8 0 0 0-31.7-26.5 60.9 60.9 0 0 0-27.9-58.5 63.2 63.2 0 0 0-66.5-4.9c-27.6-27-59.8-34.8-91.8-21.9-33 13.4-51 42.4-50.7 80.8a75 75 0 0 0-42.6 27.2 72.5 72.5 0 0 0 11.4 100.5 77.9 77.9 0 0 0 49 17.5h15.1v-28.3h-15.1a46.6 46.6 0 0 1-46.6-37.8 44.6 44.6 0 0 1 8.6-34.6 48 48 0 0 1 33.5-18.1l17.4-1.8-1.6-14.2c-2.6-22.6.9-52.2 32.3-64.9 6.6-2.7 13.1-4 19.5-4 16.7 0 32.8 8.9 48.1 26.7l8.1 9.4 10.4-6.8c16.5-10.8 30.9-11.2 45.4-1.3 14 9.5 18.5 22.6 14.3 41.1l-2.8 12.2 11.8 4.3 1 .4 3.1 1.1c20.5 6.6 34.3 26.5 32.2 46.2a45.7 45.7 0 0 1-41.2 41.8c-2.3.3-4.7.4-6.9.4h-15.6v28.3h15.6a74 74 0 0 0 76.3-67.4 69.5 69.5 0 0 0-12.1-46.9z\"></path><path d=\"M251.2 382.3c-.1-.1-.1-.1 0 0l-27.5-48-27.4 47.9h-.1v.1c.1 13.1 12.3 23.7 27.5 23.7 15.1 0 27.4-10.6 27.5-23.7z\"></path><path d=\"M310.2 320c-.1-.1-.1-.1 0 0l-27.5-48-27.4 47.9h-.1v.1c.1 13.1 12.3 23.7 27.5 23.7 15.1 0 27.4-10.6 27.5-23.7z\"></path></svg>')}:host .factory{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 425.2h283.5a28.3 28.3 0 0 0 28.3-28.3V251.4a56.6 56.6 0 0 0-28.6-49.2l-77.8-44.5-14.1 24.6 77.8 44.5c8.8 5 14.3 14.5 14.3 24.6v145.4H184.3V333H156v63.8h-42.5V219.7H85v177.2a28.4 28.4 0 0 0 28.4 28.3z\"></path><path d=\"M233.9 128.1h28.3v131.3h-28.3z\" transform=\"rotate(-59.8 248 193.7)\"></path><path d=\"M106.5 190.5l84.9 48.5 14.1-24.6-84.9-48.5a14.1 14.1 0 0 1-7.1-12.3V85H85v68.6c0 15.2 8.2 29.4 21.5 36.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 425.2h283.5a28.3 28.3 0 0 0 28.3-28.3V251.4a56.6 56.6 0 0 0-28.6-49.2l-77.8-44.5-14.1 24.6 77.8 44.5c8.8 5 14.3 14.5 14.3 24.6v145.4H184.3V333H156v63.8h-42.5V219.7H85v177.2a28.4 28.4 0 0 0 28.4 28.3z\"></path><path d=\"M233.9 128.1h28.3v131.3h-28.3z\" transform=\"rotate(-59.8 248 193.7)\"></path><path d=\"M106.5 190.5l84.9 48.5 14.1-24.6-84.9-48.5a14.1 14.1 0 0 1-7.1-12.3V85H85v68.6c0 15.2 8.2 29.4 21.5 36.9z\"></path></svg>')}:host .snow{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M413.6 231.6a77.8 77.8 0 0 0-31.7-26.5 60.9 60.9 0 0 0-27.9-58.5 63.2 63.2 0 0 0-66.5-4.9c-27.6-27-59.8-34.8-91.8-21.9-33 13.4-51 42.4-50.7 80.8a75 75 0 0 0-42.6 27.2 72.5 72.5 0 0 0 11.4 100.5 77.9 77.9 0 0 0 49 17.5h15.1v-28.3h-15.1a46.6 46.6 0 0 1-46.6-37.8 44.6 44.6 0 0 1 8.6-34.6 48 48 0 0 1 33.5-18.1l17.4-1.8-1.6-14.2c-2.6-22.6.9-52.2 32.3-64.9 6.6-2.7 13.1-4 19.5-4 16.7 0 32.8 8.9 48.1 26.7l8.1 9.4 10.4-6.8c16.5-10.8 30.9-11.2 45.4-1.3 14 9.5 18.5 22.6 14.3 41.1l-2.8 12.2 11.8 4.3 1 .4 3.1 1.1c20.5 6.6 34.3 26.5 32.2 46.2a45.7 45.7 0 0 1-41.2 41.8c-2.3.3-4.7.4-6.9.4h-15.6v28.3h15.6a74 74 0 0 0 76.3-67.4 69.6 69.6 0 0 0-12.1-46.9z\"></path><circle cx=\"225.1\" cy=\"373\" r=\"21.3\"></circle><circle cx=\"225.1\" cy=\"297.5\" r=\"21.3\"></circle><circle cx=\"283.7\" cy=\"331.1\" r=\"21.3\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M413.6 231.6a77.8 77.8 0 0 0-31.7-26.5 60.9 60.9 0 0 0-27.9-58.5 63.2 63.2 0 0 0-66.5-4.9c-27.6-27-59.8-34.8-91.8-21.9-33 13.4-51 42.4-50.7 80.8a75 75 0 0 0-42.6 27.2 72.5 72.5 0 0 0 11.4 100.5 77.9 77.9 0 0 0 49 17.5h15.1v-28.3h-15.1a46.6 46.6 0 0 1-46.6-37.8 44.6 44.6 0 0 1 8.6-34.6 48 48 0 0 1 33.5-18.1l17.4-1.8-1.6-14.2c-2.6-22.6.9-52.2 32.3-64.9 6.6-2.7 13.1-4 19.5-4 16.7 0 32.8 8.9 48.1 26.7l8.1 9.4 10.4-6.8c16.5-10.8 30.9-11.2 45.4-1.3 14 9.5 18.5 22.6 14.3 41.1l-2.8 12.2 11.8 4.3 1 .4 3.1 1.1c20.5 6.6 34.3 26.5 32.2 46.2a45.7 45.7 0 0 1-41.2 41.8c-2.3.3-4.7.4-6.9.4h-15.6v28.3h15.6a74 74 0 0 0 76.3-67.4 69.6 69.6 0 0 0-12.1-46.9z\"></path><circle cx=\"225.1\" cy=\"373\" r=\"21.3\"></circle><circle cx=\"225.1\" cy=\"297.5\" r=\"21.3\"></circle><circle cx=\"283.7\" cy=\"331.1\" r=\"21.3\"></circle></svg>')}:host .paris{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.5 386.5a417.4 417.4 0 0 1-38.3-101.9h8.6v-28.4h-14.7a655.4 655.4 0 0 1-10.8-107.5h5.2v-28.4h-10.7V85.5h-17.9v34.8h-11.7v28.4h5.4a623.6 623.6 0 0 1-10.8 107.5h-14.4v28.4h8.3a416.3 416.3 0 0 1-37.2 99.7 74.2 74.2 0 0 0-12.8 41.7H200c0-27.1 23.8-49.2 53.1-49.2h.2c29.3 0 53.1 22.1 53.1 49.2h28.3a72 72 0 0 0-11.2-39.5zm-91.9-38.1a502.2 502.2 0 0 0 19.2-63.8h5.3c5.6 24 12.2 45.1 19.1 63.5l-43.6.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.5 386.5a417.4 417.4 0 0 1-38.3-101.9h8.6v-28.4h-14.7a655.4 655.4 0 0 1-10.8-107.5h5.2v-28.4h-10.7V85.5h-17.9v34.8h-11.7v28.4h5.4a623.6 623.6 0 0 1-10.8 107.5h-14.4v28.4h8.3a416.3 416.3 0 0 1-37.2 99.7 74.2 74.2 0 0 0-12.8 41.7H200c0-27.1 23.8-49.2 53.1-49.2h.2c29.3 0 53.1 22.1 53.1 49.2h28.3a72 72 0 0 0-11.2-39.5zm-91.9-38.1a502.2 502.2 0 0 0 19.2-63.8h5.3c5.6 24 12.2 45.1 19.1 63.5l-43.6.3z\"></path></svg>')}:host .rocket{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"307.8\" cy=\"200.8\" rx=\"22.6\" ry=\"22.6\" transform=\"rotate(-44.2 307.8 200.8)\"></ellipse><ellipse cx=\"254.4\" cy=\"255.3\" rx=\"22.6\" ry=\"22.6\" transform=\"rotate(-44.2 254.4 255.3)\"></ellipse><path d=\"M408.8 119.8c-.7-5.4-3-10.2-6.6-13.8-4-4-9.3-6.2-15-6.3a214 214 0 0 0-86.2 8.1c-40.3 12.2-94.1 41.9-130.6 113.7l-17.9-3.3a50 50 0 0 0-44.7 12.7L84 254.3l19.8 20.3 23.8-23.3a22 22 0 0 1 19.8-5l38.5 7 .3-1.7 1.2.5c25.4-60.5 66-99.8 120.5-116.7a188.7 188.7 0 0 1 73.5-7.7 143 143 0 0 1-2.1 67.6c-6.1 23-17.7 44.4-34.3 63.7-21.2 24.6-50.8 45.9-87.9 63.2l.2.4-1.8.4 8.3 39.6c1.7 8.1.1 15.4-4.5 20.1l-23.1 23.9 20.4 19.7 23.1-23.9a49.7 49.7 0 0 0 11.9-45.6l-3.8-18.2a271 271 0 0 0 78.8-61.1 190.7 190.7 0 0 0 40.2-74.9 172 172 0 0 0 2-82.8z\"></path><path d=\"M121.7 340.1h82.4v21h-82.4z\" transform=\"rotate(-47.1 162.9 350.6)\"></path><path d=\"M123.2 298.8H168v21h-44.8z\" transform=\"rotate(-47.1 145.6 309.3)\"></path><path d=\"M183.2 354.7H228v21h-44.8z\" transform=\"rotate(-47.1 205.7 365.2)\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"307.8\" cy=\"200.8\" rx=\"22.6\" ry=\"22.6\" transform=\"rotate(-44.2 307.8 200.8)\"></ellipse><ellipse cx=\"254.4\" cy=\"255.3\" rx=\"22.6\" ry=\"22.6\" transform=\"rotate(-44.2 254.4 255.3)\"></ellipse><path d=\"M408.8 119.8c-.7-5.4-3-10.2-6.6-13.8-4-4-9.3-6.2-15-6.3a214 214 0 0 0-86.2 8.1c-40.3 12.2-94.1 41.9-130.6 113.7l-17.9-3.3a50 50 0 0 0-44.7 12.7L84 254.3l19.8 20.3 23.8-23.3a22 22 0 0 1 19.8-5l38.5 7 .3-1.7 1.2.5c25.4-60.5 66-99.8 120.5-116.7a188.7 188.7 0 0 1 73.5-7.7 143 143 0 0 1-2.1 67.6c-6.1 23-17.7 44.4-34.3 63.7-21.2 24.6-50.8 45.9-87.9 63.2l.2.4-1.8.4 8.3 39.6c1.7 8.1.1 15.4-4.5 20.1l-23.1 23.9 20.4 19.7 23.1-23.9a49.7 49.7 0 0 0 11.9-45.6l-3.8-18.2a271 271 0 0 0 78.8-61.1 190.7 190.7 0 0 0 40.2-74.9 172 172 0 0 0 2-82.8z\"></path><path d=\"M121.7 340.1h82.4v21h-82.4z\" transform=\"rotate(-47.1 162.9 350.6)\"></path><path d=\"M123.2 298.8H168v21h-44.8z\" transform=\"rotate(-47.1 145.6 309.3)\"></path><path d=\"M183.2 354.7H228v21h-44.8z\" transform=\"rotate(-47.1 205.7 365.2)\"></path></svg>')}:host .x{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406.6 124.1L386.5 104 255.3 235.3 123.9 103.8l-20.1 20.1 131.5 131.4-131.5 131.4 20.1 20.1 131.4-131.4 131.2 131.2 20.1-20.1-131.2-131.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406.6 124.1L386.5 104 255.3 235.3 123.9 103.8l-20.1 20.1 131.5 131.4-131.5 131.4 20.1 20.1 131.4-131.4 131.2 131.2 20.1-20.1-131.2-131.2z\"></path></svg>')}:host .temperature{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M327 353.3c0-21.1-8.9-40.1-23.1-53.5V137.2c0-28.1-22.8-50.9-50.9-50.9-28.1 0-50.9 22.8-50.9 50.9v163.1a73.85 73.85 0 0 0-22.6 53c0 40.7 33.1 73.7 73.8 73.7 40.6 0 73.6-33 73.7-73.7zm-73.8 44.2c-24.4 0-44.2-19.8-44.3-44.2 0-16.1 8.6-30.2 21.5-37.9l-.1-178.1c0-12.4 10.1-22.6 22.6-22.6s22.6 10.1 22.6 22.6v177.9a44.54 44.54 0 0 1 22 38.2 44.34 44.34 0 0 1-44.3 44.1z\"></path><path d=\"M258.1 327.7V163h-11v164.7a26.73 26.73 0 0 0-21.2 26.2 26.7 26.7 0 1 0 53.4 0c.1-12.9-9-23.7-21.2-26.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M327 353.3c0-21.1-8.9-40.1-23.1-53.5V137.2c0-28.1-22.8-50.9-50.9-50.9-28.1 0-50.9 22.8-50.9 50.9v163.1a73.85 73.85 0 0 0-22.6 53c0 40.7 33.1 73.7 73.8 73.7 40.6 0 73.6-33 73.7-73.7zm-73.8 44.2c-24.4 0-44.2-19.8-44.3-44.2 0-16.1 8.6-30.2 21.5-37.9l-.1-178.1c0-12.4 10.1-22.6 22.6-22.6s22.6 10.1 22.6 22.6v177.9a44.54 44.54 0 0 1 22 38.2 44.34 44.34 0 0 1-44.3 44.1z\"></path><path d=\"M258.1 327.7V163h-11v164.7a26.73 26.73 0 0 0-21.2 26.2 26.7 26.7 0 1 0 53.4 0c.1-12.9-9-23.7-21.2-26.2z\"></path></svg>')}:host .cornet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M250.2 160.9a57 57 0 0 1 41.8-10.3c-1.7-7.2-5-13.8-9.8-19.4a42.3 42.3 0 0 0-24.7-14.4V109c0-8.1-3.6-15.8-9.8-21l-20.1-16.8-8.8 10.5 20.1 16.8c3.1 2.6 4.9 6.4 4.9 10.5v7.7a43.8 43.8 0 0 0-34.6 33.4 57.4 57.4 0 0 1 41 10.8z\"></path><path d=\"M242.5 171.2c-7.6-5-16.6-7.9-26.2-7.9-27.5 0-49.9 23.9-49.9 53.2h57.5a64.4 64.4 0 0 1 18.6-45.3z\"></path><path d=\"M336.4 216.5c0-29.3-22.4-53.2-49.9-53.2s-49.9 23.9-49.9 53.2h99.8z\"></path><path d=\"M166.2 229.1h169.5l-72 195.8a10.6 10.6 0 0 1-9.7 6.9h-.1c-4.3 0-8.2-2.6-9.8-6.6l-77.9-196.1zm30.9 21.1l56.5 141.7L306 250.1l-108.9.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M250.2 160.9a57 57 0 0 1 41.8-10.3c-1.7-7.2-5-13.8-9.8-19.4a42.3 42.3 0 0 0-24.7-14.4V109c0-8.1-3.6-15.8-9.8-21l-20.1-16.8-8.8 10.5 20.1 16.8c3.1 2.6 4.9 6.4 4.9 10.5v7.7a43.8 43.8 0 0 0-34.6 33.4 57.4 57.4 0 0 1 41 10.8z\"></path><path d=\"M242.5 171.2c-7.6-5-16.6-7.9-26.2-7.9-27.5 0-49.9 23.9-49.9 53.2h57.5a64.4 64.4 0 0 1 18.6-45.3z\"></path><path d=\"M336.4 216.5c0-29.3-22.4-53.2-49.9-53.2s-49.9 23.9-49.9 53.2h99.8z\"></path><path d=\"M166.2 229.1h169.5l-72 195.8a10.6 10.6 0 0 1-9.7 6.9h-.1c-4.3 0-8.2-2.6-9.8-6.6l-77.9-196.1zm30.9 21.1l56.5 141.7L306 250.1l-108.9.1z\"></path></svg>')}:host .popsicle{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.9 85.8a78.3 78.3 0 0 0-78.2 78.2v181.1h156.4V164a78.3 78.3 0 0 0-78.2-78.2zm49.4 179.9L203.5 310v-36.3l98.9-44.3v36.3zm-98.8-89.2l90.4-40a49.4 49.4 0 0 1 8.4 27.6v4.7L203.5 213v-36.5zm98.8 40.7l-98.9 44.3v-36.3l98.9-44.3v36.3zm-49.4-102.6a49 49 0 0 1 33.4 13l-82.8 36.6v-.2a49.4 49.4 0 0 1 49.4-49.4zm-36.4 201.8l85.8-38.5v38.5h-85.8z\"></path><path d=\"M238.7 365.6H267v59.8h-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.9 85.8a78.3 78.3 0 0 0-78.2 78.2v181.1h156.4V164a78.3 78.3 0 0 0-78.2-78.2zm49.4 179.9L203.5 310v-36.3l98.9-44.3v36.3zm-98.8-89.2l90.4-40a49.4 49.4 0 0 1 8.4 27.6v4.7L203.5 213v-36.5zm98.8 40.7l-98.9 44.3v-36.3l98.9-44.3v36.3zm-49.4-102.6a49 49 0 0 1 33.4 13l-82.8 36.6v-.2a49.4 49.4 0 0 1 49.4-49.4zm-36.4 201.8l85.8-38.5v38.5h-85.8z\"></path><path d=\"M238.7 365.6H267v59.8h-28.3z\"></path></svg>')}:host .coffee{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.4 187.3h211.3v28.3H147.4z\"></path><path d=\"M176 147.3h151.5v28.3H176z\"></path><path d=\"M314.9 226.8l-18.7 166.1-.1.7a4.4 4.4 0 0 1-4.4 4.1h-72.6a4.4 4.4 0 0 1-4.4-4.2v-.4l-18.8-166.4h-28.5l19.1 169a32.9 32.9 0 0 0 32.7 30.3h72.6a32.9 32.9 0 0 0 32.7-30.3l19.1-169h-28.7z\"></path><path d=\"M267.7 134.3l-9.9-1.1 1.8-17.2c.4-4.1-1-8.1-3.8-11.1L263 98a24 24 0 0 1 6.6 19.1l-1.9 17.2z\"></path><path d=\"M244.3 116.7a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.4 187.3h211.3v28.3H147.4z\"></path><path d=\"M176 147.3h151.5v28.3H176z\"></path><path d=\"M314.9 226.8l-18.7 166.1-.1.7a4.4 4.4 0 0 1-4.4 4.1h-72.6a4.4 4.4 0 0 1-4.4-4.2v-.4l-18.8-166.4h-28.5l19.1 169a32.9 32.9 0 0 0 32.7 30.3h72.6a32.9 32.9 0 0 0 32.7-30.3l19.1-169h-28.7z\"></path><path d=\"M267.7 134.3l-9.9-1.1 1.8-17.2c.4-4.1-1-8.1-3.8-11.1L263 98a24 24 0 0 1 6.6 19.1l-1.9 17.2z\"></path><path d=\"M244.3 116.7a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>')}:host .croissant{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.3 161.3c-94.6 0-171.5 77-171.5 171.5a14.2 14.2 0 0 0 14.1 14.1c2.4 0 4.8-.6 7-1.9 49.2-28 99.4-42.2 149.2-42.2h.6c49.6.1 100.5 14.3 151.2 42.3a14.2 14.2 0 0 0 21-12.4c0-94.4-77-171.4-171.6-171.4zm-98.5 67.8l-.1.3a43.6 43.6 0 0 1 28.1 53.6c-23.6 5.6-47.2 14-70.5 25.4a142 142 0 0 1 42.5-79.3zm97.3 45.7a307 307 0 0 0-39.5 2.6 72 72 0 0 0-32.9-67.3 142.4 142.4 0 0 1 149 1.1 72 72 0 0 0-33.2 66.7c-14.5-2.1-29-3.1-43.4-3.1zm73.1 9a43.5 43.5 0 0 1 28.2-53.1 142.7 142.7 0 0 1 41 78c-23-11-46.1-19.3-69.2-24.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.3 161.3c-94.6 0-171.5 77-171.5 171.5a14.2 14.2 0 0 0 14.1 14.1c2.4 0 4.8-.6 7-1.9 49.2-28 99.4-42.2 149.2-42.2h.6c49.6.1 100.5 14.3 151.2 42.3a14.2 14.2 0 0 0 21-12.4c0-94.4-77-171.4-171.6-171.4zm-98.5 67.8l-.1.3a43.6 43.6 0 0 1 28.1 53.6c-23.6 5.6-47.2 14-70.5 25.4a142 142 0 0 1 42.5-79.3zm97.3 45.7a307 307 0 0 0-39.5 2.6 72 72 0 0 0-32.9-67.3 142.4 142.4 0 0 1 149 1.1 72 72 0 0 0-33.2 66.7c-14.5-2.1-29-3.1-43.4-3.1zm73.1 9a43.5 43.5 0 0 1 28.2-53.1 142.7 142.7 0 0 1 41 78c-23-11-46.1-19.3-69.2-24.9z\"></path></svg>')}:host .cupcake{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385.4 246.2H127.6a14.2 14.2 0 1 0 0 28.4h5.7l17.8 122.9a31.3 31.3 0 0 0 31.2 28.7h152.6a31.4 31.4 0 0 0 31.2-28.7l17.8-122.9h1.7c7.8 0 14.2-6.3 14.2-14.2a14.6 14.6 0 0 0-14.4-14.2zm-114.9 28.4h32.1L285 397.8h-13l-1.5-123.2zm-26.8 123.2h-14.2l-17.6-123.2h30.2l1.6 123.2zm-64.4-2.8v-.6L162 274.5h23.9l17.6 123.2h-21.2a2.8 2.8 0 0 1-3-2.7zm158.6-1.1l-.1 1.1a3 3 0 0 1-2.9 2.7h-21.3l17.6-123.2h23.9l-17.2 119.4z\"></path><circle cx=\"229.1\" cy=\"187.3\" r=\"6.5\"></circle><circle cx=\"313.9\" cy=\"218.2\" r=\"6.5\"></circle><circle cx=\"285.5\" cy=\"187.5\" r=\"6.5\"></circle><circle cx=\"257.4\" cy=\"218.2\" r=\"6.5\"></circle><circle cx=\"198.5\" cy=\"218.2\" r=\"6.5\"></circle><path d=\"M257.6 159.4c45 0 82.7 31.4 92.5 73.4H379a123.7 123.7 0 0 0-79.6-94.5c-1.8-6.4-5-12.3-9.3-17.4a42.4 42.4 0 0 0-25.1-14.6v-7.9c0-8.2-3.6-16-9.9-21.3l-20.4-17-8.9 10.7 20.4 17c3.2 2.6 5 6.5 5 10.7v7.8a44.3 44.3 0 0 0-34.5 31.7 123.7 123.7 0 0 0-80.5 94.8h28.9a95.1 95.1 0 0 1 92.5-73.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385.4 246.2H127.6a14.2 14.2 0 1 0 0 28.4h5.7l17.8 122.9a31.3 31.3 0 0 0 31.2 28.7h152.6a31.4 31.4 0 0 0 31.2-28.7l17.8-122.9h1.7c7.8 0 14.2-6.3 14.2-14.2a14.6 14.6 0 0 0-14.4-14.2zm-114.9 28.4h32.1L285 397.8h-13l-1.5-123.2zm-26.8 123.2h-14.2l-17.6-123.2h30.2l1.6 123.2zm-64.4-2.8v-.6L162 274.5h23.9l17.6 123.2h-21.2a2.8 2.8 0 0 1-3-2.7zm158.6-1.1l-.1 1.1a3 3 0 0 1-2.9 2.7h-21.3l17.6-123.2h23.9l-17.2 119.4z\"></path><circle cx=\"229.1\" cy=\"187.3\" r=\"6.5\"></circle><circle cx=\"313.9\" cy=\"218.2\" r=\"6.5\"></circle><circle cx=\"285.5\" cy=\"187.5\" r=\"6.5\"></circle><circle cx=\"257.4\" cy=\"218.2\" r=\"6.5\"></circle><circle cx=\"198.5\" cy=\"218.2\" r=\"6.5\"></circle><path d=\"M257.6 159.4c45 0 82.7 31.4 92.5 73.4H379a123.7 123.7 0 0 0-79.6-94.5c-1.8-6.4-5-12.3-9.3-17.4a42.4 42.4 0 0 0-25.1-14.6v-7.9c0-8.2-3.6-16-9.9-21.3l-20.4-17-8.9 10.7 20.4 17c3.2 2.6 5 6.5 5 10.7v7.8a44.3 44.3 0 0 0-34.5 31.7 123.7 123.7 0 0 0-80.5 94.8h28.9a95.1 95.1 0 0 1 92.5-73.4z\"></path></svg>')}:host .bank{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M85 396.9h340.2v28.3H85z\"></path><path d=\"M247.3 107.3a14 14 0 0 1 15.7 0l154.4 102.9 15.7-23.6L278.7 83.7a42.3 42.3 0 0 0-47.2 0L77.2 186.6l15.7 23.6 154.4-102.9z\"></path><path d=\"M141.7 205.5v141.7h-28.3v28.4h283.5v-28.4h-28.4V205.5h-28.3v141.7h-70.9V205.5h-28.4v141.7h-70.8V205.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M85 396.9h340.2v28.3H85z\"></path><path d=\"M247.3 107.3a14 14 0 0 1 15.7 0l154.4 102.9 15.7-23.6L278.7 83.7a42.3 42.3 0 0 0-47.2 0L77.2 186.6l15.7 23.6 154.4-102.9z\"></path><path d=\"M141.7 205.5v141.7h-28.3v28.4h283.5v-28.4h-28.4V205.5h-28.3v141.7h-70.9V205.5h-28.4v141.7h-70.8V205.5z\"></path></svg>')}:host .ear{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M373.8 196.7a111.6 111.6 0 0 0-223.4.3h28.3a83.2 83.2 0 0 1 166.6 0v.7c.6 15.6-6 59.1-35.6 112.2a962.1 962.1 0 0 1-51.5 78.9c-5 5.8-12.3 9-19.9 9h-37.2v28.3h37.2c16.2 0 31.5-7.1 41.9-19.5l.6-.8a962 962 0 0 0 53.6-82.3c40-71.3 39.6-121.4 39.4-126.8z\"></path><path d=\"M275.2 244.6l-1.5 3.7c-5.7 13.9-23.9 47-24.1 47.3l24.8 13.7c.8-1.4 19.2-34.9 25.5-50.3l1.5-3.7c4.2-10.1 8.5-20.6 10.3-27.9 3.9-15.5 3.6-28.2 3.5-31a53.1 53.1 0 0 0-52.4-52.1 52.5 52.5 0 0 0-52.4 52.5h28.3a24 24 0 0 1 24-24.1c12.8 0 24 11.3 24 24.1v.8c0 .1.5 10.4-2.7 22.9-1.1 5.4-5.4 15.8-8.8 24.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M373.8 196.7a111.6 111.6 0 0 0-223.4.3h28.3a83.2 83.2 0 0 1 166.6 0v.7c.6 15.6-6 59.1-35.6 112.2a962.1 962.1 0 0 1-51.5 78.9c-5 5.8-12.3 9-19.9 9h-37.2v28.3h37.2c16.2 0 31.5-7.1 41.9-19.5l.6-.8a962 962 0 0 0 53.6-82.3c40-71.3 39.6-121.4 39.4-126.8z\"></path><path d=\"M275.2 244.6l-1.5 3.7c-5.7 13.9-23.9 47-24.1 47.3l24.8 13.7c.8-1.4 19.2-34.9 25.5-50.3l1.5-3.7c4.2-10.1 8.5-20.6 10.3-27.9 3.9-15.5 3.6-28.2 3.5-31a53.1 53.1 0 0 0-52.4-52.1 52.5 52.5 0 0 0-52.4 52.5h28.3a24 24 0 0 1 24-24.1c12.8 0 24 11.3 24 24.1v.8c0 .1.5 10.4-2.7 22.9-1.1 5.4-5.4 15.8-8.8 24.1z\"></path></svg>')}:host .drop{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.4 179.2l72.1 119.7a72.6 72.6 0 0 1-144 0l71.9-119.7m0-64L147.1 290.6a105.4 105.4 0 0 0 210.8 0L252.4 115.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.4 179.2l72.1 119.7a72.6 72.6 0 0 1-144 0l71.9-119.7m0-64L147.1 290.6a105.4 105.4 0 0 0 210.8 0L252.4 115.2z\"></path></svg>')}:host .apple{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.2 253.3c-3.4-34.5-26.4-73.3-70.3-81.9a95.3 95.3 0 0 0-58.4 8.5v-45.7c0-11.8-5.2-22.9-14.2-30.5l-25-20.9-18.2 21.7 25 20.9c2.6 2.2 4.1 5.4 4.1 8.8v46.1c-14.8-7-36-13.3-59.1-8.8-43.9 8.6-66.9 47.4-70.3 81.9-3.5 35.8 7.8 81.2 29.4 118.7 26.9 46.2 53.1 53.6 66.2 53.9h1.1c9.7 0 18.5-3.5 27.2-6.9a62.7 62.7 0 0 1 19.3-5.5c5.5 0 12.5 2.8 19.3 5.5a74.3 74.3 0 0 0 27.1 6.9h1.1c13.2-.3 39.4-7.7 66.3-53.9 21.7-37.5 32.9-83 29.4-118.8zm-57.9 102.1c-17 29.3-32.2 37.4-38.6 37.5-3.3.1-9.6-2.4-15.2-4.6a87.2 87.2 0 0 0-30.9-7.8h-1.3a87.2 87.2 0 0 0-30.8 7.8c-5.6 2.2-11.9 4.7-15.3 4.6-6.3-.1-21.5-8.2-38.5-37.5-18.1-31.2-28-70-25.1-98.9 1.6-16.7 12.7-46.6 43.8-52.8 27.1-5.3 52.8 14.5 53.4 14.9 3.7 2.9 8.8 5 13.4 4.8 3.2.4 7.2-.9 13-4.8.3-.2 26.1-20.3 53.3-14.9 31.1 6.1 42.2 36 43.8 52.8 2.9 28.9-6.9 67.7-25 98.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.2 253.3c-3.4-34.5-26.4-73.3-70.3-81.9a95.3 95.3 0 0 0-58.4 8.5v-45.7c0-11.8-5.2-22.9-14.2-30.5l-25-20.9-18.2 21.7 25 20.9c2.6 2.2 4.1 5.4 4.1 8.8v46.1c-14.8-7-36-13.3-59.1-8.8-43.9 8.6-66.9 47.4-70.3 81.9-3.5 35.8 7.8 81.2 29.4 118.7 26.9 46.2 53.1 53.6 66.2 53.9h1.1c9.7 0 18.5-3.5 27.2-6.9a62.7 62.7 0 0 1 19.3-5.5c5.5 0 12.5 2.8 19.3 5.5a74.3 74.3 0 0 0 27.1 6.9h1.1c13.2-.3 39.4-7.7 66.3-53.9 21.7-37.5 32.9-83 29.4-118.8zm-57.9 102.1c-17 29.3-32.2 37.4-38.6 37.5-3.3.1-9.6-2.4-15.2-4.6a87.2 87.2 0 0 0-30.9-7.8h-1.3a87.2 87.2 0 0 0-30.8 7.8c-5.6 2.2-11.9 4.7-15.3 4.6-6.3-.1-21.5-8.2-38.5-37.5-18.1-31.2-28-70-25.1-98.9 1.6-16.7 12.7-46.6 43.8-52.8 27.1-5.3 52.8 14.5 53.4 14.9 3.7 2.9 8.8 5 13.4 4.8 3.2.4 7.2-.9 13-4.8.3-.2 26.1-20.3 53.3-14.9 31.1 6.1 42.2 36 43.8 52.8 2.9 28.9-6.9 67.7-25 98.9z\"></path></svg>')}:host .flash{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M251.2 426.2l-25.4-12.6 74.5-149.4-118.4.3a14.2 14.2 0 0 1-12.4-21l87.3-158.9 24.8 13.7L205.9 236l117.3-.3a14.1 14.1 0 0 1 12.6 20.5l-84.6 170z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M251.2 426.2l-25.4-12.6 74.5-149.4-118.4.3a14.2 14.2 0 0 1-12.4-21l87.3-158.9 24.8 13.7L205.9 236l117.3-.3a14.1 14.1 0 0 1 12.6 20.5l-84.6 170z\"></path></svg>')}:host .data-mapping{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M338.9 180.5h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v24.2h-74.3v126.2h-53.2v-23.4c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19H175c10.1 0 18.2-8.5 18.2-19v-23.7h53.2v127.8h74.3v22.8c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v24.2h-53.3V264.8h53.3v23.7c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v23.4h-53.3V138.6h53.3v22.8c0 10.5 8.2 19.1 18.2 19.1zm2.8-85.1h64v64h-64v-64zM172.2 286.5h-64v-64h64v64zm169.5 62.9h64v64h-64v-64zm0-127h64v64h-64v-64z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M338.9 180.5h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v24.2h-74.3v126.2h-53.2v-23.4c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19H175c10.1 0 18.2-8.5 18.2-19v-23.7h53.2v127.8h74.3v22.8c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v24.2h-53.3V264.8h53.3v23.7c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v23.4h-53.3V138.6h53.3v22.8c0 10.5 8.2 19.1 18.2 19.1zm2.8-85.1h64v64h-64v-64zM172.2 286.5h-64v-64h64v64zm169.5 62.9h64v64h-64v-64zm0-127h64v64h-64v-64z\"></path></svg>')}:host .heart{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.7 404.6c-6.7 0-13-2.6-17.7-7.3L118.3 278.5a98.2 98.2 0 1 1 136.4-140.8 98.3 98.3 0 1 1 136.4 140.8L272.3 397.2c-4.7 4.8-11 7.4-17.6 7.4zm-71.6-269.5a69.9 69.9 0 0 0-45.8 122.4l.7.7 116.7 116.7 117-117 .4-.3a69.9 69.9 0 1 0-105.3-89l-12.1 19.6-12.1-19.6a69.4 69.4 0 0 0-59.5-33.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.7 404.6c-6.7 0-13-2.6-17.7-7.3L118.3 278.5a98.2 98.2 0 1 1 136.4-140.8 98.3 98.3 0 1 1 136.4 140.8L272.3 397.2c-4.7 4.8-11 7.4-17.6 7.4zm-71.6-269.5a69.9 69.9 0 0 0-45.8 122.4l.7.7 116.7 116.7 117-117 .4-.3a69.9 69.9 0 1 0-105.3-89l-12.1 19.6-12.1-19.6a69.4 69.4 0 0 0-59.5-33.5z\"></path></svg>')}:host .swiss{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M128.4 276.1c-12 0-23.3-5.3-31-14.4l-11.9-14.3 16-13.4 11.9 14.3c3.7 4.4 9.2 7 15 7v20.8z\"></path><path d=\"M388.1 219.7l-15.9 13.4 18.8 22.3h-29.1v20.9H390l-17.7 21.2 16 13.3 38-45.6z\"></path><path d=\"M344 254c-2.4-24.3-18.6-51.4-49.5-57.5a64 64 0 0 0-34.9 3.4v-25.2c0-9.3-4.1-18-11.2-24l-16.7-14-18.2 21.7 16.7 14a3 3 0 0 1 1.1 2.3V200a64.8 64.8 0 0 0-35.4-3.6c-30.9 6.1-47.1 33.3-49.5 57.5-2.4 24.5 5.3 55.6 20.1 81.2 18.7 32.2 37.5 37.4 46.9 37.6h.8c7.1 0 13.6-2.6 19.3-4.8 4.2-1.7 8.6-3.4 11.7-3.4v.1c3.1 0 7.5 1.7 11.8 3.4a52.7 52.7 0 0 0 19.3 4.8h.8c9.5-.2 28.2-5.4 47-37.6 14.7-25.5 22.3-56.6 19.9-81.2zm-88-20.3c11.6-7.8 16.3-12.6 33.1-9.3 19 3.7 25.8 22.2 26.8 32.5 1.8 18.7-4.6 43.9-16.4 64.2-11.1 19.1-20.4 23.4-23.2 23.5h-.1a39 39 0 0 1-8.9-2.9 61.8 61.8 0 0 0-21.9-5.4v-.1h-.2c-8.5 0-16.1 3-22.2 5.4-2.9 1.1-7.2 2.9-8.9 2.9h-.1c-2.7-.1-12-4.4-23.1-23.5-11.8-20.3-18.2-45.5-16.4-64.2 1-10.3 7.8-28.7 26.8-32.5 16.7-3.3 33 9.3 33.1 9.4 0-.1 10 7.8 21.6 0z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M128.4 276.1c-12 0-23.3-5.3-31-14.4l-11.9-14.3 16-13.4 11.9 14.3c3.7 4.4 9.2 7 15 7v20.8z\"></path><path d=\"M388.1 219.7l-15.9 13.4 18.8 22.3h-29.1v20.9H390l-17.7 21.2 16 13.3 38-45.6z\"></path><path d=\"M344 254c-2.4-24.3-18.6-51.4-49.5-57.5a64 64 0 0 0-34.9 3.4v-25.2c0-9.3-4.1-18-11.2-24l-16.7-14-18.2 21.7 16.7 14a3 3 0 0 1 1.1 2.3V200a64.8 64.8 0 0 0-35.4-3.6c-30.9 6.1-47.1 33.3-49.5 57.5-2.4 24.5 5.3 55.6 20.1 81.2 18.7 32.2 37.5 37.4 46.9 37.6h.8c7.1 0 13.6-2.6 19.3-4.8 4.2-1.7 8.6-3.4 11.7-3.4v.1c3.1 0 7.5 1.7 11.8 3.4a52.7 52.7 0 0 0 19.3 4.8h.8c9.5-.2 28.2-5.4 47-37.6 14.7-25.5 22.3-56.6 19.9-81.2zm-88-20.3c11.6-7.8 16.3-12.6 33.1-9.3 19 3.7 25.8 22.2 26.8 32.5 1.8 18.7-4.6 43.9-16.4 64.2-11.1 19.1-20.4 23.4-23.2 23.5h-.1a39 39 0 0 1-8.9-2.9 61.8 61.8 0 0 0-21.9-5.4v-.1h-.2c-8.5 0-16.1 3-22.2 5.4-2.9 1.1-7.2 2.9-8.9 2.9h-.1c-2.7-.1-12-4.4-23.1-23.5-11.8-20.3-18.2-45.5-16.4-64.2 1-10.3 7.8-28.7 26.8-32.5 16.7-3.3 33 9.3 33.1 9.4 0-.1 10 7.8 21.6 0z\"></path></svg>')}:host .tool{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M312.3 424.5H284V313.7c0-19.5 9-38 24.7-50.5a90.7 90.7 0 0 0-8.3-148.1v95l-103.6-.5v-93.3a97 97 0 0 0-37.1 75.9 90.9 90.9 0 0 0 31.3 68.6 64.4 64.4 0 0 1 22.4 48.3v115.4h-28.3V309.1c0-10.1-4.6-20-12.6-27a119.2 119.2 0 0 1-41-90c0-41.5 22.1-82.3 56.3-104a24.3 24.3 0 0 1 37.5 20.5v72.7l46.9.2v-73.4a24.4 24.4 0 0 1 36-21.5 119.4 119.4 0 0 1 18.4 198.6 36.3 36.3 0 0 0-14.1 28.4v110.9z\"></path><path d=\"M234.6 289.8h28.3v134.7h-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M312.3 424.5H284V313.7c0-19.5 9-38 24.7-50.5a90.7 90.7 0 0 0-8.3-148.1v95l-103.6-.5v-93.3a97 97 0 0 0-37.1 75.9 90.9 90.9 0 0 0 31.3 68.6 64.4 64.4 0 0 1 22.4 48.3v115.4h-28.3V309.1c0-10.1-4.6-20-12.6-27a119.2 119.2 0 0 1-41-90c0-41.5 22.1-82.3 56.3-104a24.3 24.3 0 0 1 37.5 20.5v72.7l46.9.2v-73.4a24.4 24.4 0 0 1 36-21.5 119.4 119.4 0 0 1 18.4 198.6 36.3 36.3 0 0 0-14.1 28.4v110.9z\"></path><path d=\"M234.6 289.8h28.3v134.7h-28.3z\"></path></svg>')}:host .hashtag{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M328 207.3h51.4V179h-48l11-92.5-28.1-3.4-11.5 95.9h-81.5l11-92.5-28.1-3.4-11.4 95.9h-49.4v28.3h46l-11 92.1h-48v28.3H175l-11.4 95.5 28.1 3.4 11.8-98.9H285l-11.4 95.5 28.1 3.4 11.8-98.9h52.7v-28.3H317l11-92.1zm-121 92.1l11-92.1h81.5l-11 92.1H207z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M328 207.3h51.4V179h-48l11-92.5-28.1-3.4-11.5 95.9h-81.5l11-92.5-28.1-3.4-11.4 95.9h-49.4v28.3h46l-11 92.1h-48v28.3H175l-11.4 95.5 28.1 3.4 11.8-98.9H285l-11.4 95.5 28.1 3.4 11.8-98.9h52.7v-28.3H317l11-92.1zm-121 92.1l11-92.1h81.5l-11 92.1H207z\"></path></svg>')}:host .car{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M168.9 257h28.3v42h-28.3z\" transform=\"rotate(-89.9 183 278)\"></path><path d=\"M314.9 257h28.3v42h-28.3z\" transform=\"rotate(-89.9 329 278)\"></path><path d=\"M252.2 139.3h-.2l-56.9.1c-19 2.8-33 13.7-41.5 32.5l-21.8 47.3a22.5 22.5 0 0 0-18.2 22v96.3H143c-.8 3.3-1.3 6.7-1.3 10.2v22.9h29v-22.9c0-4.2 2.3-8.1 5.9-10.2h159.5c3.8 2 6.2 6 6.3 10.4l.2 22.4 29-.2-.2-22.4c0-3.5-.5-6.9-1.4-10.1h28.2v-96.3c0-10.9-7.8-20-18.2-22L358.2 172a52 52 0 0 0-41.5-32.5l-36.9-.1v-.1h-27.6zm-72.8 44.5v-.1c4.4-9.8 9.9-14.5 18.9-16l57.6-.5 57.6.5c9 1.6 14.5 6.3 18.9 16l16.2 35.1H163.3l16.1-35zm-37.3 63.4h227.7v61.9H142.1v-61.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M168.9 257h28.3v42h-28.3z\" transform=\"rotate(-89.9 183 278)\"></path><path d=\"M314.9 257h28.3v42h-28.3z\" transform=\"rotate(-89.9 329 278)\"></path><path d=\"M252.2 139.3h-.2l-56.9.1c-19 2.8-33 13.7-41.5 32.5l-21.8 47.3a22.5 22.5 0 0 0-18.2 22v96.3H143c-.8 3.3-1.3 6.7-1.3 10.2v22.9h29v-22.9c0-4.2 2.3-8.1 5.9-10.2h159.5c3.8 2 6.2 6 6.3 10.4l.2 22.4 29-.2-.2-22.4c0-3.5-.5-6.9-1.4-10.1h28.2v-96.3c0-10.9-7.8-20-18.2-22L358.2 172a52 52 0 0 0-41.5-32.5l-36.9-.1v-.1h-27.6zm-72.8 44.5v-.1c4.4-9.8 9.9-14.5 18.9-16l57.6-.5 57.6.5c9 1.6 14.5 6.3 18.9 16l16.2 35.1H163.3l16.1-35zm-37.3 63.4h227.7v61.9H142.1v-61.9z\"></path></svg>')}:host .business{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M318.9 425.2h78V198.4a28.3 28.3 0 0 0-28.3-28.3H319v-56.7a28.3 28.3 0 0 0-28.3-28.3H163a28.3 28.3 0 0 0-28.3 28.3v311.8h184.2zm0-226.8h49.6v198.4h-49.6V198.4zm-28.3 198.5h-70.9v-63.8h-28.3v63.8H163V113.4h127.6v283.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M318.9 425.2h78V198.4a28.3 28.3 0 0 0-28.3-28.3H319v-56.7a28.3 28.3 0 0 0-28.3-28.3H163a28.3 28.3 0 0 0-28.3 28.3v311.8h184.2zm0-226.8h49.6v198.4h-49.6V198.4zm-28.3 198.5h-70.9v-63.8h-28.3v63.8H163V113.4h127.6v283.5z\"></path></svg>')}:host .flag{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M336.4 87.7c-11.2 2.2-15 3.6-23.9 6-42.3 11.3-77.2 23-93.9 24-8.3.5-26.4-8.1-34-13.4-6.2-4.3-9.8-.5-9.7 4.9.9 48.9 1 105.6.3 154.5-.1 7.8 2.8 17.3 7 21.2 4.8 4.5 12 10.4 30.3 10.4 24.3-.1 77-24.6 119-33.6 3.1-.7 5.3-1.7 13.3-1.7 11.8-.1 20.2 5.4 33.5 14.1 4.8 3.1 9.3 6.8 10.7-6.6.8-48.9-.6-101.7 2.5-146.7 1.2-17.8-16.6-28.9-28.2-32.7-12.8-4.4-26.9-.4-26.9-.4zm27 42c-.2 12.5-.9 19.7-1.2 32.1-14.9-3.8-24.4-.8-39.5.3.2-12.5 1-27.9 1.2-40.4 16.1-1.2 23.5-4.5 39.7-.4l-.2 8.4zM198.8 177c14.2 3.7 24 4.2 38.6 2.9l.6-37.4c14.5-2 28.5-5.4 42.7-9l-.6 37.4a415.3 415.3 0 0 1-42.7 9l-.7 42.5c-9 .9-18.9 3.4-38.4-1.7l.5-43.7zm37.3 80.7l.6-35.4c14.4-2 28.3-5.3 42.4-8.9l-.6 35.4c-14.1 3.6-28.1 9.5-42.5 11.5l.1-2.6zm43.2-44.3l.7-42.5a363 363 0 0 1 42.7-8.7l-.7 42.5a367.1 367.1 0 0 0-42.7 8.7zm42.7-8.6c13.8-1 26.5-3.1 40 .3l-.6 35.9a71.7 71.7 0 0 0-40-.1l.6-36.1zm7.5 42.2\"></path><path d=\"M127.9 84.2h28.3v339.6h-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M336.4 87.7c-11.2 2.2-15 3.6-23.9 6-42.3 11.3-77.2 23-93.9 24-8.3.5-26.4-8.1-34-13.4-6.2-4.3-9.8-.5-9.7 4.9.9 48.9 1 105.6.3 154.5-.1 7.8 2.8 17.3 7 21.2 4.8 4.5 12 10.4 30.3 10.4 24.3-.1 77-24.6 119-33.6 3.1-.7 5.3-1.7 13.3-1.7 11.8-.1 20.2 5.4 33.5 14.1 4.8 3.1 9.3 6.8 10.7-6.6.8-48.9-.6-101.7 2.5-146.7 1.2-17.8-16.6-28.9-28.2-32.7-12.8-4.4-26.9-.4-26.9-.4zm27 42c-.2 12.5-.9 19.7-1.2 32.1-14.9-3.8-24.4-.8-39.5.3.2-12.5 1-27.9 1.2-40.4 16.1-1.2 23.5-4.5 39.7-.4l-.2 8.4zM198.8 177c14.2 3.7 24 4.2 38.6 2.9l.6-37.4c14.5-2 28.5-5.4 42.7-9l-.6 37.4a415.3 415.3 0 0 1-42.7 9l-.7 42.5c-9 .9-18.9 3.4-38.4-1.7l.5-43.7zm37.3 80.7l.6-35.4c14.4-2 28.3-5.3 42.4-8.9l-.6 35.4c-14.1 3.6-28.1 9.5-42.5 11.5l.1-2.6zm43.2-44.3l.7-42.5a363 363 0 0 1 42.7-8.7l-.7 42.5a367.1 367.1 0 0 0-42.7 8.7zm42.7-8.6c13.8-1 26.5-3.1 40 .3l-.6 35.9a71.7 71.7 0 0 0-40-.1l.6-36.1zm7.5 42.2\"></path><path d=\"M127.9 84.2h28.3v339.6h-28.3z\"></path></svg>')}:host .bill{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M190.7 239.9h85.7v7.1h-85.7z\"></path><path d=\"M209.4 157.6h91.9v7.1h-91.9z\"></path><path d=\"M209.9 175h91.9v7.1h-91.9z\"></path><path d=\"M192.6 343.3h53.2v7.1h-53.2z\"></path><path d=\"M294.2 239.9h25.7v7.1h-25.7z\"></path><path d=\"M294.4 261.2h25.7v7.1h-25.7z\"></path><path d=\"M294.4 282.4h25.7v7.1h-25.7z\"></path><path d=\"M294.4 303.7h25.7v7.1h-25.7z\"></path><path d=\"M294.4 341.7h25.7v7.1h-25.7z\"></path><path d=\"M190.7 261.2h85.7v7.1h-85.7z\"></path><path d=\"M190.7 282.4h85.7v7.1h-85.7z\"></path><path d=\"M190.7 303.7h85.7v7.1h-85.7z\"></path><path d=\"M176.9 114.4L163 100.2l-14 14.2h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M223.3 114.1h-.2l-13.9-14.3-14 14.3h-.2z\"></path><path d=\"M269.5 114.1h-.2l-13.9-14.3-14 14.3h-.3z\"></path><path d=\"M315.6 114.1h-.2l-13.9-14.3-14 14.3h-.2z\"></path><path d=\"M285.6 396.5h.3l13.9 14.2 14-14.2h.2z\"></path><path d=\"M239.5 396.5h.2l13.9 14.2 14-14.2h.2z\"></path><path d=\"M193.3 396.5h.2l13.9 14.2 14-14.2h.2z\"></path><path d=\"M361.6 114.4l-13.9-14.2-14 14.2h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M190.7 239.9h85.7v7.1h-85.7z\"></path><path d=\"M209.4 157.6h91.9v7.1h-91.9z\"></path><path d=\"M209.9 175h91.9v7.1h-91.9z\"></path><path d=\"M192.6 343.3h53.2v7.1h-53.2z\"></path><path d=\"M294.2 239.9h25.7v7.1h-25.7z\"></path><path d=\"M294.4 261.2h25.7v7.1h-25.7z\"></path><path d=\"M294.4 282.4h25.7v7.1h-25.7z\"></path><path d=\"M294.4 303.7h25.7v7.1h-25.7z\"></path><path d=\"M294.4 341.7h25.7v7.1h-25.7z\"></path><path d=\"M190.7 261.2h85.7v7.1h-85.7z\"></path><path d=\"M190.7 282.4h85.7v7.1h-85.7z\"></path><path d=\"M190.7 303.7h85.7v7.1h-85.7z\"></path><path d=\"M176.9 114.4L163 100.2l-14 14.2h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M223.3 114.1h-.2l-13.9-14.3-14 14.3h-.2z\"></path><path d=\"M269.5 114.1h-.2l-13.9-14.3-14 14.3h-.3z\"></path><path d=\"M315.6 114.1h-.2l-13.9-14.3-14 14.3h-.2z\"></path><path d=\"M285.6 396.5h.3l13.9 14.2 14-14.2h.2z\"></path><path d=\"M239.5 396.5h.2l13.9 14.2 14-14.2h.2z\"></path><path d=\"M193.3 396.5h.2l13.9 14.2 14-14.2h.2z\"></path><path d=\"M361.6 114.4l-13.9-14.2-14 14.2h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path></svg>')}:host .sun{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.6 156.9h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 356.4 171)\"></path><path d=\"M144.5 138.2h28.3v65.6h-28.3z\" transform=\"rotate(-49.3 158.6 171)\"></path><path d=\"M242.5 93.1h28.3v64.5h-28.3z\"></path><path d=\"M122.7 325h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 155.5 339.2)\"></path><path d=\"M339.1 306.4h28.3V372h-28.3z\" transform=\"rotate(-49.3 353.2 339.2)\"></path><path d=\"M241.7 352.6H270v64.5h-28.3z\"></path><path d=\"M326 254.9a71 71 0 0 0-70.6-70.7h-.1-.1a71.3 71.3 0 0 0-70.9 70.7v.2a71 71 0 0 0 141.8 0l-.1-.2zm-70.9 42.5a42.5 42.5 0 1 1 0-85 42.5 42.5 0 0 1 0 85z\"></path><path d=\"M93.1 239.5h64.5v28.3H93.1z\"></path><path d=\"M352.3 240.1h64.5v28.3h-64.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.6 156.9h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 356.4 171)\"></path><path d=\"M144.5 138.2h28.3v65.6h-28.3z\" transform=\"rotate(-49.3 158.6 171)\"></path><path d=\"M242.5 93.1h28.3v64.5h-28.3z\"></path><path d=\"M122.7 325h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 155.5 339.2)\"></path><path d=\"M339.1 306.4h28.3V372h-28.3z\" transform=\"rotate(-49.3 353.2 339.2)\"></path><path d=\"M241.7 352.6H270v64.5h-28.3z\"></path><path d=\"M326 254.9a71 71 0 0 0-70.6-70.7h-.1-.1a71.3 71.3 0 0 0-70.9 70.7v.2a71 71 0 0 0 141.8 0l-.1-.2zm-70.9 42.5a42.5 42.5 0 1 1 0-85 42.5 42.5 0 0 1 0 85z\"></path><path d=\"M93.1 239.5h64.5v28.3H93.1z\"></path><path d=\"M352.3 240.1h64.5v28.3h-64.5z\"></path></svg>')}:host .signal{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M100.6 314h28.3v110.8h-28.3z\"></path><path d=\"M171.2 258.6h28.3v166.2h-28.3z\"></path><path d=\"M241.8 203.2h28.3v221.5h-28.3z\"></path><path d=\"M344.2 424.8h-35.3V141h35.3v283.8zm-28.4-6.9h21.3V147.8h-21.3v270.1z\"></path><path d=\"M414.7 424.8h-35.3V85.6h35.3v339.2zm-28.3-6.9h21.3V92.4h-21.3v325.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M100.6 314h28.3v110.8h-28.3z\"></path><path d=\"M171.2 258.6h28.3v166.2h-28.3z\"></path><path d=\"M241.8 203.2h28.3v221.5h-28.3z\"></path><path d=\"M344.2 424.8h-35.3V141h35.3v283.8zm-28.4-6.9h21.3V147.8h-21.3v270.1z\"></path><path d=\"M414.7 424.8h-35.3V85.6h35.3v339.2zm-28.3-6.9h21.3V92.4h-21.3v325.5z\"></path></svg>')}:host .airplane{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.7 263.7l-1.5-1.5-119.6-61.9-.2-57.7v-17h-.1a39.6 39.6 0 0 0-79.2-.1h-.1v74.6L96.4 261.3l-1.5 1.5a32.3 32.3 0 0 0-9.6 24.8l.7 29.7 129.4-23.7-.2 56.1-13.3 8.1-1.2 1.2c-8.6 8.5-9.8 24.3-9.6 29.9l.5 34.4 61.8-12.6 66.3 13.2.5-34.3c.2-5.5-1-21.4-9.6-29.9l-1.2-1.2-13.4-8.2-.2-56.1 130 23.8.4-29.7c.5-9.2-3-18.2-9.5-24.6zm-149.3-3.5l.4 106.2 22.7 13.9c.8 2.2 1.5 6.1 1.4 8v1.5l-38.5-7.9-33.9 7.1v-1.5c-.1-1.9.6-5.8 1.4-8l22.7-13.8.3-106.2-127.1 23.3 127.7-65.5v-90.8l.1-.9c0-6.1 5.1-11.1 11.3-11.1 6.2 0 11.3 5 11.3 11.1h.1l.2 92 127.3 65.9-127.4-23.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.7 263.7l-1.5-1.5-119.6-61.9-.2-57.7v-17h-.1a39.6 39.6 0 0 0-79.2-.1h-.1v74.6L96.4 261.3l-1.5 1.5a32.3 32.3 0 0 0-9.6 24.8l.7 29.7 129.4-23.7-.2 56.1-13.3 8.1-1.2 1.2c-8.6 8.5-9.8 24.3-9.6 29.9l.5 34.4 61.8-12.6 66.3 13.2.5-34.3c.2-5.5-1-21.4-9.6-29.9l-1.2-1.2-13.4-8.2-.2-56.1 130 23.8.4-29.7c.5-9.2-3-18.2-9.5-24.6zm-149.3-3.5l.4 106.2 22.7 13.9c.8 2.2 1.5 6.1 1.4 8v1.5l-38.5-7.9-33.9 7.1v-1.5c-.1-1.9.6-5.8 1.4-8l22.7-13.8.3-106.2-127.1 23.3 127.7-65.5v-90.8l.1-.9c0-6.1 5.1-11.1 11.3-11.1 6.2 0 11.3 5 11.3 11.1h.1l.2 92 127.3 65.9-127.4-23.3z\"></path></svg>')}:host .plus{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.5 242.1H269.6v-129h-28.4v129h-128v28.4h128v126.9h28.4V270.5h127.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.5 242.1H269.6v-129h-28.4v129h-128v28.4h128v126.9h28.4V270.5h127.9z\"></path></svg>')}:host .minus{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.4 269.3v-28.4H113.1v28.4h156.3\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.4 269.3v-28.4H113.1v28.4h156.3\"></path></svg>')}:host .lab{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"233.6\" cy=\"136.9\" rx=\"14.9\" ry=\"14.9\" transform=\"matrix(1 -.00494 .00494 1 -.7 1.2)\"></ellipse><circle cx=\"260.4\" cy=\"166\" r=\"11.7\"></circle><ellipse cx=\"278.2\" cy=\"107.3\" rx=\"23.5\" ry=\"23.5\" transform=\"matrix(1 -.00494 .00494 1 -.5 1.4)\"></ellipse><path d=\"M342.4 172.4l-18.2-21.7-33.7 28.2-.3.3a35 35 0 0 0-11.8 26.2v.1l.3 20.2h-.1v73.6H257v11.5h21.6v23.5H257v11.5h21.6v28.9a22.6 22.6 0 0 1-45.2 0V227.8l.3-22.3v-.1c0-10-4.4-19.5-11.8-26.2l-34-28.5-18.2 21.7 33.5 28.1c1.4 1.3 2.2 3 2.2 4.9l-.2 17.8v151.5a51 51 0 0 0 101.8 0V225.5h-5.9l5.9-.1-.3-20c0-1.9.8-3.6 2.2-4.9l33.5-28.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"233.6\" cy=\"136.9\" rx=\"14.9\" ry=\"14.9\" transform=\"matrix(1 -.00494 .00494 1 -.7 1.2)\"></ellipse><circle cx=\"260.4\" cy=\"166\" r=\"11.7\"></circle><ellipse cx=\"278.2\" cy=\"107.3\" rx=\"23.5\" ry=\"23.5\" transform=\"matrix(1 -.00494 .00494 1 -.5 1.4)\"></ellipse><path d=\"M342.4 172.4l-18.2-21.7-33.7 28.2-.3.3a35 35 0 0 0-11.8 26.2v.1l.3 20.2h-.1v73.6H257v11.5h21.6v23.5H257v11.5h21.6v28.9a22.6 22.6 0 0 1-45.2 0V227.8l.3-22.3v-.1c0-10-4.4-19.5-11.8-26.2l-34-28.5-18.2 21.7 33.5 28.1c1.4 1.3 2.2 3 2.2 4.9l-.2 17.8v151.5a51 51 0 0 0 101.8 0V225.5h-5.9l5.9-.1-.3-20c0-1.9.8-3.6 2.2-4.9l33.5-28.1z\"></path></svg>')}:host .privacy{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 83.6c-94.4 0-171.2 76.8-171.2 171.2S160.7 426 255.1 426s171.2-76.8 171.2-171.2S349.5 83.6 255.1 83.6zm0 314.1c-78.8 0-142.8-64.1-142.8-142.8 0-33.2 11.4-63.8 30.4-88l39 39c-32.4 17-52.3 39.5-53.6 41-2.4 2.8-2.5 7.6-2.3 9.2 0 1.5 1.1 6.2 3.2 8.4 39.5 39.5 81.5 59.4 125.1 59.4 1.7 0 3.4 0 5.1-.1 12.4-.4 24-2.5 34.9-5.5l49 49c-24.2 19-54.8 30.4-88 30.4zm16.6-142V246c0-10.9-8.9-19.8-19.8-19.8-2.9 0-5.6.6-8 1.7l-16.7-16.7c7.5-1.7 15.4-2.9 23.6-3.2 37.3-1.3 73.9 14.7 108.9 47.7-8.7 8.4-27.4 24.5-52.5 35.5l-35.5-35.5zm-39.7.4v9.6c0 10.9 8.9 19.8 19.8 19.8 2.8 0 5.5-.6 8-1.7l16.8 16.8c-5.9 1.1-12 1.8-18.3 2-37.3 1.3-73.8-14.8-108.8-47.7 8.2-7.9 25-22.5 47.9-33.4l34.6 34.6zm131.6 91.5l-40.5-40.5c35.1-17.2 56.6-41.7 58-43.3 2.4-2.8 2.5-6.9 2.5-8.9 0-1.8-1.2-6.5-3.4-8.7-41-41-84.8-61-130.2-59.3-14.3.5-27.7 3.1-40 7l-47.6-47.6c25-21.4 57.4-34.3 92.8-34.3C334 112 398 176.1 398 254.8c0 35.4-13 67.8-34.4 92.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 83.6c-94.4 0-171.2 76.8-171.2 171.2S160.7 426 255.1 426s171.2-76.8 171.2-171.2S349.5 83.6 255.1 83.6zm0 314.1c-78.8 0-142.8-64.1-142.8-142.8 0-33.2 11.4-63.8 30.4-88l39 39c-32.4 17-52.3 39.5-53.6 41-2.4 2.8-2.5 7.6-2.3 9.2 0 1.5 1.1 6.2 3.2 8.4 39.5 39.5 81.5 59.4 125.1 59.4 1.7 0 3.4 0 5.1-.1 12.4-.4 24-2.5 34.9-5.5l49 49c-24.2 19-54.8 30.4-88 30.4zm16.6-142V246c0-10.9-8.9-19.8-19.8-19.8-2.9 0-5.6.6-8 1.7l-16.7-16.7c7.5-1.7 15.4-2.9 23.6-3.2 37.3-1.3 73.9 14.7 108.9 47.7-8.7 8.4-27.4 24.5-52.5 35.5l-35.5-35.5zm-39.7.4v9.6c0 10.9 8.9 19.8 19.8 19.8 2.8 0 5.5-.6 8-1.7l16.8 16.8c-5.9 1.1-12 1.8-18.3 2-37.3 1.3-73.8-14.8-108.8-47.7 8.2-7.9 25-22.5 47.9-33.4l34.6 34.6zm131.6 91.5l-40.5-40.5c35.1-17.2 56.6-41.7 58-43.3 2.4-2.8 2.5-6.9 2.5-8.9 0-1.8-1.2-6.5-3.4-8.7-41-41-84.8-61-130.2-59.3-14.3.5-27.7 3.1-40 7l-47.6-47.6c25-21.4 57.4-34.3 92.8-34.3C334 112 398 176.1 398 254.8c0 35.4-13 67.8-34.4 92.8z\"></path></svg>')}:host .screen{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 326h255.1a42.6 42.6 0 0 0 42.5-42.5V141.7a42.6 42.6 0 0 0-42.5-42.5H127.6a42.6 42.6 0 0 0-42.5 42.5v141.7a42.5 42.5 0 0 0 42.5 42.6zm-14.2-184.3c0-7.8 6.4-14.2 14.2-14.2h255.1c7.8 0 14.2 6.4 14.2 14.2v141.7c0 7.8-6.4 14.2-14.2 14.2H127.6c-7.8 0-14.2-6.4-14.2-14.2V141.7z\"></path><path d=\"M307.1 354.3H203.2a71 71 0 0 0-42.5 14.2l-41.6 31.2 17 22.7 41.6-31.2a42.7 42.7 0 0 1 25.5-8.5h103.9c9.1 0 18.2 3 25.5 8.5l41.6 31.2 17-22.7-41.6-31.2a71.6 71.6 0 0 0-42.5-14.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 326h255.1a42.6 42.6 0 0 0 42.5-42.5V141.7a42.6 42.6 0 0 0-42.5-42.5H127.6a42.6 42.6 0 0 0-42.5 42.5v141.7a42.5 42.5 0 0 0 42.5 42.6zm-14.2-184.3c0-7.8 6.4-14.2 14.2-14.2h255.1c7.8 0 14.2 6.4 14.2 14.2v141.7c0 7.8-6.4 14.2-14.2 14.2H127.6c-7.8 0-14.2-6.4-14.2-14.2V141.7z\"></path><path d=\"M307.1 354.3H203.2a71 71 0 0 0-42.5 14.2l-41.6 31.2 17 22.7 41.6-31.2a42.7 42.7 0 0 1 25.5-8.5h103.9c9.1 0 18.2 3 25.5 8.5l41.6 31.2 17-22.7-41.6-31.2a71.6 71.6 0 0 0-42.5-14.2z\"></path></svg>')}:host .usb{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M298.4 147.4v48.2h9.9l-.2 30.6a28.2 28.2 0 0 1-10.3 21.6l-27.1 24 .3-157.4h20.6l-35.1-35.1-35.1 35.1h21.2l-.3 200.7-27.8-24.6-.4-.3a28.2 28.2 0 0 1-10.3-21.6l-.2-26.4a25.5 25.5 0 1 0-28.3.2l.2 26.4a57 57 0 0 0 20.4 43.1l46.3 41.1v13.6a34.6 34.6 0 0 0 14.1 66 34.4 34.4 0 0 0 14.2-65.9l.1-56.8 45.4-40.2a56.6 56.6 0 0 0 20.4-43.1l.2-30.9h10v-48.2h-48.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M298.4 147.4v48.2h9.9l-.2 30.6a28.2 28.2 0 0 1-10.3 21.6l-27.1 24 .3-157.4h20.6l-35.1-35.1-35.1 35.1h21.2l-.3 200.7-27.8-24.6-.4-.3a28.2 28.2 0 0 1-10.3-21.6l-.2-26.4a25.5 25.5 0 1 0-28.3.2l.2 26.4a57 57 0 0 0 20.4 43.1l46.3 41.1v13.6a34.6 34.6 0 0 0 14.1 66 34.4 34.4 0 0 0 14.2-65.9l.1-56.8 45.4-40.2a56.6 56.6 0 0 0 20.4-43.1l.2-30.9h10v-48.2h-48.2z\"></path></svg>')}:host .tokenization{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M126.6 251.9H240v7.1H126.6z\"></path><path d=\"M126.6 273.2h85v7.1h-85z\"></path><path d=\"M381.7 142.1H126.6a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.5h148.9l.1-28.3h-149c-7.8 0-14.2-6.4-14.2-14.2V184.6c0-7.8 6.4-14.2 14.2-14.2h35.9l30.5 36.4a56.5 56.5 0 0 0 43.4 20.3h39v-28.3h-39c-8.4 0-16.3-3.7-21.7-10.1l-15.3-18.2h182.3c7.8 0 14.2 6.4 14.2 14.2v59.9l28.3.1v-60c.1-23.5-19-42.6-42.5-42.6z\"></path><path d=\"M385.5 290.4v-12.2a32 32 0 0 0-31.7-31.9h-.1a31.9 31.9 0 0 0-31.8 31.7v12.2a19.9 19.9 0 0 0-17.1 19.8l-.1 38.5c0 11.1 8.9 20.1 20 20.2l57.5.2h.1c11 0 20-9 20.1-20l.1-38.5c0-10.1-7.4-18.5-17-20zm-42.6-12.3c0-5.9 4.9-10.8 10.8-10.8 2.9 0 5.6 1.1 7.6 3.2s3.1 4.8 3.1 7.7v12l-21.6-.1.1-12zm38.4 69.8l-55.7-.2.1-36.7 55.7.2-.1 36.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M126.6 251.9H240v7.1H126.6z\"></path><path d=\"M126.6 273.2h85v7.1h-85z\"></path><path d=\"M381.7 142.1H126.6a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.5h148.9l.1-28.3h-149c-7.8 0-14.2-6.4-14.2-14.2V184.6c0-7.8 6.4-14.2 14.2-14.2h35.9l30.5 36.4a56.5 56.5 0 0 0 43.4 20.3h39v-28.3h-39c-8.4 0-16.3-3.7-21.7-10.1l-15.3-18.2h182.3c7.8 0 14.2 6.4 14.2 14.2v59.9l28.3.1v-60c.1-23.5-19-42.6-42.5-42.6z\"></path><path d=\"M385.5 290.4v-12.2a32 32 0 0 0-31.7-31.9h-.1a31.9 31.9 0 0 0-31.8 31.7v12.2a19.9 19.9 0 0 0-17.1 19.8l-.1 38.5c0 11.1 8.9 20.1 20 20.2l57.5.2h.1c11 0 20-9 20.1-20l.1-38.5c0-10.1-7.4-18.5-17-20zm-42.6-12.3c0-5.9 4.9-10.8 10.8-10.8 2.9 0 5.6 1.1 7.6 3.2s3.1 4.8 3.1 7.7v12l-21.6-.1.1-12zm38.4 69.8l-55.7-.2.1-36.7 55.7.2-.1 36.7z\"></path></svg>')}:host .hand{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M419.3 249.7l-35.7-29.3c-8.6-7-21.6-4.8-29.7 5l-2.3 2.8-50.6-38a62 62 0 0 0-60.3-4.6l-66.2 2c-8.5.1-16.6 6.2-19.1 14.2-4.1 13.5 8 23.3 13.4 26.9 26.2 17.5 61.9 16.4 63.4 16.3l-.8-21c-.3 0-30.5.9-51-12.8a37 37 0 0 1-3.5-2.7l68.7-2.1 2-1c22.5-10.8 39.6.8 40.8 1.6l49.8 37.4-32.2 39.3-21.6-16.2-.4-.3a32.1 32.1 0 0 0-26.6-4.4l.8 2.8-1-2.7-38.5 13.7c-.9.3-16.8 5.2-35.9-8.2-8.4-5.9-30.5-23.7-84.8-76.7l-1.3-1.3c-.2-.8.1-2.6 1-3.5.9-.8 3.5-.3 6.5 1.2l35.1 15.6 8.5-19.2-34.4-15.3C97.7 161.4 86 167 80.3 175c-6.8 9.5-6.2 22.7 1.4 30.1l1.6 1.5c41.6 40.6 71.8 67.8 87.4 78.8a67.3 67.3 0 0 0 39.3 13.1c9.2 0 15.1-2.1 15.6-2.3l38.1-13.6c2.8-.6 5.8-.1 8.2 1.5l20.7 15.5-8.4 10.2a24.3 24.3 0 0 0-5.7 14.6 18.8 18.8 0 0 0 6.6 15.4l35.7 29.3c3.2 2.7 7.3 4.1 11.6 4.1 1.6 0 3.2-.2 4.8-.6 5-1.2 9.7-4.2 13.2-8.5l69.6-84.8c8.3-9.4 7.9-22.6-.7-29.6zM404 266.4l-69.6 84.8a4 4 0 0 1-1.3 1.1l-33.4-27.4c.1-.4.4-.9.9-1.5l69.6-84.8a4 4 0 0 1 1.3-1.1l33.4 27.4-.9 1.5z\"></path><path d=\"M332.7 309.1c-18.8-2.4-25 21-7.5 28.2 18.8 2.5 25-20.9 7.5-28.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M419.3 249.7l-35.7-29.3c-8.6-7-21.6-4.8-29.7 5l-2.3 2.8-50.6-38a62 62 0 0 0-60.3-4.6l-66.2 2c-8.5.1-16.6 6.2-19.1 14.2-4.1 13.5 8 23.3 13.4 26.9 26.2 17.5 61.9 16.4 63.4 16.3l-.8-21c-.3 0-30.5.9-51-12.8a37 37 0 0 1-3.5-2.7l68.7-2.1 2-1c22.5-10.8 39.6.8 40.8 1.6l49.8 37.4-32.2 39.3-21.6-16.2-.4-.3a32.1 32.1 0 0 0-26.6-4.4l.8 2.8-1-2.7-38.5 13.7c-.9.3-16.8 5.2-35.9-8.2-8.4-5.9-30.5-23.7-84.8-76.7l-1.3-1.3c-.2-.8.1-2.6 1-3.5.9-.8 3.5-.3 6.5 1.2l35.1 15.6 8.5-19.2-34.4-15.3C97.7 161.4 86 167 80.3 175c-6.8 9.5-6.2 22.7 1.4 30.1l1.6 1.5c41.6 40.6 71.8 67.8 87.4 78.8a67.3 67.3 0 0 0 39.3 13.1c9.2 0 15.1-2.1 15.6-2.3l38.1-13.6c2.8-.6 5.8-.1 8.2 1.5l20.7 15.5-8.4 10.2a24.3 24.3 0 0 0-5.7 14.6 18.8 18.8 0 0 0 6.6 15.4l35.7 29.3c3.2 2.7 7.3 4.1 11.6 4.1 1.6 0 3.2-.2 4.8-.6 5-1.2 9.7-4.2 13.2-8.5l69.6-84.8c8.3-9.4 7.9-22.6-.7-29.6zM404 266.4l-69.6 84.8a4 4 0 0 1-1.3 1.1l-33.4-27.4c.1-.4.4-.9.9-1.5l69.6-84.8a4 4 0 0 1 1.3-1.1l33.4 27.4-.9 1.5z\"></path><path d=\"M332.7 309.1c-18.8-2.4-25 21-7.5 28.2 18.8 2.5 25-20.9 7.5-28.2z\"></path></svg>')}:host .like{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M426 313.6a39 39 0 0 0-13.2-26.5l-.7-.6a39 39 0 0 0-3.8-55 34.5 34.5 0 0 0-15-7.6 38.8 38.8 0 0 0-8.1-45.7 34.6 34.6 0 0 0-25.1-9.4l-38.1 1.5a35 35 0 0 0-11.7 2.6V126c0-10.7-4.2-21-11.5-28.3a35.5 35.5 0 0 0-25.2-10.5c-20.2.1-36.7 17.6-36.7 39.1V152l-.3 13.8v.1a36.3 36.3 0 0 1-13 27.5L205 207.9c-.9-2.1-2-4.1-3.4-5.9-4.5-6-11.1-9.4-18-9.4h-68.1c-13.5 0-24.1 12.5-24.1 28.4l-.1 161.5c0 7.1 2.2 13.8 6.1 19 4.5 6 11.1 9.4 18 9.4h68.1c13.5 0 24.1-12.5 24.1-28.4v-8.7l6.3 7.2a54.4 54.4 0 0 0 41.4 19.4l2.7-.1 46-.6a34.8 34.8 0 0 0 25.5 11.2h.1l38.1-.1a37 37 0 0 0 35.8-37.9c0-6.9-1.8-13.6-5.1-19.4a38 38 0 0 0 27.6-39.9zm-25.5-54c.7 9.3-5.5 17.5-13.7 18.2L373 279l-33.5.3-4.8.4-14.7.2h-.8a14 14 0 0 1-10.1-3.3 17.8 17.8 0 0 1-5.9-12.1c-.7-9.3 5.5-17.5 13.7-18.2l5-.4h2.6l37.5-1.4 21.7-.2h.8a14 14 0 0 1 10.1 3.3c3.4 2.9 5.6 7.3 5.9 12zm-77.7-68.3l19-.7 19-.7c3.6-.1 7.1 1.2 9.9 3.8 3.3 3.1 5.3 7.6 5.4 12.4.3 9.3-6.1 17.1-14.4 17.4h-.2l-26.7.3-13 1.1a14 14 0 0 1-8-3.7 17.6 17.6 0 0 1-5.4-12.4c-.3-9.4 6.1-17.2 14.4-17.5zM186.4 382.5c0 4.8-2.5 7.3-3.1 7.4h-68.1c-.6-.1-3.1-2.6-3.1-7.4l.1-161.5c0-4.8 2.5-7.3 3.1-7.4h68.1c.6.1 3.1 2.6 3.1 7.4l-.1 161.5zm71-3.2h-.4a33.5 33.5 0 0 1-27.4-12.1l-22-25.2-.2.2v-110l28.9-22.5.2-.2a57.3 57.3 0 0 0 20.8-43.5l.1-6.2h.2v-8.5l.4-12.3h-.2v-12.7c0-9.9 7.1-18.1 15.8-18.1 3.8 0 7.5 1.5 10.3 4.4a19 19 0 0 1 5.4 13.4v70.2a39.3 39.3 0 0 0 7.1 36.8 38.8 38.8 0 0 0-.9 59.5l.7.6a39 39 0 0 0 5.3 56.2 38.6 38.6 0 0 0-7.6 29.6l-36.5.4zm110 10.5l-38.1.1c-3.8 0-7.4-1.6-10.2-4.6-3-3.2-4.6-7.5-4.7-12.2 0-8.6 5.7-15.8 13.1-16.8l39.8-.4v.2c3.8 0 7.4 1.6 10.2 4.6 3 3.2 4.6 7.5 4.7 12.2.1 9.3-6.5 16.9-14.8 16.9zm23.9-56.5l-18.6 1.6-43.5.4v-.1l-2.9.1h-2.7a14 14 0 0 1-10.1-3.3 17.8 17.8 0 0 1-5.9-12.1c-.7-9.3 5.5-17.5 13.7-18.2l13.9-1.2 33.5-.3 4.8-.4 14.7-.2h.8a14 14 0 0 1 10.1 3.3c3.4 2.9 5.5 7.3 5.9 12 .8 9.6-5.4 17.7-13.7 18.4z\"></path><path d=\"M157.4 336.8c-27.1-6.9-40.4 26-16.2 39.9 27.1 6.9 40.4-26 16.2-39.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M426 313.6a39 39 0 0 0-13.2-26.5l-.7-.6a39 39 0 0 0-3.8-55 34.5 34.5 0 0 0-15-7.6 38.8 38.8 0 0 0-8.1-45.7 34.6 34.6 0 0 0-25.1-9.4l-38.1 1.5a35 35 0 0 0-11.7 2.6V126c0-10.7-4.2-21-11.5-28.3a35.5 35.5 0 0 0-25.2-10.5c-20.2.1-36.7 17.6-36.7 39.1V152l-.3 13.8v.1a36.3 36.3 0 0 1-13 27.5L205 207.9c-.9-2.1-2-4.1-3.4-5.9-4.5-6-11.1-9.4-18-9.4h-68.1c-13.5 0-24.1 12.5-24.1 28.4l-.1 161.5c0 7.1 2.2 13.8 6.1 19 4.5 6 11.1 9.4 18 9.4h68.1c13.5 0 24.1-12.5 24.1-28.4v-8.7l6.3 7.2a54.4 54.4 0 0 0 41.4 19.4l2.7-.1 46-.6a34.8 34.8 0 0 0 25.5 11.2h.1l38.1-.1a37 37 0 0 0 35.8-37.9c0-6.9-1.8-13.6-5.1-19.4a38 38 0 0 0 27.6-39.9zm-25.5-54c.7 9.3-5.5 17.5-13.7 18.2L373 279l-33.5.3-4.8.4-14.7.2h-.8a14 14 0 0 1-10.1-3.3 17.8 17.8 0 0 1-5.9-12.1c-.7-9.3 5.5-17.5 13.7-18.2l5-.4h2.6l37.5-1.4 21.7-.2h.8a14 14 0 0 1 10.1 3.3c3.4 2.9 5.6 7.3 5.9 12zm-77.7-68.3l19-.7 19-.7c3.6-.1 7.1 1.2 9.9 3.8 3.3 3.1 5.3 7.6 5.4 12.4.3 9.3-6.1 17.1-14.4 17.4h-.2l-26.7.3-13 1.1a14 14 0 0 1-8-3.7 17.6 17.6 0 0 1-5.4-12.4c-.3-9.4 6.1-17.2 14.4-17.5zM186.4 382.5c0 4.8-2.5 7.3-3.1 7.4h-68.1c-.6-.1-3.1-2.6-3.1-7.4l.1-161.5c0-4.8 2.5-7.3 3.1-7.4h68.1c.6.1 3.1 2.6 3.1 7.4l-.1 161.5zm71-3.2h-.4a33.5 33.5 0 0 1-27.4-12.1l-22-25.2-.2.2v-110l28.9-22.5.2-.2a57.3 57.3 0 0 0 20.8-43.5l.1-6.2h.2v-8.5l.4-12.3h-.2v-12.7c0-9.9 7.1-18.1 15.8-18.1 3.8 0 7.5 1.5 10.3 4.4a19 19 0 0 1 5.4 13.4v70.2a39.3 39.3 0 0 0 7.1 36.8 38.8 38.8 0 0 0-.9 59.5l.7.6a39 39 0 0 0 5.3 56.2 38.6 38.6 0 0 0-7.6 29.6l-36.5.4zm110 10.5l-38.1.1c-3.8 0-7.4-1.6-10.2-4.6-3-3.2-4.6-7.5-4.7-12.2 0-8.6 5.7-15.8 13.1-16.8l39.8-.4v.2c3.8 0 7.4 1.6 10.2 4.6 3 3.2 4.6 7.5 4.7 12.2.1 9.3-6.5 16.9-14.8 16.9zm23.9-56.5l-18.6 1.6-43.5.4v-.1l-2.9.1h-2.7a14 14 0 0 1-10.1-3.3 17.8 17.8 0 0 1-5.9-12.1c-.7-9.3 5.5-17.5 13.7-18.2l13.9-1.2 33.5-.3 4.8-.4 14.7-.2h.8a14 14 0 0 1 10.1 3.3c3.4 2.9 5.5 7.3 5.9 12 .8 9.6-5.4 17.7-13.7 18.4z\"></path><path d=\"M157.4 336.8c-27.1-6.9-40.4 26-16.2 39.9 27.1 6.9 40.4-26 16.2-39.9z\"></path></svg>')}:host .ecommerce{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"238.1\" cy=\"363.7\" r=\"23.4\"></circle><circle cx=\"351.1\" cy=\"363.7\" r=\"23.4\"></circle><path d=\"M426.2 178.7a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3H396l-9.1 31.6H220.4v28.3h158.1L367.8 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.4v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1-4.3.1-8.9-2.5-12.5z\"></path><path d=\"M319.6 145.3c0 9.8-2.8 18.8-8.4 26.9-6.4 9.2-14.2 13.8-23.5 13.8-4.6 0-8.2-1.3-10.5-3.8-2.4-2.5-3.4-6-3.1-10.3-5 9.7-12.2 14.5-21.8 14.5-6.5 0-11.7-2.4-15.6-7.3a26.5 26.5 0 0 1-5.3-16.9c0-9.4 2.8-17.8 8.5-25.4a27.6 27.6 0 0 1 22.7-12.4c8.9 0 14.7 3.7 17.5 11l2.5-8.4h13.5a1441 1441 0 0 0-10.9 37.8c-.3 1.4-.4 2.7-.5 3.9-.3 5 1.6 7.4 5.9 7.4 5.8 0 10.7-4 14.7-11.9 3.3-6.8 5-13.4 5-19.6a34 34 0 0 0-13.2-28.3 47.5 47.5 0 0 0-30.5-9.4c-15 0-27.6 4.8-37.9 14.4a49.2 49.2 0 0 0-15.6 37.1c0 14.5 5.1 26.3 15.2 35.3 9.7 8.7 21.9 13 36.7 13a70 70 0 0 0 42.4-15.2l5 6.8a80.2 80.2 0 0 1-48 16.9 62 62 0 0 1-42.7-15.6 52.8 52.8 0 0 1-17.9-41.3c0-17.2 6.2-31.6 18.7-43.2a63 63 0 0 1 44.2-16.7c14.9 0 27.2 4.1 37 12.2a42.8 42.8 0 0 1 15.9 34.7zm-44.3-1.7c0-2.6-.9-4.7-2.7-6.5a8.9 8.9 0 0 0-6.6-2.6c-5.5 0-10.2 3.6-14 10.7a39 39 0 0 0-4.8 18.3c0 8.8 3.2 13.2 9.6 13.2 5.3 0 9.9-4.3 13.8-12.8 3.2-7.3 4.7-14 4.7-20.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"238.1\" cy=\"363.7\" r=\"23.4\"></circle><circle cx=\"351.1\" cy=\"363.7\" r=\"23.4\"></circle><path d=\"M426.2 178.7a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3H396l-9.1 31.6H220.4v28.3h158.1L367.8 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.4v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1-4.3.1-8.9-2.5-12.5z\"></path><path d=\"M319.6 145.3c0 9.8-2.8 18.8-8.4 26.9-6.4 9.2-14.2 13.8-23.5 13.8-4.6 0-8.2-1.3-10.5-3.8-2.4-2.5-3.4-6-3.1-10.3-5 9.7-12.2 14.5-21.8 14.5-6.5 0-11.7-2.4-15.6-7.3a26.5 26.5 0 0 1-5.3-16.9c0-9.4 2.8-17.8 8.5-25.4a27.6 27.6 0 0 1 22.7-12.4c8.9 0 14.7 3.7 17.5 11l2.5-8.4h13.5a1441 1441 0 0 0-10.9 37.8c-.3 1.4-.4 2.7-.5 3.9-.3 5 1.6 7.4 5.9 7.4 5.8 0 10.7-4 14.7-11.9 3.3-6.8 5-13.4 5-19.6a34 34 0 0 0-13.2-28.3 47.5 47.5 0 0 0-30.5-9.4c-15 0-27.6 4.8-37.9 14.4a49.2 49.2 0 0 0-15.6 37.1c0 14.5 5.1 26.3 15.2 35.3 9.7 8.7 21.9 13 36.7 13a70 70 0 0 0 42.4-15.2l5 6.8a80.2 80.2 0 0 1-48 16.9 62 62 0 0 1-42.7-15.6 52.8 52.8 0 0 1-17.9-41.3c0-17.2 6.2-31.6 18.7-43.2a63 63 0 0 1 44.2-16.7c14.9 0 27.2 4.1 37 12.2a42.8 42.8 0 0 1 15.9 34.7zm-44.3-1.7c0-2.6-.9-4.7-2.7-6.5a8.9 8.9 0 0 0-6.6-2.6c-5.5 0-10.2 3.6-14 10.7a39 39 0 0 0-4.8 18.3c0 8.8 3.2 13.2 9.6 13.2 5.3 0 9.9-4.3 13.8-12.8 3.2-7.3 4.7-14 4.7-20.3z\"></path></svg>')}:host .bell{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M86 356h338.7v28.3H86z\"></path><path d=\"M255.4 216.6a116 116 0 0 1 115.8 115.8h28.3c0-74.6-57-136.1-129.7-143.4v-26.6H293a37.4 37.4 0 0 0-74.8 0h23.2V189c-73 7-130.3 68.7-130.3 143.5h28.3a116.3 116.3 0 0 1 116-115.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M86 356h338.7v28.3H86z\"></path><path d=\"M255.4 216.6a116 116 0 0 1 115.8 115.8h28.3c0-74.6-57-136.1-129.7-143.4v-26.6H293a37.4 37.4 0 0 0-74.8 0h23.2V189c-73 7-130.3 68.7-130.3 143.5h28.3a116.3 116.3 0 0 1 116-115.9z\"></path></svg>')}:host .webshop{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.9 312.1h-28.3V184.5c0-3.9-3.2-7.1-7.1-7.1H141.7a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V184.5a35.5 35.5 0 0 1 35.4-35.4h226.8a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><path d=\"M85 333.3v28.3h340.2v-28.3H85zM297.6 351h-85v-7h85v7z\"></path><circle cx=\"237.1\" cy=\"300.9\" r=\"9\"></circle><circle cx=\"280.4\" cy=\"300.9\" r=\"9\"></circle><path d=\"M309.1 230.2a5.3 5.3 0 0 0-4.3-2.2h-66.3v10.8h59.1l-3.5 12.1h-63.7v10.8h60.5l-4.1 13.3-52.9.3c-6.6 0-8.9-1.7-10.7-6.3l-12.5-37.3-1.9-6.1c-3.8-15.1-10.9-16.1-15.9-16.5h-.2l-14.1.1v10.6l11.4.1c5.4 0 6.5 2.3 8.5 8.9l14.5 43.7.1.3c2.7 7 7 13.3 19.6 13.3 0 0 43.9 0 54.7-.3l3.5-.2c1.2 0 2.4-.4 3.3-1.1 1.3-1 2.5-3.8 3.2-5.9 2.2-7.1 12.7-43.8 12.7-43.8.3-1.5 0-3.3-1-4.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.9 312.1h-28.3V184.5c0-3.9-3.2-7.1-7.1-7.1H141.7a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V184.5a35.5 35.5 0 0 1 35.4-35.4h226.8a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><path d=\"M85 333.3v28.3h340.2v-28.3H85zM297.6 351h-85v-7h85v7z\"></path><circle cx=\"237.1\" cy=\"300.9\" r=\"9\"></circle><circle cx=\"280.4\" cy=\"300.9\" r=\"9\"></circle><path d=\"M309.1 230.2a5.3 5.3 0 0 0-4.3-2.2h-66.3v10.8h59.1l-3.5 12.1h-63.7v10.8h60.5l-4.1 13.3-52.9.3c-6.6 0-8.9-1.7-10.7-6.3l-12.5-37.3-1.9-6.1c-3.8-15.1-10.9-16.1-15.9-16.5h-.2l-14.1.1v10.6l11.4.1c5.4 0 6.5 2.3 8.5 8.9l14.5 43.7.1.3c2.7 7 7 13.3 19.6 13.3 0 0 43.9 0 54.7-.3l3.5-.2c1.2 0 2.4-.4 3.3-1.1 1.3-1 2.5-3.8 3.2-5.9 2.2-7.1 12.7-43.8 12.7-43.8.3-1.5 0-3.3-1-4.6z\"></path></svg>')}:host .psp{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.9 312.1h-28.3V184.5c0-3.9-3.2-7.1-7.1-7.1H141.7a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V184.5a35.5 35.5 0 0 1 35.4-35.4h226.8a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><path d=\"M85 333.3v28.3h340.2v-28.3H85zM297.6 351h-85v-7h85v7z\"></path><path d=\"M223.6 230.2c0 9.5-2.4 15.9-7.3 19.3-3.6 2.5-9.9 3.8-18.9 3.8h-6.7V286h-14.5v-78h23.2c8.3 0 14.4 1.6 18.2 4.7 4 3.4 6 9.2 6 17.5zm-14.5.1c0-4.5-1.1-7.7-3.3-9.5-1.9-1.5-5.2-2.3-9.9-2.3h-5.2v24.2h4.7c2.4 0 4.5-.2 6.3-.6 1.7-.4 3.1-1.1 4.3-2a7.8 7.8 0 0 0 2.4-3.8c.4-1.6.7-3.6.7-6z\"></path><path d=\"M277.8 265.9c0 14.4-8.1 21.6-24.4 21.6-8.9 0-15.1-1.8-18.7-5.5-3.6-3.7-5.4-10-5.4-18.7v-.9H244v1c0 4.2.5 7.3 1.5 9.3 1.4 2.8 4 4.2 8 4.2 6.5 0 9.7-3.3 9.7-9.8 0-3.4-1.5-6.3-4.4-8.8-.7-.6-4.1-2.8-10.1-6.6l-8.1-5.4a38.4 38.4 0 0 1-4.7-3.9c-3.6-4-5.4-9-5.4-14.9 0-13.9 8.1-20.9 24.2-20.9 7.3 0 12.8 1.5 16.4 4.4 3.9 3.2 5.8 8.4 5.8 15.5v3h-14.3v-1.9c0-7-2.8-10.5-8.5-10.5-6 0-9 3.1-9 9.2 0 3.5 1.8 6.6 5.3 9.4l5.5 3.5 5.5 3.5c6.3 4 10.2 7 12 9.1 2.9 3.4 4.4 8.2 4.4 14.1z\"></path><path d=\"M335.9 230.2c0 9.5-2.4 15.9-7.3 19.3-3.6 2.5-9.9 3.8-18.9 3.8H303V286h-14.5v-78h23.2c8.3 0 14.4 1.6 18.2 4.7 4 3.4 6 9.2 6 17.5zm-14.4.1c0-4.5-1.1-7.7-3.3-9.5-1.9-1.5-5.2-2.3-9.9-2.3H303v24.2h4.7c2.4 0 4.5-.2 6.3-.6 1.7-.4 3.1-1.1 4.3-2a7.8 7.8 0 0 0 2.4-3.8c.5-1.6.8-3.6.8-6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.9 312.1h-28.3V184.5c0-3.9-3.2-7.1-7.1-7.1H141.7a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V184.5a35.5 35.5 0 0 1 35.4-35.4h226.8a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><path d=\"M85 333.3v28.3h340.2v-28.3H85zM297.6 351h-85v-7h85v7z\"></path><path d=\"M223.6 230.2c0 9.5-2.4 15.9-7.3 19.3-3.6 2.5-9.9 3.8-18.9 3.8h-6.7V286h-14.5v-78h23.2c8.3 0 14.4 1.6 18.2 4.7 4 3.4 6 9.2 6 17.5zm-14.5.1c0-4.5-1.1-7.7-3.3-9.5-1.9-1.5-5.2-2.3-9.9-2.3h-5.2v24.2h4.7c2.4 0 4.5-.2 6.3-.6 1.7-.4 3.1-1.1 4.3-2a7.8 7.8 0 0 0 2.4-3.8c.4-1.6.7-3.6.7-6z\"></path><path d=\"M277.8 265.9c0 14.4-8.1 21.6-24.4 21.6-8.9 0-15.1-1.8-18.7-5.5-3.6-3.7-5.4-10-5.4-18.7v-.9H244v1c0 4.2.5 7.3 1.5 9.3 1.4 2.8 4 4.2 8 4.2 6.5 0 9.7-3.3 9.7-9.8 0-3.4-1.5-6.3-4.4-8.8-.7-.6-4.1-2.8-10.1-6.6l-8.1-5.4a38.4 38.4 0 0 1-4.7-3.9c-3.6-4-5.4-9-5.4-14.9 0-13.9 8.1-20.9 24.2-20.9 7.3 0 12.8 1.5 16.4 4.4 3.9 3.2 5.8 8.4 5.8 15.5v3h-14.3v-1.9c0-7-2.8-10.5-8.5-10.5-6 0-9 3.1-9 9.2 0 3.5 1.8 6.6 5.3 9.4l5.5 3.5 5.5 3.5c6.3 4 10.2 7 12 9.1 2.9 3.4 4.4 8.2 4.4 14.1z\"></path><path d=\"M335.9 230.2c0 9.5-2.4 15.9-7.3 19.3-3.6 2.5-9.9 3.8-18.9 3.8H303V286h-14.5v-78h23.2c8.3 0 14.4 1.6 18.2 4.7 4 3.4 6 9.2 6 17.5zm-14.4.1c0-4.5-1.1-7.7-3.3-9.5-1.9-1.5-5.2-2.3-9.9-2.3H303v24.2h4.7c2.4 0 4.5-.2 6.3-.6 1.7-.4 3.1-1.1 4.3-2a7.8 7.8 0 0 0 2.4-3.8c.5-1.6.8-3.6.8-6z\"></path></svg>')}:host .block{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.5 192.1h-43.1v13.4h-12.1v-93h-11.9V99.1h-43.1v13.4h-27.7V99.1h-43.1v13.4h-27.7V99.1h-43.1v13.4h-11.9v112.6h67.3v73.4h-11.9v-13.8h-43.1v13.8H141v-13.8H97.9v13.8H85.8v112.6h284.8v-93h58V205.5h-12.1v-13.4zm-243.7 13v-72.6h168.4v72.6H172.8zm177.8 186H105.8v-72.6h244.8v72.6zm58-93H240.2v-72.6h168.4v72.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.5 192.1h-43.1v13.4h-12.1v-93h-11.9V99.1h-43.1v13.4h-27.7V99.1h-43.1v13.4h-27.7V99.1h-43.1v13.4h-11.9v112.6h67.3v73.4h-11.9v-13.8h-43.1v13.8H141v-13.8H97.9v13.8H85.8v112.6h284.8v-93h58V205.5h-12.1v-13.4zm-243.7 13v-72.6h168.4v72.6H172.8zm177.8 186H105.8v-72.6h244.8v72.6zm58-93H240.2v-72.6h168.4v72.6z\"></path></svg>')}:host .bull-bear{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M256.6 111.7a17 17 0 0 1 13.7-4.1l34.5 5.1 2.7.4-28.2 51.8a10.5 10.5 0 0 0 1.9 12.5l9.1 8.9-44.1 77.1a10.5 10.5 0 0 0 3 13.8L302 315c1.8 1.3 4 2 6.1 2 1.8 0 3.7-.5 5.4-1.5l120.2-71.3c5-3 6.6-9.4 3.7-14.4-3-5-9.4-6.6-14.4-3.7L308.7 294 269 265.7l43.4-75.9c2.4-4.1 1.6-9.4-1.8-12.7l-9.2-9.1 28.1-51.6 9.7 1.4a37.8 37.8 0 0 0 30.7-9.2L388.8 92l-13.9-15.7L356 93a17 17 0 0 1-13.7 4.1L307.8 92l-34.5-5.1a37.8 37.8 0 0 0-30.7 9.2l-18.8 16.7 13.9 15.7 18.9-16.8z\"></path><path d=\"M81.2 254.1c23.8 20.5 38.6 16.1 52.9 9.4 9.2-4.3 14.8-6.9 30.2 6.4a44.9 44.9 0 0 0 31.3 10.3 39.6 39.6 0 0 0 2.2 34.7 60 60 0 0 1 9.2 27.5c.3 18.6 8 32.3 16.2 44.2.8 1.2 1.6 2.1 2.2 2.8l.7.9 2.9 3.7a21.6 21.6 0 0 0-11.2 9.8 22.6 22.6 0 0 0-3.2 12.8c-4.2 0-8.6-.5-13.2-1.1-3-.4-6.2-.8-9.4-1-5.8-1.5-41.8-13.9-73.6-25-5.5-1.9-11.5 1-13.4 6.4-1.9 5.5 1 11.5 6.4 13.4 73.5 25.7 76.6 25.9 78.3 26.1 2.9.2 5.9.6 9 1 5.1.6 10.3 1.3 15.7 1.3h1.1c3.1-.1 13.9-.7 21.4-7.1 11.6-9.9 18.6-15.9 19.5-25.1.9-9.1-4.4-15.8-14.1-28.1l-1.4-1.6-.8-.9a58.2 58.2 0 0 1-12.6-32.8 82.8 82.8 0 0 0-12.1-37.8c-3.1-5.3-3.1-10 0-18.4l.4-1c2.7-7.3 5-13.6.8-19.6-4.3-6.1-11.2-6.1-20-6-8.8 0-13.8-.7-19-5.2-23.8-20.6-38.6-16.3-52.9-9.6-9.2 4.3-14.8 7-30.3-6.3-4.4-3.8-11-3.3-14.8 1.1a11 11 0 0 0 1.6 14.8z\"></path><path d=\"M365.7 163.5c-5.5-4-13.2-2.8-17.3 2.7l-7.3 10c-4 5.5-2.8 13.2 2.7 17.3 5.5 4 13.2 2.8 17.3-2.7l7.2-10c4.2-5.6 3-13.3-2.6-17.3z\"></path><path d=\"M167 335l10.7.1a10.7 10.7 0 0 0 .2-21.4l-10.7-.1a10.7 10.7 0 0 0-.2 21.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M256.6 111.7a17 17 0 0 1 13.7-4.1l34.5 5.1 2.7.4-28.2 51.8a10.5 10.5 0 0 0 1.9 12.5l9.1 8.9-44.1 77.1a10.5 10.5 0 0 0 3 13.8L302 315c1.8 1.3 4 2 6.1 2 1.8 0 3.7-.5 5.4-1.5l120.2-71.3c5-3 6.6-9.4 3.7-14.4-3-5-9.4-6.6-14.4-3.7L308.7 294 269 265.7l43.4-75.9c2.4-4.1 1.6-9.4-1.8-12.7l-9.2-9.1 28.1-51.6 9.7 1.4a37.8 37.8 0 0 0 30.7-9.2L388.8 92l-13.9-15.7L356 93a17 17 0 0 1-13.7 4.1L307.8 92l-34.5-5.1a37.8 37.8 0 0 0-30.7 9.2l-18.8 16.7 13.9 15.7 18.9-16.8z\"></path><path d=\"M81.2 254.1c23.8 20.5 38.6 16.1 52.9 9.4 9.2-4.3 14.8-6.9 30.2 6.4a44.9 44.9 0 0 0 31.3 10.3 39.6 39.6 0 0 0 2.2 34.7 60 60 0 0 1 9.2 27.5c.3 18.6 8 32.3 16.2 44.2.8 1.2 1.6 2.1 2.2 2.8l.7.9 2.9 3.7a21.6 21.6 0 0 0-11.2 9.8 22.6 22.6 0 0 0-3.2 12.8c-4.2 0-8.6-.5-13.2-1.1-3-.4-6.2-.8-9.4-1-5.8-1.5-41.8-13.9-73.6-25-5.5-1.9-11.5 1-13.4 6.4-1.9 5.5 1 11.5 6.4 13.4 73.5 25.7 76.6 25.9 78.3 26.1 2.9.2 5.9.6 9 1 5.1.6 10.3 1.3 15.7 1.3h1.1c3.1-.1 13.9-.7 21.4-7.1 11.6-9.9 18.6-15.9 19.5-25.1.9-9.1-4.4-15.8-14.1-28.1l-1.4-1.6-.8-.9a58.2 58.2 0 0 1-12.6-32.8 82.8 82.8 0 0 0-12.1-37.8c-3.1-5.3-3.1-10 0-18.4l.4-1c2.7-7.3 5-13.6.8-19.6-4.3-6.1-11.2-6.1-20-6-8.8 0-13.8-.7-19-5.2-23.8-20.6-38.6-16.3-52.9-9.6-9.2 4.3-14.8 7-30.3-6.3-4.4-3.8-11-3.3-14.8 1.1a11 11 0 0 0 1.6 14.8z\"></path><path d=\"M365.7 163.5c-5.5-4-13.2-2.8-17.3 2.7l-7.3 10c-4 5.5-2.8 13.2 2.7 17.3 5.5 4 13.2 2.8 17.3-2.7l7.2-10c4.2-5.6 3-13.3-2.6-17.3z\"></path><path d=\"M167 335l10.7.1a10.7 10.7 0 0 0 .2-21.4l-10.7-.1a10.7 10.7 0 0 0-.2 21.4z\"></path></svg>')}:host .desktop{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M262.2 333.1H124.5A39.5 39.5 0 0 1 85 293.6V167a39.5 39.5 0 0 1 39.5-39.5h137.7v28.3H124.5c-6.1 0-11.1 5-11.1 11.1v126.5c0 6.1 5 11.1 11.1 11.1h137.7v28.6z\"></path><path d=\"M164.7 407.9L147 385.7l23.9-19c10-8 22.5-12.4 35.3-12.4h55.9v28.3h-55.9c-6.4 0-12.7 2.2-17.7 6.2l-23.8 19.1z\"></path><path d=\"M382.7 425.2H326a42.6 42.6 0 0 1-42.5-42.5V127.6A42.6 42.6 0 0 1 326 85.1h56.7a42.6 42.6 0 0 1 42.5 42.5v255.1a42.6 42.6 0 0 1-42.5 42.5zM326 113.4c-7.8 0-14.2 6.4-14.2 14.2v255.1c0 7.8 6.4 14.2 14.2 14.2h56.7c7.8 0 14.2-6.4 14.2-14.2V127.6c0-7.8-6.4-14.2-14.2-14.2H326z\"></path><path d=\"M326 138.2h56.7v7.1H326z\"></path><path d=\"M326 159.4h56.7v7.1H326z\"></path><circle cx=\"354.3\" cy=\"354.3\" r=\"14.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M262.2 333.1H124.5A39.5 39.5 0 0 1 85 293.6V167a39.5 39.5 0 0 1 39.5-39.5h137.7v28.3H124.5c-6.1 0-11.1 5-11.1 11.1v126.5c0 6.1 5 11.1 11.1 11.1h137.7v28.6z\"></path><path d=\"M164.7 407.9L147 385.7l23.9-19c10-8 22.5-12.4 35.3-12.4h55.9v28.3h-55.9c-6.4 0-12.7 2.2-17.7 6.2l-23.8 19.1z\"></path><path d=\"M382.7 425.2H326a42.6 42.6 0 0 1-42.5-42.5V127.6A42.6 42.6 0 0 1 326 85.1h56.7a42.6 42.6 0 0 1 42.5 42.5v255.1a42.6 42.6 0 0 1-42.5 42.5zM326 113.4c-7.8 0-14.2 6.4-14.2 14.2v255.1c0 7.8 6.4 14.2 14.2 14.2h56.7c7.8 0 14.2-6.4 14.2-14.2V127.6c0-7.8-6.4-14.2-14.2-14.2H326z\"></path><path d=\"M326 138.2h56.7v7.1H326z\"></path><path d=\"M326 159.4h56.7v7.1H326z\"></path><circle cx=\"354.3\" cy=\"354.3\" r=\"14.2\"></circle></svg>')}:host .pay-points{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M105.3 153.9a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.1-8.5 4.7-18.1 1.6-27-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4 35.5 35.5 0 0 0 16.4 47.2z\"></path><path d=\"M136.2 223.4A35.4 35.4 0 0 0 89 239.8a35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18a35.4 35.4 0 0 0-16.4-47.2z\"></path><path d=\"M105.3 423.2c5 2.4 10.2 3.5 15.4 3.5 13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.7-18.1 1.6-27-3.1-8.9-9.5-16.1-18-20.2A35.4 35.4 0 0 0 89 376c-4.1 8.5-4.7 18.1-1.6 27a35.3 35.3 0 0 0 17.9 20.2z\"></path><path d=\"M288.3 110.5c-3.1-8.9-9.5-16.1-18-20.2-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18a35.4 35.4 0 0 0 16.4 47.2c5 2.4 10.2 3.5 15.4 3.5 13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.6-18.1 1.5-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5A14.05 14.05 0 0 1 255 108a14.05 14.05 0 0 1 13.3 9.5c1.2 3.5 1 7.3-.7 10.7z\"></path><path d=\"M422.2 110.5c-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4 35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-1.6 3.4-4.5 5.9-8.1 7.2-3.6 1.2-7.4 1-10.8-.6a14.05 14.05 0 0 1 6.2-26.7 14.05 14.05 0 0 1 13.3 9.5c1.3 3.4 1.1 7.2-.6 10.6z\"></path><path d=\"M270.4 223.4c-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18a35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18a35.4 35.4 0 0 0-16.4-47.2zm-2.8 37.9c-3.4 7-11.8 9.9-18.8 6.5-7-3.4-9.9-11.8-6.5-18.8 1.6-3.4 4.5-5.9 8.1-7.2 1.5-.5 3.1-.8 4.6-.8 2.1 0 4.2.5 6.1 1.4 7 3.5 9.9 11.9 6.5 18.9z\"></path><path d=\"M422.2 243.6c-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4c-4.1 8.5-4.7 18.1-1.6 27 3.1 8.9 9.5 16.1 18 20.2a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-1.6 3.4-4.5 5.9-8.1 7.2-3.6 1.2-7.4 1-10.8-.6a14.05 14.05 0 0 1 6.2-26.7 14.05 14.05 0 0 1 13.3 9.5c1.3 3.4 1.1 7.3-.6 10.6z\"></path><path d=\"M288.3 379.8c-3.1-8.9-9.5-16.1-18-20.2-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18-4.1 8.5-4.7 18.1-1.6 27a35.3 35.3 0 0 0 33.4 23.7c13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.6-18.1 1.5-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5-3.4-1.6-5.9-4.5-7.2-8.1a14.05 14.05 0 0 1 8.7-18c1.5-.5 3.1-.8 4.6-.8a14.05 14.05 0 0 1 13.3 9.5c1.3 3.7 1.1 7.5-.6 10.9z\"></path><path d=\"M422.2 379.8c-3.1-8.9-9.5-16.1-18-20.2A35.4 35.4 0 0 0 357 376c-4.1 8.5-4.7 18.1-1.6 27 3.1 8.9 9.5 16.1 18 20.2a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5-3.4-1.6-5.9-4.5-7.2-8.1-1.2-3.6-1-7.4.6-10.8a14.1 14.1 0 0 1 26 1.6c1.3 3.6 1.1 7.4-.6 10.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M105.3 153.9a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.1-8.5 4.7-18.1 1.6-27-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4 35.5 35.5 0 0 0 16.4 47.2z\"></path><path d=\"M136.2 223.4A35.4 35.4 0 0 0 89 239.8a35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18a35.4 35.4 0 0 0-16.4-47.2z\"></path><path d=\"M105.3 423.2c5 2.4 10.2 3.5 15.4 3.5 13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.7-18.1 1.6-27-3.1-8.9-9.5-16.1-18-20.2A35.4 35.4 0 0 0 89 376c-4.1 8.5-4.7 18.1-1.6 27a35.3 35.3 0 0 0 17.9 20.2z\"></path><path d=\"M288.3 110.5c-3.1-8.9-9.5-16.1-18-20.2-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18a35.4 35.4 0 0 0 16.4 47.2c5 2.4 10.2 3.5 15.4 3.5 13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.6-18.1 1.5-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5A14.05 14.05 0 0 1 255 108a14.05 14.05 0 0 1 13.3 9.5c1.2 3.5 1 7.3-.7 10.7z\"></path><path d=\"M422.2 110.5c-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4 35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-1.6 3.4-4.5 5.9-8.1 7.2-3.6 1.2-7.4 1-10.8-.6a14.05 14.05 0 0 1 6.2-26.7 14.05 14.05 0 0 1 13.3 9.5c1.3 3.4 1.1 7.2-.6 10.6z\"></path><path d=\"M270.4 223.4c-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18a35.4 35.4 0 0 0 16.4 47.2 34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18a35.4 35.4 0 0 0-16.4-47.2zm-2.8 37.9c-3.4 7-11.8 9.9-18.8 6.5-7-3.4-9.9-11.8-6.5-18.8 1.6-3.4 4.5-5.9 8.1-7.2 1.5-.5 3.1-.8 4.6-.8 2.1 0 4.2.5 6.1 1.4 7 3.5 9.9 11.9 6.5 18.9z\"></path><path d=\"M422.2 243.6c-3.1-8.9-9.5-16.1-18-20.2a35.4 35.4 0 0 0-47.2 16.4c-4.1 8.5-4.7 18.1-1.6 27 3.1 8.9 9.5 16.1 18 20.2a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-1.6 3.4-4.5 5.9-8.1 7.2-3.6 1.2-7.4 1-10.8-.6a14.05 14.05 0 0 1 6.2-26.7 14.05 14.05 0 0 1 13.3 9.5c1.3 3.4 1.1 7.3-.6 10.6z\"></path><path d=\"M288.3 379.8c-3.1-8.9-9.5-16.1-18-20.2-8.5-4.1-18.1-4.7-27-1.6-8.9 3.1-16.1 9.5-20.2 18-4.1 8.5-4.7 18.1-1.6 27a35.3 35.3 0 0 0 33.4 23.7c13.1 0 25.8-7.3 31.9-19.9 4.1-8.5 4.6-18.1 1.5-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5-3.4-1.6-5.9-4.5-7.2-8.1a14.05 14.05 0 0 1 8.7-18c1.5-.5 3.1-.8 4.6-.8a14.05 14.05 0 0 1 13.3 9.5c1.3 3.7 1.1 7.5-.6 10.9z\"></path><path d=\"M422.2 379.8c-3.1-8.9-9.5-16.1-18-20.2A35.4 35.4 0 0 0 357 376c-4.1 8.5-4.7 18.1-1.6 27 3.1 8.9 9.5 16.1 18 20.2a34.8 34.8 0 0 0 15.4 3.6c3.9 0 7.8-.7 11.6-2 8.9-3.1 16.1-9.5 20.2-18 4.2-8.5 4.7-18.1 1.6-27zm-20.7 17.7c-3.4 7-11.8 9.9-18.8 6.5-3.4-1.6-5.9-4.5-7.2-8.1-1.2-3.6-1-7.4.6-10.8a14.1 14.1 0 0 1 26 1.6c1.3 3.6 1.1 7.4-.6 10.8z\"></path></svg>')}:host .punch-card{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M275.7 88.1H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1a42.6 42.6 0 0 0 42.5 42.5h212.6V210.3l-107-122.2zm7.8 51.9l53.8 61.5h-53.8V140zM170.1 399.9c-7.8 0-14.2-6.4-14.2-14.2V130.6c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1z\"></path><ellipse cx=\"203.6\" cy=\"181.4\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 181.4)\"></ellipse><ellipse cx=\"203.6\" cy=\"267.7\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 267.7)\"></ellipse><ellipse cx=\"203.6\" cy=\"354.1\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 354)\"></ellipse><ellipse cx=\"269.3\" cy=\"311.6\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 269.3 311.6)\"></ellipse></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M275.7 88.1H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1a42.6 42.6 0 0 0 42.5 42.5h212.6V210.3l-107-122.2zm7.8 51.9l53.8 61.5h-53.8V140zM170.1 399.9c-7.8 0-14.2-6.4-14.2-14.2V130.6c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1z\"></path><ellipse cx=\"203.6\" cy=\"181.4\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 181.4)\"></ellipse><ellipse cx=\"203.6\" cy=\"267.7\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 267.7)\"></ellipse><ellipse cx=\"203.6\" cy=\"354.1\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 203.6 354)\"></ellipse><ellipse cx=\"269.3\" cy=\"311.6\" rx=\"15.8\" ry=\"15.8\" transform=\"rotate(-64.1 269.3 311.6)\"></ellipse></svg>')}:host .ticket{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.4 190.7v-8.9a28.3 28.3 0 0 0-28.3-28.3H113.5a28.3 28.3 0 0 0-28.3 28.3v8.9c7.8.6 14.1 7.1 14.1 15.1S93 220.4 85.2 221h-.1v16.5h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1l.1.6v14.9l-.1.9h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1v8.9a28.3 28.3 0 0 0 28.3 28.3H397a28.3 28.3 0 0 0 28.3-28.3v-8.9a15.2 15.2 0 0 1 0-30.2v-16.5a15.2 15.2 0 0 1 0-30.2V221a15.2 15.2 0 0 1 .1-30.3zM113.5 323.6V181.8H397v141.7l-283.5.1z\"></path><circle cx=\"328.6\" cy=\"198.6\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"220.2\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"241.9\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"263.6\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"285.2\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"306.9\" r=\"5.1\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.4 190.7v-8.9a28.3 28.3 0 0 0-28.3-28.3H113.5a28.3 28.3 0 0 0-28.3 28.3v8.9c7.8.6 14.1 7.1 14.1 15.1S93 220.4 85.2 221h-.1v16.5h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1l.1.6v14.9l-.1.9h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1v8.9a28.3 28.3 0 0 0 28.3 28.3H397a28.3 28.3 0 0 0 28.3-28.3v-8.9a15.2 15.2 0 0 1 0-30.2v-16.5a15.2 15.2 0 0 1 0-30.2V221a15.2 15.2 0 0 1 .1-30.3zM113.5 323.6V181.8H397v141.7l-283.5.1z\"></path><circle cx=\"328.6\" cy=\"198.6\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"220.2\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"241.9\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"263.6\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"285.2\" r=\"5.1\"></circle><circle cx=\"328.6\" cy=\"306.9\" r=\"5.1\"></circle></svg>')}:host .gift{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M291.7 427.4a53 53 0 0 1-36.2-14.2 53.1 53.1 0 0 1-71.4-78.6l60-60a16.3 16.3 0 0 1 22.8 0l60 60a53.1 53.1 0 0 1-35.2 92.8zm-36.2-51.3l9.1 14.7a32 32 0 1 0 48.1-40.7l-.5-.5-56.6-56.6-57 57-.3.2a32 32 0 1 0 48.1 40.7l9.1-14.8z\"></path><path d=\"M255.5 240.7c-4.3 0-8.3-1.7-11.4-4.7l-60-60a53.1 53.1 0 1 1 71.4-78.6 53.1 53.1 0 0 1 71.4 78.6l-60 60a15.9 15.9 0 0 1-11.4 4.7zm-36.2-136.3a32 32 0 0 0-21 55.9l.5.5 56.6 56.6 56.8-56.8.3-.2a32 32 0 1 0-48.1-40.7l-9.1 14.7-9.1-14.7a31 31 0 0 0-26.9-15.3z\"></path><path d=\"M382.8 344.9a52.8 52.8 0 0 1-39.7-17.9l-60-60a16.3 16.3 0 0 1 0-22.8l60-60a53.1 53.1 0 1 1 78.6 71.4 53.1 53.1 0 0 1-38.9 89.3zm-81-89.3l56.8 56.8.2.3a32 32 0 1 0 40.7-48.1l-14.7-9.1 14.7-9.1a32 32 0 1 0-40.7-48.1l-.5.5-56.5 56.8z\"></path><path d=\"M129.9 344.9A53.1 53.1 0 0 1 91 255.6a53.1 53.1 0 0 1 78.6-71.4l60 60a16.3 16.3 0 0 1 0 22.8l-60 60a52.8 52.8 0 0 1-39.7 17.9zm0-157.3a32 32 0 0 0-16.7 59l14.7 9.1-14.7 9.1a32 32 0 1 0 40.7 48.1l.5-.5 56.6-56.6-56.8-56.8-.2-.3a31.9 31.9 0 0 0-24.1-11.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M291.7 427.4a53 53 0 0 1-36.2-14.2 53.1 53.1 0 0 1-71.4-78.6l60-60a16.3 16.3 0 0 1 22.8 0l60 60a53.1 53.1 0 0 1-35.2 92.8zm-36.2-51.3l9.1 14.7a32 32 0 1 0 48.1-40.7l-.5-.5-56.6-56.6-57 57-.3.2a32 32 0 1 0 48.1 40.7l9.1-14.8z\"></path><path d=\"M255.5 240.7c-4.3 0-8.3-1.7-11.4-4.7l-60-60a53.1 53.1 0 1 1 71.4-78.6 53.1 53.1 0 0 1 71.4 78.6l-60 60a15.9 15.9 0 0 1-11.4 4.7zm-36.2-136.3a32 32 0 0 0-21 55.9l.5.5 56.6 56.6 56.8-56.8.3-.2a32 32 0 1 0-48.1-40.7l-9.1 14.7-9.1-14.7a31 31 0 0 0-26.9-15.3z\"></path><path d=\"M382.8 344.9a52.8 52.8 0 0 1-39.7-17.9l-60-60a16.3 16.3 0 0 1 0-22.8l60-60a53.1 53.1 0 1 1 78.6 71.4 53.1 53.1 0 0 1-38.9 89.3zm-81-89.3l56.8 56.8.2.3a32 32 0 1 0 40.7-48.1l-14.7-9.1 14.7-9.1a32 32 0 1 0-40.7-48.1l-.5.5-56.5 56.8z\"></path><path d=\"M129.9 344.9A53.1 53.1 0 0 1 91 255.6a53.1 53.1 0 0 1 78.6-71.4l60 60a16.3 16.3 0 0 1 0 22.8l-60 60a52.8 52.8 0 0 1-39.7 17.9zm0-157.3a32 32 0 0 0-16.7 59l14.7 9.1-14.7 9.1a32 32 0 1 0 40.7 48.1l.5-.5 56.6-56.6-56.8-56.8-.2-.3a31.9 31.9 0 0 0-24.1-11.1z\"></path></svg>')}:host .statistic{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M99.4 369.1h28.3v56.7H99.4z\"></path><path d=\"M170.2 312.4h28.3v113.4h-28.3z\"></path><path d=\"M241.1 255.7h28.3v170.1h-28.3z\"></path><path d=\"M312 279.5h28.3v146.3H312z\"></path><path d=\"M382.8 208.1h28.3v217.7h-28.3z\"></path><path d=\"M92.7 283.2l-8.2-27.1 75.9-23.1 44.8-78.1 118.9 26.2 78.3-95.5 21.9 18L335 212.5l-115.5-25.4-40.1 69.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M99.4 369.1h28.3v56.7H99.4z\"></path><path d=\"M170.2 312.4h28.3v113.4h-28.3z\"></path><path d=\"M241.1 255.7h28.3v170.1h-28.3z\"></path><path d=\"M312 279.5h28.3v146.3H312z\"></path><path d=\"M382.8 208.1h28.3v217.7h-28.3z\"></path><path d=\"M92.7 283.2l-8.2-27.1 75.9-23.1 44.8-78.1 118.9 26.2 78.3-95.5 21.9 18L335 212.5l-115.5-25.4-40.1 69.7z\"></path></svg>')}:host .stocks{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M164.8 251.1h170.1v7.1H164.8z\"></path><path d=\"M164.8 272.4h170.1v7.1H164.8z\"></path><path d=\"M277.1 396.4H164.8c-7.8 0-14.2-6.4-14.2-14.2V127.1c0-7.8 6.4-14.2 14.2-14.2h85v113.4H349v75.9h28.3v-95.4l-107-122.2H164.8a42.6 42.6 0 0 0-42.5 42.5v255.1a42.6 42.6 0 0 0 42.5 42.5h112.3v-28.3zm1-259.9l53.8 61.5h-53.8v-61.5z\"></path><path d=\"M339.8 398.1c-13.8 0-26.2-6-34.7-15.5v69.8l34.7-27.5 34.7 27.5v-69.8a46.4 46.4 0 0 1-34.7 15.5z\"></path><path d=\"M339.8 385.1a33.7 33.7 0 1 0 0-67.4 33.7 33.7 0 0 0 0 67.4z\"></path><path d=\"M164.8 294.6h170.1v7.1H164.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M164.8 251.1h170.1v7.1H164.8z\"></path><path d=\"M164.8 272.4h170.1v7.1H164.8z\"></path><path d=\"M277.1 396.4H164.8c-7.8 0-14.2-6.4-14.2-14.2V127.1c0-7.8 6.4-14.2 14.2-14.2h85v113.4H349v75.9h28.3v-95.4l-107-122.2H164.8a42.6 42.6 0 0 0-42.5 42.5v255.1a42.6 42.6 0 0 0 42.5 42.5h112.3v-28.3zm1-259.9l53.8 61.5h-53.8v-61.5z\"></path><path d=\"M339.8 398.1c-13.8 0-26.2-6-34.7-15.5v69.8l34.7-27.5 34.7 27.5v-69.8a46.4 46.4 0 0 1-34.7 15.5z\"></path><path d=\"M339.8 385.1a33.7 33.7 0 1 0 0-67.4 33.7 33.7 0 0 0 0 67.4z\"></path><path d=\"M164.8 294.6h170.1v7.1H164.8z\"></path></svg>')}:host .liquid{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M123.2 260.1a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.2v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15.1-24-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3l-29.4 18.5a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18a52.3 52.3 0 0 0-46.3 4.9L76.4 256l15.1 24 31.7-19.9z\"></path><path d=\"M417.4 307.7l-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3l-29.4 18.5a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18A52.3 52.3 0 0 0 108 315l-31.7 19.9 15.1 24 31.7-19.9a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.3v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15-24.3z\"></path><path d=\"M123.2 181.2a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.2v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15.1-24-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3L230.1 174a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18a52.3 52.3 0 0 0-46.3 4.9L76.3 177l15.1 24 31.8-19.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M123.2 260.1a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.2v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15.1-24-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3l-29.4 18.5a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18a52.3 52.3 0 0 0-46.3 4.9L76.4 256l15.1 24 31.7-19.9z\"></path><path d=\"M417.4 307.7l-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3l-29.4 18.5a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18A52.3 52.3 0 0 0 108 315l-31.7 19.9 15.1 24 31.7-19.9a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.3v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15-24.3z\"></path><path d=\"M123.2 181.2a24.2 24.2 0 0 1 21.4-2.3l10.5 3.9v.1l48.3 17.9a52.2 52.2 0 0 0 39.5-1.2v.1l.4-.2c2.2-1 4.3-2.1 6.4-3.4l29.2-18.4a24.5 24.5 0 0 1 17.1-.2l10.2 3.8v.1l21.3 7.8 16.8 6.2v-.1l10.2 3.8a53.1 53.1 0 0 0 46.3-5l31.7-20-15.1-24-31.7 20c-6.5 4.1-14.3 5-21.4 2.4l-27-9.9-31.5-11.7a52 52 0 0 0-39.5 1.3l-.1-.1-.6.4c-2.1 1-4.1 2.1-6.1 3.3L230.1 174a23.7 23.7 0 0 1-17 .1l-10.4-3.9-48.4-18a52.3 52.3 0 0 0-46.3 4.9L76.3 177l15.1 24 31.8-19.8z\"></path></svg>')}:host .markets{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.6 79A177.4 177.4 0 0 0 75.4 256.2a177.4 177.4 0 0 0 240.2 165.6c-14-3-26.7-9.7-37-19.1a148 148 0 0 1-54-.3l-.3-.3-1.2-1.2-.6-.6-.9-1-.6-.7-.8-1-.7-.8-.8-1-.7-.9-.8-1-.7-.9-.8-1-.7-.9-.7-1.1-.6-1-.7-1.1-.6-1-.7-1.2-.6-1-.7-1.2a11 11 0 0 1-.6-1.1l-.7-1.3-.6-1.1-.7-1.3-.6-1.1-.7-1.4-.5-1-.8-1.6-.5-1-1.1-2.3-.2-.4-1.4-3.2-.4-.9-1-2.4-.4-1-.9-2.4-.4-1-1-2.6-.3-.7-1.1-3.2-.1-.2c-1.2-3.7-2.4-7.4-3.5-11.3H224a67.3 67.3 0 0 1-5.9-7.1H191c-1.8-7-3.3-14.3-4.6-21.8v-.2c-.8-4.5-1.4-9.1-2-13.7v-.1l-.5-4.4-.1-.5-.4-4.2v-.3l-.7-9.5v-.1l-.3-4.4v-.8l-.2-4v-.7l-.2-9.6h25c.8-2.4 1.8-4.8 2.9-7.1H182c.3-26.5 3.4-51.9 9.1-74.4H314a293 293 0 0 1 6.7 36.8c2.6 1.4 5.2 2.9 7.6 4.6a321.7 321.7 0 0 0-7-41.4h58a148.7 148.7 0 0 1 22.1 74.4h-44.9c1.1 2.3 2 4.7 2.9 7.1h42.1c-.3 11.8-1.9 23.2-4.8 34.1a80.3 80.3 0 0 1 16 38.4c11-23 17.2-48.8 17.2-76A177.6 177.6 0 0 0 252.6 79zM125.9 334.1a148.7 148.7 0 0 1-22.1-74.4H175l.2 9.7v.5l.2 4.1v.8l.2 3.9v.7a312.2 312.2 0 0 0 1.3 14.6l.4 3.8.1.9.5 3.6.1.8.6 4.2v.2l1.4 8.8.1.8.6 3.4.2 1 .7 3.3.2.9.8 3.8.1.3 1 4.2h-57.8zm4.6 7.1h55.1l1.1 4 .2.8 1 3.2.3.9 1.1 3.3.2.5 2.7 7.5.4 1 1 2.6.5 1.1 1 2.5.4 1 1.5 3.4 1.6 3.5.5.9 1.3 2.6.4.9 3.6 6.6.1.2 1.8 3 .2.3c2 3.1 4.1 6.1 6.2 8.8a151 151 0 0 1-82.2-58.6zm44.5-88.5h-71.2c.6-27.2 8.6-52.7 22.1-74.4h58c-5.6 22.6-8.7 48-8.9 74.4zm10.7-81.5h-55.2c19.6-28 48.5-49 82.2-58.4-5.7 7.3-11 16.2-15.8 26.7-4.3 9.6-8.1 20.3-11.2 31.7zm7.3 0c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151.9 151.9 0 0 1 56 0c7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H193zm126.5 0c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4h-55.1z\"></path><path d=\"M349 278.7a66.4 66.4 0 0 0-132.1 7.7 66.6 66.6 0 0 0 49.9 64.3 66.4 66.4 0 1 0 82.2-72zm-104.1 7.7a38.4 38.4 0 1 1 76.7.1 38.4 38.4 0 0 1-76.7-.1zm87.8 94.9a38.3 38.3 0 0 1-37.3-29.7 66.5 66.5 0 0 0 50.8-44.5 38.4 38.4 0 0 1-13.5 74.2z\"></path><path d=\"M282.7 307.5c-6.8 0-10.3-3.1-10.3-10.2h6.1c0 3.1.9 5.7 4.4 5.7 4.3 0 4.7-4.2 4.7-10.3 0-3.4-.3-8.2-4.5-8.2-2.5 0-4.1 1.7-4.5 4.1h-5.9l.8-23.2h19.2v4.6h-13.4l-.6 13.1c1.9-1.9 3.4-2.9 6.5-2.9 7.5 0 8.7 5.9 8.7 12.5.1 8.5-1.5 14.8-11.2 14.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M252.6 79A177.4 177.4 0 0 0 75.4 256.2a177.4 177.4 0 0 0 240.2 165.6c-14-3-26.7-9.7-37-19.1a148 148 0 0 1-54-.3l-.3-.3-1.2-1.2-.6-.6-.9-1-.6-.7-.8-1-.7-.8-.8-1-.7-.9-.8-1-.7-.9-.8-1-.7-.9-.7-1.1-.6-1-.7-1.1-.6-1-.7-1.2-.6-1-.7-1.2a11 11 0 0 1-.6-1.1l-.7-1.3-.6-1.1-.7-1.3-.6-1.1-.7-1.4-.5-1-.8-1.6-.5-1-1.1-2.3-.2-.4-1.4-3.2-.4-.9-1-2.4-.4-1-.9-2.4-.4-1-1-2.6-.3-.7-1.1-3.2-.1-.2c-1.2-3.7-2.4-7.4-3.5-11.3H224a67.3 67.3 0 0 1-5.9-7.1H191c-1.8-7-3.3-14.3-4.6-21.8v-.2c-.8-4.5-1.4-9.1-2-13.7v-.1l-.5-4.4-.1-.5-.4-4.2v-.3l-.7-9.5v-.1l-.3-4.4v-.8l-.2-4v-.7l-.2-9.6h25c.8-2.4 1.8-4.8 2.9-7.1H182c.3-26.5 3.4-51.9 9.1-74.4H314a293 293 0 0 1 6.7 36.8c2.6 1.4 5.2 2.9 7.6 4.6a321.7 321.7 0 0 0-7-41.4h58a148.7 148.7 0 0 1 22.1 74.4h-44.9c1.1 2.3 2 4.7 2.9 7.1h42.1c-.3 11.8-1.9 23.2-4.8 34.1a80.3 80.3 0 0 1 16 38.4c11-23 17.2-48.8 17.2-76A177.6 177.6 0 0 0 252.6 79zM125.9 334.1a148.7 148.7 0 0 1-22.1-74.4H175l.2 9.7v.5l.2 4.1v.8l.2 3.9v.7a312.2 312.2 0 0 0 1.3 14.6l.4 3.8.1.9.5 3.6.1.8.6 4.2v.2l1.4 8.8.1.8.6 3.4.2 1 .7 3.3.2.9.8 3.8.1.3 1 4.2h-57.8zm4.6 7.1h55.1l1.1 4 .2.8 1 3.2.3.9 1.1 3.3.2.5 2.7 7.5.4 1 1 2.6.5 1.1 1 2.5.4 1 1.5 3.4 1.6 3.5.5.9 1.3 2.6.4.9 3.6 6.6.1.2 1.8 3 .2.3c2 3.1 4.1 6.1 6.2 8.8a151 151 0 0 1-82.2-58.6zm44.5-88.5h-71.2c.6-27.2 8.6-52.7 22.1-74.4h58c-5.6 22.6-8.7 48-8.9 74.4zm10.7-81.5h-55.2c19.6-28 48.5-49 82.2-58.4-5.7 7.3-11 16.2-15.8 26.7-4.3 9.6-8.1 20.3-11.2 31.7zm7.3 0c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151.9 151.9 0 0 1 56 0c7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H193zm126.5 0c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4h-55.1z\"></path><path d=\"M349 278.7a66.4 66.4 0 0 0-132.1 7.7 66.6 66.6 0 0 0 49.9 64.3 66.4 66.4 0 1 0 82.2-72zm-104.1 7.7a38.4 38.4 0 1 1 76.7.1 38.4 38.4 0 0 1-76.7-.1zm87.8 94.9a38.3 38.3 0 0 1-37.3-29.7 66.5 66.5 0 0 0 50.8-44.5 38.4 38.4 0 0 1-13.5 74.2z\"></path><path d=\"M282.7 307.5c-6.8 0-10.3-3.1-10.3-10.2h6.1c0 3.1.9 5.7 4.4 5.7 4.3 0 4.7-4.2 4.7-10.3 0-3.4-.3-8.2-4.5-8.2-2.5 0-4.1 1.7-4.5 4.1h-5.9l.8-23.2h19.2v4.6h-13.4l-.6 13.1c1.9-1.9 3.4-2.9 6.5-2.9 7.5 0 8.7 5.9 8.7 12.5.1 8.5-1.5 14.8-11.2 14.8z\"></path></svg>')}:host .visibility{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281 242.2s0-.1 0 0a25.2 25.2 0 0 0-50.4 0v25.2a25.2 25.2 0 0 0 50.4 0v-25.2z\"></path><path d=\"M427.7 252.6c-.4-2.9-1.8-5.6-4-7.9a353 353 0 0 0-26-23.7l21.8-32.1-23.4-15.9-21.1 31c-12.4-8.4-25-15.5-37.6-21.2l13.1-35.1-26.6-9.9-13 35.2c-13.5-4-27.1-6.6-40.9-7.6v-36.7h-28.3v36.6c-14.6 1-28.5 3.7-41.4 7.4l-13-34.8-26.6 9.9 12.8 34.4a249.8 249.8 0 0 0-38.3 20.6L115 173.1 91.6 189l20.7 30.4c-17 13.7-26.8 24.9-27.9 26.1-3.4 3.9-4.2 9-2.8 13.6.4 2.9 1.8 5.6 4 7.8 53.1 53.1 109.8 80 168.4 80l6.9-.1c96.1-3.4 161.3-77.5 164-80.6a14 14 0 0 0 2.8-13.6zm-168.1 65.9c-49.8 1.7-98.6-19.5-145.2-63.2 19.3-18.4 69.7-59.8 135.1-62.1 49.8-1.8 98.7 19.5 145.5 63.1-19.5 18.5-70.1 60-135.4 62.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281 242.2s0-.1 0 0a25.2 25.2 0 0 0-50.4 0v25.2a25.2 25.2 0 0 0 50.4 0v-25.2z\"></path><path d=\"M427.7 252.6c-.4-2.9-1.8-5.6-4-7.9a353 353 0 0 0-26-23.7l21.8-32.1-23.4-15.9-21.1 31c-12.4-8.4-25-15.5-37.6-21.2l13.1-35.1-26.6-9.9-13 35.2c-13.5-4-27.1-6.6-40.9-7.6v-36.7h-28.3v36.6c-14.6 1-28.5 3.7-41.4 7.4l-13-34.8-26.6 9.9 12.8 34.4a249.8 249.8 0 0 0-38.3 20.6L115 173.1 91.6 189l20.7 30.4c-17 13.7-26.8 24.9-27.9 26.1-3.4 3.9-4.2 9-2.8 13.6.4 2.9 1.8 5.6 4 7.8 53.1 53.1 109.8 80 168.4 80l6.9-.1c96.1-3.4 161.3-77.5 164-80.6a14 14 0 0 0 2.8-13.6zm-168.1 65.9c-49.8 1.7-98.6-19.5-145.2-63.2 19.3-18.4 69.7-59.8 135.1-62.1 49.8-1.8 98.7 19.5 145.5 63.1-19.5 18.5-70.1 60-135.4 62.2z\"></path></svg>')}:host .laptop-outline{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M134.6 177.2c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6h28.3V177.2a35.5 35.5 0 0 0-35.4-35.4H141.7a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V177.2z\"></path><path d=\"M425.2 326H85v28.3h340.2V326zm-127.6 17.7h-85v-7.1h85v7.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M134.6 177.2c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6h28.3V177.2a35.5 35.5 0 0 0-35.4-35.4H141.7a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V177.2z\"></path><path d=\"M425.2 326H85v28.3h340.2V326zm-127.6 17.7h-85v-7.1h85v7.1z\"></path></svg>')}:host .relaxing{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M259 287.5l-29.7-7.9a56.8 56.8 0 0 0-30.6.3l-1.3.4-110.2 56.5 12.9 25.2 107.6-55.3c4.7-1.1 9.6-1.1 14.3.2l65.5 17.5V362h28.3v-32.4a55 55 0 0 0 48.4-34.8l61.1-139.3-26-11.4-39.5 90h-101l.2 53.4zm48.1 12.8l-19.7-5.3v-32.6h60.1l-9.2 21c-7.4 16.7-21 19.7-31.2 16.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M259 287.5l-29.7-7.9a56.8 56.8 0 0 0-30.6.3l-1.3.4-110.2 56.5 12.9 25.2 107.6-55.3c4.7-1.1 9.6-1.1 14.3.2l65.5 17.5V362h28.3v-32.4a55 55 0 0 0 48.4-34.8l61.1-139.3-26-11.4-39.5 90h-101l.2 53.4zm48.1 12.8l-19.7-5.3v-32.6h60.1l-9.2 21c-7.4 16.7-21 19.7-31.2 16.9z\"></path></svg>')}:host .lounge{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M410.5 190.1h-18.6v-61.9c0-7.8-6.3-14.2-14.2-14.2H136.4c-7.8 0-14.2 6.3-14.2 14.2v61.9h-21.8c-7.8 0-14.2 6.3-14.2 14.2V364c0 7.8 6.3 14.2 14.2 14.2h23.4c-.9 3.3-1.4 6.7-1.4 10.2v9.4h21v-9.4c0-3.8 1.3-7.4 3.5-10.2h228a17 17 0 0 1 3.5 10.2v9.4h21v-9.4c0-3.5-.5-7-1.4-10.2h12.7c7.8 0 14.2-6.3 14.2-14.2V204.3a14.6 14.6 0 0 0-14.4-14.2zm-259.9-47.7h213v47.7h-22.1c-7.8 0-14.2 6.3-14.2 14.2V270H189.6v-65.7c0-7.8-6.3-14.2-14.2-14.2h-24.9v-47.7zm-36 76.1h46.7v65.7c0 7.8 6.3 14.2 14.2 14.2h166c7.8 0 14.2-6.3 14.2-14.2v-65.7h40.7v131.4H114.6V218.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M410.5 190.1h-18.6v-61.9c0-7.8-6.3-14.2-14.2-14.2H136.4c-7.8 0-14.2 6.3-14.2 14.2v61.9h-21.8c-7.8 0-14.2 6.3-14.2 14.2V364c0 7.8 6.3 14.2 14.2 14.2h23.4c-.9 3.3-1.4 6.7-1.4 10.2v9.4h21v-9.4c0-3.8 1.3-7.4 3.5-10.2h228a17 17 0 0 1 3.5 10.2v9.4h21v-9.4c0-3.5-.5-7-1.4-10.2h12.7c7.8 0 14.2-6.3 14.2-14.2V204.3a14.6 14.6 0 0 0-14.4-14.2zm-259.9-47.7h213v47.7h-22.1c-7.8 0-14.2 6.3-14.2 14.2V270H189.6v-65.7c0-7.8-6.3-14.2-14.2-14.2h-24.9v-47.7zm-36 76.1h46.7v65.7c0 7.8 6.3 14.2 14.2 14.2h166c7.8 0 14.2-6.3 14.2-14.2v-65.7h40.7v131.4H114.6V218.5z\"></path></svg>')}:host .paninoteca{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M375.2 239.7l-66.9.1-110.9-.4h-.1l-61.4.7a38.3 38.3 0 0 1-29.6-13.5L84.7 245a66.5 66.5 0 0 0 51.4 23.4l61.2-.7 110.8.4 67-.1c11.4 0 22.1 5 29.5 13.8l21.7-18.2a66.2 66.2 0 0 0-51.1-23.9z\"></path><circle cx=\"222.9\" cy=\"194.1\" r=\"6.5\"></circle><circle cx=\"285.6\" cy=\"194.1\" r=\"6.5\"></circle><path d=\"M255.4 169c35.6 0 66.6 20 82.4 49.4H369c-17.7-45.4-61.9-77.8-113.5-77.8s-95.8 32.3-113.5 77.8h31.1a93.3 93.3 0 0 1 82.3-49.4z\"></path><path d=\"M352.1 318.4H156.8v-29.2h-28.3v43.3c0 7.8 6.3 14.2 14.2 14.2h223.6c7.8 0 14.2-6.3 14.2-14.2v-43.3h-28.3v29.2z\"></path><circle cx=\"255.2\" cy=\"212.8\" r=\"6.5\"></circle><circle cx=\"314.4\" cy=\"221.9\" r=\"6.5\"></circle><circle cx=\"195.4\" cy=\"221.9\" r=\"6.5\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M375.2 239.7l-66.9.1-110.9-.4h-.1l-61.4.7a38.3 38.3 0 0 1-29.6-13.5L84.7 245a66.5 66.5 0 0 0 51.4 23.4l61.2-.7 110.8.4 67-.1c11.4 0 22.1 5 29.5 13.8l21.7-18.2a66.2 66.2 0 0 0-51.1-23.9z\"></path><circle cx=\"222.9\" cy=\"194.1\" r=\"6.5\"></circle><circle cx=\"285.6\" cy=\"194.1\" r=\"6.5\"></circle><path d=\"M255.4 169c35.6 0 66.6 20 82.4 49.4H369c-17.7-45.4-61.9-77.8-113.5-77.8s-95.8 32.3-113.5 77.8h31.1a93.3 93.3 0 0 1 82.3-49.4z\"></path><path d=\"M352.1 318.4H156.8v-29.2h-28.3v43.3c0 7.8 6.3 14.2 14.2 14.2h223.6c7.8 0 14.2-6.3 14.2-14.2v-43.3h-28.3v29.2z\"></path><circle cx=\"255.2\" cy=\"212.8\" r=\"6.5\"></circle><circle cx=\"314.4\" cy=\"221.9\" r=\"6.5\"></circle><circle cx=\"195.4\" cy=\"221.9\" r=\"6.5\"></circle></svg>')}:host .cleaning{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M267.1 355l-.1-34.6.2-221.1a14.2 14.2 0 1 0-28.4 0l-.2 221.1.1 34.5h-84.8v69.8h28.3v-41.5h14.1v41.5h28.3v-41.5h14.1v41.5H267v-41.5h14.1v41.5h28.3v-41.5h13.8v41.5h28.3v-41.5h.1V355h-84.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M267.1 355l-.1-34.6.2-221.1a14.2 14.2 0 1 0-28.4 0l-.2 221.1.1 34.5h-84.8v69.8h28.3v-41.5h14.1v41.5h28.3v-41.5h14.1v41.5H267v-41.5h14.1v41.5h28.3v-41.5h13.8v41.5h28.3v-41.5h.1V355h-84.5z\"></path></svg>')}:host .ambulance{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 375.6h-21.3v-21.3h-28.3v21.3h-21.3v28.3h21.3v21.3h28.3v-21.3h21.3z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.2 375.6h-21.3v-21.3h-28.3v21.3h-21.3v28.3h21.3v21.3h28.3v-21.3h21.3z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path></svg>')}:host .bilateral{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M109.8 332.5c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.93 45.93 0 0 0 50.6 0l30.7 25.6c7.2 6.1 11.4 15 11.4 24.4v8.1h21.3v-8.1c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7c7.3 4.8 15.9 7.6 25.3 7.6s18-2.8 25.3-7.6l30.7 25.6c7.2 6.1 11.4 15 11.4 24.4v8.1H422v-8.1c0-15.8-6.9-30.6-19-40.7L373 267a46 46 0 0 0 6.2-23v-28.3a46.1 46.1 0 1 0-92.2-.1V244a46 46 0 0 0 6.2 23l-29.7 24.8c-3.2 2.6-5.9 5.6-8.4 8.8-2.4-3.2-5.2-6.2-8.4-8.8L217.1 267a46 46 0 0 0 6.2-23v-28.3c0-25.4-20.7-46.1-46.1-46.1s-46.1 20.7-46.1 46.1V244a46 46 0 0 0 6.2 23l-29.7 24.9c-12.1 10.1-19 25-19 40.7v8.1h21.3v-8.2zm198.5-116.9a24.8 24.8 0 1 1 49.6 0V244a24.8 24.8 0 1 1-49.6 0v-28.4zm-155.9 0a24.8 24.8 0 1 1 49.6 0V244a24.8 24.8 0 1 1-49.6 0v-28.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M109.8 332.5c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.93 45.93 0 0 0 50.6 0l30.7 25.6c7.2 6.1 11.4 15 11.4 24.4v8.1h21.3v-8.1c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7c7.3 4.8 15.9 7.6 25.3 7.6s18-2.8 25.3-7.6l30.7 25.6c7.2 6.1 11.4 15 11.4 24.4v8.1H422v-8.1c0-15.8-6.9-30.6-19-40.7L373 267a46 46 0 0 0 6.2-23v-28.3a46.1 46.1 0 1 0-92.2-.1V244a46 46 0 0 0 6.2 23l-29.7 24.8c-3.2 2.6-5.9 5.6-8.4 8.8-2.4-3.2-5.2-6.2-8.4-8.8L217.1 267a46 46 0 0 0 6.2-23v-28.3c0-25.4-20.7-46.1-46.1-46.1s-46.1 20.7-46.1 46.1V244a46 46 0 0 0 6.2 23l-29.7 24.9c-12.1 10.1-19 25-19 40.7v8.1h21.3v-8.2zm198.5-116.9a24.8 24.8 0 1 1 49.6 0V244a24.8 24.8 0 1 1-49.6 0v-28.4zm-155.9 0a24.8 24.8 0 1 1 49.6 0V244a24.8 24.8 0 1 1-49.6 0v-28.4z\"></path></svg>')}:host .focus{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.8 269.2H361v-28.3h-37a70.3 70.3 0 0 0-53.5-54.6V149H242v36.7a70.3 70.3 0 0 0-55.7 55.1h-36.6v28.3h36.7a70.3 70.3 0 0 0 55.6 54.4v37h28.3v-37.4a70.3 70.3 0 0 0 53.5-53.9zm-110.5-14.6a41.8 41.8 0 1 1 83.7 0 41.8 41.8 0 0 1-83.7 0z\"></path><path d=\"M113.9 113.9h97.8V85.5h-112c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.8z\"></path><path d=\"M396.2 298.1v97.8h-97.8v28.3h112c7.8 0 14.2-6.3 14.2-14.2V298h-28.4z\"></path><path d=\"M395.8 211.7h28.3v-112c0-7.8-6.3-14.2-14.2-14.2H298v28.3h97.8v97.9z\"></path><path d=\"M114 298.1H85.6v112c0 7.8 6.3 14.2 14.2 14.2h112V396H114v-97.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M323.8 269.2H361v-28.3h-37a70.3 70.3 0 0 0-53.5-54.6V149H242v36.7a70.3 70.3 0 0 0-55.7 55.1h-36.6v28.3h36.7a70.3 70.3 0 0 0 55.6 54.4v37h28.3v-37.4a70.3 70.3 0 0 0 53.5-53.9zm-110.5-14.6a41.8 41.8 0 1 1 83.7 0 41.8 41.8 0 0 1-83.7 0z\"></path><path d=\"M113.9 113.9h97.8V85.5h-112c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.8z\"></path><path d=\"M396.2 298.1v97.8h-97.8v28.3h112c7.8 0 14.2-6.3 14.2-14.2V298h-28.4z\"></path><path d=\"M395.8 211.7h28.3v-112c0-7.8-6.3-14.2-14.2-14.2H298v28.3h97.8v97.9z\"></path><path d=\"M114 298.1H85.6v112c0 7.8 6.3 14.2 14.2 14.2h112V396H114v-97.9z\"></path></svg>')}:host .navigation{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.5 255.2A170 170 0 0 0 255.7 85.9h-.6A169.9 169.9 0 0 0 86 255.2v.6A169.9 169.9 0 0 0 255.7 425h.6a170 170 0 0 0 169.2-169.3v-.3-.2zM256.1 396.7h-.3a141.5 141.5 0 0 1-141.4-141.2c.1-77.8 63.4-141 141.1-141.2h.3c77.9 0 141.3 63.3 141.4 141.2-.1 77.7-63.4 141-141.1 141.2z\"></path><path d=\"M310.2 182.6c-25.5 9.3-51 18.7-74.8 32A52.6 52.6 0 0 0 224 223l-.7.7-.5.6a43 43 0 0 0-6.2 8.2c-4.7 8-8.9 16.6-12.1 25.3-9.6 26.1-18.6 52.5-27.8 78.8l1.7 1.1 23.2-8.3c25.5-9.3 51-18.7 74.8-32 4.4-2.4 8.2-5.3 11.4-8.4l.7-.7.5-.6a43 43 0 0 0 6.2-8.2c4.7-8 8.9-16.6 12.1-25.3 9.6-26.1 18.6-52.5 27.8-78.8l-1.7-1.1c-7.7 2.7-15.5 5.4-23.2 8.3zm-29.9 97.2a34.1 34.1 0 1 1-48.7-47.8 34.1 34.1 0 0 1 48.7 47.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.5 255.2A170 170 0 0 0 255.7 85.9h-.6A169.9 169.9 0 0 0 86 255.2v.6A169.9 169.9 0 0 0 255.7 425h.6a170 170 0 0 0 169.2-169.3v-.3-.2zM256.1 396.7h-.3a141.5 141.5 0 0 1-141.4-141.2c.1-77.8 63.4-141 141.1-141.2h.3c77.9 0 141.3 63.3 141.4 141.2-.1 77.7-63.4 141-141.1 141.2z\"></path><path d=\"M310.2 182.6c-25.5 9.3-51 18.7-74.8 32A52.6 52.6 0 0 0 224 223l-.7.7-.5.6a43 43 0 0 0-6.2 8.2c-4.7 8-8.9 16.6-12.1 25.3-9.6 26.1-18.6 52.5-27.8 78.8l1.7 1.1 23.2-8.3c25.5-9.3 51-18.7 74.8-32 4.4-2.4 8.2-5.3 11.4-8.4l.7-.7.5-.6a43 43 0 0 0 6.2-8.2c4.7-8 8.9-16.6 12.1-25.3 9.6-26.1 18.6-52.5 27.8-78.8l-1.7-1.1c-7.7 2.7-15.5 5.4-23.2 8.3zm-29.9 97.2a34.1 34.1 0 1 1-48.7-47.8 34.1 34.1 0 0 1 48.7 47.8z\"></path></svg>')}:host .headphones{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.2 342.7L363.7 308 338 286.6l-18.1 21.8 25.9 21.7 41.2 34.4a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.4 163a85 85 0 0 0-170 0v56.7h.1a92 92 0 0 0 18.7 53.2l-10.9 9.1-31.2 26-41.5 34.7a56.5 56.5 0 0 0-20.3 43.4v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 33.9-28.4 11.4-9.5a85 85 0 0 0 129.9-72.2V163zm-28.3 56.7a56.7 56.7 0 0 1-56.7 56.7c-30.3 0-55.1-26.6-56.6-56.7l-.1-2.8V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path><path d=\"M393.1 179h7.1v35.4h-7.1z\"></path><path d=\"M156.8 171.7H153v-7.1c0-56.4 46-104 102.4-104.1 56.1 0 101.8 48.3 102.2 104.3v7.1h-3.7v49.6h28.3v-49.6h-17.5v-6.3c0-60.3-49-112.1-109.3-112.2-60.3 0-109.4 50.9-109.4 111.2v7.1h-17.4v49.6h28.3v-49.6z\"></path><path d=\"M111.2 178.8h7.1v35.4h-7.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M405.2 342.7L363.7 308 338 286.6l-18.1 21.8 25.9 21.7 41.2 34.4a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M340.4 163a85 85 0 0 0-170 0v56.7h.1a92 92 0 0 0 18.7 53.2l-10.9 9.1-31.2 26-41.5 34.7a56.5 56.5 0 0 0-20.3 43.4v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 33.9-28.4 11.4-9.5a85 85 0 0 0 129.9-72.2V163zm-28.3 56.7a56.7 56.7 0 0 1-56.7 56.7c-30.3 0-55.1-26.6-56.6-56.7l-.1-2.8V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path><path d=\"M393.1 179h7.1v35.4h-7.1z\"></path><path d=\"M156.8 171.7H153v-7.1c0-56.4 46-104 102.4-104.1 56.1 0 101.8 48.3 102.2 104.3v7.1h-3.7v49.6h28.3v-49.6h-17.5v-6.3c0-60.3-49-112.1-109.3-112.2-60.3 0-109.4 50.9-109.4 111.2v7.1h-17.4v49.6h28.3v-49.6z\"></path><path d=\"M111.2 178.8h7.1v35.4h-7.1z\"></path></svg>')}:host .anchor{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.3 335.9l-36.5 43.6a47.5 47.5 0 0 1-36.6 17.1H269l1.3-125.8H319v-28.3h-48.4l.7-67.9a46.4 46.4 0 1 0-60.3-44.1c0 20.5 13.5 38 32 44l-.7 68h-49.6v28.3H242l-1.3 126-60 .3h-.2a47.6 47.6 0 0 1-36.5-17l-36.7-43.4L85.7 355l36.7 43.4a75.9 75.9 0 0 0 58.2 27h.3l78.9-.4v-.2h70.5c22.6 0 43.8-10 58.3-27.3l36.5-43.6-21.8-18zM257.2 112.5c9.9 0 18 8.1 18 18s-8.1 18-18 18-18-8.1-18-18 8.1-18 18-18z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M403.3 335.9l-36.5 43.6a47.5 47.5 0 0 1-36.6 17.1H269l1.3-125.8H319v-28.3h-48.4l.7-67.9a46.4 46.4 0 1 0-60.3-44.1c0 20.5 13.5 38 32 44l-.7 68h-49.6v28.3H242l-1.3 126-60 .3h-.2a47.6 47.6 0 0 1-36.5-17l-36.7-43.4L85.7 355l36.7 43.4a75.9 75.9 0 0 0 58.2 27h.3l78.9-.4v-.2h70.5c22.6 0 43.8-10 58.3-27.3l36.5-43.6-21.8-18zM257.2 112.5c9.9 0 18 8.1 18 18s-8.1 18-18 18-18-8.1-18-18 8.1-18 18-18z\"></path></svg>')}:host .server{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"361.4\" cy=\"347.2\" r=\"14.2\"></circle><circle cx=\"361.4\" cy=\"163\" r=\"14.2\"></circle><path d=\"M301.1 240.9h95.8a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3H113.4A28.4 28.4 0 0 0 85 113.4v99.2a28.3 28.3 0 0 0 28.3 28.3H218l9.4-8.9 20.6-19.5H113.4v-99.2h283.5v99.2h-95.8l-5.3.2a55.8 55.8 0 0 0-34.8 16.4l-11.7 11.7-20 20a28 28 0 0 1-20 8.3H113.5A28.7 28.7 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3H261l20-20a28.2 28.2 0 0 1 20.1-8.4zm-17.6 56.7H396.9v99.2H113.4v-99.2H283.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"361.4\" cy=\"347.2\" r=\"14.2\"></circle><circle cx=\"361.4\" cy=\"163\" r=\"14.2\"></circle><path d=\"M301.1 240.9h95.8a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3H113.4A28.4 28.4 0 0 0 85 113.4v99.2a28.3 28.3 0 0 0 28.3 28.3H218l9.4-8.9 20.6-19.5H113.4v-99.2h283.5v99.2h-95.8l-5.3.2a55.8 55.8 0 0 0-34.8 16.4l-11.7 11.7-20 20a28 28 0 0 1-20 8.3H113.5A28.7 28.7 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3H261l20-20a28.2 28.2 0 0 1 20.1-8.4zm-17.6 56.7H396.9v99.2H113.4v-99.2H283.5z\"></path></svg>')}:host .stairs{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326.9 220.5V113.9h97.8V85.5h-112c-7.8 0-14.2 6.3-14.2 14.2v92.4h-92.2c-7.8 0-14.2 6.3-14.2 14.2v92.5H99.7c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.8h106.6V220.5h106.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326.9 220.5V113.9h97.8V85.5h-112c-7.8 0-14.2 6.3-14.2 14.2v92.4h-92.2c-7.8 0-14.2 6.3-14.2 14.2v92.5H99.7c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.8h106.6V220.5h106.5z\"></path></svg>')}:host .beacon{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"255.3\" cy=\"254.6\" r=\"22.7\"></circle><path d=\"M211.7 254.6c0-24.1 19.6-43.6 43.6-43.6s43.6 19.6 43.6 43.6c0 19.1-12.3 35.3-29.3 41.2V324c32.2-6.6 56.6-35.2 56.6-69.4 0-39.1-31.8-70.9-70.9-70.9s-70.9 31.8-70.9 70.9c0 34.3 24.4 62.9 56.8 69.5v-28.2a43.63 43.63 0 0 1-29.5-41.3z\"></path><path d=\"M162.7 254.6c0-51.1 41.6-92.7 92.7-92.7s92.7 41.6 92.7 92.7c0 46.2-34 84.7-78.4 91.6v28.1c59.7-7.1 106.2-58 106.2-119.6 0-66.4-54-120.5-120.5-120.5-66.4 0-120.5 54-120.5 120.5 0 61.7 46.6 112.7 106.4 119.6v-28a92.8 92.8 0 0 1-78.6-91.7z\"></path><path d=\"M255.3 84.6c-93.8 0-170.1 76.3-170.1 170.1 0 89 68.8 162.3 156 169.5v-28.4c-71.6-7.1-127.7-67.6-127.7-141.1 0-78.2 63.6-141.8 141.8-141.8 78.2 0 141.8 63.6 141.8 141.8 0 73.4-56 133.9-127.5 141.1v28.4c87.1-7.3 155.8-80.5 155.8-169.5 0-93.8-76.3-170.1-170.1-170.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"255.3\" cy=\"254.6\" r=\"22.7\"></circle><path d=\"M211.7 254.6c0-24.1 19.6-43.6 43.6-43.6s43.6 19.6 43.6 43.6c0 19.1-12.3 35.3-29.3 41.2V324c32.2-6.6 56.6-35.2 56.6-69.4 0-39.1-31.8-70.9-70.9-70.9s-70.9 31.8-70.9 70.9c0 34.3 24.4 62.9 56.8 69.5v-28.2a43.63 43.63 0 0 1-29.5-41.3z\"></path><path d=\"M162.7 254.6c0-51.1 41.6-92.7 92.7-92.7s92.7 41.6 92.7 92.7c0 46.2-34 84.7-78.4 91.6v28.1c59.7-7.1 106.2-58 106.2-119.6 0-66.4-54-120.5-120.5-120.5-66.4 0-120.5 54-120.5 120.5 0 61.7 46.6 112.7 106.4 119.6v-28a92.8 92.8 0 0 1-78.6-91.7z\"></path><path d=\"M255.3 84.6c-93.8 0-170.1 76.3-170.1 170.1 0 89 68.8 162.3 156 169.5v-28.4c-71.6-7.1-127.7-67.6-127.7-141.1 0-78.2 63.6-141.8 141.8-141.8 78.2 0 141.8 63.6 141.8 141.8 0 73.4-56 133.9-127.5 141.1v28.4c87.1-7.3 155.8-80.5 155.8-169.5 0-93.8-76.3-170.1-170.1-170.1z\"></path></svg>')}:host .coupon{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.6 186.9V178a28.3 28.3 0 0 0-28.3-28.3H113.8A28.3 28.3 0 0 0 85.5 178v8.9c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1v16.5h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1l.1.6v14.9l-.1.9h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1v8.9a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-8.9a15.2 15.2 0 0 1 0-30.2v-16.5a15.2 15.2 0 0 1 0-30.2V217a15 15 0 1 1 0-30.1zM113.8 319.8V178h283.5v141.7l-283.5.1z\"></path><circle cx=\"329.9\" cy=\"194.7\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"216.4\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"238.1\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"259.7\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"281.4\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"303.1\" r=\"5.1\"></circle><path d=\"M193.9 244.6a32 32 0 0 0 5.1-19.1c0-7.8-1.6-14-4.9-18.6-3.8-5.2-9.5-7.7-17.1-7.7-7.7 0-13.6 2.6-17.5 7.7a30 30 0 0 0-5.2 18.8c0 7.8 1.7 14.1 5.1 18.8a20 20 0 0 0 17.2 8.1c7.7.1 13.5-2.6 17.3-8zm-17.3-1.7c-5.8 0-8.7-5.3-8.7-15.9 0-12 3-18 8.9-18 5.6 0 8.4 5.7 8.4 17.2 0 11.1-2.9 16.7-8.6 16.7z\"></path><path d=\"M234 197.3l-54.9 104.3h12.3L246 197.3z\"></path><path d=\"M249.3 245.5c-7.7 0-13.6 2.6-17.5 7.7a30 30 0 0 0-5.2 18.8c0 7.9 1.7 14.2 5.1 19 3.9 5.3 9.7 7.9 17.4 7.9 7.7 0 13.5-2.7 17.4-8a32.8 32.8 0 0 0 4.9-19.1c0-7.8-1.6-14-4.9-18.6-3.9-5.1-9.6-7.7-17.2-7.7zm-.3 43.7c-5.9 0-8.8-5.3-8.8-15.9 0-12 3-18 9.1-18 5.6 0 8.4 5.7 8.4 17.2 0 11.1-2.9 16.7-8.7 16.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.6 186.9V178a28.3 28.3 0 0 0-28.3-28.3H113.8A28.3 28.3 0 0 0 85.5 178v8.9c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1v16.5h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1h-.1l.1.6v14.9l-.1.9h.1c7.8.6 14.1 7.1 14.1 15.1s-6.2 14.5-14.1 15.1v8.9a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-8.9a15.2 15.2 0 0 1 0-30.2v-16.5a15.2 15.2 0 0 1 0-30.2V217a15 15 0 1 1 0-30.1zM113.8 319.8V178h283.5v141.7l-283.5.1z\"></path><circle cx=\"329.9\" cy=\"194.7\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"216.4\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"238.1\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"259.7\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"281.4\" r=\"5.1\"></circle><circle cx=\"329.9\" cy=\"303.1\" r=\"5.1\"></circle><path d=\"M193.9 244.6a32 32 0 0 0 5.1-19.1c0-7.8-1.6-14-4.9-18.6-3.8-5.2-9.5-7.7-17.1-7.7-7.7 0-13.6 2.6-17.5 7.7a30 30 0 0 0-5.2 18.8c0 7.8 1.7 14.1 5.1 18.8a20 20 0 0 0 17.2 8.1c7.7.1 13.5-2.6 17.3-8zm-17.3-1.7c-5.8 0-8.7-5.3-8.7-15.9 0-12 3-18 8.9-18 5.6 0 8.4 5.7 8.4 17.2 0 11.1-2.9 16.7-8.6 16.7z\"></path><path d=\"M234 197.3l-54.9 104.3h12.3L246 197.3z\"></path><path d=\"M249.3 245.5c-7.7 0-13.6 2.6-17.5 7.7a30 30 0 0 0-5.2 18.8c0 7.9 1.7 14.2 5.1 19 3.9 5.3 9.7 7.9 17.4 7.9 7.7 0 13.5-2.7 17.4-8a32.8 32.8 0 0 0 4.9-19.1c0-7.8-1.6-14-4.9-18.6-3.9-5.1-9.6-7.7-17.2-7.7zm-.3 43.7c-5.9 0-8.8-5.3-8.8-15.9 0-12 3-18 9.1-18 5.6 0 8.4 5.7 8.4 17.2 0 11.1-2.9 16.7-8.7 16.7z\"></path></svg>')}:host .qr{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M395.9 211.2h28.3v-112c0-7.8-6.3-14.2-14.2-14.2H298v28.3h97.8v97.9z\"></path><path d=\"M113.9 113.4h97.8V85.1h-112c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.9z\"></path><path d=\"M396.2 297.6v97.8h-97.8v28.3h112c7.8 0 14.2-6.3 14.2-14.2v-112h-28.4z\"></path><path d=\"M114 297.6H85.7v112c0 7.8 6.3 14.2 14.2 14.2h112v-28.3H114v-97.9z\"></path><path d=\"M141.7 240.6h99.2v-99.2h-99.2v99.2zm28.4-70.8h42.5v42.5h-42.5v-42.5z\"></path><path d=\"M182 181.7h18.7v18.7H182z\"></path><path d=\"M141.7 367.8h99.2v-99.2h-99.2v99.2zm28.4-70.8h42.5v42.5h-42.5V297z\"></path><path d=\"M182 308.9h18.7v18.7H182z\"></path><path d=\"M368.6 268.6h-99.2v99.2h99.2v-99.2zm-28.3 70.9h-42.5V297h42.5v42.5z\"></path><path d=\"M309.7 308.9h18.7v18.7h-18.7z\"></path><path d=\"M368.6 141.1h-99.2v99.2h99.2v-99.2zm-28.3 70.8h-42.5v-42.5h42.5v42.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M395.9 211.2h28.3v-112c0-7.8-6.3-14.2-14.2-14.2H298v28.3h97.8v97.9z\"></path><path d=\"M113.9 113.4h97.8V85.1h-112c-7.8 0-14.2 6.3-14.2 14.2v112h28.3v-97.9z\"></path><path d=\"M396.2 297.6v97.8h-97.8v28.3h112c7.8 0 14.2-6.3 14.2-14.2v-112h-28.4z\"></path><path d=\"M114 297.6H85.7v112c0 7.8 6.3 14.2 14.2 14.2h112v-28.3H114v-97.9z\"></path><path d=\"M141.7 240.6h99.2v-99.2h-99.2v99.2zm28.4-70.8h42.5v42.5h-42.5v-42.5z\"></path><path d=\"M182 181.7h18.7v18.7H182z\"></path><path d=\"M141.7 367.8h99.2v-99.2h-99.2v99.2zm28.4-70.8h42.5v42.5h-42.5V297z\"></path><path d=\"M182 308.9h18.7v18.7H182z\"></path><path d=\"M368.6 268.6h-99.2v99.2h99.2v-99.2zm-28.3 70.9h-42.5V297h42.5v42.5z\"></path><path d=\"M309.7 308.9h18.7v18.7h-18.7z\"></path><path d=\"M368.6 141.1h-99.2v99.2h99.2v-99.2zm-28.3 70.8h-42.5v-42.5h42.5v42.5z\"></path></svg>')}:host .shop{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142 233.7V371c0 14 10.8 25.3 24 25.3h178.2c13.3 0 24-11.4 24-25.3V233.5a47 47 0 0 0 31.8-44.4l-.1-7.2.1-39.9v-28.3H109.6v10.2l-.2 65.3a47 47 0 0 0 32.6 44.5zm192.6-91.8h37.2l-.1 47v1.7a18.6 18.6 0 0 1-37.1-1.6v-47.1zm-65.6 0h37.3l-.1 47v.4a18.6 18.6 0 0 1-37.2-.4h-.1l.1-47zm-65.7 47.5l.2-47.5h37.1l-.1 47.1h-.1a18.6 18.6 0 0 1-37.1.4zm18.6 46.6c12.8 0 24.4-5.1 32.9-13.5a47 47 0 0 0 65.6.1 46.8 46.8 0 0 0 19.6 11.5v134H226.7v-61.3h-28.3V368h-28V233.8a47.4 47.4 0 0 0 18.8-11.2 46.3 46.3 0 0 0 32.7 13.4zm-84-94.1h37.4L175 189a18.6 18.6 0 1 1-37.2 0l.1-47.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142 233.7V371c0 14 10.8 25.3 24 25.3h178.2c13.3 0 24-11.4 24-25.3V233.5a47 47 0 0 0 31.8-44.4l-.1-7.2.1-39.9v-28.3H109.6v10.2l-.2 65.3a47 47 0 0 0 32.6 44.5zm192.6-91.8h37.2l-.1 47v1.7a18.6 18.6 0 0 1-37.1-1.6v-47.1zm-65.6 0h37.3l-.1 47v.4a18.6 18.6 0 0 1-37.2-.4h-.1l.1-47zm-65.7 47.5l.2-47.5h37.1l-.1 47.1h-.1a18.6 18.6 0 0 1-37.1.4zm18.6 46.6c12.8 0 24.4-5.1 32.9-13.5a47 47 0 0 0 65.6.1 46.8 46.8 0 0 0 19.6 11.5v134H226.7v-61.3h-28.3V368h-28V233.8a47.4 47.4 0 0 0 18.8-11.2 46.3 46.3 0 0 0 32.7 13.4zm-84-94.1h37.4L175 189a18.6 18.6 0 1 1-37.2 0l.1-47.1z\"></path></svg>')}:host .sound{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M162.8 340.2h82.4l67.4 75.7.6.5c.9.9 1.9 1.6 3.1 2.3l.3.2c5.5 3.3 11.7 5 17.9 5a35.3 35.3 0 0 0 35.1-35.5V120.9a35.3 35.3 0 0 0-35.1-35.4 34.7 34.7 0 0 0-20.9 7.2l-.7.6-67.5 76.3h-82.6a21 21 0 0 0-20.9 20.9v128.9a21 21 0 0 0 20.9 20.8zm7.4-142.4h87.9l74-83.5a6 6 0 0 1 2.3-.5 7 7 0 0 1 6.8 7.1v267.5a7 7 0 0 1-6.8 7.1 8 8 0 0 1-2.5-.5l-74.1-83.1h-87.7V197.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M162.8 340.2h82.4l67.4 75.7.6.5c.9.9 1.9 1.6 3.1 2.3l.3.2c5.5 3.3 11.7 5 17.9 5a35.3 35.3 0 0 0 35.1-35.5V120.9a35.3 35.3 0 0 0-35.1-35.4 34.7 34.7 0 0 0-20.9 7.2l-.7.6-67.5 76.3h-82.6a21 21 0 0 0-20.9 20.9v128.9a21 21 0 0 0 20.9 20.8zm7.4-142.4h87.9l74-83.5a6 6 0 0 1 2.3-.5 7 7 0 0 1 6.8 7.1v267.5a7 7 0 0 1-6.8 7.1 8 8 0 0 1-2.5-.5l-74.1-83.1h-87.7V197.8z\"></path></svg>')}:host .unlock{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M156.2 426.2h198.4a42.6 42.6 0 0 0 42.5-42.5V241.9a42.6 42.6 0 0 0-42.5-42.5H198.7V164a56.7 56.7 0 0 1 113.4 0h28.3a85 85 0 0 0-170 0v35.4h-14.2a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.6zM142 241.9c0-7.8 6.4-14.2 14.2-14.2h198.4c7.8 0 14.2 6.4 14.2 14.2v141.7c0 7.8-6.4 14.2-14.2 14.2H156.2c-7.8 0-14.2-6.4-14.2-14.2V241.9z\"></path><path d=\"M241.2 256.1h28.3V327h-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M156.2 426.2h198.4a42.6 42.6 0 0 0 42.5-42.5V241.9a42.6 42.6 0 0 0-42.5-42.5H198.7V164a56.7 56.7 0 0 1 113.4 0h28.3a85 85 0 0 0-170 0v35.4h-14.2a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.6zM142 241.9c0-7.8 6.4-14.2 14.2-14.2h198.4c7.8 0 14.2 6.4 14.2 14.2v141.7c0 7.8-6.4 14.2-14.2 14.2H156.2c-7.8 0-14.2-6.4-14.2-14.2V241.9z\"></path><path d=\"M241.2 256.1h28.3V327h-28.3z\"></path></svg>')}:host .pencil{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M407.9 152.7l-49.8-49.8a26 26 0 0 0-36.9.3l-177 177.3a26 26 0 0 0-6.6 11l-40.4 90.8c-4 8.8-2 19 5 26a23.7 23.7 0 0 0 16.7 7.1c3.1 0 6.3-.6 9.2-2l91.3-39.9c4.2-1.2 8.1-3.5 11.3-6.7l177-177.3a26.3 26.3 0 0 0 7.8-18.3c.1-7-2.6-13.6-7.6-18.5zM153 326.5l31.5 31.4-56.4 24.6 24.9-56zm59.1 18.9l-46.4-46.3 174.1-174.4 46.4 46.3-174.1 174.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M407.9 152.7l-49.8-49.8a26 26 0 0 0-36.9.3l-177 177.3a26 26 0 0 0-6.6 11l-40.4 90.8c-4 8.8-2 19 5 26a23.7 23.7 0 0 0 16.7 7.1c3.1 0 6.3-.6 9.2-2l91.3-39.9c4.2-1.2 8.1-3.5 11.3-6.7l177-177.3a26.3 26.3 0 0 0 7.8-18.3c.1-7-2.6-13.6-7.6-18.5zM153 326.5l31.5 31.4-56.4 24.6 24.9-56zm59.1 18.9l-46.4-46.3 174.1-174.4 46.4 46.3-174.1 174.4z\"></path></svg>')}:host .touch{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M173.7 194l18.8-9.3a56 56 0 0 1-5.7-27.3h.2l.3-5.1.8-4.7a58 58 0 0 1 9.2-21.1 56.2 56.2 0 0 1 45.1-22.4c18.7 0 35.3 9 45.3 22.6a57 57 0 0 1 10.1 30.6h.2v2.2a56 56 0 0 1-3.4 19.5l19.7 7.1A77.7 77.7 0 0 0 318 148a73.7 73.7 0 0 0-15.9-37l-.1.1a76.9 76.9 0 0 0-46.1-26.9l.1-.3a72.9 72.9 0 0 0-56.2 10.9 76.5 76.5 0 0 0-33.6 55.2 79 79 0 0 0 7.5 44z\"></path><path d=\"M348 244.2a52.7 52.7 0 0 0-35.9-26l-.8-.1-36.9-4.4-.5-14.3-.1-48-.2-1.7a30.7 30.7 0 1 0-61.3-.5l-.3 2.4.2 102.3c-10.3-7.9-23.3-14.9-35-12.6-1.1.2-2.2.6-3.2 1.2-1.3.7-13 7.6-15.3 19.8-.9 4.8-.6 12.2 5.9 20a834.7 834.7 0 0 1 38.6 56.2h-9.9c-5.8 0-10.5 4.7-10.5 10.5v70.4c0 5.8 4.7 10.5 10.5 10.5H337c5.8 0 10.5-4.7 10.5-10.5V349c0-5.8-4.7-10.5-10.5-10.5h-7.2c6.4-10.2 16.6-24.8 22-40.9 10-30-.9-49.1-3.8-53.4zm-21.5 164.7H203.9v-49.4h122.6v49.4zm5.4-118c-7.3 21.9-22.9 41.3-27.3 47.5h-76.3a1000 1000 0 0 0-47.5-69.6c-.8-.9-1.5-2.1-1.4-2.8.2-1.1 1.7-2.9 3.3-4.2 6.4.6 20.1 9.5 32.2 23.2a10.5 10.5 0 1 0 18.4-6.9l-.3-125.8a9 9 0 0 0 .3-2.3 9.7 9.7 0 0 1 19.4 0l.1 1.7.1 48v.4l.9 23.5c.2 5.2 4.1 9.4 9.3 10l45.4 5.4a31.8 31.8 0 0 1 21.4 15.9l.9 1.4c.1 0 8.6 12 1.1 34.6z\"></path><circle cx=\"228.7\" cy=\"384.6\" r=\"15.9\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M173.7 194l18.8-9.3a56 56 0 0 1-5.7-27.3h.2l.3-5.1.8-4.7a58 58 0 0 1 9.2-21.1 56.2 56.2 0 0 1 45.1-22.4c18.7 0 35.3 9 45.3 22.6a57 57 0 0 1 10.1 30.6h.2v2.2a56 56 0 0 1-3.4 19.5l19.7 7.1A77.7 77.7 0 0 0 318 148a73.7 73.7 0 0 0-15.9-37l-.1.1a76.9 76.9 0 0 0-46.1-26.9l.1-.3a72.9 72.9 0 0 0-56.2 10.9 76.5 76.5 0 0 0-33.6 55.2 79 79 0 0 0 7.5 44z\"></path><path d=\"M348 244.2a52.7 52.7 0 0 0-35.9-26l-.8-.1-36.9-4.4-.5-14.3-.1-48-.2-1.7a30.7 30.7 0 1 0-61.3-.5l-.3 2.4.2 102.3c-10.3-7.9-23.3-14.9-35-12.6-1.1.2-2.2.6-3.2 1.2-1.3.7-13 7.6-15.3 19.8-.9 4.8-.6 12.2 5.9 20a834.7 834.7 0 0 1 38.6 56.2h-9.9c-5.8 0-10.5 4.7-10.5 10.5v70.4c0 5.8 4.7 10.5 10.5 10.5H337c5.8 0 10.5-4.7 10.5-10.5V349c0-5.8-4.7-10.5-10.5-10.5h-7.2c6.4-10.2 16.6-24.8 22-40.9 10-30-.9-49.1-3.8-53.4zm-21.5 164.7H203.9v-49.4h122.6v49.4zm5.4-118c-7.3 21.9-22.9 41.3-27.3 47.5h-76.3a1000 1000 0 0 0-47.5-69.6c-.8-.9-1.5-2.1-1.4-2.8.2-1.1 1.7-2.9 3.3-4.2 6.4.6 20.1 9.5 32.2 23.2a10.5 10.5 0 1 0 18.4-6.9l-.3-125.8a9 9 0 0 0 .3-2.3 9.7 9.7 0 0 1 19.4 0l.1 1.7.1 48v.4l.9 23.5c.2 5.2 4.1 9.4 9.3 10l45.4 5.4a31.8 31.8 0 0 1 21.4 15.9l.9 1.4c.1 0 8.6 12 1.1 34.6z\"></path><circle cx=\"228.7\" cy=\"384.6\" r=\"15.9\"></circle></svg>')}:host .bone{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M189.9 426c-17.3 0-33.5-6.7-45.7-18.9a65 65 0 0 1-15.2-23.9c-9-3.2-17.1-8.3-23.9-15.2a64.3 64.3 0 0 1-18.9-45.7c0-17.3 6.7-33.5 18.9-45.7 19.2-19.2 48-24.1 72.1-13.5l86.3-86.3a64.46 64.46 0 0 1 13.2-71.8 64.3 64.3 0 0 1 45.7-18.9c17.3 0 33.5 6.7 45.7 18.9a65 65 0 0 1 15.2 23.9c9 3.2 17.1 8.3 23.9 15.2a64.27 64.27 0 0 1 4.4 86.5c-1.4 1.7-2.9 3.3-4.4 4.9-1.4 1.4-2.8 2.7-4.3 4a68.28 68.28 0 0 1-14.4 9.1c-.9.4-1.7.8-2.6 1.1-1.7.7-3.5 1.3-5.3 1.9-.9.3-1.8.5-2.7.8-1.8.5-3.6.9-5.4 1.2-1.8.3-3.6.5-5.5.7-1.8.2-3.7.2-5.5.2-.9 0-1.8 0-2.7-.1-4.6-.2-9.2-.9-13.6-2-3.4-.9-6.7-2-9.8-3.4L249 335.4c1.8 4 3.1 8.2 4 12.5 4.6 21.6-1.9 43.7-17.5 59.2a63.73 63.73 0 0 1-45.6 18.9zm-38.8-140c-9.5 0-19 3.6-25.9 10.6a36.21 36.21 0 0 0 0 51.3c5 5 11.3 8.4 18.2 9.9l9.1 1.9 1.9 9.1c1.4 6.9 4.8 13.2 9.9 18.2a36 36 0 0 0 25.7 10.6 36.25 36.25 0 0 0 35.5-43.9c-1-4.7-2.9-9-5.5-12.9l-6.7-9.7 118-118.1 9.7 6.7a37.02 37.02 0 0 0 11.4 5.2c2.5.6 5.1 1 7.7 1.1h1.5c1 0 2.1 0 3.1-.1s2.1-.2 3.1-.4 2-.4 3-.7c.5-.1 1-.3 1.5-.4 1-.3 2-.7 2.9-1a36.54 36.54 0 0 0 4.2-2 38.7 38.7 0 0 0 7.7-5.9c.9-.9 1.7-1.8 2.5-2.8a36.23 36.23 0 0 0-2.5-48.6c-5-5-11.3-8.4-18.2-9.9l-9.1-1.9-1.9-9.1c-1.4-6.9-4.8-13.2-9.9-18.2a36 36 0 0 0-25.7-10.6c-9.7 0-18.8 3.8-25.7 10.6-12.3 12.3-14 31.7-4 46.2l6.7 9.7-118 118-9.7-6.7c-6.1-4.1-13.4-6.2-20.5-6.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M189.9 426c-17.3 0-33.5-6.7-45.7-18.9a65 65 0 0 1-15.2-23.9c-9-3.2-17.1-8.3-23.9-15.2a64.3 64.3 0 0 1-18.9-45.7c0-17.3 6.7-33.5 18.9-45.7 19.2-19.2 48-24.1 72.1-13.5l86.3-86.3a64.46 64.46 0 0 1 13.2-71.8 64.3 64.3 0 0 1 45.7-18.9c17.3 0 33.5 6.7 45.7 18.9a65 65 0 0 1 15.2 23.9c9 3.2 17.1 8.3 23.9 15.2a64.27 64.27 0 0 1 4.4 86.5c-1.4 1.7-2.9 3.3-4.4 4.9-1.4 1.4-2.8 2.7-4.3 4a68.28 68.28 0 0 1-14.4 9.1c-.9.4-1.7.8-2.6 1.1-1.7.7-3.5 1.3-5.3 1.9-.9.3-1.8.5-2.7.8-1.8.5-3.6.9-5.4 1.2-1.8.3-3.6.5-5.5.7-1.8.2-3.7.2-5.5.2-.9 0-1.8 0-2.7-.1-4.6-.2-9.2-.9-13.6-2-3.4-.9-6.7-2-9.8-3.4L249 335.4c1.8 4 3.1 8.2 4 12.5 4.6 21.6-1.9 43.7-17.5 59.2a63.73 63.73 0 0 1-45.6 18.9zm-38.8-140c-9.5 0-19 3.6-25.9 10.6a36.21 36.21 0 0 0 0 51.3c5 5 11.3 8.4 18.2 9.9l9.1 1.9 1.9 9.1c1.4 6.9 4.8 13.2 9.9 18.2a36 36 0 0 0 25.7 10.6 36.25 36.25 0 0 0 35.5-43.9c-1-4.7-2.9-9-5.5-12.9l-6.7-9.7 118-118.1 9.7 6.7a37.02 37.02 0 0 0 11.4 5.2c2.5.6 5.1 1 7.7 1.1h1.5c1 0 2.1 0 3.1-.1s2.1-.2 3.1-.4 2-.4 3-.7c.5-.1 1-.3 1.5-.4 1-.3 2-.7 2.9-1a36.54 36.54 0 0 0 4.2-2 38.7 38.7 0 0 0 7.7-5.9c.9-.9 1.7-1.8 2.5-2.8a36.23 36.23 0 0 0-2.5-48.6c-5-5-11.3-8.4-18.2-9.9l-9.1-1.9-1.9-9.1c-1.4-6.9-4.8-13.2-9.9-18.2a36 36 0 0 0-25.7-10.6c-9.7 0-18.8 3.8-25.7 10.6-12.3 12.3-14 31.7-4 46.2l6.7 9.7-118 118-9.7-6.7c-6.1-4.1-13.4-6.2-20.5-6.2z\"></path></svg>')}:host .social-days{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path><path d=\"M305.3 425c-1.6 0-3.1-.6-4.2-1.7L273 395.2a23.2 23.2 0 1 1 32.2-33.3 23.2 23.2 0 1 1 32.2 33.3l-28.1 28.1a5.4 5.4 0 0 1-4 1.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M404.9 342.7L363.4 308l-26-21.7-18.1 21.8 25.9 21.7 41.5 34.7a28.3 28.3 0 0 1 10.1 21.7v39h28.3v-39a56.4 56.4 0 0 0-20.2-43.5z\"></path><path d=\"M255.2 78h-.2a85.2 85.2 0 0 0-84.9 85V219.8c0 20.1 7 38.6 18.7 53.1l-42 35.2-41.5 34.7A56.5 56.5 0 0 0 85 386.2v39h28.3v-39c0-8.4 3.7-16.3 10.1-21.7l41.5-34.7 45.3-37.9a84.3 84.3 0 0 0 44.8 12.8h.2a85.1 85.1 0 0 0 84.9-84.8V163a85 85 0 0 0-84.9-85zm56.6 141.7a56.7 56.7 0 0 1-113.4 0V163a56.7 56.7 0 0 1 113.4 0v56.7z\"></path><path d=\"M305.3 425c-1.6 0-3.1-.6-4.2-1.7L273 395.2a23.2 23.2 0 1 1 32.2-33.3 23.2 23.2 0 1 1 32.2 33.3l-28.1 28.1a5.4 5.4 0 0 1-4 1.7z\"></path></svg>')}:host .gamepad{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M226.5 140.1a137.4 137.4 0 0 0-55-12.7 81.3 81.3 0 0 0-47.8 16.6 76.8 76.8 0 0 0-26.4 37.5c-7.6 24.4-9.9 124.1-10.1 136.3-.2 4.4-.8 34.5 16 52.7a41.8 41.8 0 0 0 30.2 13.4h1.8c35.5 0 52-29.9 54.7-35.3l14.5-25c6.6-10.1 15.1-22.5 51.6-21.8h.4c36.6-.7 45 11.6 51.6 21.8l14.5 25c2.7 5.4 19.2 35.3 54.7 35.3h1.8c12-.3 22.4-5 30.2-13.4 16.9-18.2 16.2-48.3 16-52.7-.3-12.2-2.5-111.9-10.1-136.3a76.8 76.8 0 0 0-26.4-37.5 82 82 0 0 0-47.8-16.6 137 137 0 0 0-55 12.7h-59.4zm69.1 26.9c6.5-3.3 27.1-11.7 44.6-11.2a50 50 0 0 1 47.9 34.2c4.9 15.6 8 87.2 8.9 128.6v.4c.4 7.2-1.3 24.4-8.5 32.3a13.2 13.2 0 0 1-10.2 4.3c-20.1.6-29.6-18.1-30.3-19.5l-.2-.5-15.3-26.4-.4-.6c-8.2-12.6-23.4-35.9-75.8-34.9-52.4-.9-67.6 22.4-75.8 34.9L165.2 335l-.3.5-.3.7c-.7 1.4-10.2 20.1-30.3 19.6-4.4-.1-7.6-1.5-10.2-4.3-7.8-8.3-8.8-26.6-8.5-32.3v-.4c.8-41.5 4-113.1 8.9-128.6a50 50 0 0 1 47.9-34.2 111 111 0 0 1 44.6 11.2h78.6z\"></path><path d=\"M218 211.7h-20v-20h-26.8v20h-20v26.8h20v20H198v-20h20z\"></path><path d=\"M329.2 214.1a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M329.2 264.7a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M301.3 239.5a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M357.6 239.5a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17 12.7 12.7 0 1 0-11.2 22.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M226.5 140.1a137.4 137.4 0 0 0-55-12.7 81.3 81.3 0 0 0-47.8 16.6 76.8 76.8 0 0 0-26.4 37.5c-7.6 24.4-9.9 124.1-10.1 136.3-.2 4.4-.8 34.5 16 52.7a41.8 41.8 0 0 0 30.2 13.4h1.8c35.5 0 52-29.9 54.7-35.3l14.5-25c6.6-10.1 15.1-22.5 51.6-21.8h.4c36.6-.7 45 11.6 51.6 21.8l14.5 25c2.7 5.4 19.2 35.3 54.7 35.3h1.8c12-.3 22.4-5 30.2-13.4 16.9-18.2 16.2-48.3 16-52.7-.3-12.2-2.5-111.9-10.1-136.3a76.8 76.8 0 0 0-26.4-37.5 82 82 0 0 0-47.8-16.6 137 137 0 0 0-55 12.7h-59.4zm69.1 26.9c6.5-3.3 27.1-11.7 44.6-11.2a50 50 0 0 1 47.9 34.2c4.9 15.6 8 87.2 8.9 128.6v.4c.4 7.2-1.3 24.4-8.5 32.3a13.2 13.2 0 0 1-10.2 4.3c-20.1.6-29.6-18.1-30.3-19.5l-.2-.5-15.3-26.4-.4-.6c-8.2-12.6-23.4-35.9-75.8-34.9-52.4-.9-67.6 22.4-75.8 34.9L165.2 335l-.3.5-.3.7c-.7 1.4-10.2 20.1-30.3 19.6-4.4-.1-7.6-1.5-10.2-4.3-7.8-8.3-8.8-26.6-8.5-32.3v-.4c.8-41.5 4-113.1 8.9-128.6a50 50 0 0 1 47.9-34.2 111 111 0 0 1 44.6 11.2h78.6z\"></path><path d=\"M218 211.7h-20v-20h-26.8v20h-20v26.8h20v20H198v-20h20z\"></path><path d=\"M329.2 214.1a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M329.2 264.7a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M301.3 239.5a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17c-6.3-3.1-14-.4-17 5.9a12.6 12.6 0 0 0 5.8 17z\"></path><path d=\"M357.6 239.5a12.4 12.4 0 0 0 9.8.6c3.2-1.1 5.8-3.4 7.3-6.5a12.6 12.6 0 0 0-5.9-17 12.7 12.7 0 1 0-11.2 22.9z\"></path></svg>')}:host .astronaut-outline{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M266.4 325.9h21.3V425h-21.3z\"></path><path d=\"M223.8 325.9h21.3V425h-21.3z\"></path><path d=\"M294.3 238.1a31.8 31.8 0 0 1 7.2 20.2v67.4h21.3V286l45.8.2V160.9H333a77.5 77.5 0 0 0-153.6 0h-14.3v-42.7c5.3-1.5 9.2-6.4 9.2-12.2a12.8 12.8 0 0 0-25.6 0c0 5.8 3.9 10.7 9.2 12.2v42.7h-15.2v125.2l45.2-.2v39.7h21.3v-67.4c0-7.7 2.8-15.1 7.8-20.8a77.3 77.3 0 0 0 76.1 1.2m-105 19.6v6.4l-24 .1v-82.6h15.5c2.4 16 9.8 30.5 20.4 41.7l.4.4a53.2 53.2 0 0 0-12.3 34zm106.6-46.8a55.8 55.8 0 0 1-60.6 10.8 56 56 0 0 1 22.1-107.8 56.2 56.2 0 0 1 38.5 97zm52.6 53.3l-24.5-.1v-6.4c0-11.8-4-24.1-11.8-32.9a76.6 76.6 0 0 0 21.9-43.2h14.5v82.6z\"></path><path d=\"M285.6 146.7h-58.8a6 6 0 0 0-5.9 5.9v40.9a6 6 0 0 0 5.9 5.9h58.8a6 6 0 0 0 5.9-5.9v-40.9a5.8 5.8 0 0 0-5.9-5.9zm0 46.8h-58.8v-40.9h58.8v40.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M266.4 325.9h21.3V425h-21.3z\"></path><path d=\"M223.8 325.9h21.3V425h-21.3z\"></path><path d=\"M294.3 238.1a31.8 31.8 0 0 1 7.2 20.2v67.4h21.3V286l45.8.2V160.9H333a77.5 77.5 0 0 0-153.6 0h-14.3v-42.7c5.3-1.5 9.2-6.4 9.2-12.2a12.8 12.8 0 0 0-25.6 0c0 5.8 3.9 10.7 9.2 12.2v42.7h-15.2v125.2l45.2-.2v39.7h21.3v-67.4c0-7.7 2.8-15.1 7.8-20.8a77.3 77.3 0 0 0 76.1 1.2m-105 19.6v6.4l-24 .1v-82.6h15.5c2.4 16 9.8 30.5 20.4 41.7l.4.4a53.2 53.2 0 0 0-12.3 34zm106.6-46.8a55.8 55.8 0 0 1-60.6 10.8 56 56 0 0 1 22.1-107.8 56.2 56.2 0 0 1 38.5 97zm52.6 53.3l-24.5-.1v-6.4c0-11.8-4-24.1-11.8-32.9a76.6 76.6 0 0 0 21.9-43.2h14.5v82.6z\"></path><path d=\"M285.6 146.7h-58.8a6 6 0 0 0-5.9 5.9v40.9a6 6 0 0 0 5.9 5.9h58.8a6 6 0 0 0 5.9-5.9v-40.9a5.8 5.8 0 0 0-5.9-5.9zm0 46.8h-58.8v-40.9h58.8v40.9z\"></path></svg>')}:host .planet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351.1 277.4a100.4 100.4 0 0 1-75.3 76l-.3.1a101 101 0 0 1-102-35.6l-30.9 1.8a127.7 127.7 0 0 0 139 59.7l.4-.1a126.4 126.4 0 0 0 79.2-57.1c10.7-17.3 17-36.4 18.6-56l-28.7 11.2z\"></path><path d=\"M365.3 195.4c-26.4-50-84.2-78-141.7-64.6l-.4.1A126.4 126.4 0 0 0 144 188a126.3 126.3 0 0 0-19 63l26.6-.5a100.4 100.4 0 0 1 77.7-93.7l.3-.1A100.4 100.4 0 0 1 340.8 206l24.5-10.6z\"></path><path d=\"M428.3 183.1c-5.5-8.8-16.7-14.1-35.5-16.5a175 175 0 0 0-19.9-1.3l15.3 29c5.6.7 10.2 1.6 13.4 2.6-4 3.8-11.9 9.8-26.2 17.3-3.4 1.8-7.1 3.7-11.3 5.6-4.4 2.1-9.1 4.1-13.9 6.2a630.2 630.2 0 0 1-87 28.5 553.2 553.2 0 0 1-113.3 17.3l-3.7.1c-9.5.2-17.4 0-23.9-.4a85 85 0 0 1-26.5-4.9c1.5-1.7 6.4-7.7 10-10.5l3.3-31.7c-21.3 12.3-37.5 25.2-41 37.2-2 6.8-1.2 13.6 2.3 19.2 4.7 7.6 13.9 12.7 28.3 15.8a207 207 0 0 0 31.8 3.3l11.6.1c5.9-.1 12-.3 18.3-.7a659.8 659.8 0 0 0 190.9-43.8c8.7-3.5 16.9-7 24.4-10.6l3-1.4c29.3-14.2 46-27.4 51-40.2a22 22 0 0 0-1.4-20.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351.1 277.4a100.4 100.4 0 0 1-75.3 76l-.3.1a101 101 0 0 1-102-35.6l-30.9 1.8a127.7 127.7 0 0 0 139 59.7l.4-.1a126.4 126.4 0 0 0 79.2-57.1c10.7-17.3 17-36.4 18.6-56l-28.7 11.2z\"></path><path d=\"M365.3 195.4c-26.4-50-84.2-78-141.7-64.6l-.4.1A126.4 126.4 0 0 0 144 188a126.3 126.3 0 0 0-19 63l26.6-.5a100.4 100.4 0 0 1 77.7-93.7l.3-.1A100.4 100.4 0 0 1 340.8 206l24.5-10.6z\"></path><path d=\"M428.3 183.1c-5.5-8.8-16.7-14.1-35.5-16.5a175 175 0 0 0-19.9-1.3l15.3 29c5.6.7 10.2 1.6 13.4 2.6-4 3.8-11.9 9.8-26.2 17.3-3.4 1.8-7.1 3.7-11.3 5.6-4.4 2.1-9.1 4.1-13.9 6.2a630.2 630.2 0 0 1-87 28.5 553.2 553.2 0 0 1-113.3 17.3l-3.7.1c-9.5.2-17.4 0-23.9-.4a85 85 0 0 1-26.5-4.9c1.5-1.7 6.4-7.7 10-10.5l3.3-31.7c-21.3 12.3-37.5 25.2-41 37.2-2 6.8-1.2 13.6 2.3 19.2 4.7 7.6 13.9 12.7 28.3 15.8a207 207 0 0 0 31.8 3.3l11.6.1c5.9-.1 12-.3 18.3-.7a659.8 659.8 0 0 0 190.9-43.8c8.7-3.5 16.9-7 24.4-10.6l3-1.4c29.3-14.2 46-27.4 51-40.2a22 22 0 0 0-1.4-20.2z\"></path></svg>')}:host .diamond{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M246.1 397.8c2.7 3.4 6.8 5.4 11.2 5.4h.1c4.4 0 8.5-2.1 11.2-5.6l142.8-188.7 4.3-5.7a14.3 14.3 0 0 0-.4-15.9l-54.8-73.9a14.2 14.2 0 0 0-11.4-5.7H163.7c-4.6 0-8.8 2.2-11.5 5.9l-53.2 74a58 58 0 0 0-2.5 4.3 14.2 14.2 0 0 0 1.1 16l148.5 189.9zm8.9-70.5l-37.1-117.5h78.3L255 327.3zm93.5-182.4l27.1 36.6h-39.7l12.6-36.6zm26.5 64.9l-89.3 118 40.5-118H375zm-53.4-73.9l-12.1 35.4-27.3-35.4h39.4zM258 151.1l23.5 30.4h-46.2l22.7-30.4zm-24.1-15.2l-27.5 36.7-11.3-36.7h38.8zm-66.8 5.4l12.4 40.2h-41.4l29-40.2zm21.2 68.5l39 117.8-92-117.8h53z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M246.1 397.8c2.7 3.4 6.8 5.4 11.2 5.4h.1c4.4 0 8.5-2.1 11.2-5.6l142.8-188.7 4.3-5.7a14.3 14.3 0 0 0-.4-15.9l-54.8-73.9a14.2 14.2 0 0 0-11.4-5.7H163.7c-4.6 0-8.8 2.2-11.5 5.9l-53.2 74a58 58 0 0 0-2.5 4.3 14.2 14.2 0 0 0 1.1 16l148.5 189.9zm8.9-70.5l-37.1-117.5h78.3L255 327.3zm93.5-182.4l27.1 36.6h-39.7l12.6-36.6zm26.5 64.9l-89.3 118 40.5-118H375zm-53.4-73.9l-12.1 35.4-27.3-35.4h39.4zM258 151.1l23.5 30.4h-46.2l22.7-30.4zm-24.1-15.2l-27.5 36.7-11.3-36.7h38.8zm-66.8 5.4l12.4 40.2h-41.4l29-40.2zm21.2 68.5l39 117.8-92-117.8h53z\"></path></svg>')}:host .fence{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M162.5 424.3v-90.1h41.9v90.1h28.3v-90.1h45.4v90.1h28.3v-90.1h42.8v90.1h28.3v-90.1h32.7a14.2 14.2 0 1 0 0-28.4h-32.7V203.2h32.7a14.2 14.2 0 1 0 0-28.4h-32.7v-75a14.2 14.2 0 1 0-28.4 0v75.1h-42.8V99.8a14.2 14.2 0 1 0-28.4 0v75.1h-45.4V99.8a14.2 14.2 0 1 0-28.4 0v75.1h-41.9V99.8a14.2 14.2 0 1 0-28.4 0v75.1H99a14.2 14.2 0 1 0 0 28.4h35.1v102.6H99a14.2 14.2 0 1 0 0 28.4h35.1v90.1h28.4zm0-118.4V203.2h41.9v102.6h-41.9zm70.2 0V203.2h45.4v102.6h-45.4zm73.7 0V203.2h42.8v102.6h-42.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M162.5 424.3v-90.1h41.9v90.1h28.3v-90.1h45.4v90.1h28.3v-90.1h42.8v90.1h28.3v-90.1h32.7a14.2 14.2 0 1 0 0-28.4h-32.7V203.2h32.7a14.2 14.2 0 1 0 0-28.4h-32.7v-75a14.2 14.2 0 1 0-28.4 0v75.1h-42.8V99.8a14.2 14.2 0 1 0-28.4 0v75.1h-45.4V99.8a14.2 14.2 0 1 0-28.4 0v75.1h-41.9V99.8a14.2 14.2 0 1 0-28.4 0v75.1H99a14.2 14.2 0 1 0 0 28.4h35.1v102.6H99a14.2 14.2 0 1 0 0 28.4h35.1v90.1h28.4zm0-118.4V203.2h41.9v102.6h-41.9zm70.2 0V203.2h45.4v102.6h-45.4zm73.7 0V203.2h42.8v102.6h-42.8z\"></path></svg>')}:host .stop{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.6 268.6c.7 15.4-.7 29.5 13.7 41l10.3 6.2c-3.6 1-7 2.6-9.9 4.8a21.9 21.9 0 0 0-9.1 17.4v64.1c0 13.1 12 23.3 27.4 23.3l151.9.1c6.8 0 13.3-2.1 18.3-5.9a21.9 21.9 0 0 0 9.1-17.4v-64.1c0-8.8-5.4-16.3-13.6-20.2 7.3-7.3 14-16.8 15-29.2v-.4l-.6-69.3.1-15.8-.1-33.6c0-.3-.1-8.4-3.7-16.8a29.2 29.2 0 0 0-28-19.1h-.1c-4.2 0-8.1.6-11.7 1.9v-9.5a31.8 31.8 0 0 0-32.9-31.7c-4.3 0-8.4 1-12.2 2.7-4-14.3-16.6-23.6-32.9-23.5h-.9c-17.9 1.7-30 16.9-28.9 36.1v2a33.7 33.7 0 0 0-11.2-1.8h-.5c-18.2.8-31 15.5-30.4 34.9l.9 50.4a30.7 30.7 0 0 0-19.4 29.6l-.6 43.8zM338 401.4c0 1.6-1.3 2.8-2.8 2.8H175a2.8 2.8 0 0 1-2.8-2.8v-64.2c0-1.6 1.3-2.8 2.8-2.8h160.2c1.6 0 2.8 1.3 2.8 2.8v64.2zM169.1 242.8l.2-17.8s-.5-10 9.3-10.5c9.5-.1 9.9 11.3 9.9 11.3V258h21v-32.2c0-9.1-2.6-17-7.5-22.9a26.8 26.8 0 0 0-13.4-8.7l-.9-49.8v-.1c-.2-7.9 3.7-13 10.2-13.4 4.1 0 10.6 2.3 11.1 12.1l.3 65.8h10.5l9.6.1.5-100.2c-.5-7.8 3.4-13.6 10.7-14.1 5.6.1 11.2 2.9 11.4 12.9l1.1 100.4 21 .1.4-78.5s-1-13.7 10.6-14.1c6.2-.2 10.2 3.4 10.7 13.4v79.1h20.7l.5-38.1s-1-15 11.1-15.1c11.7-.1 11.1 15.2 11.1 15.2v33.3l-.1 15.8.6 68.5c-.9 9.8-10.2 17.2-18.3 23.8l-4.2 3.5H205.4l-31-21.6c-4.9-4-5.5-10-5.7-21.8l.4-28.6z\"></path><circle cx=\"301.2\" cy=\"371.1\" r=\"18.9\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.6 268.6c.7 15.4-.7 29.5 13.7 41l10.3 6.2c-3.6 1-7 2.6-9.9 4.8a21.9 21.9 0 0 0-9.1 17.4v64.1c0 13.1 12 23.3 27.4 23.3l151.9.1c6.8 0 13.3-2.1 18.3-5.9a21.9 21.9 0 0 0 9.1-17.4v-64.1c0-8.8-5.4-16.3-13.6-20.2 7.3-7.3 14-16.8 15-29.2v-.4l-.6-69.3.1-15.8-.1-33.6c0-.3-.1-8.4-3.7-16.8a29.2 29.2 0 0 0-28-19.1h-.1c-4.2 0-8.1.6-11.7 1.9v-9.5a31.8 31.8 0 0 0-32.9-31.7c-4.3 0-8.4 1-12.2 2.7-4-14.3-16.6-23.6-32.9-23.5h-.9c-17.9 1.7-30 16.9-28.9 36.1v2a33.7 33.7 0 0 0-11.2-1.8h-.5c-18.2.8-31 15.5-30.4 34.9l.9 50.4a30.7 30.7 0 0 0-19.4 29.6l-.6 43.8zM338 401.4c0 1.6-1.3 2.8-2.8 2.8H175a2.8 2.8 0 0 1-2.8-2.8v-64.2c0-1.6 1.3-2.8 2.8-2.8h160.2c1.6 0 2.8 1.3 2.8 2.8v64.2zM169.1 242.8l.2-17.8s-.5-10 9.3-10.5c9.5-.1 9.9 11.3 9.9 11.3V258h21v-32.2c0-9.1-2.6-17-7.5-22.9a26.8 26.8 0 0 0-13.4-8.7l-.9-49.8v-.1c-.2-7.9 3.7-13 10.2-13.4 4.1 0 10.6 2.3 11.1 12.1l.3 65.8h10.5l9.6.1.5-100.2c-.5-7.8 3.4-13.6 10.7-14.1 5.6.1 11.2 2.9 11.4 12.9l1.1 100.4 21 .1.4-78.5s-1-13.7 10.6-14.1c6.2-.2 10.2 3.4 10.7 13.4v79.1h20.7l.5-38.1s-1-15 11.1-15.1c11.7-.1 11.1 15.2 11.1 15.2v33.3l-.1 15.8.6 68.5c-.9 9.8-10.2 17.2-18.3 23.8l-4.2 3.5H205.4l-31-21.6c-4.9-4-5.5-10-5.7-21.8l.4-28.6z\"></path><circle cx=\"301.2\" cy=\"371.1\" r=\"18.9\"></circle></svg>')}:host .happy{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.4 85.6A170.3 170.3 0 0 0 85.3 255.7c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1A170.4 170.4 0 0 0 255.4 85.6zm0 311.8c-78.2 0-141.7-63.6-141.7-141.7S177.3 114 255.4 114s141.7 63.6 141.7 141.7-63.6 141.7-141.7 141.7z\"></path><path d=\"M212.7 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M297.6 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M303.8 307.6a12 12 0 0 1-9.3 4.4h-79.1a12 12 0 0 1-9.3-4.4l-15.5-18.5-21.7 18.2 15.5 18.5c7.7 9.2 19 14.5 31.1 14.5h78.9c12 0 23.3-5.3 31.1-14.5l15.5-18.5-21.7-18.2-15.5 18.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.4 85.6A170.3 170.3 0 0 0 85.3 255.7c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1A170.4 170.4 0 0 0 255.4 85.6zm0 311.8c-78.2 0-141.7-63.6-141.7-141.7S177.3 114 255.4 114s141.7 63.6 141.7 141.7-63.6 141.7-141.7 141.7z\"></path><path d=\"M212.7 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M297.6 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M303.8 307.6a12 12 0 0 1-9.3 4.4h-79.1a12 12 0 0 1-9.3-4.4l-15.5-18.5-21.7 18.2 15.5 18.5c7.7 9.2 19 14.5 31.1 14.5h78.9c12 0 23.3-5.3 31.1-14.5l15.5-18.5-21.7-18.2-15.5 18.5z\"></path></svg>')}:host .sad{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.4 85.6A170.3 170.3 0 0 0 85.3 255.7c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1A170.4 170.4 0 0 0 255.4 85.6zm0 311.8c-78.2 0-141.7-63.6-141.7-141.7S177.3 114 255.4 114s141.7 63.6 141.7 141.7-63.6 141.7-141.7 141.7z\"></path><path d=\"M212.7 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M297.6 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M206 321.8a12 12 0 0 1 9.3-4.4h79.1c3.6 0 7 1.6 9.3 4.4l15.5 18.5 21.7-18.2-15.5-18.5a40.4 40.4 0 0 0-31.1-14.5h-79c-12 0-23.3 5.3-31.1 14.5l-15.5 18.5 21.7 18.2 15.6-18.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.4 85.6A170.3 170.3 0 0 0 85.3 255.7c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1A170.4 170.4 0 0 0 255.4 85.6zm0 311.8c-78.2 0-141.7-63.6-141.7-141.7S177.3 114 255.4 114s141.7 63.6 141.7 141.7-63.6 141.7-141.7 141.7z\"></path><path d=\"M212.7 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M297.6 247.3a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path><path d=\"M206 321.8a12 12 0 0 1 9.3-4.4h79.1c3.6 0 7 1.6 9.3 4.4l15.5 18.5 21.7-18.2-15.5-18.5a40.4 40.4 0 0 0-31.1-14.5h-79c-12 0-23.3 5.3-31.1 14.5l-15.5 18.5 21.7 18.2 15.6-18.5z\"></path></svg>')}:host .guide{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"207\" cy=\"369.1\" r=\"14.1\"></circle><path d=\"M174.3 244.3h7.1v44.5h-7.1z\"></path><path d=\"M401.1 244.3h7.1v44.5h-7.1z\"></path><path d=\"M306 157.6v-43.7a28.3 28.3 0 0 0-28.3-28.3H136.2a28.3 28.3 0 0 0-28.3 28.3v282.9a28.3 28.3 0 0 0 28.3 28.3h141.5a28.3 28.3 0 0 0 28.3-28.3V179a58.7 58.7 0 0 1 45.1 56.9h-7.9v62.3h44.9v-62.3h-16a79.8 79.8 0 0 0-66.1-78.3zm-169.8-43.8h141.5v43.6a79.7 79.7 0 0 0-67.1 78.5h-16.3v62.3h44.9v-62.3h-7.6c.1-28 19.8-51.4 46.1-57.1v157.9H136.2V113.8zm141.5 283H136.2v-53.1h141.5v53.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"207\" cy=\"369.1\" r=\"14.1\"></circle><path d=\"M174.3 244.3h7.1v44.5h-7.1z\"></path><path d=\"M401.1 244.3h7.1v44.5h-7.1z\"></path><path d=\"M306 157.6v-43.7a28.3 28.3 0 0 0-28.3-28.3H136.2a28.3 28.3 0 0 0-28.3 28.3v282.9a28.3 28.3 0 0 0 28.3 28.3h141.5a28.3 28.3 0 0 0 28.3-28.3V179a58.7 58.7 0 0 1 45.1 56.9h-7.9v62.3h44.9v-62.3h-16a79.8 79.8 0 0 0-66.1-78.3zm-169.8-43.8h141.5v43.6a79.7 79.7 0 0 0-67.1 78.5h-16.3v62.3h44.9v-62.3h-7.6c.1-28 19.8-51.4 46.1-57.1v157.9H136.2V113.8zm141.5 283H136.2v-53.1h141.5v53.1z\"></path></svg>')}:host .tablet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M361.4 85H163a28.3 28.3 0 0 0-28.3 28.3v283.5a28.3 28.3 0 0 0 28.3 28.3h198.4a28.3 28.3 0 0 0 28.3-28.3V113.4A28.4 28.4 0 0 0 361.4 85zm0 28.4v223.2H163V113.4h198.4zm0 283.5H163v-53.2h198.4v53.2c0-.1 0 0 0 0z\"></path><circle cx=\"262.2\" cy=\"368.5\" r=\"14.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M361.4 85H163a28.3 28.3 0 0 0-28.3 28.3v283.5a28.3 28.3 0 0 0 28.3 28.3h198.4a28.3 28.3 0 0 0 28.3-28.3V113.4A28.4 28.4 0 0 0 361.4 85zm0 28.4v223.2H163V113.4h198.4zm0 283.5H163v-53.2h198.4v53.2c0-.1 0 0 0 0z\"></path><circle cx=\"262.2\" cy=\"368.5\" r=\"14.2\"></circle></svg>')}:host .crown{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M389 227.8c-6.9-5.6-16.6-6-24-1.1l-53.6 28.6-35.9-70.3a20.4 20.4 0 0 0-18.5-11.8 20.3 20.3 0 0 0-18.7 11.3l-38.4 71-52-27.9c-7.2-5-16.7-4.9-23.9.4l-.1.1a21 21 0 0 0-7 23.9l44.5 123.6a20.5 20.5 0 0 0 19.1 13.6h.1L329 389h.1c8.5 0 16.2-5.3 19.2-13.4l47.1-123.8c3.3-8.6.6-18.4-6.4-24zm-65.4 132.7l-137.5.2-35.9-99.7 61.1 32.8 45.2-83.6 42.6 83.6 62.5-33.3-38 100z\"></path><ellipse cx=\"256.3\" cy=\"139.4\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 256.3 139.4) scale(.99996)\"></ellipse><ellipse cx=\"407.4\" cy=\"201.9\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 407.4 201.9) scale(.99996)\"></ellipse><ellipse cx=\"105.4\" cy=\"202.2\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 105.4 202.2) scale(.99996)\"></ellipse></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M389 227.8c-6.9-5.6-16.6-6-24-1.1l-53.6 28.6-35.9-70.3a20.4 20.4 0 0 0-18.5-11.8 20.3 20.3 0 0 0-18.7 11.3l-38.4 71-52-27.9c-7.2-5-16.7-4.9-23.9.4l-.1.1a21 21 0 0 0-7 23.9l44.5 123.6a20.5 20.5 0 0 0 19.1 13.6h.1L329 389h.1c8.5 0 16.2-5.3 19.2-13.4l47.1-123.8c3.3-8.6.6-18.4-6.4-24zm-65.4 132.7l-137.5.2-35.9-99.7 61.1 32.8 45.2-83.6 42.6 83.6 62.5-33.3-38 100z\"></path><ellipse cx=\"256.3\" cy=\"139.4\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 256.3 139.4) scale(.99996)\"></ellipse><ellipse cx=\"407.4\" cy=\"201.9\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 407.4 201.9) scale(.99996)\"></ellipse><ellipse cx=\"105.4\" cy=\"202.2\" rx=\"20.4\" ry=\"20.4\" transform=\"rotate(-89.4 105.4 202.2) scale(.99996)\"></ellipse></svg>')}:host .more{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.6 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path><path d=\"M255.2 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path><path d=\"M161.5 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.6 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path><path d=\"M255.2 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path><path d=\"M161.5 230.3a25.6 25.6 0 1 0 0 51.2 25.6 25.6 0 0 0 0-51.2z\"></path></svg>')}:host .play{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M199.7 404a34.6 34.6 0 0 1-34.7-34.7V140.9a34.6 34.6 0 0 1 59.2-24.6l114.2 114.2a34.5 34.5 0 0 1 0 49.2L224.3 393.8a34.5 34.5 0 0 1-24.6 10.2zm0-269.4a6.3 6.3 0 0 0-6.3 6.4v228.3a6.3 6.3 0 0 0 10.8 4.5l114.2-114.2a6.4 6.4 0 0 0 1.9-4.5 6 6 0 0 0-1.9-4.5L204.2 136.4a6.3 6.3 0 0 0-4.5-1.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M199.7 404a34.6 34.6 0 0 1-34.7-34.7V140.9a34.6 34.6 0 0 1 59.2-24.6l114.2 114.2a34.5 34.5 0 0 1 0 49.2L224.3 393.8a34.5 34.5 0 0 1-24.6 10.2zm0-269.4a6.3 6.3 0 0 0-6.3 6.4v228.3a6.3 6.3 0 0 0 10.8 4.5l114.2-114.2a6.4 6.4 0 0 0 1.9-4.5 6 6 0 0 0-1.9-4.5L204.2 136.4a6.3 6.3 0 0 0-4.5-1.8z\"></path></svg>')}:host .pause{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M211 390.6c-7.8 0-14.2-5.7-14.2-12.6V132.2c0-7 6.3-12.6 14.2-12.6s14.2 5.7 14.2 12.6V378c0 6.9-6.4 12.6-14.2 12.6z\"></path><path d=\"M299.2 390.6c-7.8 0-14.2-5.7-14.2-12.6V132.2c0-7 6.3-12.6 14.2-12.6s14.2 5.7 14.2 12.6V378c0 6.9-6.4 12.6-14.2 12.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M211 390.6c-7.8 0-14.2-5.7-14.2-12.6V132.2c0-7 6.3-12.6 14.2-12.6s14.2 5.7 14.2 12.6V378c0 6.9-6.4 12.6-14.2 12.6z\"></path><path d=\"M299.2 390.6c-7.8 0-14.2-5.7-14.2-12.6V132.2c0-7 6.3-12.6 14.2-12.6s14.2 5.7 14.2 12.6V378c0 6.9-6.4 12.6-14.2 12.6z\"></path></svg>')}:host .map{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M417.7 86.9a14.2 14.2 0 0 0-13.1-1.6L309.5 121l-95-26.2a15 15 0 0 0-9.1.5L95.3 140.1a14.3 14.3 0 0 0-8.8 13.1v258.5a14 14 0 0 0 20.1 12.8l105-48 94 32.6c3 1 6.3 1 9.3 0l99.4-34.5c5.7-2 9.5-7.4 9.5-13.4V98.5c0-4.6-2.3-9-6.1-11.6zm-197.1 39l70.1 19.3.2 228.9-70.3-24.4V125.9zm-105.8 36.8l77.4-31.4v222.9l-77.4 35.4V162.7zm280.6 188.5l-76.2 26.4-.2-230 76.4-28.7v232.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M417.7 86.9a14.2 14.2 0 0 0-13.1-1.6L309.5 121l-95-26.2a15 15 0 0 0-9.1.5L95.3 140.1a14.3 14.3 0 0 0-8.8 13.1v258.5a14 14 0 0 0 20.1 12.8l105-48 94 32.6c3 1 6.3 1 9.3 0l99.4-34.5c5.7-2 9.5-7.4 9.5-13.4V98.5c0-4.6-2.3-9-6.1-11.6zm-197.1 39l70.1 19.3.2 228.9-70.3-24.4V125.9zm-105.8 36.8l77.4-31.4v222.9l-77.4 35.4V162.7zm280.6 188.5l-76.2 26.4-.2-230 76.4-28.7v232.3z\"></path></svg>')}:host .viking{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M337.2 350.4a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6zm-79.8 0a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6zm-79.1 0a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6z\"></path><path d=\"M409.5 145.1l-.4-60.3-28.3.2.4 60.3c0 8.4-3.6 16.3-10 21.8l18.3 21.6a56.7 56.7 0 0 0 20-43.6z\"></path><path d=\"M125.1 188.6l18.3-21.7a28.3 28.3 0 0 1-10.1-21.7l.2-60.3-28.3-.1-.2 60.4a56 56 0 0 0 20.1 43.4z\"></path><path d=\"M403.2 318.3c0-49.4-14.7-95.9-41.5-131.1-27.6-36.3-64.7-56.3-104.4-56.3s-76.8 20-104.4 56.3c-26.8 35.2-41.5 81.7-41.5 131.1v14.2h.1V424h291.8V318.3zM270.4 160.2c55.3 8.3 99.1 68.7 104.1 143.9H270.4V160.2zm-28.4.4v143.5H140.2c4.9-74.2 47.6-134 101.8-143.5zm132.9 235h-235v-63.2h235v63.2z\"></path><circle cx=\"178.3\" cy=\"365.7\" r=\"15.3\"></circle><circle cx=\"257.4\" cy=\"365.7\" r=\"15.3\"></circle><circle cx=\"337.2\" cy=\"365.7\" r=\"15.3\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M337.2 350.4a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6zm-79.8 0a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6zm-79.1 0a15.3 15.3 0 1 1 0 30.6 15.3 15.3 0 0 1 0-30.6z\"></path><path d=\"M409.5 145.1l-.4-60.3-28.3.2.4 60.3c0 8.4-3.6 16.3-10 21.8l18.3 21.6a56.7 56.7 0 0 0 20-43.6z\"></path><path d=\"M125.1 188.6l18.3-21.7a28.3 28.3 0 0 1-10.1-21.7l.2-60.3-28.3-.1-.2 60.4a56 56 0 0 0 20.1 43.4z\"></path><path d=\"M403.2 318.3c0-49.4-14.7-95.9-41.5-131.1-27.6-36.3-64.7-56.3-104.4-56.3s-76.8 20-104.4 56.3c-26.8 35.2-41.5 81.7-41.5 131.1v14.2h.1V424h291.8V318.3zM270.4 160.2c55.3 8.3 99.1 68.7 104.1 143.9H270.4V160.2zm-28.4.4v143.5H140.2c4.9-74.2 47.6-134 101.8-143.5zm132.9 235h-235v-63.2h235v63.2z\"></path><circle cx=\"178.3\" cy=\"365.7\" r=\"15.3\"></circle><circle cx=\"257.4\" cy=\"365.7\" r=\"15.3\"></circle><circle cx=\"337.2\" cy=\"365.7\" r=\"15.3\"></circle></svg>')}:host .bluetooth{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M253.7 426.8a14.2 14.2 0 0 1-14.2-14.2V282.3l-104.3 72.4a14 14 0 0 1-19.7-3.6 14 14 0 0 1 3.6-19.7l109.8-76.3-109.6-76.9a14.1 14.1 0 1 1 16.2-23.2l104 73V99.6a14.2 14.2 0 0 1 21.3-12.3l122.4 70.6a14.1 14.1 0 0 1 1 23.9l-105.8 73.4L383.6 329a14.2 14.2 0 0 1-.9 23.8l-121.7 72c-2.3 1.3-4.8 2-7.3 2zm14.2-144.3v105.3l81.4-48.2-81.4-57.1zm0-158.4v104l81.8-56.8-81.8-47.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M253.7 426.8a14.2 14.2 0 0 1-14.2-14.2V282.3l-104.3 72.4a14 14 0 0 1-19.7-3.6 14 14 0 0 1 3.6-19.7l109.8-76.3-109.6-76.9a14.1 14.1 0 1 1 16.2-23.2l104 73V99.6a14.2 14.2 0 0 1 21.3-12.3l122.4 70.6a14.1 14.1 0 0 1 1 23.9l-105.8 73.4L383.6 329a14.2 14.2 0 0 1-.9 23.8l-121.7 72c-2.3 1.3-4.8 2-7.3 2zm14.2-144.3v105.3l81.4-48.2-81.4-57.1zm0-158.4v104l81.8-56.8-81.8-47.2z\"></path></svg>')}:host .cam{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 396.4H113.4A28.4 28.4 0 0 1 85 368V186.6a28.3 28.3 0 0 1 28.3-28.3h39l12.8-14.5 15.2-18.1a32.9 32.9 0 0 1 25.2-11.8h94.6c9.8 0 19 4.3 25.2 11.8l15.3 18.3.4.5 10.6 13.9h45a28.3 28.3 0 0 1 28.3 28.3V368a28 28 0 0 1-28 28.4zM113.4 186.6V368h283.5V186.6h-52a14 14 0 0 1-11.2-5.6L319 161.8l-15.1-18.1c-.9-1-2.1-1.6-3.5-1.6h-94.6c-1.4 0-2.6.6-3.5 1.6L187 162l-.3.3-17.2 19.4c-2.7 3-6.5 4.8-10.6 4.8h-45.5z\"></path><circle cx=\"361.7\" cy=\"219.2\" r=\"14.2\"></circle><path d=\"M255.7 338.5a76.7 76.7 0 0 1-76.6-76.6c0-42.2 34.4-76.6 76.6-76.6s76.6 34.4 76.6 76.6a76.6 76.6 0 0 1-76.6 76.6zm0-124.8a48.2 48.2 0 1 0 0 96.5 48.2 48.2 0 0 0 0-96.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 396.4H113.4A28.4 28.4 0 0 1 85 368V186.6a28.3 28.3 0 0 1 28.3-28.3h39l12.8-14.5 15.2-18.1a32.9 32.9 0 0 1 25.2-11.8h94.6c9.8 0 19 4.3 25.2 11.8l15.3 18.3.4.5 10.6 13.9h45a28.3 28.3 0 0 1 28.3 28.3V368a28 28 0 0 1-28 28.4zM113.4 186.6V368h283.5V186.6h-52a14 14 0 0 1-11.2-5.6L319 161.8l-15.1-18.1c-.9-1-2.1-1.6-3.5-1.6h-94.6c-1.4 0-2.6.6-3.5 1.6L187 162l-.3.3-17.2 19.4c-2.7 3-6.5 4.8-10.6 4.8h-45.5z\"></path><circle cx=\"361.7\" cy=\"219.2\" r=\"14.2\"></circle><path d=\"M255.7 338.5a76.7 76.7 0 0 1-76.6-76.6c0-42.2 34.4-76.6 76.6-76.6s76.6 34.4 76.6 76.6a76.6 76.6 0 0 1-76.6 76.6zm0-124.8a48.2 48.2 0 1 0 0 96.5 48.2 48.2 0 0 0 0-96.5z\"></path></svg>')}:host .buggy{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M411.6 153.8l-34.6 19a45.25 45.25 0 0 0-22.5 30.8l-1.3 6.5-136.6-.1v-90.9h-14.2c-64.3 0-116.6 52.3-116.6 116.6v1.1c0 36.1 16.5 68.4 42.3 89.8a51.23 51.23 0 0 0 49.5 64.3c23.4 0 43.2-15.8 49.3-37.4h22.5c6 21.5 25.8 37.4 49.3 37.4 28.2 0 51.2-22.9 51.2-51.2 0-6.6-1.3-12.9-3.6-18.7 22.1-21.2 35.9-51.1 35.9-84.1v-26.6l.2-1.2c1-4.9 4-9.1 8.4-11.5l34.6-19-13.8-24.8zM195.8 353.4c-4.2 5.6-10.8 9.2-18.3 9.2a22.89 22.89 0 0 1-22.8-22.8c0-9.6 5.9-17.8 14.3-21.1 2.6-1.1 5.5-1.7 8.5-1.7 6.9 0 13.1 3.1 17.2 7.9 3.5 4 5.6 9.2 5.6 14.9 0 5.1-1.6 9.8-4.5 13.6zm102.7 9.2c-7.8 0-14.7-3.9-18.8-9.9a22.9 22.9 0 0 1 2.8-29.2 22.6 22.6 0 0 1 19.5-6.3 22.73 22.73 0 0 1 19.3 22v.5c0 12.7-10.2 22.9-22.8 22.9zm30.1-64.1c-8.5-6.2-18.9-9.8-30.1-9.8-23.1 0-42.7 15.5-49 36.6h-23c-6.3-21.1-25.9-36.6-49-36.6a50.9 50.9 0 0 0-34.6 13.5 88.12 88.12 0 0 1-28.8-65.2v-1.1c0-43.9 32.2-80.4 74.1-87.2v89.7l165.5.1a87.9 87.9 0 0 1-25.1 60z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M411.6 153.8l-34.6 19a45.25 45.25 0 0 0-22.5 30.8l-1.3 6.5-136.6-.1v-90.9h-14.2c-64.3 0-116.6 52.3-116.6 116.6v1.1c0 36.1 16.5 68.4 42.3 89.8a51.23 51.23 0 0 0 49.5 64.3c23.4 0 43.2-15.8 49.3-37.4h22.5c6 21.5 25.8 37.4 49.3 37.4 28.2 0 51.2-22.9 51.2-51.2 0-6.6-1.3-12.9-3.6-18.7 22.1-21.2 35.9-51.1 35.9-84.1v-26.6l.2-1.2c1-4.9 4-9.1 8.4-11.5l34.6-19-13.8-24.8zM195.8 353.4c-4.2 5.6-10.8 9.2-18.3 9.2a22.89 22.89 0 0 1-22.8-22.8c0-9.6 5.9-17.8 14.3-21.1 2.6-1.1 5.5-1.7 8.5-1.7 6.9 0 13.1 3.1 17.2 7.9 3.5 4 5.6 9.2 5.6 14.9 0 5.1-1.6 9.8-4.5 13.6zm102.7 9.2c-7.8 0-14.7-3.9-18.8-9.9a22.9 22.9 0 0 1 2.8-29.2 22.6 22.6 0 0 1 19.5-6.3 22.73 22.73 0 0 1 19.3 22v.5c0 12.7-10.2 22.9-22.8 22.9zm30.1-64.1c-8.5-6.2-18.9-9.8-30.1-9.8-23.1 0-42.7 15.5-49 36.6h-23c-6.3-21.1-25.9-36.6-49-36.6a50.9 50.9 0 0 0-34.6 13.5 88.12 88.12 0 0 1-28.8-65.2v-1.1c0-43.9 32.2-80.4 74.1-87.2v89.7l165.5.1a87.9 87.9 0 0 1-25.1 60z\"></path></svg>')}:host .bee{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.3 293c-8-28.4-38.3-56.2-90.2-82.8l-5.4-2.7v-7.8a70.8 70.8 0 0 0-34.3-60.6l1.8-18.3a9.6 9.6 0 0 1 4.1-6.9l11.7-8-16-23.4-11.7 8a38 38 0 0 0-16.4 27.5l-1.2 11.6a64 64 0 0 0-17.4-.1L246 117a37.6 37.6 0 0 0-16.5-27.4l-11.8-7.9-15.8 23.5 11.8 7.9a9.8 9.8 0 0 1 4.2 6.9l2 19a70.5 70.5 0 0 0-34.5 60.7v7l-6.9 3.5c-51.8 26.6-82.2 54.4-90.2 82.8-3.8 13.5-4.4 34.2 14.3 56.3l.9.9c.9.8 18.1 17.5 43.8 17.5 5 0 10.4-.6 16-2.2a70.3 70.3 0 0 0 20.2-9.2 72.3 72.3 0 0 0 144.2.4c6.3 4 12.9 6.9 19.6 8.8a62 62 0 0 0 59.8-15.3l.9-.9c18.7-22.1 18.1-42.8 14.3-56.3zM256 157.4a42.4 42.4 0 0 1 42 36.9c-17.9-7.6-31.8-12.5-36.6-14.2-1.9-.9-4-1.3-6.1-1.3-2.1 0-4.2.4-6.1 1.3-4.7 1.6-18 6.3-35.1 13.5a42.3 42.3 0 0 1 41.9-36.2zm-25.9 142.9h50.2c5.1 9.6 10.5 18.1 16 25.7h-82.2c5.6-7.5 10.9-16.1 16-25.7zm13.5-28.3c4-9.4 7.9-19.5 11.6-30.3 3.7 10.8 7.6 20.9 11.6 30.3h-23.2zm-87.4 66.1a36 36 0 0 1-32.6-7.8c-8.4-10.1-11-19.6-8.1-29.7 5.6-19.8 32.4-43 75.5-65.1a535 535 0 0 1 42.8-19.4c-15.8 49.7-42.2 112.1-77.6 122zm99.4 57.6a44 44 0 0 1-43.8-41.4h87.7a44.1 44.1 0 0 1-43.9 41.4zm131.2-65.3a36.4 36.4 0 0 1-32.3 7.8c-35.6-9.6-62.1-72.2-77.9-122a529 529 0 0 1 42.5 19.3c43.3 22.2 70.2 45.4 75.8 65.2 1.9 6.4 3 16.3-8.1 29.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.3 293c-8-28.4-38.3-56.2-90.2-82.8l-5.4-2.7v-7.8a70.8 70.8 0 0 0-34.3-60.6l1.8-18.3a9.6 9.6 0 0 1 4.1-6.9l11.7-8-16-23.4-11.7 8a38 38 0 0 0-16.4 27.5l-1.2 11.6a64 64 0 0 0-17.4-.1L246 117a37.6 37.6 0 0 0-16.5-27.4l-11.8-7.9-15.8 23.5 11.8 7.9a9.8 9.8 0 0 1 4.2 6.9l2 19a70.5 70.5 0 0 0-34.5 60.7v7l-6.9 3.5c-51.8 26.6-82.2 54.4-90.2 82.8-3.8 13.5-4.4 34.2 14.3 56.3l.9.9c.9.8 18.1 17.5 43.8 17.5 5 0 10.4-.6 16-2.2a70.3 70.3 0 0 0 20.2-9.2 72.3 72.3 0 0 0 144.2.4c6.3 4 12.9 6.9 19.6 8.8a62 62 0 0 0 59.8-15.3l.9-.9c18.7-22.1 18.1-42.8 14.3-56.3zM256 157.4a42.4 42.4 0 0 1 42 36.9c-17.9-7.6-31.8-12.5-36.6-14.2-1.9-.9-4-1.3-6.1-1.3-2.1 0-4.2.4-6.1 1.3-4.7 1.6-18 6.3-35.1 13.5a42.3 42.3 0 0 1 41.9-36.2zm-25.9 142.9h50.2c5.1 9.6 10.5 18.1 16 25.7h-82.2c5.6-7.5 10.9-16.1 16-25.7zm13.5-28.3c4-9.4 7.9-19.5 11.6-30.3 3.7 10.8 7.6 20.9 11.6 30.3h-23.2zm-87.4 66.1a36 36 0 0 1-32.6-7.8c-8.4-10.1-11-19.6-8.1-29.7 5.6-19.8 32.4-43 75.5-65.1a535 535 0 0 1 42.8-19.4c-15.8 49.7-42.2 112.1-77.6 122zm99.4 57.6a44 44 0 0 1-43.8-41.4h87.7a44.1 44.1 0 0 1-43.9 41.4zm131.2-65.3a36.4 36.4 0 0 1-32.3 7.8c-35.6-9.6-62.1-72.2-77.9-122a529 529 0 0 1 42.5 19.3c43.3 22.2 70.2 45.4 75.8 65.2 1.9 6.4 3 16.3-8.1 29.7z\"></path></svg>')}:host .telephone{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M202.9 337.8l-1.7-17.5a720.9 720.9 0 0 1-.2-123.8l2.2-23.7a70.5 70.5 0 0 1 65.8-64.2l31.8-2.1L296 163h-24.8a42.4 42.4 0 0 0-42.4 38.8l-.5 6.2c-2.9 33.4-2.8 67.3.4 100.7a42.3 42.3 0 0 0 42.3 38.5h25l4.7 56.7-32.1-2.2A71.8 71.8 0 0 1 234 390l-19.8 20.7a99.3 99.3 0 0 0 52.5 19.4l33 2.2h1a28.3 28.3 0 0 0 28.3-30.7l-4.7-56.7a28.5 28.5 0 0 0-28.2-26h-25c-7.3 0-13.4-5.5-14.1-12.8-3-31.7-3.1-63.8-.4-95.5l.5-6.2a14 14 0 0 1 14.1-12.9H296c14.6 0 27-11.4 28.2-26l4.7-56.7a28 28 0 0 0-7.4-21.5c-5.4-5.8-13-9.2-20.9-9.2h-.5l-33.2 2.2a99 99 0 0 0-92.1 89.9l-2.2 23.8c-3.6 42.7-3.6 86.1.2 128.9l1.7 17.6c1.8 18.3 8.6 35.6 19.5 50.2l19.9-20.8a73.1 73.1 0 0 1-11-32.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M202.9 337.8l-1.7-17.5a720.9 720.9 0 0 1-.2-123.8l2.2-23.7a70.5 70.5 0 0 1 65.8-64.2l31.8-2.1L296 163h-24.8a42.4 42.4 0 0 0-42.4 38.8l-.5 6.2c-2.9 33.4-2.8 67.3.4 100.7a42.3 42.3 0 0 0 42.3 38.5h25l4.7 56.7-32.1-2.2A71.8 71.8 0 0 1 234 390l-19.8 20.7a99.3 99.3 0 0 0 52.5 19.4l33 2.2h1a28.3 28.3 0 0 0 28.3-30.7l-4.7-56.7a28.5 28.5 0 0 0-28.2-26h-25c-7.3 0-13.4-5.5-14.1-12.8-3-31.7-3.1-63.8-.4-95.5l.5-6.2a14 14 0 0 1 14.1-12.9H296c14.6 0 27-11.4 28.2-26l4.7-56.7a28 28 0 0 0-7.4-21.5c-5.4-5.8-13-9.2-20.9-9.2h-.5l-33.2 2.2a99 99 0 0 0-92.1 89.9l-2.2 23.8c-3.6 42.7-3.6 86.1.2 128.9l1.7 17.6c1.8 18.3 8.6 35.6 19.5 50.2l19.9-20.8a73.1 73.1 0 0 1-11-32.1z\"></path></svg>')}:host .barcode{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M114.2 114.1h28.3v283.3h-28.3z\"></path><path d=\"M191.1 114.1h7v247.4h-7z\"></path><path d=\"M355.6 114.1h7v247.4h-7z\"></path><path d=\"M209.6 114.1h7v247.4h-7z\"></path><path d=\"M319 114.1h28.3v247.4H319z\"></path><path d=\"M276 114.1h7v247.4h-7z\"></path><path d=\"M291.1 114.1h7v247.4h-7z\"></path><path d=\"M243.9 114.1h21v247.4h-21z\"></path><path d=\"M159.2 114.1h21v247.4h-21z\"></path><path d=\"M376.5 114.1h21v283.3h-21z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M114.2 114.1h28.3v283.3h-28.3z\"></path><path d=\"M191.1 114.1h7v247.4h-7z\"></path><path d=\"M355.6 114.1h7v247.4h-7z\"></path><path d=\"M209.6 114.1h7v247.4h-7z\"></path><path d=\"M319 114.1h28.3v247.4H319z\"></path><path d=\"M276 114.1h7v247.4h-7z\"></path><path d=\"M291.1 114.1h7v247.4h-7z\"></path><path d=\"M243.9 114.1h21v247.4h-21z\"></path><path d=\"M159.2 114.1h21v247.4h-21z\"></path><path d=\"M376.5 114.1h21v283.3h-21z\"></path></svg>')}:host .battery{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M412.7 200.1H375v-15.8a28.3 28.3 0 0 0-28.3-28.3H111.4a28.3 28.3 0 0 0-28.3 28.3V326a28.3 28.3 0 0 0 28.3 28.3h235.3A28.3 28.3 0 0 0 375 326v-15.8h37.7c7.8 0 14.2-6.3 14.2-14.2v-81.7a14.3 14.3 0 0 0-14.2-14.2zm-66 125.9H111.4V184.3h235.3V326zm51.8-44.2H375v-53.4h23.5v53.4z\"></path><path d=\"M140.1 211.1v88h148.6l-52-88z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M412.7 200.1H375v-15.8a28.3 28.3 0 0 0-28.3-28.3H111.4a28.3 28.3 0 0 0-28.3 28.3V326a28.3 28.3 0 0 0 28.3 28.3h235.3A28.3 28.3 0 0 0 375 326v-15.8h37.7c7.8 0 14.2-6.3 14.2-14.2v-81.7a14.3 14.3 0 0 0-14.2-14.2zm-66 125.9H111.4V184.3h235.3V326zm51.8-44.2H375v-53.4h23.5v53.4z\"></path><path d=\"M140.1 211.1v88h148.6l-52-88z\"></path></svg>')}:host .giftcard{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M382 141.2H126.9a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.5H382a42.6 42.6 0 0 0 42.5-42.5V183.7c0-23.5-19-42.5-42.5-42.5zm-255.1 28.3H382c7.8 0 14.2 6.4 14.2 14.2v48.9H356c3.8-3.9 6.4-8.3 7.7-13 1.8-6.7.9-13.7-2.5-19.8a31.5 31.5 0 0 0-40.1-12.2c-9.8 3.2-18.5 12.3-26 27-7.5-14.7-16.2-23.8-26-27a31.6 31.6 0 0 0-40.1 12.2 25.5 25.5 0 0 0-2.5 19.8c1.3 4.7 3.9 9.1 7.7 13H112.7v-48.9c0-7.8 6.4-14.2 14.2-14.2zm210.9 51.1a81.2 81.2 0 0 1-25.4 11.9h-1l-1.2.1h-.4c4.8-11.8 11.5-23.2 17.8-25.1l.6-.2.6-.3a14 14 0 0 1 5.4-1.2c4.1 0 7.3 2.2 8.6 4.4 2.5 4.2-2.1 8.3-5 10.4zm-57.6 12h-2.4c-7.7-2.2-17-5.8-25.6-12-2.9-2.1-7.4-6.2-5.1-10.4a10 10 0 0 1 8.6-4.4c1.7 0 3.5.4 5.4 1.2l.6.3.6.2c6.4 1.9 13.1 13.3 17.9 25.1zm101.8 107H126.9c-7.8 0-14.2-6.4-14.2-14.2v-71.8H268l.4 30.7c.1 5.8 4.8 10.4 10.5 10.4h.1c5.8-.1 10.4-4.8 10.4-10.6l-.4-30.4h12l.2 59.2a10.5 10.5 0 1 0 21 0l-.2-59.1h74.2v71.8c0 7.6-6.4 14-14.2 14z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M382 141.2H126.9a42.6 42.6 0 0 0-42.5 42.5v141.7a42.6 42.6 0 0 0 42.5 42.5H382a42.6 42.6 0 0 0 42.5-42.5V183.7c0-23.5-19-42.5-42.5-42.5zm-255.1 28.3H382c7.8 0 14.2 6.4 14.2 14.2v48.9H356c3.8-3.9 6.4-8.3 7.7-13 1.8-6.7.9-13.7-2.5-19.8a31.5 31.5 0 0 0-40.1-12.2c-9.8 3.2-18.5 12.3-26 27-7.5-14.7-16.2-23.8-26-27a31.6 31.6 0 0 0-40.1 12.2 25.5 25.5 0 0 0-2.5 19.8c1.3 4.7 3.9 9.1 7.7 13H112.7v-48.9c0-7.8 6.4-14.2 14.2-14.2zm210.9 51.1a81.2 81.2 0 0 1-25.4 11.9h-1l-1.2.1h-.4c4.8-11.8 11.5-23.2 17.8-25.1l.6-.2.6-.3a14 14 0 0 1 5.4-1.2c4.1 0 7.3 2.2 8.6 4.4 2.5 4.2-2.1 8.3-5 10.4zm-57.6 12h-2.4c-7.7-2.2-17-5.8-25.6-12-2.9-2.1-7.4-6.2-5.1-10.4a10 10 0 0 1 8.6-4.4c1.7 0 3.5.4 5.4 1.2l.6.3.6.2c6.4 1.9 13.1 13.3 17.9 25.1zm101.8 107H126.9c-7.8 0-14.2-6.4-14.2-14.2v-71.8H268l.4 30.7c.1 5.8 4.8 10.4 10.5 10.4h.1c5.8-.1 10.4-4.8 10.4-10.6l-.4-30.4h12l.2 59.2a10.5 10.5 0 1 0 21 0l-.2-59.1h74.2v71.8c0 7.6-6.4 14-14.2 14z\"></path></svg>')}:host .sextant{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.5 402.1L363 307.3a130.9 130.9 0 0 0 24.2-76.2 14.2 14.2 0 1 0-28.4 0c0 17.9-4.6 34.8-12.6 49.5l-40.6-64.8-.4-.6a56.6 56.6 0 0 0-36.3-81.6V86.4h-28.3v47.5a56.9 56.9 0 0 0-35.6 81.2l-.6.8-40.6 64.8c-8-14.7-12.6-31.6-12.6-49.5a14.2 14.2 0 1 0-28.4 0c0 28.4 9 54.6 24.2 76.2l-59.5 94.8a14 14 0 0 0 4.5 19.5c2.3 1.5 4.9 2.2 7.5 2.2 4.7 0 9.3-2.4 12-6.6l55.1-87.8a132.1 132.1 0 0 0 74.1 33.2v9.6a14.2 14.2 0 1 0 28.4 0v-9.6c28.3-3 54-15.1 74.1-33.2l55.1 87.8a14.1 14.1 0 0 0 19.5 4.4 14 14 0 0 0 4.7-19.6zM255.2 160.3a28.3 28.3 0 1 1 0 56.7 28.3 28.3 0 0 1 0-56.7zm14.1 173.6V323a14.2 14.2 0 1 0-28.4 0v10.9a103.6 103.6 0 0 1-58.8-29.1l42.8-68.3a56.8 56.8 0 0 0 60.3.1l42.8 68.2c-15.5 15.5-36 26-58.7 29.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.5 402.1L363 307.3a130.9 130.9 0 0 0 24.2-76.2 14.2 14.2 0 1 0-28.4 0c0 17.9-4.6 34.8-12.6 49.5l-40.6-64.8-.4-.6a56.6 56.6 0 0 0-36.3-81.6V86.4h-28.3v47.5a56.9 56.9 0 0 0-35.6 81.2l-.6.8-40.6 64.8c-8-14.7-12.6-31.6-12.6-49.5a14.2 14.2 0 1 0-28.4 0c0 28.4 9 54.6 24.2 76.2l-59.5 94.8a14 14 0 0 0 4.5 19.5c2.3 1.5 4.9 2.2 7.5 2.2 4.7 0 9.3-2.4 12-6.6l55.1-87.8a132.1 132.1 0 0 0 74.1 33.2v9.6a14.2 14.2 0 1 0 28.4 0v-9.6c28.3-3 54-15.1 74.1-33.2l55.1 87.8a14.1 14.1 0 0 0 19.5 4.4 14 14 0 0 0 4.7-19.6zM255.2 160.3a28.3 28.3 0 1 1 0 56.7 28.3 28.3 0 0 1 0-56.7zm14.1 173.6V323a14.2 14.2 0 1 0-28.4 0v10.9a103.6 103.6 0 0 1-58.8-29.1l42.8-68.3a56.8 56.8 0 0 0 60.3.1l42.8 68.2c-15.5 15.5-36 26-58.7 29.1z\"></path></svg>')}:host .softwarepackage{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M207.9 221.3a48 48 0 1 0 96-.1 48 48 0 0 0-96 .1zm67.5 0a19.6 19.6 0 1 1-39.3 0 19.6 19.6 0 0 1 39.3 0z\"></path><path d=\"M397.9 284.6H114.5a28.3 28.3 0 0 0-28.3 28.3v83.9a28.3 28.3 0 0 0 28.3 28.3H398a28.3 28.3 0 0 0 28.3-28.3V313a28.4 28.4 0 0 0-28.4-28.4zM114.5 396.9V313H398v83.9H114.5z\"></path><path d=\"M156.1 269.6a109.7 109.7 0 1 1 199.5 0h30.5A138.1 138.1 0 0 0 255.8 86.2a138.1 138.1 0 0 0-130.3 183.4h30.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M207.9 221.3a48 48 0 1 0 96-.1 48 48 0 0 0-96 .1zm67.5 0a19.6 19.6 0 1 1-39.3 0 19.6 19.6 0 0 1 39.3 0z\"></path><path d=\"M397.9 284.6H114.5a28.3 28.3 0 0 0-28.3 28.3v83.9a28.3 28.3 0 0 0 28.3 28.3H398a28.3 28.3 0 0 0 28.3-28.3V313a28.4 28.4 0 0 0-28.4-28.4zM114.5 396.9V313H398v83.9H114.5z\"></path><path d=\"M156.1 269.6a109.7 109.7 0 1 1 199.5 0h30.5A138.1 138.1 0 0 0 255.8 86.2a138.1 138.1 0 0 0-130.3 183.4h30.6z\"></path></svg>')}:host .service-center{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M165 291.1a69.2 69.2 0 1 0-.2-138.4 69.2 69.2 0 0 0 .2 138.4zm58-70.5h-27.8c-.1-10.3-1.3-20.2-3.5-29h22.6a55.5 55.5 0 0 1 8.7 29zM165 280a65 65 0 0 1-10.9-1c-3-3-5.8-7.3-8.3-12.6a81.5 81.5 0 0 1-4.1-11.2h46.5c-1.1 4-2.5 7.8-4.1 11.2a40 40 0 0 1-8.3 12.6c-3.4.7-7.1 1-10.8 1zm24-27.6h-48c-2.2-8.8-3.4-18.7-3.5-29h55c-.1 10.3-1.3 20.2-3.5 29zm5.4-14.7l.2-1.5.3-3.1.2-3.1.1-3.2.1-3.4H223a57.3 57.3 0 0 1-8.6 29h-22.6c1.1-4.7 2-9.6 2.6-14.7zm-1.9-17.1h-55c.1-10.3 1.3-20.2 3.5-29h48c2.2 8.8 3.4 18.7 3.5 29zm-57.8 0h-27.8a57.3 57.3 0 0 1 8.6-29h22.6c-2.1 8.8-3.3 18.7-3.4 29zm0 2.8l.1 3.4.1 3.2.2 3.1.3 3.1.2 1.5c.6 5.1 1.5 10.1 2.6 14.7h-22.6a57.6 57.6 0 0 1-8.6-29h27.7zm-17.4 31.8h21.5a86 86 0 0 0 4.4 12.4c1.9 4.1 3.9 7.6 6.2 10.4a59.1 59.1 0 0 1-32.1-22.8zm63.2 22.7a53 53 0 0 0 6.2-10.4c1.7-3.8 3.2-7.9 4.4-12.4h21.5a57.4 57.4 0 0 1-32.1 22.8zm32.1-89.1h-21.5a86 86 0 0 0-4.4-12.4 48.5 48.5 0 0 0-6.2-10.4 58.4 58.4 0 0 1 32.1 22.8zm-36.7-23.9c3 3 5.8 7.2 8.3 12.6 1.6 3.4 2.9 7.2 4.1 11.2h-46.5c1.1-4 2.5-7.8 4.1-11.2a40 40 0 0 1 8.3-12.6 56 56 0 0 1 21.7 0zm-26.5 1.1a53 53 0 0 0-6.2 10.4 81.9 81.9 0 0 0-4.4 12.4h-21.5a59.1 59.1 0 0 1 32.1-22.8z\"></path><path d=\"M384.8 170.5h-49.6v-56.7a28.3 28.3 0 0 0-28.3-28.3H179.3a28.3 28.3 0 0 0-28.3 28.3v22.3a83.3 83.3 0 0 1 28.3 0v-22.3h127.6v283.5H236v-63.8h-28.3v63.8h-28.3v-89a82.1 82.1 0 0 1-28.3 0v117.3H413.4V198.9a28.7 28.7 0 0 0-28.6-28.4zm0 226.8h-49.6V198.9h49.6v198.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M165 291.1a69.2 69.2 0 1 0-.2-138.4 69.2 69.2 0 0 0 .2 138.4zm58-70.5h-27.8c-.1-10.3-1.3-20.2-3.5-29h22.6a55.5 55.5 0 0 1 8.7 29zM165 280a65 65 0 0 1-10.9-1c-3-3-5.8-7.3-8.3-12.6a81.5 81.5 0 0 1-4.1-11.2h46.5c-1.1 4-2.5 7.8-4.1 11.2a40 40 0 0 1-8.3 12.6c-3.4.7-7.1 1-10.8 1zm24-27.6h-48c-2.2-8.8-3.4-18.7-3.5-29h55c-.1 10.3-1.3 20.2-3.5 29zm5.4-14.7l.2-1.5.3-3.1.2-3.1.1-3.2.1-3.4H223a57.3 57.3 0 0 1-8.6 29h-22.6c1.1-4.7 2-9.6 2.6-14.7zm-1.9-17.1h-55c.1-10.3 1.3-20.2 3.5-29h48c2.2 8.8 3.4 18.7 3.5 29zm-57.8 0h-27.8a57.3 57.3 0 0 1 8.6-29h22.6c-2.1 8.8-3.3 18.7-3.4 29zm0 2.8l.1 3.4.1 3.2.2 3.1.3 3.1.2 1.5c.6 5.1 1.5 10.1 2.6 14.7h-22.6a57.6 57.6 0 0 1-8.6-29h27.7zm-17.4 31.8h21.5a86 86 0 0 0 4.4 12.4c1.9 4.1 3.9 7.6 6.2 10.4a59.1 59.1 0 0 1-32.1-22.8zm63.2 22.7a53 53 0 0 0 6.2-10.4c1.7-3.8 3.2-7.9 4.4-12.4h21.5a57.4 57.4 0 0 1-32.1 22.8zm32.1-89.1h-21.5a86 86 0 0 0-4.4-12.4 48.5 48.5 0 0 0-6.2-10.4 58.4 58.4 0 0 1 32.1 22.8zm-36.7-23.9c3 3 5.8 7.2 8.3 12.6 1.6 3.4 2.9 7.2 4.1 11.2h-46.5c1.1-4 2.5-7.8 4.1-11.2a40 40 0 0 1 8.3-12.6 56 56 0 0 1 21.7 0zm-26.5 1.1a53 53 0 0 0-6.2 10.4 81.9 81.9 0 0 0-4.4 12.4h-21.5a59.1 59.1 0 0 1 32.1-22.8z\"></path><path d=\"M384.8 170.5h-49.6v-56.7a28.3 28.3 0 0 0-28.3-28.3H179.3a28.3 28.3 0 0 0-28.3 28.3v22.3a83.3 83.3 0 0 1 28.3 0v-22.3h127.6v283.5H236v-63.8h-28.3v63.8h-28.3v-89a82.1 82.1 0 0 1-28.3 0v117.3H413.4V198.9a28.7 28.7 0 0 0-28.6-28.4zm0 226.8h-49.6V198.9h49.6v198.4z\"></path></svg>')}:host .cost-reduction{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M244.2 201.3c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.3 11.5-1.9 20.1-15 20.1z\"></path><path d=\"M343.8 180.1c-.7 9.8-2.9 19.2-6.3 28.1 31 .3 56.2 25.6 56.2 56.7 0 31.3-25.4 56.7-56.7 56.7-31.1 0-56.4-25.1-56.7-56.2-8.8 3.4-18.2 5.6-28.1 6.3 3.5 43.7 40.1 78.2 84.7 78.2 46.9 0 85-38.1 85-85 .1-44.6-34.4-81.3-78.1-84.8z\"></path><path d=\"M321 210.5a83.94 83.94 0 0 0 8.8-37.7c0-46.9-38.1-85-85-85s-85 38.1-85 85 38.1 85 85 85a83.94 83.94 0 0 0 37.7-8.8 85.9 85.9 0 0 0 38.5-38.5zm-60.2 16.6c-5.1 1.5-10.4 2.3-15.9 2.3-31.3 0-56.7-25.4-56.7-56.7s25.4-56.7 56.7-56.7c31.3 0 56.7 25.4 56.7 56.7 0 5.5-.8 10.9-2.3 15.9a57.2 57.2 0 0 1-38.5 38.5z\"></path><path d=\"M247.6 164.2c-4.2 0-6.3 1.3-8.8 3.9l.8-17.7h18.2v-6.2h-26l-1 31.4h8c.5-3.2 2.7-5.5 6.1-5.5 5.7 0 6.1 6.5 6.1 11.1 0 8.2-.6 13.9-6.4 13.9-4.7 0-5.9-3.4-5.9-7.7h-8.3c0 9.6 4.7 13.8 14 13.8 13.1 0 15.2-8.5 15.2-20.2-.1-8.9-1.9-16.8-12-16.8z\"></path><path d=\"M209 299.6l-.5 63.9-49.5-42 .1-.1-24.8-21.1a50.34 50.34 0 0 1-17.8-38.8l.3-40-28.3-.2-.3 40.1c-.1 23.4 10 45.4 27.8 60.6l24.4 20.7-.1.1 49.9 42.4-63 10.8 4.8 27.9L236.6 406l.8-106.1-28.4-.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M244.2 201.3c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.3 11.5-1.9 20.1-15 20.1z\"></path><path d=\"M343.8 180.1c-.7 9.8-2.9 19.2-6.3 28.1 31 .3 56.2 25.6 56.2 56.7 0 31.3-25.4 56.7-56.7 56.7-31.1 0-56.4-25.1-56.7-56.2-8.8 3.4-18.2 5.6-28.1 6.3 3.5 43.7 40.1 78.2 84.7 78.2 46.9 0 85-38.1 85-85 .1-44.6-34.4-81.3-78.1-84.8z\"></path><path d=\"M321 210.5a83.94 83.94 0 0 0 8.8-37.7c0-46.9-38.1-85-85-85s-85 38.1-85 85 38.1 85 85 85a83.94 83.94 0 0 0 37.7-8.8 85.9 85.9 0 0 0 38.5-38.5zm-60.2 16.6c-5.1 1.5-10.4 2.3-15.9 2.3-31.3 0-56.7-25.4-56.7-56.7s25.4-56.7 56.7-56.7c31.3 0 56.7 25.4 56.7 56.7 0 5.5-.8 10.9-2.3 15.9a57.2 57.2 0 0 1-38.5 38.5z\"></path><path d=\"M247.6 164.2c-4.2 0-6.3 1.3-8.8 3.9l.8-17.7h18.2v-6.2h-26l-1 31.4h8c.5-3.2 2.7-5.5 6.1-5.5 5.7 0 6.1 6.5 6.1 11.1 0 8.2-.6 13.9-6.4 13.9-4.7 0-5.9-3.4-5.9-7.7h-8.3c0 9.6 4.7 13.8 14 13.8 13.1 0 15.2-8.5 15.2-20.2-.1-8.9-1.9-16.8-12-16.8z\"></path><path d=\"M209 299.6l-.5 63.9-49.5-42 .1-.1-24.8-21.1a50.34 50.34 0 0 1-17.8-38.8l.3-40-28.3-.2-.3 40.1c-.1 23.4 10 45.4 27.8 60.6l24.4 20.7-.1.1 49.9 42.4-63 10.8 4.8 27.9L236.6 406l.8-106.1-28.4-.3z\"></path></svg>')}:host .international-connectivity{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.1 76.9A177.4 177.4 0 0 0 76.9 254.1c0 97.7 79.5 177.2 177.2 177.2S431.2 351.7 431.2 254c0-97.7-79.4-177.1-177.1-177.1zm28 323.3a151.9 151.9 0 0 1-56 0 110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7h89.2a31 31 0 0 0 22.1 22.6l-2.6 6.1a108.8 108.8 0 0 1-21.1 32.4zM105.3 257.6h38.3a31.2 31.2 0 0 0 34.3 29.5c1.5 15.7 3.9 30.8 7.4 44.9h-58a147.9 147.9 0 0 1-22-74.4zm120.8-149.7a151.9 151.9 0 0 1 56 .1c7.7 7.7 14.9 18.6 21.2 32.4.9 2.1 1.9 4.2 2.7 6.4a31.3 31.3 0 0 0-22.2 22.4h-89.3c2.9-10.3 6.4-20 10.4-28.7 6.3-14.1 13.5-25 21.2-32.6zm-41.2 177.7c5.3-1.8 10-5.1 13.6-9.3l86.2 44.6c-1.2 3.3-1.9 7-1.9 10.7v.4h-90.2a312 312 0 0 1-7.7-46.4zM314 300.4a31.2 31.2 0 0 0-26.1 14.1l-85.4-44.2c2-3.9 3.2-8.2 3.4-12.8h118.7c-.1 15-1.2 29.7-3.2 43.7a35 35 0 0 0-7.4-.8zm-108.6-49.9c-.9-4.8-2.8-9.2-5.7-13l91.4-39.5a31.2 31.2 0 0 0 30.3 9.1c1.9 13.9 3 28.5 3.1 43.4H205.4zm77.5-74.4v.7a31 31 0 0 0 4.1 15.4L194.6 232a30.5 30.5 0 0 0-10-5.5c1.4-17.8 4.1-34.8 8-50.4h90.3zM177.6 225l-2.8-.1c-15.3 0-28 11-30.7 25.6h-38.8c.6-27.2 8.6-52.7 22.1-74.4h58a308.4 308.4 0 0 0-7.8 48.9zm150.6 78.8c2.1-14.8 3.3-30.4 3.5-46.3h71.2c-.6 27.2-8.6 52.7-22.1 74.4h-35.6v-.4c0-12-6.9-22.5-17-27.7zm3.5-53.3c-.2-15.8-1.3-31.3-3.4-46a31.2 31.2 0 0 0 16.9-27.7v-.7h35.6a148.7 148.7 0 0 1 22.1 74.4h-71.2zm44.4-81.5h-31.9a31.2 31.2 0 0 0-30.2-23.4h-.8l-3.5-8.3a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4zm-161.8-58.4c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7H132c19.6-28 48.5-49 82.3-58.4zM132 339.1h55.1c3.1 11.4 6.9 22 11.3 31.7a133.5 133.5 0 0 0 15.8 26.7 150.1 150.1 0 0 1-82.2-58.4zm161.9 58.3c5.7-7.3 11-16.2 15.8-26.7l3.4-8h.9a31.3 31.3 0 0 0 30.3-23.7h31.8a148.8 148.8 0 0 1-82.2 58.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M254.1 76.9A177.4 177.4 0 0 0 76.9 254.1c0 97.7 79.5 177.2 177.2 177.2S431.2 351.7 431.2 254c0-97.7-79.4-177.1-177.1-177.1zm28 323.3a151.9 151.9 0 0 1-56 0 110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7h89.2a31 31 0 0 0 22.1 22.6l-2.6 6.1a108.8 108.8 0 0 1-21.1 32.4zM105.3 257.6h38.3a31.2 31.2 0 0 0 34.3 29.5c1.5 15.7 3.9 30.8 7.4 44.9h-58a147.9 147.9 0 0 1-22-74.4zm120.8-149.7a151.9 151.9 0 0 1 56 .1c7.7 7.7 14.9 18.6 21.2 32.4.9 2.1 1.9 4.2 2.7 6.4a31.3 31.3 0 0 0-22.2 22.4h-89.3c2.9-10.3 6.4-20 10.4-28.7 6.3-14.1 13.5-25 21.2-32.6zm-41.2 177.7c5.3-1.8 10-5.1 13.6-9.3l86.2 44.6c-1.2 3.3-1.9 7-1.9 10.7v.4h-90.2a312 312 0 0 1-7.7-46.4zM314 300.4a31.2 31.2 0 0 0-26.1 14.1l-85.4-44.2c2-3.9 3.2-8.2 3.4-12.8h118.7c-.1 15-1.2 29.7-3.2 43.7a35 35 0 0 0-7.4-.8zm-108.6-49.9c-.9-4.8-2.8-9.2-5.7-13l91.4-39.5a31.2 31.2 0 0 0 30.3 9.1c1.9 13.9 3 28.5 3.1 43.4H205.4zm77.5-74.4v.7a31 31 0 0 0 4.1 15.4L194.6 232a30.5 30.5 0 0 0-10-5.5c1.4-17.8 4.1-34.8 8-50.4h90.3zM177.6 225l-2.8-.1c-15.3 0-28 11-30.7 25.6h-38.8c.6-27.2 8.6-52.7 22.1-74.4h58a308.4 308.4 0 0 0-7.8 48.9zm150.6 78.8c2.1-14.8 3.3-30.4 3.5-46.3h71.2c-.6 27.2-8.6 52.7-22.1 74.4h-35.6v-.4c0-12-6.9-22.5-17-27.7zm3.5-53.3c-.2-15.8-1.3-31.3-3.4-46a31.2 31.2 0 0 0 16.9-27.7v-.7h35.6a148.7 148.7 0 0 1 22.1 74.4h-71.2zm44.4-81.5h-31.9a31.2 31.2 0 0 0-30.2-23.4h-.8l-3.5-8.3a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4zm-161.8-58.4c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7H132c19.6-28 48.5-49 82.3-58.4zM132 339.1h55.1c3.1 11.4 6.9 22 11.3 31.7a133.5 133.5 0 0 0 15.8 26.7 150.1 150.1 0 0 1-82.2-58.4zm161.9 58.3c5.7-7.3 11-16.2 15.8-26.7l3.4-8h.9a31.3 31.3 0 0 0 30.3-23.7h31.8a148.8 148.8 0 0 1-82.2 58.4z\"></path></svg>')}:host .cyber-security{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M134.7 184.1c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6H404V184.1a35.5 35.5 0 0 0-35.4-35.4H141.8a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V184.1z\"></path><path d=\"M425.2 332.9H85.1v28.3h340.2v-28.3zm-127.5 17.8h-85v-7.1h85v7.1z\"></path><path d=\"M257.1 310.7c19.4-8.1 34.5-25.6 43.8-50.6 6.9-18.6 8.1-34.8 8.2-35.5v-.7-.2c0-1.3-.5-2.4-1.3-3.2a4.3 4.3 0 0 0-2.8-1.5l-.7-.1c-23.7 0-45.4-27.3-45.6-27.7a4.8 4.8 0 0 0-3.5-1.8c-1.7 0-3.5.3-4.6 1.8-.2.3-21.9 27.7-45.6 27.7a4.8 4.8 0 0 0-4.8 4.8V224.6a147 147 0 0 0 8.2 35.5c9.1 24.6 24.9 42.4 43.8 50.7l2.4.9 2.5-1zm-2.4-10.3a61.2 61.2 0 0 1-25.6-21l58.7-12.7a67 67 0 0 1-33.1 33.7zm-31.4-30.3a97.7 97.7 0 0 1-4.8-10.3l77.8-16.7a96 96 0 0 1-3.6 12l-69.4 15zm-8.5-20.5c-2.5-8.6-3.9-16.7-4.6-21.4 20.2-2.5 37.3-19 44.4-26.9 7.1 7.9 24.3 24.4 44.5 26.9l-.6 3.5-83.7 17.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M134.7 184.1c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6H404V184.1a35.5 35.5 0 0 0-35.4-35.4H141.8a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V184.1z\"></path><path d=\"M425.2 332.9H85.1v28.3h340.2v-28.3zm-127.5 17.8h-85v-7.1h85v7.1z\"></path><path d=\"M257.1 310.7c19.4-8.1 34.5-25.6 43.8-50.6 6.9-18.6 8.1-34.8 8.2-35.5v-.7-.2c0-1.3-.5-2.4-1.3-3.2a4.3 4.3 0 0 0-2.8-1.5l-.7-.1c-23.7 0-45.4-27.3-45.6-27.7a4.8 4.8 0 0 0-3.5-1.8c-1.7 0-3.5.3-4.6 1.8-.2.3-21.9 27.7-45.6 27.7a4.8 4.8 0 0 0-4.8 4.8V224.6a147 147 0 0 0 8.2 35.5c9.1 24.6 24.9 42.4 43.8 50.7l2.4.9 2.5-1zm-2.4-10.3a61.2 61.2 0 0 1-25.6-21l58.7-12.7a67 67 0 0 1-33.1 33.7zm-31.4-30.3a97.7 97.7 0 0 1-4.8-10.3l77.8-16.7a96 96 0 0 1-3.6 12l-69.4 15zm-8.5-20.5c-2.5-8.6-3.9-16.7-4.6-21.4 20.2-2.5 37.3-19 44.4-26.9 7.1 7.9 24.3 24.4 44.5 26.9l-.6 3.5-83.7 17.9z\"></path></svg>')}:host .telescope{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422 122.4a17.7 17.7 0 0 0-17.7-17.3c-4.2 0-8.2 1.5-11.4 4.2l-141 .2A17.7 17.7 0 0 0 235 122l-78.2.1a17.3 17.3 0 0 0-15.3 8.9h-30.6a17.3 17.3 0 0 0-11.9-4.6 17.7 17.7 0 0 0-17.7 17.7l.1 40.6a17.7 17.7 0 0 0 17.7 17.7c4.5 0 8.7-1.7 11.9-4.7h30.6a17.9 17.9 0 0 0 15.3 8.9l75.9-.1-81.6 177.8a14.2 14.2 0 0 0 25.8 11.8l77.3-168.5L331.7 396a14.2 14.2 0 1 0 25.8-11.8l-75.9-165.7 111.5.1a17.6 17.6 0 0 0 29-13.2c4-7.8 11-23.9 11-41.5a95 95 0 0 0-11.1-41.5zm-266 46.8l-46.2.1v-10l46.2-.1v10zm28.4-18.8l58-.1V178l-58 .1v-27.7zM398 190.2l-127.4.2.1-1.2v-51.4l127.2-.2a63.7 63.7 0 0 1 6.8 26.2 62.8 62.8 0 0 1-6.7 26.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422 122.4a17.7 17.7 0 0 0-17.7-17.3c-4.2 0-8.2 1.5-11.4 4.2l-141 .2A17.7 17.7 0 0 0 235 122l-78.2.1a17.3 17.3 0 0 0-15.3 8.9h-30.6a17.3 17.3 0 0 0-11.9-4.6 17.7 17.7 0 0 0-17.7 17.7l.1 40.6a17.7 17.7 0 0 0 17.7 17.7c4.5 0 8.7-1.7 11.9-4.7h30.6a17.9 17.9 0 0 0 15.3 8.9l75.9-.1-81.6 177.8a14.2 14.2 0 0 0 25.8 11.8l77.3-168.5L331.7 396a14.2 14.2 0 1 0 25.8-11.8l-75.9-165.7 111.5.1a17.6 17.6 0 0 0 29-13.2c4-7.8 11-23.9 11-41.5a95 95 0 0 0-11.1-41.5zm-266 46.8l-46.2.1v-10l46.2-.1v10zm28.4-18.8l58-.1V178l-58 .1v-27.7zM398 190.2l-127.4.2.1-1.2v-51.4l127.2-.2a63.7 63.7 0 0 1 6.8 26.2 62.8 62.8 0 0 1-6.7 26.4z\"></path></svg>')}:host .storage{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"361.4\" cy=\"318.9\" r=\"14.2\"></circle><path d=\"M113.4 396.8h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3h-49.6v28.3h49.6v99.2H113.4v-99.2h21V241h-21a28.3 28.3 0 0 0-28.3 28.3v99.2a28.3 28.3 0 0 0 28.3 28.3z\"></path><path d=\"M187.8 305.1h106.3a32 32 0 0 0 31.9-31.9V202a31.9 31.9 0 0 0-31.5-31.9v-27.4a53.6 53.6 0 0 0-107 0v27.4A31.9 31.9 0 0 0 156 202v71.2a31.8 31.8 0 0 0 31.8 31.9zm27.9-162.4a25.2 25.2 0 0 1 50.4 0V170h-50.4v-27.3zM184.3 202c0-2 1.6-3.5 3.5-3.5h106.3c2 0 3.5 1.6 3.5 3.5v71.2c0 2-1.6 3.5-3.5 3.5H187.8c-2 0-3.5-1.6-3.5-3.5V202z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"361.4\" cy=\"318.9\" r=\"14.2\"></circle><path d=\"M113.4 396.8h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.3 28.3 0 0 0-28.3-28.3h-49.6v28.3h49.6v99.2H113.4v-99.2h21V241h-21a28.3 28.3 0 0 0-28.3 28.3v99.2a28.3 28.3 0 0 0 28.3 28.3z\"></path><path d=\"M187.8 305.1h106.3a32 32 0 0 0 31.9-31.9V202a31.9 31.9 0 0 0-31.5-31.9v-27.4a53.6 53.6 0 0 0-107 0v27.4A31.9 31.9 0 0 0 156 202v71.2a31.8 31.8 0 0 0 31.8 31.9zm27.9-162.4a25.2 25.2 0 0 1 50.4 0V170h-50.4v-27.3zM184.3 202c0-2 1.6-3.5 3.5-3.5h106.3c2 0 3.5 1.6 3.5 3.5v71.2c0 2-1.6 3.5-3.5 3.5H187.8c-2 0-3.5-1.6-3.5-3.5V202z\"></path></svg>')}:host .seal{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M367.4 176.9l-7.6-5c-1.2-.8-1.9-3.3-1.2-4.6l4-8.2c3.9-8 3.9-16.6-.1-23.5-4-7-11.4-11.3-20.4-11.9l-9.1-.7c-1.4-.1-3.2-1.9-3.3-3.4l-.6-9.1a24.9 24.9 0 0 0-11.9-20.4c-7-4-15.6-4.1-23.5-.1l-8.1 4c-1.4.7-3.8 0-4.7-1.2l-5-7.6a24.7 24.7 0 0 0-20.5-11.7c-8.1 0-15.5 4.3-20.4 11.7l-5.1 7.6c-.8 1.2-3.3 1.9-4.6 1.2l-8.2-4.1c-8-3.9-16.6-3.9-23.6.2a24.5 24.5 0 0 0-11.8 20.3l-.6 9.1c-.1 1.5-1.9 3.3-3.4 3.4l-9.2.6c-8.9.6-16.3 4.9-20.3 11.9s-4.1 15.6-.1 23.5l4.1 8.2c.7 1.3 0 3.8-1.2 4.6l-8 5.3a24.6 24.6 0 0 0-11.6 20.5c0 8.1 4.2 15.5 11.7 20.5l7.6 5.1c1.2.8 1.9 3.3 1.2 4.6l-4 8.2c-4 8-3.9 16.6.1 23.6s11.4 11.3 20.4 11.9l5.4.3-.2 2.5v148.4a14.2 14.2 0 0 0 14.1 14.2c3.3 0 6.6-1.2 9.2-3.4l55.8-47.8 59.8 48.1a14.1 14.1 0 0 0 23-11.1V274.1l-.2-2.4 6.7-.4c8.9-.6 16.3-4.9 20.4-11.9 4-7 4.1-15.6.1-23.5l-4.1-8.2c-.6-1.3 0-3.8 1.2-4.6l7.6-5.1a24.7 24.7 0 0 0 11.7-20.5c.2-8.1-4.1-15.6-11.5-20.6zM261.4 356a14 14 0 0 0-18.1.3l-41.4 35.4v-84.1c4.9.6 10-.3 15-2.7l8.2-4c1.3-.7 3.8 0 4.6 1.2l5.1 7.6a24.7 24.7 0 0 0 20.5 11.7c8.1 0 15.5-4.3 20.5-11.7l5-7.6c.8-1.2 3.3-1.9 4.7-1.2l8.2 4.1c4.5 2.2 9.2 3.2 13.7 2.9v85.2l-46-37.1zM344 199.4a32.3 32.3 0 0 0-10.9 40.7l1.6 3.2-3.5.2a32.6 32.6 0 0 0-29.9 29.9l-.2 3.5-3.1-1.5a32.5 32.5 0 0 0-40.9 10.9l-1.9 2.9-2-3a32.4 32.4 0 0 0-40.8-10.9l-3.1 1.5-.2-3.5a32.6 32.6 0 0 0-29.9-29.9l-3.5-.2 1.6-3.2c7-14.1 2.2-32-10.9-40.8l-2.9-2 2.9-1.9a32.5 32.5 0 0 0 11-40.7l-1.6-3.2 3.5-.2a32.6 32.6 0 0 0 29.9-29.8l.2-3.5 3.2 1.6c14.1 7 32 2.1 40.7-10.9l2-3 1.9 2.9a32.4 32.4 0 0 0 40.8 10.9l3.1-1.6.2 3.5a32.4 32.4 0 0 0 29.8 29.9l3.5.2-1.6 3.2c-7 14.1-2.2 32 10.9 40.8l2.9 1.9-2.8 2.1z\"></path><path d=\"M255.2 152.1a44.2 44.2 0 1 0 0 88.4 44.2 44.2 0 0 0 0-88.4zm0 60a15.8 15.8 0 0 1 0-31.6 15.8 15.8 0 0 1 0 31.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M367.4 176.9l-7.6-5c-1.2-.8-1.9-3.3-1.2-4.6l4-8.2c3.9-8 3.9-16.6-.1-23.5-4-7-11.4-11.3-20.4-11.9l-9.1-.7c-1.4-.1-3.2-1.9-3.3-3.4l-.6-9.1a24.9 24.9 0 0 0-11.9-20.4c-7-4-15.6-4.1-23.5-.1l-8.1 4c-1.4.7-3.8 0-4.7-1.2l-5-7.6a24.7 24.7 0 0 0-20.5-11.7c-8.1 0-15.5 4.3-20.4 11.7l-5.1 7.6c-.8 1.2-3.3 1.9-4.6 1.2l-8.2-4.1c-8-3.9-16.6-3.9-23.6.2a24.5 24.5 0 0 0-11.8 20.3l-.6 9.1c-.1 1.5-1.9 3.3-3.4 3.4l-9.2.6c-8.9.6-16.3 4.9-20.3 11.9s-4.1 15.6-.1 23.5l4.1 8.2c.7 1.3 0 3.8-1.2 4.6l-8 5.3a24.6 24.6 0 0 0-11.6 20.5c0 8.1 4.2 15.5 11.7 20.5l7.6 5.1c1.2.8 1.9 3.3 1.2 4.6l-4 8.2c-4 8-3.9 16.6.1 23.6s11.4 11.3 20.4 11.9l5.4.3-.2 2.5v148.4a14.2 14.2 0 0 0 14.1 14.2c3.3 0 6.6-1.2 9.2-3.4l55.8-47.8 59.8 48.1a14.1 14.1 0 0 0 23-11.1V274.1l-.2-2.4 6.7-.4c8.9-.6 16.3-4.9 20.4-11.9 4-7 4.1-15.6.1-23.5l-4.1-8.2c-.6-1.3 0-3.8 1.2-4.6l7.6-5.1a24.7 24.7 0 0 0 11.7-20.5c.2-8.1-4.1-15.6-11.5-20.6zM261.4 356a14 14 0 0 0-18.1.3l-41.4 35.4v-84.1c4.9.6 10-.3 15-2.7l8.2-4c1.3-.7 3.8 0 4.6 1.2l5.1 7.6a24.7 24.7 0 0 0 20.5 11.7c8.1 0 15.5-4.3 20.5-11.7l5-7.6c.8-1.2 3.3-1.9 4.7-1.2l8.2 4.1c4.5 2.2 9.2 3.2 13.7 2.9v85.2l-46-37.1zM344 199.4a32.3 32.3 0 0 0-10.9 40.7l1.6 3.2-3.5.2a32.6 32.6 0 0 0-29.9 29.9l-.2 3.5-3.1-1.5a32.5 32.5 0 0 0-40.9 10.9l-1.9 2.9-2-3a32.4 32.4 0 0 0-40.8-10.9l-3.1 1.5-.2-3.5a32.6 32.6 0 0 0-29.9-29.9l-3.5-.2 1.6-3.2c7-14.1 2.2-32-10.9-40.8l-2.9-2 2.9-1.9a32.5 32.5 0 0 0 11-40.7l-1.6-3.2 3.5-.2a32.6 32.6 0 0 0 29.9-29.8l.2-3.5 3.2 1.6c14.1 7 32 2.1 40.7-10.9l2-3 1.9 2.9a32.4 32.4 0 0 0 40.8 10.9l3.1-1.6.2 3.5a32.4 32.4 0 0 0 29.8 29.9l3.5.2-1.6 3.2c-7 14.1-2.2 32 10.9 40.8l2.9 1.9-2.8 2.1z\"></path><path d=\"M255.2 152.1a44.2 44.2 0 1 0 0 88.4 44.2 44.2 0 0 0 0-88.4zm0 60a15.8 15.8 0 0 1 0-31.6 15.8 15.8 0 0 1 0 31.6z\"></path></svg>')}:host .stock{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.4 423.8H85.9V262.2h161.6v161.6zm-133.2-28.3h104.9V290.6H114.2v104.9z\"></path><path d=\"M134.8 312.1h64v28.3h-64z\"></path><path d=\"M424.9 423.8H263.4V262.2H425v161.6zm-133.2-28.3h104.9V290.6H291.7v104.9z\"></path><path d=\"M312.3 312.1h64v28.3h-64z\"></path><path d=\"M336.3 246.2H174.7V84.6h161.6v161.6zm-133.2-28.4H308V113H203.1v104.8z\"></path><path d=\"M223.6 134.5h64v28.3h-64z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.4 423.8H85.9V262.2h161.6v161.6zm-133.2-28.3h104.9V290.6H114.2v104.9z\"></path><path d=\"M134.8 312.1h64v28.3h-64z\"></path><path d=\"M424.9 423.8H263.4V262.2H425v161.6zm-133.2-28.3h104.9V290.6H291.7v104.9z\"></path><path d=\"M312.3 312.1h64v28.3h-64z\"></path><path d=\"M336.3 246.2H174.7V84.6h161.6v161.6zm-133.2-28.4H308V113H203.1v104.8z\"></path><path d=\"M223.6 134.5h64v28.3h-64z\"></path></svg>')}:host .fax{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M200.5 151.5h113.4v7.1H200.5z\"></path><path d=\"M200.5 134.2h113.4v7.1H200.5z\"></path><path d=\"M200.5 116.9h113.4v7.1H200.5z\"></path><path d=\"M397.2 170.2h-42.5v-68a28.3 28.3 0 0 0-28.3-28.3H184.6a28.3 28.3 0 0 0-28.3 28.3v68h-42.5a28.3 28.3 0 0 0-28.3 28.3v141.7a28.3 28.3 0 0 0 28.3 28.3h42.8V411a21 21 0 0 0 12.5 20.1 37.5 37.5 0 0 0 15.8 2.6h141.7a28.3 28.3 0 0 0 28.3-28.3v-36.8h42.2a28.3 28.3 0 0 0 28.3-28.3V198.6a28.2 28.2 0 0 0-28.2-28.4zm-212.6-68h141.7v68H184.6v-68zm142 238.1v65.1H184.9V283.6h141.7v56.7zm70.6 0H355v-56.7a28.3 28.3 0 0 0-28.3-28.3H184.9a28.3 28.3 0 0 0-28.3 28.3v56.7h-42.8V198.6h283.5v141.7z\"></path><path d=\"M275.9 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M249.6 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c-.1 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M223.2 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M275.9 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M249.6 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c-.1 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M223.2 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M250.4 365.3H224a2.9 2.9 0 0 0-2.9 2.9v19.7c0 1.6 1.3 2.9 2.9 2.9h26.4c1.6 0 2.9-1.3 2.9-2.9v-19.7c-.1-1.6-1.4-2.9-2.9-2.9z\"></path><path d=\"M289.7 365.3h-26.4a2.9 2.9 0 0 0-2.9 2.9v19.7c0 1.6 1.3 2.9 2.9 2.9h26.4c1.6 0 2.9-1.3 2.9-2.9v-19.7c0-1.6-1.3-2.9-2.9-2.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M200.5 151.5h113.4v7.1H200.5z\"></path><path d=\"M200.5 134.2h113.4v7.1H200.5z\"></path><path d=\"M200.5 116.9h113.4v7.1H200.5z\"></path><path d=\"M397.2 170.2h-42.5v-68a28.3 28.3 0 0 0-28.3-28.3H184.6a28.3 28.3 0 0 0-28.3 28.3v68h-42.5a28.3 28.3 0 0 0-28.3 28.3v141.7a28.3 28.3 0 0 0 28.3 28.3h42.8V411a21 21 0 0 0 12.5 20.1 37.5 37.5 0 0 0 15.8 2.6h141.7a28.3 28.3 0 0 0 28.3-28.3v-36.8h42.2a28.3 28.3 0 0 0 28.3-28.3V198.6a28.2 28.2 0 0 0-28.2-28.4zm-212.6-68h141.7v68H184.6v-68zm142 238.1v65.1H184.9V283.6h141.7v56.7zm70.6 0H355v-56.7a28.3 28.3 0 0 0-28.3-28.3H184.9a28.3 28.3 0 0 0-28.3 28.3v56.7h-42.8V198.6h283.5v141.7z\"></path><path d=\"M275.9 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M249.6 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c-.1 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M223.2 357.4h13.6c1.5 0 2.7-1.2 2.7-2.7V336c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.4 1.2 2.7 2.7 2.7z\"></path><path d=\"M275.9 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M249.6 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c-.1 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M223.2 323.8h13.6c1.5 0 2.7-1.2 2.7-2.7v-18.7c0-1.5-1.2-2.7-2.7-2.7h-13.6a2.7 2.7 0 0 0-2.7 2.7v18.7c0 1.5 1.2 2.7 2.7 2.7z\"></path><path d=\"M250.4 365.3H224a2.9 2.9 0 0 0-2.9 2.9v19.7c0 1.6 1.3 2.9 2.9 2.9h26.4c1.6 0 2.9-1.3 2.9-2.9v-19.7c-.1-1.6-1.4-2.9-2.9-2.9z\"></path><path d=\"M289.7 365.3h-26.4a2.9 2.9 0 0 0-2.9 2.9v19.7c0 1.6 1.3 2.9 2.9 2.9h26.4c1.6 0 2.9-1.3 2.9-2.9v-19.7c0-1.6-1.3-2.9-2.9-2.9z\"></path></svg>')}:host .labyrinth{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M325.5 348.6h28.3v-186h-28.3v79H113.9V114.1h84.6V85.7H99.7c-7.8 0-14.2 6.3-14.2 14.2V411c0 7.8 6.3 14.2 14.2 14.2h154.8v-28.3H113.9V270h131.4v50.1h-82.6v28.3h96.8c7.8 0 14.2-6.3 14.2-14.2V270h51.9v78.6z\"></path><path d=\"M410.4 86.6L261.9 86h-.1a14.2 14.2 0 0 0-14.2 14.1v63.7h-86.2v28.3h100.4c7.8 0 14.2-6.3 14.2-14.2v-63.6l120.2.5V397h-91.5v28.3h105.7c7.8 0 14.2-6.3 14.2-14.2V100.8a14.3 14.3 0 0 0-14.2-14.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M325.5 348.6h28.3v-186h-28.3v79H113.9V114.1h84.6V85.7H99.7c-7.8 0-14.2 6.3-14.2 14.2V411c0 7.8 6.3 14.2 14.2 14.2h154.8v-28.3H113.9V270h131.4v50.1h-82.6v28.3h96.8c7.8 0 14.2-6.3 14.2-14.2V270h51.9v78.6z\"></path><path d=\"M410.4 86.6L261.9 86h-.1a14.2 14.2 0 0 0-14.2 14.1v63.7h-86.2v28.3h100.4c7.8 0 14.2-6.3 14.2-14.2v-63.6l120.2.5V397h-91.5v28.3h105.7c7.8 0 14.2-6.3 14.2-14.2V100.8a14.3 14.3 0 0 0-14.2-14.2z\"></path></svg>')}:host .viena{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M376 230.5c0-2.4-.1-4.8-.2-7.2 2.7 12 13.5 21 26.3 21.1 14.9 0 27.1-12.3 27.1-27.3l-54 .2c-3.1-28-15.9-53.1-34.9-71.9a27.1 27.1 0 0 0 42.5-22.2l-54.1-.1c0 6.5 2.2 12.4 6 17.1a120.11 120.11 0 0 0-66.5-28.9c8.9-4.4 15-13.9 15-24.5l-54.1.2c0 10.6 6.1 19.8 15 24.3-25.5 2.5-48.7 13.1-67 29.1 3.3-4.5 5.3-10.3 5.3-16.3l-54.1.2a27.1 27.1 0 0 0 27 27.1c5.5 0 10.6-1.6 14.9-4.5a119.6 119.6 0 0 0-33.3 70.4l-53.8.2c0 14.9 12.1 26.8 27 26.8 12.7 0 23.3-8.6 26.3-20.4-.1 2.2-.2 4.3-.2 6.5m0 .1c0 30.5 11.4 58.3 30.2 79.5l-52 .2c0 14.9 12.1 26.8 27 26.8a27.1 27.1 0 0 0 27-24.8c6.6 7.1 14.1 13.4 22.3 18.8l-42.9 83.4h-33.5v11h283.5v-11h-33.2l-43.4-83.3c8.8-5.7 16.9-12.6 23.9-20.4.4 14.5 12.3 26.2 27 26.3 14.9 0 27.1-12.3 27.1-27.3l-53.3.2c18.7-21.2 30.1-49 30.1-79.4m-77.3-5c-.8-9.3-4.7-17.8-10.6-24.4l39.1-39c16 16.6 26.2 38.9 27.4 63.4h-55.9zm-141.1-.1a97.88 97.88 0 0 1 26.9-62.7l39.3 39.3c-5.5 6.5-9 14.6-9.9 23.5l-56.3-.1zm164.5-68.2l-39.1 39c-6.5-5.2-14.6-8.6-23.4-9.3v-55.1c24 .9 45.8 10.4 62.5 25.4zm-69.6 29.9c-9 .8-17.1 4.4-23.6 9.9l-39.3-39.2a98.3 98.3 0 0 1 62.9-25.8v55.1zm0 84.6V329a98.3 98.3 0 0 1-33.1-7l26.4-51.4c2.2.5 4.4.9 6.7 1.1zm7.1.1c2.1-.2 4.2-.5 6.2-.9l26.8 51.3a98.17 98.17 0 0 1-33 6.9v-57.3zm-102.1-39.3h56.4c.6 8.8 4 16.9 9.2 23.4l-40.4 40.3a98.06 98.06 0 0 1-25.2-63.7zm30.2 68.9l37.7-37.6-24.8 48.2c-4.6-3.2-8.9-6.7-12.9-10.6zm153 113H171.8l37.8-73.4c6.3 2.7 12.9 4.8 19.7 6.4 0 14.9 12.1 27 27 27a27.1 27.1 0 0 0 27.1-27h-.3c6.7-1.5 13.1-3.6 19.3-6.2l38.3 73.2zm-54.4-150.1l37.7 37.6c-3.9 3.8-8.2 7.2-12.7 10.3l-25-47.9zm42.7 32.5l-40.1-40.1c5.6-6.6 9.2-15 9.9-24.2h56a98.73 98.73 0 0 1-25.8 64.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M376 230.5c0-2.4-.1-4.8-.2-7.2 2.7 12 13.5 21 26.3 21.1 14.9 0 27.1-12.3 27.1-27.3l-54 .2c-3.1-28-15.9-53.1-34.9-71.9a27.1 27.1 0 0 0 42.5-22.2l-54.1-.1c0 6.5 2.2 12.4 6 17.1a120.11 120.11 0 0 0-66.5-28.9c8.9-4.4 15-13.9 15-24.5l-54.1.2c0 10.6 6.1 19.8 15 24.3-25.5 2.5-48.7 13.1-67 29.1 3.3-4.5 5.3-10.3 5.3-16.3l-54.1.2a27.1 27.1 0 0 0 27 27.1c5.5 0 10.6-1.6 14.9-4.5a119.6 119.6 0 0 0-33.3 70.4l-53.8.2c0 14.9 12.1 26.8 27 26.8 12.7 0 23.3-8.6 26.3-20.4-.1 2.2-.2 4.3-.2 6.5m0 .1c0 30.5 11.4 58.3 30.2 79.5l-52 .2c0 14.9 12.1 26.8 27 26.8a27.1 27.1 0 0 0 27-24.8c6.6 7.1 14.1 13.4 22.3 18.8l-42.9 83.4h-33.5v11h283.5v-11h-33.2l-43.4-83.3c8.8-5.7 16.9-12.6 23.9-20.4.4 14.5 12.3 26.2 27 26.3 14.9 0 27.1-12.3 27.1-27.3l-53.3.2c18.7-21.2 30.1-49 30.1-79.4m-77.3-5c-.8-9.3-4.7-17.8-10.6-24.4l39.1-39c16 16.6 26.2 38.9 27.4 63.4h-55.9zm-141.1-.1a97.88 97.88 0 0 1 26.9-62.7l39.3 39.3c-5.5 6.5-9 14.6-9.9 23.5l-56.3-.1zm164.5-68.2l-39.1 39c-6.5-5.2-14.6-8.6-23.4-9.3v-55.1c24 .9 45.8 10.4 62.5 25.4zm-69.6 29.9c-9 .8-17.1 4.4-23.6 9.9l-39.3-39.2a98.3 98.3 0 0 1 62.9-25.8v55.1zm0 84.6V329a98.3 98.3 0 0 1-33.1-7l26.4-51.4c2.2.5 4.4.9 6.7 1.1zm7.1.1c2.1-.2 4.2-.5 6.2-.9l26.8 51.3a98.17 98.17 0 0 1-33 6.9v-57.3zm-102.1-39.3h56.4c.6 8.8 4 16.9 9.2 23.4l-40.4 40.3a98.06 98.06 0 0 1-25.2-63.7zm30.2 68.9l37.7-37.6-24.8 48.2c-4.6-3.2-8.9-6.7-12.9-10.6zm153 113H171.8l37.8-73.4c6.3 2.7 12.9 4.8 19.7 6.4 0 14.9 12.1 27 27 27a27.1 27.1 0 0 0 27.1-27h-.3c6.7-1.5 13.1-3.6 19.3-6.2l38.3 73.2zm-54.4-150.1l37.7 37.6c-3.9 3.8-8.2 7.2-12.7 10.3l-25-47.9zm42.7 32.5l-40.1-40.1c5.6-6.6 9.2-15 9.9-24.2h56a98.73 98.73 0 0 1-25.8 64.3z\"></path></svg>')}:host .client-receipt{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M179.4 114.3L165.5 100l-14 14.3h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M225.8 113.9h-.2l-13.9-14.2-14 14.2h-.2z\"></path><path d=\"M272 113.9h-.3l-13.8-14.2-14 14.2h-.3z\"></path><path d=\"M318.1 113.9h-.2L304 99.7l-14 14.2h-.2z\"></path><path d=\"M288.1 396.3h.3l13.8 14.3 14-14.3h.3z\"></path><path d=\"M242 396.3h.2l13.9 14.3 14-14.3h.2z\"></path><path d=\"M195.8 396.3h.2l13.9 14.3 14-14.3h.2z\"></path><path d=\"M364.1 114.3L350.2 100l-14 14.3h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M302.7 173.9a7 7 0 0 0-8.1-.4l-18.2 9.7-12.2-23.9a6.9 6.9 0 0 0-6.3-4 7.1 7.1 0 0 0-6.4 3.9l-13 24.1-17.7-9.5a7 7 0 0 0-8.1.1 7.2 7.2 0 0 0-2.4 8.1l15.1 42a7 7 0 0 0 6.5 4.6l50.4-.1a7 7 0 0 0 6.5-4.5l16-42a7 7 0 0 0-2.1-8.1zM280.5 219l-46.7.1-12.2-33.9 20.7 11.1 15.4-28.4 14.5 28.4 21.2-11.3-12.9 34z\"></path><ellipse cx=\"257.6\" cy=\"143.9\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 257.6 143.9) scale(.99996)\"></ellipse><ellipse cx=\"308.9\" cy=\"165.1\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 309 165) scale(.99996)\"></ellipse><ellipse cx=\"206.4\" cy=\"165.2\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 206.4 165.2) scale(.99996)\"></ellipse><path d=\"M193.7 255.8h85.7v7.1h-85.7z\"></path><path d=\"M193.7 359.2h53.2v7.1h-53.2z\"></path><path d=\"M297.2 255.8h25.7v7.1h-25.7z\"></path><path d=\"M297.4 277h25.7v7.1h-25.7z\"></path><path d=\"M297.4 298.3h25.7v7.1h-25.7z\"></path><path d=\"M297.4 319.5h25.7v7.1h-25.7z\"></path><path d=\"M297.4 357.5h25.7v7.1h-25.7z\"></path><path d=\"M193.7 277h85.7v7.1h-85.7z\"></path><path d=\"M193.7 298.3h85.7v7.1h-85.7z\"></path><path d=\"M193.7 319.5h85.7v7.1h-85.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M179.4 114.3L165.5 100l-14 14.3h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M225.8 113.9h-.2l-13.9-14.2-14 14.2h-.2z\"></path><path d=\"M272 113.9h-.3l-13.8-14.2-14 14.2h-.3z\"></path><path d=\"M318.1 113.9h-.2L304 99.7l-14 14.2h-.2z\"></path><path d=\"M288.1 396.3h.3l13.8 14.3 14-14.3h.3z\"></path><path d=\"M242 396.3h.2l13.9 14.3 14-14.3h.2z\"></path><path d=\"M195.8 396.3h.2l13.9 14.3 14-14.3h.2z\"></path><path d=\"M364.1 114.3L350.2 100l-14 14.3h-.2v283l14.2 13.3 14.1-13.3v-283z\"></path><path d=\"M302.7 173.9a7 7 0 0 0-8.1-.4l-18.2 9.7-12.2-23.9a6.9 6.9 0 0 0-6.3-4 7.1 7.1 0 0 0-6.4 3.9l-13 24.1-17.7-9.5a7 7 0 0 0-8.1.1 7.2 7.2 0 0 0-2.4 8.1l15.1 42a7 7 0 0 0 6.5 4.6l50.4-.1a7 7 0 0 0 6.5-4.5l16-42a7 7 0 0 0-2.1-8.1zM280.5 219l-46.7.1-12.2-33.9 20.7 11.1 15.4-28.4 14.5 28.4 21.2-11.3-12.9 34z\"></path><ellipse cx=\"257.6\" cy=\"143.9\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 257.6 143.9) scale(.99996)\"></ellipse><ellipse cx=\"308.9\" cy=\"165.1\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 309 165) scale(.99996)\"></ellipse><ellipse cx=\"206.4\" cy=\"165.2\" rx=\"6.9\" ry=\"6.9\" transform=\"rotate(-89.4 206.4 165.2) scale(.99996)\"></ellipse><path d=\"M193.7 255.8h85.7v7.1h-85.7z\"></path><path d=\"M193.7 359.2h53.2v7.1h-53.2z\"></path><path d=\"M297.2 255.8h25.7v7.1h-25.7z\"></path><path d=\"M297.4 277h25.7v7.1h-25.7z\"></path><path d=\"M297.4 298.3h25.7v7.1h-25.7z\"></path><path d=\"M297.4 319.5h25.7v7.1h-25.7z\"></path><path d=\"M297.4 357.5h25.7v7.1h-25.7z\"></path><path d=\"M193.7 277h85.7v7.1h-85.7z\"></path><path d=\"M193.7 298.3h85.7v7.1h-85.7z\"></path><path d=\"M193.7 319.5h85.7v7.1h-85.7z\"></path></svg>')}:host .gprs-lan{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M180.5 154.9v-1.2c0-7.9-3.1-11.8-9.3-11.8-4.8 0-7.9 2.3-9.4 7a67.3 67.3 0 0 0-1.7 18.2c0 12.1.7 20 2.1 23.9 1.5 4.3 4.5 6.4 9.2 6.4 3.5 0 6.5-.5 9.1-1.6v-18.4H171v-9.8h22.7v36.2a74.6 74.6 0 0 1-22 3.4c-11.1 0-18.4-3.5-21.7-10.4-2.3-4.6-3.4-13.9-3.4-27.8 0-12.8 1.1-21.5 3.3-26.1 3.4-7.2 10.5-10.8 21.3-10.8 7.7 0 13.4 1.7 17.1 5.1 3.7 3.4 5.6 8.9 5.6 16.6v1.1h-13.4z\"></path><path d=\"M249.2 154.1c0 8.8-2.3 14.8-6.8 17.9-3.3 2.3-9.2 3.5-17.5 3.5h-6.2v30.3h-13.4v-72.3h21.5c7.7 0 13.4 1.5 16.9 4.4 3.6 3.1 5.5 8.5 5.5 16.2zm-13.4.1c0-4.2-1-7.1-3.1-8.8-1.8-1.4-4.9-2.1-9.2-2.1h-4.8v22.4h4.4c2.3 0 4.2-.2 5.8-.5a9 9 0 0 0 3.9-1.9c1-.9 1.8-2.1 2.2-3.6.5-1.4.8-3.3.8-5.5z\"></path><path d=\"M289.3 205.8c-.3-1.3-.4-2.9-.6-4.6s-.2-3.6-.2-5.6l-.2-6.9-.1-3.4c-.3-4.2-1.1-7-2.5-8.4-1.3-1.4-4.1-2.1-8.3-2.1H272v31h-13.4v-72.3h22.7c7.2 0 12.4 1.1 15.5 3.3 4.1 2.8 6.1 7.9 6.1 15.4 0 10.1-4.1 15.9-12.3 17.6 4.5.3 7.5 1.8 9 4.7a30 30 0 0 1 2.2 13.3l.3 9c.2 3.5.6 6.5 1.2 9h-14zm-.1-52.4c0-3.7-.9-6.3-2.6-7.8-1.8-1.5-4.5-2.3-8.2-2.3H272V165h5.2c2.2 0 4.1-.2 5.6-.6a9 9 0 0 0 3.8-1.9 8 8 0 0 0 2.1-3.6c.3-1.4.5-3.3.5-5.5z\"></path><path d=\"M356.1 187.2c0 13.3-7.5 20-22.6 20-8.3 0-14-1.7-17.3-5.1-3.3-3.5-5-9.2-5-17.3v-.8h13.6v.9c0 3.9.5 6.7 1.4 8.6 1.3 2.6 3.7 3.9 7.4 3.9 6 0 9-3 9-9.1 0-3.1-1.4-5.9-4.1-8.2-.7-.5-3.8-2.6-9.4-6.1a98.6 98.6 0 0 1-11.9-8.7 20 20 0 0 1-5-13.8c0-12.9 7.5-19.4 22.4-19.4 6.8 0 11.9 1.4 15.2 4.1 3.6 3 5.4 7.8 5.4 14.4v2.8h-13.3v-1.8c0-6.5-2.6-9.7-7.9-9.7-5.5 0-8.3 2.8-8.3 8.5 0 3.2 1.6 6.1 4.9 8.7l5.1 3.2 5.1 3.2c5.8 3.7 9.5 6.5 11.1 8.4a20 20 0 0 1 4.2 13.3z\"></path><g><path d=\"M177.7 376.8v-72.3h13.4v62.3h22.5v10h-35.9z\"></path><path d=\"M258.8 376.8l-4.3-16.6h-21.8l-4.3 16.6h-13.2l20.2-72.3h17.3l19.8 72.3h-13.7zm-15.2-61.6l-8.2 35.2h16.4l-8.2-35.2z\"></path><path d=\"M308.5 376.8l-17.2-60.6v60.6h-11.8v-72.3h20.1l17.2 60.6v-60.6h11.8v72.3h-20.1z\"></path></g><path d=\"M113.7 241.7h283.5V270H113.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M180.5 154.9v-1.2c0-7.9-3.1-11.8-9.3-11.8-4.8 0-7.9 2.3-9.4 7a67.3 67.3 0 0 0-1.7 18.2c0 12.1.7 20 2.1 23.9 1.5 4.3 4.5 6.4 9.2 6.4 3.5 0 6.5-.5 9.1-1.6v-18.4H171v-9.8h22.7v36.2a74.6 74.6 0 0 1-22 3.4c-11.1 0-18.4-3.5-21.7-10.4-2.3-4.6-3.4-13.9-3.4-27.8 0-12.8 1.1-21.5 3.3-26.1 3.4-7.2 10.5-10.8 21.3-10.8 7.7 0 13.4 1.7 17.1 5.1 3.7 3.4 5.6 8.9 5.6 16.6v1.1h-13.4z\"></path><path d=\"M249.2 154.1c0 8.8-2.3 14.8-6.8 17.9-3.3 2.3-9.2 3.5-17.5 3.5h-6.2v30.3h-13.4v-72.3h21.5c7.7 0 13.4 1.5 16.9 4.4 3.6 3.1 5.5 8.5 5.5 16.2zm-13.4.1c0-4.2-1-7.1-3.1-8.8-1.8-1.4-4.9-2.1-9.2-2.1h-4.8v22.4h4.4c2.3 0 4.2-.2 5.8-.5a9 9 0 0 0 3.9-1.9c1-.9 1.8-2.1 2.2-3.6.5-1.4.8-3.3.8-5.5z\"></path><path d=\"M289.3 205.8c-.3-1.3-.4-2.9-.6-4.6s-.2-3.6-.2-5.6l-.2-6.9-.1-3.4c-.3-4.2-1.1-7-2.5-8.4-1.3-1.4-4.1-2.1-8.3-2.1H272v31h-13.4v-72.3h22.7c7.2 0 12.4 1.1 15.5 3.3 4.1 2.8 6.1 7.9 6.1 15.4 0 10.1-4.1 15.9-12.3 17.6 4.5.3 7.5 1.8 9 4.7a30 30 0 0 1 2.2 13.3l.3 9c.2 3.5.6 6.5 1.2 9h-14zm-.1-52.4c0-3.7-.9-6.3-2.6-7.8-1.8-1.5-4.5-2.3-8.2-2.3H272V165h5.2c2.2 0 4.1-.2 5.6-.6a9 9 0 0 0 3.8-1.9 8 8 0 0 0 2.1-3.6c.3-1.4.5-3.3.5-5.5z\"></path><path d=\"M356.1 187.2c0 13.3-7.5 20-22.6 20-8.3 0-14-1.7-17.3-5.1-3.3-3.5-5-9.2-5-17.3v-.8h13.6v.9c0 3.9.5 6.7 1.4 8.6 1.3 2.6 3.7 3.9 7.4 3.9 6 0 9-3 9-9.1 0-3.1-1.4-5.9-4.1-8.2-.7-.5-3.8-2.6-9.4-6.1a98.6 98.6 0 0 1-11.9-8.7 20 20 0 0 1-5-13.8c0-12.9 7.5-19.4 22.4-19.4 6.8 0 11.9 1.4 15.2 4.1 3.6 3 5.4 7.8 5.4 14.4v2.8h-13.3v-1.8c0-6.5-2.6-9.7-7.9-9.7-5.5 0-8.3 2.8-8.3 8.5 0 3.2 1.6 6.1 4.9 8.7l5.1 3.2 5.1 3.2c5.8 3.7 9.5 6.5 11.1 8.4a20 20 0 0 1 4.2 13.3z\"></path><g><path d=\"M177.7 376.8v-72.3h13.4v62.3h22.5v10h-35.9z\"></path><path d=\"M258.8 376.8l-4.3-16.6h-21.8l-4.3 16.6h-13.2l20.2-72.3h17.3l19.8 72.3h-13.7zm-15.2-61.6l-8.2 35.2h16.4l-8.2-35.2z\"></path><path d=\"M308.5 376.8l-17.2-60.6v60.6h-11.8v-72.3h20.1l17.2 60.6v-60.6h11.8v72.3h-20.1z\"></path></g><path d=\"M113.7 241.7h283.5V270H113.7z\"></path></svg>')}:host .lines{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M84.6 238.7h67.8V267H84.6z\"></path><path d=\"M175.7 238.7h67.8V267h-67.8z\"></path><path d=\"M266.8 238.7h67.8V267h-67.8z\"></path><path d=\"M358 238.7h67.8V267H358z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M84.6 238.7h67.8V267H84.6z\"></path><path d=\"M175.7 238.7h67.8V267h-67.8z\"></path><path d=\"M266.8 238.7h67.8V267h-67.8z\"></path><path d=\"M358 238.7h67.8V267H358z\"></path></svg>')}:host .realtime{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M386.6 147.5l37.2-43.8-21.6-18.4-35.6 41.8a169 169 0 0 0-111-41.4c-93.8 0-170.1 76.3-170.1 170.1s76.3 170.1 170.1 170.1 170.1-76.3 170.1-170.1c0-41.1-14.7-78.9-39.1-108.3zM270.5 396.8V346h-28.3v50.9a142 142 0 0 1-127.6-127.6h51.1V241h-51c7-66.8 60.5-119.9 127.4-126.2v51.1h28.3v-51a141.4 141.4 0 0 1 77.9 33.8L266 245.4a7 7 0 0 1-5.4 2.6c-1.2 0-3.6-.2-5.6-2.2l-59.1-59.1-20 20 59.1 59.1a36 36 0 0 0 25.3 10.5h1.4c10-.4 19.4-5 25.8-12.6l80.2-94.4a141 141 0 0 1 28.7 71.6h-51v28.3h51.1a141.5 141.5 0 0 1-126 127.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M386.6 147.5l37.2-43.8-21.6-18.4-35.6 41.8a169 169 0 0 0-111-41.4c-93.8 0-170.1 76.3-170.1 170.1s76.3 170.1 170.1 170.1 170.1-76.3 170.1-170.1c0-41.1-14.7-78.9-39.1-108.3zM270.5 396.8V346h-28.3v50.9a142 142 0 0 1-127.6-127.6h51.1V241h-51c7-66.8 60.5-119.9 127.4-126.2v51.1h28.3v-51a141.4 141.4 0 0 1 77.9 33.8L266 245.4a7 7 0 0 1-5.4 2.6c-1.2 0-3.6-.2-5.6-2.2l-59.1-59.1-20 20 59.1 59.1a36 36 0 0 0 25.3 10.5h1.4c10-.4 19.4-5 25.8-12.6l80.2-94.4a141 141 0 0 1 28.7 71.6h-51v28.3h51.1a141.5 141.5 0 0 1-126 127.6z\"></path></svg>')}:host .target{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M431.1 117.4l-35.8-1.2-.5-33.4-47.7 45.8 7.6 7.7-30.3 30.3-26.4 26.2-20.4 20.4-22.7 22.7a33 33 0 1 0 19.7 20.5l22.9-22.9L318 213l26.4-26.4 30.2-30.2 7.9 8 48.6-47z\"></path><path d=\"M243.3 173.9a94 94 0 0 0-93.8 93.8 94 94 0 0 0 93.8 93.8 94 94 0 0 0 84.4-134.8l-22.2 22.2a65 65 0 1 1-42.3-43l22.1-22.1a94.8 94.8 0 0 0-42-9.9z\"></path><path d=\"M373.8 179.7l-20.5 20.5a129.2 129.2 0 0 1-110 196.6c-71.2 0-129.1-57.9-129.1-129.1a129.2 129.2 0 0 1 197.4-109.5l20.5-20.5a157.7 157.7 0 0 0-246.2 130c0 86.8 70.6 157.5 157.5 157.5 86.8 0 157.5-70.6 157.5-157.5a158.4 158.4 0 0 0-27.1-88z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M431.1 117.4l-35.8-1.2-.5-33.4-47.7 45.8 7.6 7.7-30.3 30.3-26.4 26.2-20.4 20.4-22.7 22.7a33 33 0 1 0 19.7 20.5l22.9-22.9L318 213l26.4-26.4 30.2-30.2 7.9 8 48.6-47z\"></path><path d=\"M243.3 173.9a94 94 0 0 0-93.8 93.8 94 94 0 0 0 93.8 93.8 94 94 0 0 0 84.4-134.8l-22.2 22.2a65 65 0 1 1-42.3-43l22.1-22.1a94.8 94.8 0 0 0-42-9.9z\"></path><path d=\"M373.8 179.7l-20.5 20.5a129.2 129.2 0 0 1-110 196.6c-71.2 0-129.1-57.9-129.1-129.1a129.2 129.2 0 0 1 197.4-109.5l20.5-20.5a157.7 157.7 0 0 0-246.2 130c0 86.8 70.6 157.5 157.5 157.5 86.8 0 157.5-70.6 157.5-157.5a158.4 158.4 0 0 0-27.1-88z\"></path></svg>')}:host .disc{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 425.2A170.3 170.3 0 0 1 85 255.1C85 161.3 161.3 85 255.1 85s170.1 76.3 170.1 170.1-76.3 170.1-170.1 170.1zm0-311.8a141.8 141.8 0 0 0 0 283.5c78.1 0 141.7-63.6 141.7-141.7s-63.5-141.8-141.7-141.8z\"></path><path d=\"M255.1 311.8a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zm0-85a28.3 28.3 0 1 0 0 56.7 28.3 28.3 0 0 0 0-56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 425.2A170.3 170.3 0 0 1 85 255.1C85 161.3 161.3 85 255.1 85s170.1 76.3 170.1 170.1-76.3 170.1-170.1 170.1zm0-311.8a141.8 141.8 0 0 0 0 283.5c78.1 0 141.7-63.6 141.7-141.7s-63.5-141.8-141.7-141.8z\"></path><path d=\"M255.1 311.8a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zm0-85a28.3 28.3 0 1 0 0 56.7 28.3 28.3 0 0 0 0-56.7z\"></path></svg>')}:host .outsorcing{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M388.1 257.8l-21 17.6 26.5 31.6H299.4a34.5 34.5 0 0 1-26.7-12.5l-19.5-23.3-21.7 18.2 19.5 23.3a63 63 0 0 0 48.5 22.6l94.2.1-26.6 31.6 18 15.1 3.7 3.1 53.5-64-53.5-64-.7.6z\"></path><path d=\"M259.1 434.9c42 0 80.6-14.7 111-39.2l-15.9-13.3-6.4-5.3a147.3 147.3 0 0 1-49 24c5.7-7.3 11-16.2 15.8-26.7 2.7-6 5.2-12.3 7.4-19h-4.7v-.1h-2.8c-2 5.6-4.1 11-6.4 16.1a108.9 108.9 0 0 1-21.2 32.4 151.9 151.9 0 0 1-56 0 110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7H255a83 83 0 0 1-9.7-7.1h-47.9a321.8 321.8 0 0 1-9.1-74.4h141c-.1 8.7-.5 17.3-1.2 25.8h7.1c.7-8.4 1.1-17 1.2-25.8h16.2l1.4-1.1 7.1-5.9h-24.6a329 329 0 0 0-8.9-74.4h58a147.3 147.3 0 0 1 21.8 68.8l27.1 32.4A177.4 177.4 0 0 0 258.8 80.5c-97.7 0-177.2 79.5-177.2 177.2s79.8 177.2 177.5 177.2zm-55.7-60.5a133.5 133.5 0 0 0 15.8 26.7 149.3 149.3 0 0 1-82.2-58.4h55.1c3.2 11.4 7 22.1 11.3 31.7zm126.2-120.3h-141c.3-26.5 3.4-51.9 9.1-74.4h122.9c5.6 22.6 8.7 48 9 74.4zm51.5-81.4H326c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4zm-122-63.8c9.6 0 18.9.9 28 2.6 7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H199.5c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151 151 0 0 1 28-2.6zm-39.9 5.4c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7H137c19.6-28 48.5-49 82.2-58.4zm-86.9 65.4h58a329.7 329.7 0 0 0-8.9 74.4h-71.2a149 149 0 0 1 22.1-74.4zm-22 81.5h71.2a329 329 0 0 0 8.9 74.4h-58a146.4 146.4 0 0 1-22.1-74.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M388.1 257.8l-21 17.6 26.5 31.6H299.4a34.5 34.5 0 0 1-26.7-12.5l-19.5-23.3-21.7 18.2 19.5 23.3a63 63 0 0 0 48.5 22.6l94.2.1-26.6 31.6 18 15.1 3.7 3.1 53.5-64-53.5-64-.7.6z\"></path><path d=\"M259.1 434.9c42 0 80.6-14.7 111-39.2l-15.9-13.3-6.4-5.3a147.3 147.3 0 0 1-49 24c5.7-7.3 11-16.2 15.8-26.7 2.7-6 5.2-12.3 7.4-19h-4.7v-.1h-2.8c-2 5.6-4.1 11-6.4 16.1a108.9 108.9 0 0 1-21.2 32.4 151.9 151.9 0 0 1-56 0 110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7H255a83 83 0 0 1-9.7-7.1h-47.9a321.8 321.8 0 0 1-9.1-74.4h141c-.1 8.7-.5 17.3-1.2 25.8h7.1c.7-8.4 1.1-17 1.2-25.8h16.2l1.4-1.1 7.1-5.9h-24.6a329 329 0 0 0-8.9-74.4h58a147.3 147.3 0 0 1 21.8 68.8l27.1 32.4A177.4 177.4 0 0 0 258.8 80.5c-97.7 0-177.2 79.5-177.2 177.2s79.8 177.2 177.5 177.2zm-55.7-60.5a133.5 133.5 0 0 0 15.8 26.7 149.3 149.3 0 0 1-82.2-58.4h55.1c3.2 11.4 7 22.1 11.3 31.7zm126.2-120.3h-141c.3-26.5 3.4-51.9 9.1-74.4h122.9c5.6 22.6 8.7 48 9 74.4zm51.5-81.4H326c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.3 149.3 0 0 1 82.2 58.4zm-122-63.8c9.6 0 18.9.9 28 2.6 7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H199.5c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151 151 0 0 1 28-2.6zm-39.9 5.4c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7H137c19.6-28 48.5-49 82.2-58.4zm-86.9 65.4h58a329.7 329.7 0 0 0-8.9 74.4h-71.2a149 149 0 0 1 22.1-74.4zm-22 81.5h71.2a329 329 0 0 0 8.9 74.4h-58a146.4 146.4 0 0 1-22.1-74.4z\"></path></svg>')}:host .ethernet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.5 82h28.3v193.8h-28.3z\"></path><path d=\"M200.4 82h11v93.6h-11z\"></path><path d=\"M224.6 82h11v93.6h-11z\"></path><path d=\"M248.8 82h11v93.6h-11z\"></path><path d=\"M272.9 82h11v93.6h-11z\"></path><path d=\"M297.1 82h11v93.6h-11z\"></path><path d=\"M334.3 82h28.3v193.8h-28.3z\"></path><path d=\"M199.7 276.1h41.8l2 87c-.3 23.5 33.8 59.4 40.1 65.1l18.9-21.1a158.2 158.2 0 0 1-19.3-22.5c-9.1-12.6-11.3-19.5-11.4-21.2v-.3l-2-87.1h41.9v-28.3h-112v28.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M147.5 82h28.3v193.8h-28.3z\"></path><path d=\"M200.4 82h11v93.6h-11z\"></path><path d=\"M224.6 82h11v93.6h-11z\"></path><path d=\"M248.8 82h11v93.6h-11z\"></path><path d=\"M272.9 82h11v93.6h-11z\"></path><path d=\"M297.1 82h11v93.6h-11z\"></path><path d=\"M334.3 82h28.3v193.8h-28.3z\"></path><path d=\"M199.7 276.1h41.8l2 87c-.3 23.5 33.8 59.4 40.1 65.1l18.9-21.1a158.2 158.2 0 0 1-19.3-22.5c-9.1-12.6-11.3-19.5-11.4-21.2v-.3l-2-87.1h41.9v-28.3h-112v28.4z\"></path></svg>')}:host .gprs{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.8 173.5a39 39 0 0 0-15.5 75v180.9h28.3V249.5a39.1 39.1 0 0 0-12.8-76z\"></path><path d=\"M161.1 99.8l-20-20a186.4 186.4 0 0 0-55 132.8c0 50.2 19.5 97.3 55 132.8l20-20c-30.1-30.1-46.7-70.2-46.7-112.8s16.5-82.7 46.7-112.8z\"></path><path d=\"M182.2 130.6c-21.9 21.9-34 51-34 82s12.1 60.1 34 82l20-20a87 87 0 0 1 0-123.8l-20-20.2z\"></path><path d=\"M370.9 79.8l-20 20c30.1 30.1 46.7 70.2 46.7 112.8s-16.6 82.6-46.7 112.8l20 20c35.5-35.5 55-82.6 55-132.8 0-50.2-19.5-97.4-55-132.8z\"></path><path d=\"M329.7 130.6l-20 20a87.6 87.6 0 0 1 0 123.9l20 20a116 116 0 0 0 0-163.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.8 173.5a39 39 0 0 0-15.5 75v180.9h28.3V249.5a39.1 39.1 0 0 0-12.8-76z\"></path><path d=\"M161.1 99.8l-20-20a186.4 186.4 0 0 0-55 132.8c0 50.2 19.5 97.3 55 132.8l20-20c-30.1-30.1-46.7-70.2-46.7-112.8s16.5-82.7 46.7-112.8z\"></path><path d=\"M182.2 130.6c-21.9 21.9-34 51-34 82s12.1 60.1 34 82l20-20a87 87 0 0 1 0-123.8l-20-20.2z\"></path><path d=\"M370.9 79.8l-20 20c30.1 30.1 46.7 70.2 46.7 112.8s-16.6 82.6-46.7 112.8l20 20c35.5-35.5 55-82.6 55-132.8 0-50.2-19.5-97.4-55-132.8z\"></path><path d=\"M329.7 130.6l-20 20a87.6 87.6 0 0 1 0 123.9l20 20a116 116 0 0 0 0-163.9z\"></path></svg>')}:host .monitoring{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.1 298.6h28.3v127h-28.3z\" transform=\"rotate(-45 363.3 362.07)\"></path><path d=\"M220.3 332.8c62.4 0 113.3-50.8 113.3-113.3 0-62.4-50.8-113.3-113.3-113.3-62.4 0-113.3 50.8-113.3 113.3 0 62.4 50.8 113.3 113.3 113.3zm0-198.2c46.8 0 84.9 38.1 84.9 84.9 0 46.8-38.1 84.9-84.9 84.9-46.8 0-84.9-38.1-84.9-84.9 0-46.8 38.1-84.9 84.9-84.9z\"></path><path d=\"M230.5 225.2v-10.3c0-5.7-4.6-10.3-10.3-10.3-5.7 0-10.3 4.6-10.3 10.3v10.3c0 5.7 4.6 10.3 10.3 10.3 5.6 0 10.3-4.6 10.3-10.3z\"></path><path d=\"M222.2 257.8c39.4-1.4 66.2-31.8 67.3-33.1 1.4-1.6 1.7-3.7 1.1-5.6-.2-1.2-.7-2.3-1.6-3.2-22.6-22.6-46.8-33.7-71.9-32.8-39.4 1.4-66.2 31.8-67.3 33.1a5.75 5.75 0 0 0-1.1 5.6c.2 1.2.7 2.3 1.6 3.2 21.8 21.8 45 32.8 69.1 32.8h2.8zm-60.1-37.5c7.9-7.6 28.6-24.5 55.4-25.5 20.4-.7 40.5 8 59.7 25.9-8 7.6-28.7 24.6-55.5 25.5-20.4.7-40.4-8-59.6-25.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M349.1 298.6h28.3v127h-28.3z\" transform=\"rotate(-45 363.3 362.07)\"></path><path d=\"M220.3 332.8c62.4 0 113.3-50.8 113.3-113.3 0-62.4-50.8-113.3-113.3-113.3-62.4 0-113.3 50.8-113.3 113.3 0 62.4 50.8 113.3 113.3 113.3zm0-198.2c46.8 0 84.9 38.1 84.9 84.9 0 46.8-38.1 84.9-84.9 84.9-46.8 0-84.9-38.1-84.9-84.9 0-46.8 38.1-84.9 84.9-84.9z\"></path><path d=\"M230.5 225.2v-10.3c0-5.7-4.6-10.3-10.3-10.3-5.7 0-10.3 4.6-10.3 10.3v10.3c0 5.7 4.6 10.3 10.3 10.3 5.6 0 10.3-4.6 10.3-10.3z\"></path><path d=\"M222.2 257.8c39.4-1.4 66.2-31.8 67.3-33.1 1.4-1.6 1.7-3.7 1.1-5.6-.2-1.2-.7-2.3-1.6-3.2-22.6-22.6-46.8-33.7-71.9-32.8-39.4 1.4-66.2 31.8-67.3 33.1a5.75 5.75 0 0 0-1.1 5.6c.2 1.2.7 2.3 1.6 3.2 21.8 21.8 45 32.8 69.1 32.8h2.8zm-60.1-37.5c7.9-7.6 28.6-24.5 55.4-25.5 20.4-.7 40.5 8 59.7 25.9-8 7.6-28.7 24.6-55.5 25.5-20.4.7-40.4-8-59.6-25.9z\"></path></svg>')}:host .wlan-bluetooth{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M160.2 142.4l-20-20a186.4 186.4 0 0 0-55 132.8c0 50.2 19.5 97.3 55 132.8l20-20c-30.1-30.1-46.7-70.2-46.7-112.8s16.6-82.7 46.7-112.8z\"></path><path d=\"M181.4 173.1c-21.9 21.9-34 51-34 82s12.1 60.1 34 82l20-20a87 87 0 0 1 0-123.8l-20-20.2z\"></path><path d=\"M370.1 122.3l-20 20c30.1 30.1 46.7 70.2 46.7 112.8s-16.6 82.6-46.7 112.8l20 20c35.5-35.5 55-82.6 55-132.8a187 187 0 0 0-55-132.8z\"></path><path d=\"M328.9 173.1l-20 20a87.6 87.6 0 0 1 0 123.9l20 20a116 116 0 0 0 0-163.9z\"></path><circle cx=\"255\" cy=\"255.8\" r=\"39.4\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M160.2 142.4l-20-20a186.4 186.4 0 0 0-55 132.8c0 50.2 19.5 97.3 55 132.8l20-20c-30.1-30.1-46.7-70.2-46.7-112.8s16.6-82.7 46.7-112.8z\"></path><path d=\"M181.4 173.1c-21.9 21.9-34 51-34 82s12.1 60.1 34 82l20-20a87 87 0 0 1 0-123.8l-20-20.2z\"></path><path d=\"M370.1 122.3l-20 20c30.1 30.1 46.7 70.2 46.7 112.8s-16.6 82.6-46.7 112.8l20 20c35.5-35.5 55-82.6 55-132.8a187 187 0 0 0-55-132.8z\"></path><path d=\"M328.9 173.1l-20 20a87.6 87.6 0 0 1 0 123.9l20 20a116 116 0 0 0 0-163.9z\"></path><circle cx=\"255\" cy=\"255.8\" r=\"39.4\"></circle></svg>')}:host .extinguisher{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M390.3 86.1a25.7 25.7 0 0 0-22.1-4.3L316.3 95c-6.8 1.7-13 5.9-17.5 11.6l-23.8-.1v10.3h-87.4a56.5 56.5 0 0 0-43.4 20.3l-34.7 41.5 21.7 18.2 34.7-41.5a28.3 28.3 0 0 1 21.7-10.1h29.8v26.9a81.3 81.3 0 0 0-67.3 80.1v161.1c0 7.8 6.3 14.2 14.2 14.2h134.3c7.8 0 14.2-6.3 14.2-14.2V252.2a81.4 81.4 0 0 0-66.9-80v-27h29.3v10.4l21.8.1a32.7 32.7 0 0 0 19.4 14l51.7 12.7c2.2.5 4.4.8 6.6.8a24.7 24.7 0 0 0 25-25.6l.1-51c.1-8.3-3.4-15.7-9.5-20.5zM284.4 252.2v146.9H178.5V252.2a53 53 0 0 1 53-53 53.1 53.1 0 0 1 52.9 53zm38.9-129.7c14.9-4.4 48.2-12.3 48.2-12.3l-.1 43.7s-31.4-7.6-48.3-11.9c-8.9-2.1-11.3-16.1.2-19.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M390.3 86.1a25.7 25.7 0 0 0-22.1-4.3L316.3 95c-6.8 1.7-13 5.9-17.5 11.6l-23.8-.1v10.3h-87.4a56.5 56.5 0 0 0-43.4 20.3l-34.7 41.5 21.7 18.2 34.7-41.5a28.3 28.3 0 0 1 21.7-10.1h29.8v26.9a81.3 81.3 0 0 0-67.3 80.1v161.1c0 7.8 6.3 14.2 14.2 14.2h134.3c7.8 0 14.2-6.3 14.2-14.2V252.2a81.4 81.4 0 0 0-66.9-80v-27h29.3v10.4l21.8.1a32.7 32.7 0 0 0 19.4 14l51.7 12.7c2.2.5 4.4.8 6.6.8a24.7 24.7 0 0 0 25-25.6l.1-51c.1-8.3-3.4-15.7-9.5-20.5zM284.4 252.2v146.9H178.5V252.2a53 53 0 0 1 53-53 53.1 53.1 0 0 1 52.9 53zm38.9-129.7c14.9-4.4 48.2-12.3 48.2-12.3l-.1 43.7s-31.4-7.6-48.3-11.9c-8.9-2.1-11.3-16.1.2-19.5z\"></path></svg>')}:host .mountain{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M426.2 381.8h-343L176.5 200l59.9 53.7L314.1 108l112.1 273.8zm-296.6-28.3h254.3l-73.2-178.8L244.4 299l-59.5-53.3-55.3 107.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M426.2 381.8h-343L176.5 200l59.9 53.7L314.1 108l112.1 273.8zm-296.6-28.3h254.3l-73.2-178.8L244.4 299l-59.5-53.3-55.3 107.8z\"></path></svg>')}:host .carabiner{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M336.5 110.3A56 56 0 0 0 291.2 98l-89.4 15.4a55.6 55.6 0 0 0-44.6 68.2l4.3 17.6 28.2-7-4.3-17.6a26.2 26.2 0 0 1 3.6-20.9c4-6.2 10.5-10.4 17.7-11.6l89.4-15.4a26.7 26.7 0 0 1 31.2 26.2v203.7a26.5 26.5 0 0 1-26.6 26.6l-2.8-.1-44.2-4.7a26.5 26.5 0 0 1-23-20.1l-2.2-9-28.2 7 2.2 9a55.7 55.7 0 0 0 48.2 42l44.2 4.7a56.3 56.3 0 0 0 43-14 55.7 55.7 0 0 0 18.4-41.4V152.8c0-16.4-7.2-31.9-19.8-42.5z\"></path><path d=\"M195.6 216.8l-28.2 7 26.2 109.3 28.2-7-26.2-109.3zm10.3 102.7a8 8 0 0 1-9.6-5.7 8 8 0 0 1 5.7-9.6 8 8 0 0 1 9.6 5.7 7.8 7.8 0 0 1-5.7 9.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M336.5 110.3A56 56 0 0 0 291.2 98l-89.4 15.4a55.6 55.6 0 0 0-44.6 68.2l4.3 17.6 28.2-7-4.3-17.6a26.2 26.2 0 0 1 3.6-20.9c4-6.2 10.5-10.4 17.7-11.6l89.4-15.4a26.7 26.7 0 0 1 31.2 26.2v203.7a26.5 26.5 0 0 1-26.6 26.6l-2.8-.1-44.2-4.7a26.5 26.5 0 0 1-23-20.1l-2.2-9-28.2 7 2.2 9a55.7 55.7 0 0 0 48.2 42l44.2 4.7a56.3 56.3 0 0 0 43-14 55.7 55.7 0 0 0 18.4-41.4V152.8c0-16.4-7.2-31.9-19.8-42.5z\"></path><path d=\"M195.6 216.8l-28.2 7 26.2 109.3 28.2-7-26.2-109.3zm10.3 102.7a8 8 0 0 1-9.6-5.7 8 8 0 0 1 5.7-9.6 8 8 0 0 1 9.6 5.7 7.8 7.8 0 0 1-5.7 9.6z\"></path></svg>')}:host .soc{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M378.4 170.3h-49.6v-56.7c0-15.6-12.7-28.3-28.3-28.3H172.9c-15.6 0-28.3 12.7-28.3 28.3v22.3a83.31 83.31 0 0 1 28.3 0v-22.3h127.6V397h-70.9v-63.8h-28.3V397H173v-89a83.31 83.31 0 0 1-28.3 0v117.3H407V198.6c-.3-15.6-13-28.3-28.6-28.3zm0 226.7h-49.6V198.6h49.6V397z\"></path><path d=\"M231.7 265.8h15.5v69.4h-15.5z\" transform=\"rotate(-45 239.45 300.56)\"></path><path d=\"M161.3 284.5c-34.1 0-61.9-27.8-61.9-61.9 0-34.1 27.8-61.9 61.9-61.9 34.1 0 61.9 27.8 61.9 61.9 0 34.2-27.8 61.9-61.9 61.9zm0-108.3c-25.6 0-46.4 20.8-46.4 46.4 0 25.6 20.8 46.4 46.4 46.4 25.6 0 46.4-20.8 46.4-46.4a46.5 46.5 0 0 0-46.4-46.4z\"></path><path d=\"M130.7 210.1v37.4c2.5 3.4 5.5 6.3 8.9 8.7v-46.1h-8.9z\"></path><path d=\"M148.5 224.8v36c2.8 1 5.8 1.7 8.9 2v-38h-8.9z\"></path><path d=\"M166.4 197.7v65c3.1-.4 6.1-1.2 8.9-2.3v-62.6h-8.9z\"></path><path d=\"M184.2 211.1v44.1c3.5-2.7 6.5-5.9 8.9-9.6v-34.5h-8.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M378.4 170.3h-49.6v-56.7c0-15.6-12.7-28.3-28.3-28.3H172.9c-15.6 0-28.3 12.7-28.3 28.3v22.3a83.31 83.31 0 0 1 28.3 0v-22.3h127.6V397h-70.9v-63.8h-28.3V397H173v-89a83.31 83.31 0 0 1-28.3 0v117.3H407V198.6c-.3-15.6-13-28.3-28.6-28.3zm0 226.7h-49.6V198.6h49.6V397z\"></path><path d=\"M231.7 265.8h15.5v69.4h-15.5z\" transform=\"rotate(-45 239.45 300.56)\"></path><path d=\"M161.3 284.5c-34.1 0-61.9-27.8-61.9-61.9 0-34.1 27.8-61.9 61.9-61.9 34.1 0 61.9 27.8 61.9 61.9 0 34.2-27.8 61.9-61.9 61.9zm0-108.3c-25.6 0-46.4 20.8-46.4 46.4 0 25.6 20.8 46.4 46.4 46.4 25.6 0 46.4-20.8 46.4-46.4a46.5 46.5 0 0 0-46.4-46.4z\"></path><path d=\"M130.7 210.1v37.4c2.5 3.4 5.5 6.3 8.9 8.7v-46.1h-8.9z\"></path><path d=\"M148.5 224.8v36c2.8 1 5.8 1.7 8.9 2v-38h-8.9z\"></path><path d=\"M166.4 197.7v65c3.1-.4 6.1-1.2 8.9-2.3v-62.6h-8.9z\"></path><path d=\"M184.2 211.1v44.1c3.5-2.7 6.5-5.9 8.9-9.6v-34.5h-8.9z\"></path></svg>')}:host .chf-eur{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406 131l-15 45-26-41-12-19c-8-13-22-22-37-24l-27-4-3 16 28 4c10 2 20 8 25 17l12 19 26 41-47-7-2 17 71 9 22-68-15-5z\"></path><path d=\"M184 399c-11-3-20-10-25-19l-10-20-22-43 46 10 4-16-70-16-28 67 15 6 18-44 22 43 10 20c8 14 20 24 36 28l27 6 3-16-26-6z\"></path><path d=\"M318 213l-5 30a61 61 0 0 1-9 121c-31 0-56-22-60-52l-30 6a92 92 0 1 0 104-105z\"></path><path d=\"M205 296a92 92 0 1 0 0-184 92 92 0 0 0 0 184zm0-153a61 61 0 0 1 0 122 61 61 0 0 1 0-122z\"></path><path d=\"M176 226c4 0 7-1 9-3 2-3 3-6 3-10v-2h-7v2l-1 5c-1 2-2 2-4 2-3 0-4-1-5-3l-1-13 1-11c1-3 2-4 5-4s5 2 5 7h7c0-5-1-8-3-10s-5-3-9-3c-6 0-10 2-12 6l-2 15 2 16c2 4 6 6 12 6z\"></path><path d=\"M202 206h10v19h8v-41h-8v17h-10v-17h-8v41h8z\"></path><path d=\"M236 207h12v-6h-12v-11h12v-6h-20v41h8z\"></path><path d=\"M323 287l-4-3-6-2-4 1-3 3-1 4-1 5h16l-1 6h-15v6h13l-1 7h-12l1 6 1 4c0 2 1 2 2 3l5 1 6-1 4-3v9l-4 2-6 1-9-2c-3-1-5-2-6-4l-3-6-1-10h-7l1-7h6v-6h-7l1-6h6l1-8 4-7 5-4 10-1a20 20 0 0 1 7 1 15 15 0 0 1 4 2l-2 9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406 131l-15 45-26-41-12-19c-8-13-22-22-37-24l-27-4-3 16 28 4c10 2 20 8 25 17l12 19 26 41-47-7-2 17 71 9 22-68-15-5z\"></path><path d=\"M184 399c-11-3-20-10-25-19l-10-20-22-43 46 10 4-16-70-16-28 67 15 6 18-44 22 43 10 20c8 14 20 24 36 28l27 6 3-16-26-6z\"></path><path d=\"M318 213l-5 30a61 61 0 0 1-9 121c-31 0-56-22-60-52l-30 6a92 92 0 1 0 104-105z\"></path><path d=\"M205 296a92 92 0 1 0 0-184 92 92 0 0 0 0 184zm0-153a61 61 0 0 1 0 122 61 61 0 0 1 0-122z\"></path><path d=\"M176 226c4 0 7-1 9-3 2-3 3-6 3-10v-2h-7v2l-1 5c-1 2-2 2-4 2-3 0-4-1-5-3l-1-13 1-11c1-3 2-4 5-4s5 2 5 7h7c0-5-1-8-3-10s-5-3-9-3c-6 0-10 2-12 6l-2 15 2 16c2 4 6 6 12 6z\"></path><path d=\"M202 206h10v19h8v-41h-8v17h-10v-17h-8v41h8z\"></path><path d=\"M236 207h12v-6h-12v-11h12v-6h-20v41h8z\"></path><path d=\"M323 287l-4-3-6-2-4 1-3 3-1 4-1 5h16l-1 6h-15v6h13l-1 7h-12l1 6 1 4c0 2 1 2 2 3l5 1 6-1 4-3v9l-4 2-6 1-9-2c-3-1-5-2-6-4l-3-6-1-10h-7l1-7h6v-6h-7l1-6h6l1-8 4-7 5-4 10-1a20 20 0 0 1 7 1 15 15 0 0 1 4 2l-2 9z\"></path></svg>')}:host .printer{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 354.3h42.5v42.5a28.3 28.3 0 0 0 28.3 28.3H326a28.3 28.3 0 0 0 28.3-28.3v-42.5h42.5a28.3 28.3 0 0 0 28.3-28.3V184.3a28.3 28.3 0 0 0-28.3-28.3h-42.5v-42.5A28.3 28.3 0 0 0 326 85.2H184.3a28.3 28.3 0 0 0-28.3 28.3V156h-42.5a28.3 28.3 0 0 0-28.3 28.3V326a28.1 28.1 0 0 0 28.2 28.3zM326 396.9H184.3V269.3H326v127.6zM184.3 113.4H326v42.5H184.3v-42.5zm-70.9 70.9h283.5V326h-42.5v-56.7a28.3 28.3 0 0 0-28.3-28.3H184.3a28.3 28.3 0 0 0-28.3 28.3V326h-42.5V184.3z\"></path><path d=\"M198.4 294.1h113.4v7.1H198.4z\"></path><path d=\"M198.4 315.4h113.4v7.1H198.4z\"></path><path d=\"M198.4 336.6h113.4v7.1H198.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 354.3h42.5v42.5a28.3 28.3 0 0 0 28.3 28.3H326a28.3 28.3 0 0 0 28.3-28.3v-42.5h42.5a28.3 28.3 0 0 0 28.3-28.3V184.3a28.3 28.3 0 0 0-28.3-28.3h-42.5v-42.5A28.3 28.3 0 0 0 326 85.2H184.3a28.3 28.3 0 0 0-28.3 28.3V156h-42.5a28.3 28.3 0 0 0-28.3 28.3V326a28.1 28.1 0 0 0 28.2 28.3zM326 396.9H184.3V269.3H326v127.6zM184.3 113.4H326v42.5H184.3v-42.5zm-70.9 70.9h283.5V326h-42.5v-56.7a28.3 28.3 0 0 0-28.3-28.3H184.3a28.3 28.3 0 0 0-28.3 28.3V326h-42.5V184.3z\"></path><path d=\"M198.4 294.1h113.4v7.1H198.4z\"></path><path d=\"M198.4 315.4h113.4v7.1H198.4z\"></path><path d=\"M198.4 336.6h113.4v7.1H198.4z\"></path></svg>')}:host .eur-dollar{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406 131l-15 45-26-41-12-19c-8-13-22-22-37-24l-27-4-3 16 28 4c10 2 20 8 25 17l12 19 26 41-47-7-2 17 71 9 22-68-15-5z\"></path><path d=\"M184 399c-11-3-20-10-25-19l-10-20-22-43 46 10 4-16-70-16-28 67 15 6 18-44 22 43 10 20c8 14 20 24 36 28l27 6 3-16-26-6z\"></path><path d=\"M318 213l-5 30a61 61 0 0 1-9 121c-31 0-56-22-60-52l-30 6a92 92 0 1 0 104-105z\"></path><path d=\"M205 296a92 92 0 1 0 0-184 92 92 0 0 0 0 184zm0-153a61 61 0 0 1 0 122 61 61 0 0 1 0-122z\"></path><path d=\"M302 267v7l-6 2c-2 0-4 2-5 3-1 2-3 3-3 5l-1 7c0 5 1 9 4 12 1 2 5 4 10 7l1 1v19c-3-1-5-4-5-10v-1h-11v4c0 5 1 9 4 12 3 2 7 4 12 4v8h6v-8c11-1 16-7 16-18 0-4-1-8-4-11a36 36 0 0 0-11-8l-1-1v-19c3 1 5 4 5 8v2h10v-2c0-11-5-16-15-16v-7h-6zm0 30c-3-2-5-5-5-7 0-4 2-7 5-7v14zm9 20l1 1c2 1 2 3 2 5l-2 5-4 2v-15l3 2z\"></path><path d=\"M217 186l-3-3-6-1-4 1c-2 0-3 1-3 2l-2 4v5h16l-1 7h-15v5h13l-1 7h-12v6l1 5 3 2 5 1 5-1 4-3v9l-4 2-6 1-9-1c-3-1-4-3-5-4l-4-7-1-10h-7l2-7h5v-5h-7l2-7h5l2-8 3-6 6-4 9-2 5 1 3 1a15 15 0 0 1 3 2l-2 8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M406 131l-15 45-26-41-12-19c-8-13-22-22-37-24l-27-4-3 16 28 4c10 2 20 8 25 17l12 19 26 41-47-7-2 17 71 9 22-68-15-5z\"></path><path d=\"M184 399c-11-3-20-10-25-19l-10-20-22-43 46 10 4-16-70-16-28 67 15 6 18-44 22 43 10 20c8 14 20 24 36 28l27 6 3-16-26-6z\"></path><path d=\"M318 213l-5 30a61 61 0 0 1-9 121c-31 0-56-22-60-52l-30 6a92 92 0 1 0 104-105z\"></path><path d=\"M205 296a92 92 0 1 0 0-184 92 92 0 0 0 0 184zm0-153a61 61 0 0 1 0 122 61 61 0 0 1 0-122z\"></path><path d=\"M302 267v7l-6 2c-2 0-4 2-5 3-1 2-3 3-3 5l-1 7c0 5 1 9 4 12 1 2 5 4 10 7l1 1v19c-3-1-5-4-5-10v-1h-11v4c0 5 1 9 4 12 3 2 7 4 12 4v8h6v-8c11-1 16-7 16-18 0-4-1-8-4-11a36 36 0 0 0-11-8l-1-1v-19c3 1 5 4 5 8v2h10v-2c0-11-5-16-15-16v-7h-6zm0 30c-3-2-5-5-5-7 0-4 2-7 5-7v14zm9 20l1 1c2 1 2 3 2 5l-2 5-4 2v-15l3 2z\"></path><path d=\"M217 186l-3-3-6-1-4 1c-2 0-3 1-3 2l-2 4v5h16l-1 7h-15v5h13l-1 7h-12v6l1 5 3 2 5 1 5-1 4-3v9l-4 2-6 1-9-1c-3-1-4-3-5-4l-4-7-1-10h-7l2-7h5v-5h-7l2-7h5l2-8 3-6 6-4 9-2 5 1 3 1a15 15 0 0 1 3 2l-2 8z\"></path></svg>')}:host .dws{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M300 209.9a30 30 0 0 0-31.4-2.3c-13-12.8-28.2-16.4-43.3-10.3-15.6 6.3-24.1 20-23.9 38.1a34.6 34.6 0 0 0-26.8 39.3 33.9 33.9 0 0 0 12 20.9 36.2 36.2 0 0 0 23.1 8.2h88.1l4.8-.3a34.9 34.9 0 0 0 31.2-31.5c.8-7.6-1.2-15.5-5.7-22.1a35.9 35.9 0 0 0-15-12.5c1.1-11.5-3.4-21-13.1-27.5zm20.6 60.7a21.6 21.6 0 0 1-19.4 19.7l-3.3.2h-88a22 22 0 0 1-22-17.8c-.9-5.9.5-11.7 4-16.3 3.7-4.8 9.3-7.8 15.8-8.5l8.2-.9-.8-6.7c-1.2-10.7.4-24.6 15.2-30.6 3.1-1.3 6.2-1.9 9.2-1.9 7.9 0 15.5 4.2 22.7 12.6l3.8 4.4 4.9-3.2c7.8-5.1 14.6-5.3 21.4-.6 6.6 4.5 8.7 10.7 6.7 19.4l-1.3 5.8 5.6 2 .5.2 1.5.5c9.8 3 16.3 12.4 15.3 21.7z\"></path><path d=\"M135.4 183.7c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6h28.3V183.7a35.5 35.5 0 0 0-35.4-35.4H142.5a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V183.7z\"></path><path d=\"M425.9 332.5H85.8v28.3H426v-28.3zm-127.5 17.7h-85v-7.1h85v7.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M300 209.9a30 30 0 0 0-31.4-2.3c-13-12.8-28.2-16.4-43.3-10.3-15.6 6.3-24.1 20-23.9 38.1a34.6 34.6 0 0 0-26.8 39.3 33.9 33.9 0 0 0 12 20.9 36.2 36.2 0 0 0 23.1 8.2h88.1l4.8-.3a34.9 34.9 0 0 0 31.2-31.5c.8-7.6-1.2-15.5-5.7-22.1a35.9 35.9 0 0 0-15-12.5c1.1-11.5-3.4-21-13.1-27.5zm20.6 60.7a21.6 21.6 0 0 1-19.4 19.7l-3.3.2h-88a22 22 0 0 1-22-17.8c-.9-5.9.5-11.7 4-16.3 3.7-4.8 9.3-7.8 15.8-8.5l8.2-.9-.8-6.7c-1.2-10.7.4-24.6 15.2-30.6 3.1-1.3 6.2-1.9 9.2-1.9 7.9 0 15.5 4.2 22.7 12.6l3.8 4.4 4.9-3.2c7.8-5.1 14.6-5.3 21.4-.6 6.6 4.5 8.7 10.7 6.7 19.4l-1.3 5.8 5.6 2 .5.2 1.5.5c9.8 3 16.3 12.4 15.3 21.7z\"></path><path d=\"M135.4 183.7c0-3.9 3.2-7.1 7.1-7.1h226.8c3.9 0 7.1 3.2 7.1 7.1v127.6h28.3V183.7a35.5 35.5 0 0 0-35.4-35.4H142.5a35.5 35.5 0 0 0-35.4 35.4v127.6h28.3V183.7z\"></path><path d=\"M425.9 332.5H85.8v28.3H426v-28.3zm-127.5 17.7h-85v-7.1h85v7.1z\"></path></svg>')}:host .cup{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M91.1 170.1a57 57 0 0 0 56.2 57.3v-28.3a27.9 27.9 0 0 1-19.8-8.5 27.8 27.8 0 0 1-8-20.1c.1-7.5 3.1-14.6 8.5-19.8a26 26 0 0 1 19.3-8v-28.3a53.5 53.5 0 0 0-39 16 55.4 55.4 0 0 0-17.2 39.7z\"></path><path d=\"M422.5 171.7a57 57 0 0 0-56.2-57.3v28.3c7.5.1 14.6 3.1 19.8 8.5a27.8 27.8 0 0 1 8 20.1c-.1 7.5-3.1 14.6-8.5 19.8s-11.7 8.1-19.3 8v28.3c15.1.2 28.2-5.5 39-16a56.2 56.2 0 0 0 17.2-39.7z\"></path><path d=\"M328.8 338.4H271l.3-21.6a87.2 87.2 0 0 0 52.1-34.3 134.7 134.7 0 0 0 25.8-81.2l.3-101.4c0-3.8-1.5-7.4-4.1-10.1s-6.3-4.2-10-4.2H178.6c-7.8 0-14.2 6.3-14.2 14.2v101.4c0 30.5 9.2 59.4 25.8 81.2a86.3 86.3 0 0 0 52.7 34.4l-.3 21.5h-55.9a21.3 21.3 0 0 0-21.3 21.2V405c0 11.7 9.5 21.2 21.3 21.2h142c11.7 0 21.3-9.5 21.3-21.2v-45.5c0-11.6-9.5-21.1-21.2-21.1zm-116-73c-12.9-17-20-39.7-20-64.1v-87.2h128.3l-.3 87.2c0 24.4-7.1 47.1-20 64.1-12 15.8-27.7 24.5-44 24.5s-32-8.7-44-24.5zM321.7 398H193.8v-31.2h127.9V398z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M91.1 170.1a57 57 0 0 0 56.2 57.3v-28.3a27.9 27.9 0 0 1-19.8-8.5 27.8 27.8 0 0 1-8-20.1c.1-7.5 3.1-14.6 8.5-19.8a26 26 0 0 1 19.3-8v-28.3a53.5 53.5 0 0 0-39 16 55.4 55.4 0 0 0-17.2 39.7z\"></path><path d=\"M422.5 171.7a57 57 0 0 0-56.2-57.3v28.3c7.5.1 14.6 3.1 19.8 8.5a27.8 27.8 0 0 1 8 20.1c-.1 7.5-3.1 14.6-8.5 19.8s-11.7 8.1-19.3 8v28.3c15.1.2 28.2-5.5 39-16a56.2 56.2 0 0 0 17.2-39.7z\"></path><path d=\"M328.8 338.4H271l.3-21.6a87.2 87.2 0 0 0 52.1-34.3 134.7 134.7 0 0 0 25.8-81.2l.3-101.4c0-3.8-1.5-7.4-4.1-10.1s-6.3-4.2-10-4.2H178.6c-7.8 0-14.2 6.3-14.2 14.2v101.4c0 30.5 9.2 59.4 25.8 81.2a86.3 86.3 0 0 0 52.7 34.4l-.3 21.5h-55.9a21.3 21.3 0 0 0-21.3 21.2V405c0 11.7 9.5 21.2 21.3 21.2h142c11.7 0 21.3-9.5 21.3-21.2v-45.5c0-11.6-9.5-21.1-21.2-21.1zm-116-73c-12.9-17-20-39.7-20-64.1v-87.2h128.3l-.3 87.2c0 24.4-7.1 47.1-20 64.1-12 15.8-27.7 24.5-44 24.5s-32-8.7-44-24.5zM321.7 398H193.8v-31.2h127.9V398z\"></path></svg>')}:host .binoculars{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M101 332.8l.3.4.4.5.6.7c3.8 5 8.3 9.5 13.3 13.4l1.4 1.1.1.1c2.3 1.7 4.5 3.2 6.7 4.5l1.4.9a83 83 0 0 0 17.6 7.4l2.1.5c2.4.6 4.9 1.1 7.5 1.5h.2l.6.1 1.2.2h.3a78.7 78.7 0 0 0 87.6-69h26.5a76.6 76.6 0 0 0 14.8 37.4l.3.5.4.5.6.7c3.8 5 8.3 9.5 13.3 13.4l1.4 1.1.1.1c2.3 1.7 4.5 3.2 6.7 4.5l1.4.9a83 83 0 0 0 17.6 7.4l2.1.5c2.4.6 4.9 1.1 7.5 1.5h.2l.6.1 1.2.2h.3a78.7 78.7 0 0 0 88.2-78l-.1-2.2-.1-1a77.7 77.7 0 0 0-24-53.3 77.9 77.9 0 0 0-74.5-19.4c-12.1-8.6-23.8-8.7-39.3-5h-1.9a37.6 37.6 0 0 0 5.5-19.7l-.1-1.5v-.1a37.8 37.8 0 1 0-70.6 20.6l.1.1a42.1 42.1 0 0 0-40.9 4.5A78.7 78.7 0 0 0 101 332.8zm245.9-96.7a50 50 0 0 1 50 47.9l.1 1.7.1.8v.1a50.2 50.2 0 0 1-56.1 49.5l-.4-.1-1.4-.2c-1.6-.2-3.1-.6-4.5-.9l-1.5-.4a52.4 52.4 0 0 1-10.9-4.6l-1.1-.7c-1.4-.8-2.8-1.8-4.3-2.9l-.6-.4-.2-.2a54.4 54.4 0 0 1-8.6-8.7l-.3-.4-.6-.7-2.9-4.4a50.3 50.3 0 0 1 43.2-75.4zm-93.8-60c5.1 0 9.2 3.9 9.5 9l.1 1a9.6 9.6 0 0 1-9.6 9.2l-.9-.1-.6-.1-.7-.1-.5-.1-1.8-.8-.4-.3-.8-.6-.2-.1a12 12 0 0 1-1.6-1.6l-.1-.1-.2-.2-.5-.8a9.1 9.1 0 0 1-1.3-4.8 9.6 9.6 0 0 1 9.6-9.5zm37.3 55.8a78.8 78.8 0 0 0-19.6 35.1h-30.4a78.4 78.4 0 0 0-19.5-35.1h69.5zm-126.1 4.2a50 50 0 0 1 50 47.9l.1 1.7.1.8v.1a50.2 50.2 0 0 1-56.1 49.5l-.4-.1-1.4-.2c-1.6-.2-3.1-.6-4.5-.9l-1.5-.4a52.4 52.4 0 0 1-10.9-4.6l-1.1-.7c-1.4-.8-2.8-1.8-4.3-2.9l-.6-.4-.2-.2a54.4 54.4 0 0 1-8.6-8.7l-.3-.4-.6-.7-2.9-4.4a50.3 50.3 0 0 1 43.2-75.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M101 332.8l.3.4.4.5.6.7c3.8 5 8.3 9.5 13.3 13.4l1.4 1.1.1.1c2.3 1.7 4.5 3.2 6.7 4.5l1.4.9a83 83 0 0 0 17.6 7.4l2.1.5c2.4.6 4.9 1.1 7.5 1.5h.2l.6.1 1.2.2h.3a78.7 78.7 0 0 0 87.6-69h26.5a76.6 76.6 0 0 0 14.8 37.4l.3.5.4.5.6.7c3.8 5 8.3 9.5 13.3 13.4l1.4 1.1.1.1c2.3 1.7 4.5 3.2 6.7 4.5l1.4.9a83 83 0 0 0 17.6 7.4l2.1.5c2.4.6 4.9 1.1 7.5 1.5h.2l.6.1 1.2.2h.3a78.7 78.7 0 0 0 88.2-78l-.1-2.2-.1-1a77.7 77.7 0 0 0-24-53.3 77.9 77.9 0 0 0-74.5-19.4c-12.1-8.6-23.8-8.7-39.3-5h-1.9a37.6 37.6 0 0 0 5.5-19.7l-.1-1.5v-.1a37.8 37.8 0 1 0-70.6 20.6l.1.1a42.1 42.1 0 0 0-40.9 4.5A78.7 78.7 0 0 0 101 332.8zm245.9-96.7a50 50 0 0 1 50 47.9l.1 1.7.1.8v.1a50.2 50.2 0 0 1-56.1 49.5l-.4-.1-1.4-.2c-1.6-.2-3.1-.6-4.5-.9l-1.5-.4a52.4 52.4 0 0 1-10.9-4.6l-1.1-.7c-1.4-.8-2.8-1.8-4.3-2.9l-.6-.4-.2-.2a54.4 54.4 0 0 1-8.6-8.7l-.3-.4-.6-.7-2.9-4.4a50.3 50.3 0 0 1 43.2-75.4zm-93.8-60c5.1 0 9.2 3.9 9.5 9l.1 1a9.6 9.6 0 0 1-9.6 9.2l-.9-.1-.6-.1-.7-.1-.5-.1-1.8-.8-.4-.3-.8-.6-.2-.1a12 12 0 0 1-1.6-1.6l-.1-.1-.2-.2-.5-.8a9.1 9.1 0 0 1-1.3-4.8 9.6 9.6 0 0 1 9.6-9.5zm37.3 55.8a78.8 78.8 0 0 0-19.6 35.1h-30.4a78.4 78.4 0 0 0-19.5-35.1h69.5zm-126.1 4.2a50 50 0 0 1 50 47.9l.1 1.7.1.8v.1a50.2 50.2 0 0 1-56.1 49.5l-.4-.1-1.4-.2c-1.6-.2-3.1-.6-4.5-.9l-1.5-.4a52.4 52.4 0 0 1-10.9-4.6l-1.1-.7c-1.4-.8-2.8-1.8-4.3-2.9l-.6-.4-.2-.2a54.4 54.4 0 0 1-8.6-8.7l-.3-.4-.6-.7-2.9-4.4a50.3 50.3 0 0 1 43.2-75.4z\"></path></svg>')}:host .beat{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M245.4 402c-6.7 0-12.5-4.7-13.9-11.4l-26.3-130.8-5.9 11.1c-2.5 4.6-7.3 7.5-12.5 7.5H98.2a14.19 14.19 0 1 1 0-28.4h80.1l20.5-38.3c2.8-5.3 8.7-8.2 14.6-7.3 5.9.9 10.6 5.4 11.8 11.2l16.1 80 19.4-176a14.16 14.16 0 0 1 28-1.1l25.9 134.1 12.8-17.4c2.7-3.6 6.9-5.8 11.4-5.8h73c7.8 0 14.2 6.3 14.2 14.2s-6.3 14.2-14.2 14.2H346l-27.7 37.8c-3.3 4.5-9 6.7-14.5 5.4-5.5-1.2-9.7-5.6-10.8-11.1L278.7 216l-19.1 173.4c-.8 6.9-6.5 12.3-13.5 12.6h-.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M245.4 402c-6.7 0-12.5-4.7-13.9-11.4l-26.3-130.8-5.9 11.1c-2.5 4.6-7.3 7.5-12.5 7.5H98.2a14.19 14.19 0 1 1 0-28.4h80.1l20.5-38.3c2.8-5.3 8.7-8.2 14.6-7.3 5.9.9 10.6 5.4 11.8 11.2l16.1 80 19.4-176a14.16 14.16 0 0 1 28-1.1l25.9 134.1 12.8-17.4c2.7-3.6 6.9-5.8 11.4-5.8h73c7.8 0 14.2 6.3 14.2 14.2s-6.3 14.2-14.2 14.2H346l-27.7 37.8c-3.3 4.5-9 6.7-14.5 5.4-5.5-1.2-9.7-5.6-10.8-11.1L278.7 216l-19.1 173.4c-.8 6.9-6.5 12.3-13.5 12.6h-.7z\"></path></svg>')}:host .snowflake{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M432.8 237.8h-18.9l11.5-16.6a14 14 0 0 0-3.6-19.7 14 14 0 0 0-19.7 3.6l-22.7 32.7h-14.5v-4.7a14.2 14.2 0 1 0-28.4 0v4.7h-30a50.3 50.3 0 0 0-5.1-11.9l48.8-48.8 39.2 7.1c.9.2 1.7.2 2.5.2a14.2 14.2 0 0 0 2.5-28.2l-19.9-3.6 20.4-20.4a14.2 14.2 0 0 0 0-20 14.2 14.2 0 0 0-20 0l-20.4 20.4-3.6-19.9a14.2 14.2 0 0 0-27.9 5.1l7.1 39.2-49.1 49.1c-3.6-2-7.5-3.6-11.6-4.7v-23.7h5.9a14.2 14.2 0 1 0 0-28.4h-5.9v-12.7l32.7-22.7c6.4-4.5 8-13.3 3.6-19.7-4.5-6.4-13.3-8-19.7-3.6l-16.6 11.5V83.2a14.2 14.2 0 1 0-28.4 0v18.9l-16.6-11.5a14 14 0 0 0-19.7 3.6 14 14 0 0 0 3.6 19.7l32.7 22.7v12.7h-5.5a14.2 14.2 0 1 0 0 28.4h5.5v23.9a49 49 0 0 0-11.3 4.7l-49.2-49.2 7.1-39.2a14.2 14.2 0 0 0-27.9-5.1l-3.6 19.9-20.4-20.4a14.2 14.2 0 0 0-20 0 14.2 14.2 0 0 0 0 20l20.4 20.4-19.9 3.6a14.2 14.2 0 0 0 5 28l39.2-7.1 49.2 49.2a54 54 0 0 0-5.2 12.6h-27.3v-4.7a14.2 14.2 0 1 0-28.4 0v4.7h-17L109 206.3c-4.5-6.4-13.3-8-19.7-3.6-6.4 4.5-8 13.3-3.6 19.7L97.2 239H78.4a14.2 14.2 0 1 0 0 28.4h18.9L85.8 284a14 14 0 0 0 3.6 19.7 14.3 14.3 0 0 0 19.8-3.6l22.7-32.7h17v6.7a14.2 14.2 0 1 0 28.4 0v-6.7h27.6a54 54 0 0 0 4.8 11.3L161 327.4l-39.2-7.1a14.2 14.2 0 0 0-5.1 27.9l19.9 3.6L116 372a14.2 14.2 0 0 0 10 24.2 14 14 0 0 0 10-4.2l20.4-20.4 3.6 19.9a14.1 14.1 0 1 0 27.8-5l-7.1-39.2 48.7-48.7c3.8 2.2 8 3.9 12.3 5.1V329h-6.3a14.2 14.2 0 1 0 0 28.4h6.3v18.9L209.2 399c-6.4 4.5-8 13.3-3.6 19.7a14.2 14.2 0 0 0 19.8 3.6l16.6-11.5v18.9a14.2 14.2 0 1 0 28.4 0v-18.9l16.6 11.5a14.3 14.3 0 0 0 19.8-3.6 14 14 0 0 0-3.6-19.7l-32.7-22.7v-18.9h5.1a14.2 14.2 0 1 0 0-28.4h-5.1v-25.7a54 54 0 0 0 11.3-4.8l48.7 48.7-7.1 39.2a14.2 14.2 0 0 0 11.4 16.5c.9.2 1.7.2 2.5.2 6.7 0 12.7-4.8 13.9-11.7l3.6-19.9 20.4 20.4a14.1 14.1 0 0 0 20 0 14.2 14.2 0 0 0 0-20l-20.4-20.4 19.9-3.6a14.2 14.2 0 0 0-5.1-27.9l-39.2 7.1-48.7-48.7c2.2-3.8 3.9-8 5-12.3h29.8v6.7a14.2 14.2 0 1 0 28.4 0v-6.7h14.5l22.7 32.7a14.2 14.2 0 0 0 23.4-16.1L414 266.1h18.9c7.8 0 14.2-6.3 14.2-14.2s-6.5-14.1-14.3-14.1zm-177.2 40.9a24.6 24.6 0 1 1 0-49.2 24.6 24.6 0 0 1 0 49.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M432.8 237.8h-18.9l11.5-16.6a14 14 0 0 0-3.6-19.7 14 14 0 0 0-19.7 3.6l-22.7 32.7h-14.5v-4.7a14.2 14.2 0 1 0-28.4 0v4.7h-30a50.3 50.3 0 0 0-5.1-11.9l48.8-48.8 39.2 7.1c.9.2 1.7.2 2.5.2a14.2 14.2 0 0 0 2.5-28.2l-19.9-3.6 20.4-20.4a14.2 14.2 0 0 0 0-20 14.2 14.2 0 0 0-20 0l-20.4 20.4-3.6-19.9a14.2 14.2 0 0 0-27.9 5.1l7.1 39.2-49.1 49.1c-3.6-2-7.5-3.6-11.6-4.7v-23.7h5.9a14.2 14.2 0 1 0 0-28.4h-5.9v-12.7l32.7-22.7c6.4-4.5 8-13.3 3.6-19.7-4.5-6.4-13.3-8-19.7-3.6l-16.6 11.5V83.2a14.2 14.2 0 1 0-28.4 0v18.9l-16.6-11.5a14 14 0 0 0-19.7 3.6 14 14 0 0 0 3.6 19.7l32.7 22.7v12.7h-5.5a14.2 14.2 0 1 0 0 28.4h5.5v23.9a49 49 0 0 0-11.3 4.7l-49.2-49.2 7.1-39.2a14.2 14.2 0 0 0-27.9-5.1l-3.6 19.9-20.4-20.4a14.2 14.2 0 0 0-20 0 14.2 14.2 0 0 0 0 20l20.4 20.4-19.9 3.6a14.2 14.2 0 0 0 5 28l39.2-7.1 49.2 49.2a54 54 0 0 0-5.2 12.6h-27.3v-4.7a14.2 14.2 0 1 0-28.4 0v4.7h-17L109 206.3c-4.5-6.4-13.3-8-19.7-3.6-6.4 4.5-8 13.3-3.6 19.7L97.2 239H78.4a14.2 14.2 0 1 0 0 28.4h18.9L85.8 284a14 14 0 0 0 3.6 19.7 14.3 14.3 0 0 0 19.8-3.6l22.7-32.7h17v6.7a14.2 14.2 0 1 0 28.4 0v-6.7h27.6a54 54 0 0 0 4.8 11.3L161 327.4l-39.2-7.1a14.2 14.2 0 0 0-5.1 27.9l19.9 3.6L116 372a14.2 14.2 0 0 0 10 24.2 14 14 0 0 0 10-4.2l20.4-20.4 3.6 19.9a14.1 14.1 0 1 0 27.8-5l-7.1-39.2 48.7-48.7c3.8 2.2 8 3.9 12.3 5.1V329h-6.3a14.2 14.2 0 1 0 0 28.4h6.3v18.9L209.2 399c-6.4 4.5-8 13.3-3.6 19.7a14.2 14.2 0 0 0 19.8 3.6l16.6-11.5v18.9a14.2 14.2 0 1 0 28.4 0v-18.9l16.6 11.5a14.3 14.3 0 0 0 19.8-3.6 14 14 0 0 0-3.6-19.7l-32.7-22.7v-18.9h5.1a14.2 14.2 0 1 0 0-28.4h-5.1v-25.7a54 54 0 0 0 11.3-4.8l48.7 48.7-7.1 39.2a14.2 14.2 0 0 0 11.4 16.5c.9.2 1.7.2 2.5.2 6.7 0 12.7-4.8 13.9-11.7l3.6-19.9 20.4 20.4a14.1 14.1 0 0 0 20 0 14.2 14.2 0 0 0 0-20l-20.4-20.4 19.9-3.6a14.2 14.2 0 0 0-5.1-27.9l-39.2 7.1-48.7-48.7c2.2-3.8 3.9-8 5-12.3h29.8v6.7a14.2 14.2 0 1 0 28.4 0v-6.7h14.5l22.7 32.7a14.2 14.2 0 0 0 23.4-16.1L414 266.1h18.9c7.8 0 14.2-6.3 14.2-14.2s-6.5-14.1-14.3-14.1zm-177.2 40.9a24.6 24.6 0 1 1 0-49.2 24.6 24.6 0 0 1 0 49.2z\"></path></svg>')}:host .snowman{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M334.3 241.9c5.2-11.1 7.9-23.3 7.9-35.7 0-16.3-4.7-32.2-13.5-45.9l-1.1-2.2H357v-28.3h-35.8v-47H193v47h-34.5v28.3h28.2l-1.1 2.1a83.79 83.79 0 0 0-13.5 45.9c0 12.4 2.7 24.6 7.9 35.7-4.5 4.4-8.5 9.2-12.1 14.3-6.5-3-13.6-4.7-20.7-4.7l-45.2-.2-.2 28.3 45.2.2c2.6 0 5.2.6 7.7 1.5A109 109 0 0 0 148 319c0 60.2 49 109.3 109.3 109.3 60.2 0 109.2-49 109.2-109.3-.2-29.2-11.7-56.8-32.2-77.1zM221.4 111.1h71.4v18.7h-71.4v-18.7zm35.7 289c-44.6 0-80.9-36.3-80.9-80.9 0-5.5.6-11 1.6-16.3l26.7 28.9 20.8-19.2-35.5-38.4c4.6-6.8 10.2-12.9 16.8-18.1l10.1-8.1-7.1-10.8c-6-9.2-9.2-19.9-9.2-30.9 0-11.1 3.2-21.8 9.3-31l.4-.6 8.5-16.5h77l8.6 16.5.4.6c6.1 9.3 9.3 20 9.3 31s-3.2 21.7-9.3 30.9l-7.1 10.8 10.1 8.1a80.25 80.25 0 0 1 30.4 63.2c0 44.5-36.3 80.8-80.9 80.8z\"></path><path d=\"M234.1 197.4a6.36 6.36 0 0 0 0-12.7c-3.5 0-6.4 2.9-6.4 6.3 0 3.6 2.8 6.4 6.4 6.4z\"></path><path d=\"M276.5 185.1a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.9 6.4-6.4 0-3.5-2.9-6.3-6.4-6.3z\"></path><path d=\"M255.1 276.5a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.9 6.4-6.3 0-3.5-2.9-6.4-6.4-6.4z\"></path><path d=\"M255.1 315.9c-3.5 0-6.3 2.9-6.3 6.3a6.36 6.36 0 0 0 12.7 0c0-3.5-2.9-6.3-6.4-6.3z\"></path><path d=\"M255.1 355.1a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.8 6.4-6.3s-2.9-6.4-6.4-6.4z\"></path><path d=\"M264.1 228.3v-21l-37.4 11z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M334.3 241.9c5.2-11.1 7.9-23.3 7.9-35.7 0-16.3-4.7-32.2-13.5-45.9l-1.1-2.2H357v-28.3h-35.8v-47H193v47h-34.5v28.3h28.2l-1.1 2.1a83.79 83.79 0 0 0-13.5 45.9c0 12.4 2.7 24.6 7.9 35.7-4.5 4.4-8.5 9.2-12.1 14.3-6.5-3-13.6-4.7-20.7-4.7l-45.2-.2-.2 28.3 45.2.2c2.6 0 5.2.6 7.7 1.5A109 109 0 0 0 148 319c0 60.2 49 109.3 109.3 109.3 60.2 0 109.2-49 109.2-109.3-.2-29.2-11.7-56.8-32.2-77.1zM221.4 111.1h71.4v18.7h-71.4v-18.7zm35.7 289c-44.6 0-80.9-36.3-80.9-80.9 0-5.5.6-11 1.6-16.3l26.7 28.9 20.8-19.2-35.5-38.4c4.6-6.8 10.2-12.9 16.8-18.1l10.1-8.1-7.1-10.8c-6-9.2-9.2-19.9-9.2-30.9 0-11.1 3.2-21.8 9.3-31l.4-.6 8.5-16.5h77l8.6 16.5.4.6c6.1 9.3 9.3 20 9.3 31s-3.2 21.7-9.3 30.9l-7.1 10.8 10.1 8.1a80.25 80.25 0 0 1 30.4 63.2c0 44.5-36.3 80.8-80.9 80.8z\"></path><path d=\"M234.1 197.4a6.36 6.36 0 0 0 0-12.7c-3.5 0-6.4 2.9-6.4 6.3 0 3.6 2.8 6.4 6.4 6.4z\"></path><path d=\"M276.5 185.1a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.9 6.4-6.4 0-3.5-2.9-6.3-6.4-6.3z\"></path><path d=\"M255.1 276.5a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.9 6.4-6.3 0-3.5-2.9-6.4-6.4-6.4z\"></path><path d=\"M255.1 315.9c-3.5 0-6.3 2.9-6.3 6.3a6.36 6.36 0 0 0 12.7 0c0-3.5-2.9-6.3-6.4-6.3z\"></path><path d=\"M255.1 355.1a6.36 6.36 0 0 0 0 12.7c3.5 0 6.4-2.8 6.4-6.3s-2.9-6.4-6.4-6.4z\"></path><path d=\"M264.1 228.3v-21l-37.4 11z\"></path></svg>')}:host .agile{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M391.2 331.7l-23 16.5 17.3 24.1-44.7-.1c-8 10.8-17.3 20.3-27.6 28.3l68.7.1-21.1 19.6 22.3 19.8 49.4-50.8-41.3-57.5z\"></path><path d=\"M320.9 218.7a110 110 0 0 0-74.8-40.2A110.3 110.3 0 0 0 141 229.9a56.1 56.1 0 0 1 2.8-97.3 55.5 55.5 0 0 1 53-.2l-25.8 9.4 9.7 26.6L245 145l-14.8-73.1-27.8 5.6 5.8 28.9A84 84 0 0 0 89.5 158a84 84 0 0 0 39.6 97.9 112.6 112.6 0 0 0-3.8 49.3L103.1 289l-16.6 23 57.3 41.5 51-49.1-19.6-20.4-21.3 20.5a82.7 82.7 0 0 1 28.8-79.6 82 82 0 0 1 60.6-18.2 82.7 82.7 0 0 1-3.7 164.6l-153.2.5v-.1h-.1V400l164.6.3a114.4 114.4 0 0 0 57.8-28.2l.2-.3a108.6 108.6 0 0 0 36.4-71.8c3.1-29.4-5.6-58.3-24.4-81.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M391.2 331.7l-23 16.5 17.3 24.1-44.7-.1c-8 10.8-17.3 20.3-27.6 28.3l68.7.1-21.1 19.6 22.3 19.8 49.4-50.8-41.3-57.5z\"></path><path d=\"M320.9 218.7a110 110 0 0 0-74.8-40.2A110.3 110.3 0 0 0 141 229.9a56.1 56.1 0 0 1 2.8-97.3 55.5 55.5 0 0 1 53-.2l-25.8 9.4 9.7 26.6L245 145l-14.8-73.1-27.8 5.6 5.8 28.9A84 84 0 0 0 89.5 158a84 84 0 0 0 39.6 97.9 112.6 112.6 0 0 0-3.8 49.3L103.1 289l-16.6 23 57.3 41.5 51-49.1-19.6-20.4-21.3 20.5a82.7 82.7 0 0 1 28.8-79.6 82 82 0 0 1 60.6-18.2 82.7 82.7 0 0 1-3.7 164.6l-153.2.5v-.1h-.1V400l164.6.3a114.4 114.4 0 0 0 57.8-28.2l.2-.3a108.6 108.6 0 0 0 36.4-71.8c3.1-29.4-5.6-58.3-24.4-81.3z\"></path></svg>')}:host .dog{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M235 201a21 21 0 1 0-42 0v21a21 21 0 1 0 42 0v-21c0 .1 0 0 0 0z\"></path><path d=\"M320 201a21 21 0 1 0-42 0v21a21 21 0 1 0 42 0v-21c0 .1 0 0 0 0z\"></path><path d=\"M425.7 214.3c-15.6-27.4-30.5-51.8-55.5-73.6-23.6-20.6-43.7-21.5-56.4-18.6-1.7.4-3.3.8-4.8 1.4a97 97 0 0 0-52.8-15.8H255.9h-.1a96 96 0 0 0-52.8 15.8l-4.8-1.4c-12.7-2.9-32.8-1.9-56.4 18.6-25 21.8-39.9 46.2-55.5 73.6-10.3 18.1-18.7 45.5-12.9 62.9a23 23 0 0 0 12.9 14.6c13.3 5.7 27.7-3.4 39.7-14.1a147 147 0 0 0 20.8 78.7 89.5 89.5 0 0 0 37 32.1 154.8 154.8 0 0 0 71.2 15h2.2c21.6-.1 45.1-2.2 71.2-15a89.5 89.5 0 0 0 37-32.1 147 147 0 0 0 20.8-78.7c12 10.7 26.3 19.8 39.7 14.1 4.2-1.8 9.9-5.8 12.9-14.6 5.6-17.4-2.8-44.8-13.1-62.9zm-44.1 17.4a14.2 14.2 0 0 0-25.2 9.7c1.1 16.2 2.1 45.3.5 54.4a122 122 0 0 1-15.5 45.2 62.4 62.4 0 0 1-25.6 22 117.8 117.8 0 0 1-45.6 11.7V325a94.1 94.1 0 0 0 19.1-14.9c13.2-13.2 20.2-27.1 20.2-34 0-6.2-1.1-6.6-5-8.2-11.2-4.7-33.1-5.2-48.6-5.2s-37.4.5-48.6 5.2c-3.9 1.6-5 2.1-5 8.2 0 6.9 6.9 20.8 20.2 34a94.8 94.8 0 0 0 19.3 15v49.7c-13.8-.9-29.2-3.6-45.7-11.7a61.7 61.7 0 0 1-25.6-22 120.8 120.8 0 0 1-15.5-45.2c-1.6-9.1-.5-38.2.5-54.4a14.2 14.2 0 0 0-25.2-9.7 176 176 0 0 1-30.6 30.7c.5-7.8 3.8-21.3 11.1-34.1 14.8-26 27.8-47.4 49.5-66.3 11.6-10.1 22.5-14.4 31.5-12.3 1.9.4 3.6 1.1 5.1 2 4.9 3 11.2 2.7 15.8-.7a69.8 69.8 0 0 1 86.4 0 14.2 14.2 0 0 0 15.8.7c1.5-.9 3.2-1.6 5.1-2 9.1-2 20 2.2 31.5 12.3 21.7 18.9 34.7 40.3 49.5 66.3a85.8 85.8 0 0 1 11.1 34.1 188.5 188.5 0 0 1-30.5-30.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M235 201a21 21 0 1 0-42 0v21a21 21 0 1 0 42 0v-21c0 .1 0 0 0 0z\"></path><path d=\"M320 201a21 21 0 1 0-42 0v21a21 21 0 1 0 42 0v-21c0 .1 0 0 0 0z\"></path><path d=\"M425.7 214.3c-15.6-27.4-30.5-51.8-55.5-73.6-23.6-20.6-43.7-21.5-56.4-18.6-1.7.4-3.3.8-4.8 1.4a97 97 0 0 0-52.8-15.8H255.9h-.1a96 96 0 0 0-52.8 15.8l-4.8-1.4c-12.7-2.9-32.8-1.9-56.4 18.6-25 21.8-39.9 46.2-55.5 73.6-10.3 18.1-18.7 45.5-12.9 62.9a23 23 0 0 0 12.9 14.6c13.3 5.7 27.7-3.4 39.7-14.1a147 147 0 0 0 20.8 78.7 89.5 89.5 0 0 0 37 32.1 154.8 154.8 0 0 0 71.2 15h2.2c21.6-.1 45.1-2.2 71.2-15a89.5 89.5 0 0 0 37-32.1 147 147 0 0 0 20.8-78.7c12 10.7 26.3 19.8 39.7 14.1 4.2-1.8 9.9-5.8 12.9-14.6 5.6-17.4-2.8-44.8-13.1-62.9zm-44.1 17.4a14.2 14.2 0 0 0-25.2 9.7c1.1 16.2 2.1 45.3.5 54.4a122 122 0 0 1-15.5 45.2 62.4 62.4 0 0 1-25.6 22 117.8 117.8 0 0 1-45.6 11.7V325a94.1 94.1 0 0 0 19.1-14.9c13.2-13.2 20.2-27.1 20.2-34 0-6.2-1.1-6.6-5-8.2-11.2-4.7-33.1-5.2-48.6-5.2s-37.4.5-48.6 5.2c-3.9 1.6-5 2.1-5 8.2 0 6.9 6.9 20.8 20.2 34a94.8 94.8 0 0 0 19.3 15v49.7c-13.8-.9-29.2-3.6-45.7-11.7a61.7 61.7 0 0 1-25.6-22 120.8 120.8 0 0 1-15.5-45.2c-1.6-9.1-.5-38.2.5-54.4a14.2 14.2 0 0 0-25.2-9.7 176 176 0 0 1-30.6 30.7c.5-7.8 3.8-21.3 11.1-34.1 14.8-26 27.8-47.4 49.5-66.3 11.6-10.1 22.5-14.4 31.5-12.3 1.9.4 3.6 1.1 5.1 2 4.9 3 11.2 2.7 15.8-.7a69.8 69.8 0 0 1 86.4 0 14.2 14.2 0 0 0 15.8.7c1.5-.9 3.2-1.6 5.1-2 9.1-2 20 2.2 31.5 12.3 21.7 18.9 34.7 40.3 49.5 66.3a85.8 85.8 0 0 1 11.1 34.1 188.5 188.5 0 0 1-30.5-30.8z\"></path></svg>')}:host .hacker-security{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M234.2 195.1c.1-.1.1-.2 0 0z\"></path><path d=\"M234.2 195.3v.2c-.1-.1 0-.2 0-.2z\"></path><path d=\"M161.5 177.6c.1 11.7 7.1 18.7 16.2 24.3 19.8 12.2 38.4-.3 56.6-6.6-18.2-10.6-36-22.2-54.9-31.6-9.7-4.8-18 2.9-17.9 13.9z\"></path><path d=\"M234.1 195.5c0 .1 0 .1 0 0z\"></path><path d=\"M234.2 195.3v-.2.2z\"></path><path d=\"M262 195.3v-.2.2z\"></path><path d=\"M262.1 195.5v-.2.2z\"></path><path d=\"M262.1 195.5c0 .1 0 .1 0 0z\"></path><path d=\"M262 195.1c-.1-.2 0-.1 0 0z\"></path><path d=\"M318.6 201.9c9.1-5.6 16.1-12.6 16.2-24.3.1-11-8.3-18.7-17.9-13.9-18.8 9.4-36.6 20.9-54.9 31.6 18.2 6.3 36.8 18.8 56.6 6.6z\"></path><path d=\"M144.4 239.4c-1.8-25.6-1.1-100.9 23-125.7 10.8 2.6 37.5 16.5 65.4 35.8 6.1 4.2 10.7 6 15.3 5.9 3.9-.1 8.3-1.6 13-4.5l1.2-.8c16.9-12.8 52.8-35.4 70.7-38.1 11 11.4 18.8 36.1 22 70.5 3 31.1 1.1 59.2 1.1 59.4l28.3 1.9c.1-1.2 2-30.3-1.1-63.6-4.4-47.4-16.8-78.9-36.7-93.9a14.7 14.7 0 0 0-7.6-2.8c-14.2-.9-33.9 6.1-60.2 21.7-13.5 8-25.4 16.3-30.9 20.3a555.6 555.6 0 0 0-32.3-20.3c-33.8-19.5-47-21-54.8-20.1a14 14 0 0 0-6.8 2.7c-19.9 14.9-32.2 45.8-36.7 91.8-3.1 32.4-1.2 60.5-1.2 61.7l28.3-1.9z\"></path><path d=\"M299 360.9a216.6 216.6 0 0 1-35.2 30.8c-12.1 8.5-21.9 8.4-34 0-32.5-23-57.6-47.7-74.3-93.5l-2.2-8.5c3.5 0 7 0 10.8.2a72 72 0 0 0 56.5-23.5 35.6 35.6 0 0 1 50.1-2.2l4 3.8a64.6 64.6 0 0 0 28.5-12.7 40.5 40.5 0 0 1-6.5-5.4l-.7-.7c-2.2-2.2-4.4-4.5-7.1-6.7a63.7 63.7 0 0 0-88.8 4.2 43.5 43.5 0 0 1-35 14.9c-7.5-.3-14-.2-20.8-.2l-9.5.1h-18.3l11.7 45.1.2.6a206.6 206.6 0 0 0 34.2 62c13 15.9 29 30.4 50.6 45.6a57.4 57.4 0 0 0 33.3 11.5c11.2 0 22.3-3.8 33.2-11.4a238 238 0 0 0 41.4-36.6 93.5 93.5 0 0 1-22.1-17.4z\"></path><path d=\"M392.7 282.7v-.7-.2c0-1.2-.5-2.4-1.3-3.2a4.3 4.3 0 0 0-2.8-1.5l-.7-.1c-23.6 0-45.1-27.2-45.4-27.5a4.8 4.8 0 0 0-3.4-1.8c-1.7 0-3.5.3-4.6 1.8-.2.3-21.8 27.5-45.4 27.5a4.8 4.8 0 0 0-4.8 4.8V282.7c.1 1.8 1.6 17.7 8.2 35.3 9.1 24.5 24.8 42.2 43.6 50.4l2.4.9 2.5-.9c19.3-8 34.3-25.4 43.6-50.4 6.8-18.5 8.1-34.6 8.1-35.3zm-54.2 75.4a59.1 59.1 0 0 1-25.4-20.9l58.4-12.6a65.7 65.7 0 0 1-33 33.5zm37.9-45L307.3 328c-1.7-3.2-3.3-6.6-4.8-10.3l77.5-16.6c-1 3.9-2.2 8-3.6 12zm5.8-23.3l-83.3 17.8c-2.5-8.5-3.9-16.6-4.6-21.3 20.1-2.5 37.1-18.9 44.2-26.7 7.1 7.8 24.2 24.3 44.3 26.8l-.6 3.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M234.2 195.1c.1-.1.1-.2 0 0z\"></path><path d=\"M234.2 195.3v.2c-.1-.1 0-.2 0-.2z\"></path><path d=\"M161.5 177.6c.1 11.7 7.1 18.7 16.2 24.3 19.8 12.2 38.4-.3 56.6-6.6-18.2-10.6-36-22.2-54.9-31.6-9.7-4.8-18 2.9-17.9 13.9z\"></path><path d=\"M234.1 195.5c0 .1 0 .1 0 0z\"></path><path d=\"M234.2 195.3v-.2.2z\"></path><path d=\"M262 195.3v-.2.2z\"></path><path d=\"M262.1 195.5v-.2.2z\"></path><path d=\"M262.1 195.5c0 .1 0 .1 0 0z\"></path><path d=\"M262 195.1c-.1-.2 0-.1 0 0z\"></path><path d=\"M318.6 201.9c9.1-5.6 16.1-12.6 16.2-24.3.1-11-8.3-18.7-17.9-13.9-18.8 9.4-36.6 20.9-54.9 31.6 18.2 6.3 36.8 18.8 56.6 6.6z\"></path><path d=\"M144.4 239.4c-1.8-25.6-1.1-100.9 23-125.7 10.8 2.6 37.5 16.5 65.4 35.8 6.1 4.2 10.7 6 15.3 5.9 3.9-.1 8.3-1.6 13-4.5l1.2-.8c16.9-12.8 52.8-35.4 70.7-38.1 11 11.4 18.8 36.1 22 70.5 3 31.1 1.1 59.2 1.1 59.4l28.3 1.9c.1-1.2 2-30.3-1.1-63.6-4.4-47.4-16.8-78.9-36.7-93.9a14.7 14.7 0 0 0-7.6-2.8c-14.2-.9-33.9 6.1-60.2 21.7-13.5 8-25.4 16.3-30.9 20.3a555.6 555.6 0 0 0-32.3-20.3c-33.8-19.5-47-21-54.8-20.1a14 14 0 0 0-6.8 2.7c-19.9 14.9-32.2 45.8-36.7 91.8-3.1 32.4-1.2 60.5-1.2 61.7l28.3-1.9z\"></path><path d=\"M299 360.9a216.6 216.6 0 0 1-35.2 30.8c-12.1 8.5-21.9 8.4-34 0-32.5-23-57.6-47.7-74.3-93.5l-2.2-8.5c3.5 0 7 0 10.8.2a72 72 0 0 0 56.5-23.5 35.6 35.6 0 0 1 50.1-2.2l4 3.8a64.6 64.6 0 0 0 28.5-12.7 40.5 40.5 0 0 1-6.5-5.4l-.7-.7c-2.2-2.2-4.4-4.5-7.1-6.7a63.7 63.7 0 0 0-88.8 4.2 43.5 43.5 0 0 1-35 14.9c-7.5-.3-14-.2-20.8-.2l-9.5.1h-18.3l11.7 45.1.2.6a206.6 206.6 0 0 0 34.2 62c13 15.9 29 30.4 50.6 45.6a57.4 57.4 0 0 0 33.3 11.5c11.2 0 22.3-3.8 33.2-11.4a238 238 0 0 0 41.4-36.6 93.5 93.5 0 0 1-22.1-17.4z\"></path><path d=\"M392.7 282.7v-.7-.2c0-1.2-.5-2.4-1.3-3.2a4.3 4.3 0 0 0-2.8-1.5l-.7-.1c-23.6 0-45.1-27.2-45.4-27.5a4.8 4.8 0 0 0-3.4-1.8c-1.7 0-3.5.3-4.6 1.8-.2.3-21.8 27.5-45.4 27.5a4.8 4.8 0 0 0-4.8 4.8V282.7c.1 1.8 1.6 17.7 8.2 35.3 9.1 24.5 24.8 42.2 43.6 50.4l2.4.9 2.5-.9c19.3-8 34.3-25.4 43.6-50.4 6.8-18.5 8.1-34.6 8.1-35.3zm-54.2 75.4a59.1 59.1 0 0 1-25.4-20.9l58.4-12.6a65.7 65.7 0 0 1-33 33.5zm37.9-45L307.3 328c-1.7-3.2-3.3-6.6-4.8-10.3l77.5-16.6c-1 3.9-2.2 8-3.6 12zm5.8-23.3l-83.3 17.8c-2.5-8.5-3.9-16.6-4.6-21.3 20.1-2.5 37.1-18.9 44.2-26.7 7.1 7.8 24.2 24.3 44.3 26.8l-.6 3.4z\"></path></svg>')}:host .rabbit{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M312 425c33.8-.1 59.4-20.4 65.2-51.7 5.2-27.8-7-55.1-29.5-68.7-.8-16.7-7.1-41.2-24.1-61l10.5-15.4a39.9 39.9 0 0 0 15 3.4c11.6.4 18.6-4.5 22.5-8.7a34.7 34.7 0 0 0 8-25.6v-1.5c0-13.6-6.3-33.6-8.8-39.2a103.9 103.9 0 0 0-23-31.5l-.3-.3a58.1 58.1 0 0 0-38.2-14c-18.2.5-34.6 13.5-44 35a201.5 201.5 0 0 0-10.2 31.5 198.7 198.7 0 0 0-10.3-31.6 200.5 200.5 0 0 0-23-40.2 78.4 78.4 0 0 0-33-27.9 40.2 40.2 0 0 0-14.3-2.6 36 36 0 0 0-14.3 3c-8 3.4-18 11.7-21.1 32a139.8 139.8 0 0 0 1.7 43.6c2.4 14.3 12 58.7 42.2 92.1a104.6 104.6 0 0 0-22.4 59 65.8 65.8 0 0 0-29.5 68.7c5.8 31.3 31.3 51.6 65.2 51.7zm-20.6-268c3.6-8.1 10.6-17.7 18.7-17.9 9.5-.2 17.1 5.6 18.4 6.6a75.9 75.9 0 0 1 16.5 22.4c1.9 4.2 6.3 20 6.3 27.6v3l.1.7a12.2 12.2 0 0 1-.4 3.8 8.7 8.7 0 0 1-1 0 12 12 0 0 1-5.5-1.5 114.3 114.3 0 0 0-7.3-3.8l-.9-.8c-13.5-12.9-17.1-26-17.2-26.1v.1l-27.5 6.8c.5 1.9 4.6 17.3 19.4 33.8-2.9 4-6.1 8.8-9.4 13.6a87 87 0 0 0-24.9-9.7 227.8 227.8 0 0 1 14.7-58.6zm-124.3-42.7c1-6.7 3-9.8 4.3-10.4a7.7 7.7 0 0 1 3.1-.6 12 12 0 0 1 4.2.9c4.3 1.6 11.3 6 20.6 18.3a171.3 171.3 0 0 1 19.6 34.5 231.9 231.9 0 0 1 14.5 58.3 87 87 0 0 0-29.3 11.5c-25.8-28.7-33.9-69.3-35.4-78-2.4-14.1-3-26-1.6-34.5zm29.3 282.4c-20.2 0-34.2-10.8-37.5-28.6-2.9-15.4 3.5-34.7 21.2-41.6a14.2 14.2 0 0 0 8.9-15 73.7 73.7 0 0 1 17.7-50 60 60 0 0 1 47.2-19.8h.5a60 60 0 0 1 47.2 19.8 73.8 73.8 0 0 1 17.7 50 14.2 14.2 0 0 0 9 15c17.6 6.9 24 26.2 21 41.6-3.2 17.8-17.2 28.5-37.4 28.6z\"></path><path d=\"M217.9 319a10.5 10.5 0 0 0 10.5-10.4V298a10.5 10.5 0 0 0-21 0v10.5a10.5 10.5 0 0 0 10.5 10.5z\"></path><path d=\"M291.8 319.4a10.5 10.5 0 0 0 10.5-10.5v-10.5a10.5 10.5 0 1 0-21 0v10.5a10.5 10.5 0 0 0 10.5 10.5z\"></path><path d=\"M238.4 363.4c-6.6-6.6-10-13.4-10-16.8 0-3 .5-3.3 2.4-4.1 5.6-2.3 16.4-2.6 24-2.6s18.6.3 24 2.6c2 .8 2.5 1 2.5 4 0 3.5-3.4 10.3-10 16.9s-13.3 9.9-16.5 9.9-10.1-3.5-16.6-10z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M312 425c33.8-.1 59.4-20.4 65.2-51.7 5.2-27.8-7-55.1-29.5-68.7-.8-16.7-7.1-41.2-24.1-61l10.5-15.4a39.9 39.9 0 0 0 15 3.4c11.6.4 18.6-4.5 22.5-8.7a34.7 34.7 0 0 0 8-25.6v-1.5c0-13.6-6.3-33.6-8.8-39.2a103.9 103.9 0 0 0-23-31.5l-.3-.3a58.1 58.1 0 0 0-38.2-14c-18.2.5-34.6 13.5-44 35a201.5 201.5 0 0 0-10.2 31.5 198.7 198.7 0 0 0-10.3-31.6 200.5 200.5 0 0 0-23-40.2 78.4 78.4 0 0 0-33-27.9 40.2 40.2 0 0 0-14.3-2.6 36 36 0 0 0-14.3 3c-8 3.4-18 11.7-21.1 32a139.8 139.8 0 0 0 1.7 43.6c2.4 14.3 12 58.7 42.2 92.1a104.6 104.6 0 0 0-22.4 59 65.8 65.8 0 0 0-29.5 68.7c5.8 31.3 31.3 51.6 65.2 51.7zm-20.6-268c3.6-8.1 10.6-17.7 18.7-17.9 9.5-.2 17.1 5.6 18.4 6.6a75.9 75.9 0 0 1 16.5 22.4c1.9 4.2 6.3 20 6.3 27.6v3l.1.7a12.2 12.2 0 0 1-.4 3.8 8.7 8.7 0 0 1-1 0 12 12 0 0 1-5.5-1.5 114.3 114.3 0 0 0-7.3-3.8l-.9-.8c-13.5-12.9-17.1-26-17.2-26.1v.1l-27.5 6.8c.5 1.9 4.6 17.3 19.4 33.8-2.9 4-6.1 8.8-9.4 13.6a87 87 0 0 0-24.9-9.7 227.8 227.8 0 0 1 14.7-58.6zm-124.3-42.7c1-6.7 3-9.8 4.3-10.4a7.7 7.7 0 0 1 3.1-.6 12 12 0 0 1 4.2.9c4.3 1.6 11.3 6 20.6 18.3a171.3 171.3 0 0 1 19.6 34.5 231.9 231.9 0 0 1 14.5 58.3 87 87 0 0 0-29.3 11.5c-25.8-28.7-33.9-69.3-35.4-78-2.4-14.1-3-26-1.6-34.5zm29.3 282.4c-20.2 0-34.2-10.8-37.5-28.6-2.9-15.4 3.5-34.7 21.2-41.6a14.2 14.2 0 0 0 8.9-15 73.7 73.7 0 0 1 17.7-50 60 60 0 0 1 47.2-19.8h.5a60 60 0 0 1 47.2 19.8 73.8 73.8 0 0 1 17.7 50 14.2 14.2 0 0 0 9 15c17.6 6.9 24 26.2 21 41.6-3.2 17.8-17.2 28.5-37.4 28.6z\"></path><path d=\"M217.9 319a10.5 10.5 0 0 0 10.5-10.4V298a10.5 10.5 0 0 0-21 0v10.5a10.5 10.5 0 0 0 10.5 10.5z\"></path><path d=\"M291.8 319.4a10.5 10.5 0 0 0 10.5-10.5v-10.5a10.5 10.5 0 1 0-21 0v10.5a10.5 10.5 0 0 0 10.5 10.5z\"></path><path d=\"M238.4 363.4c-6.6-6.6-10-13.4-10-16.8 0-3 .5-3.3 2.4-4.1 5.6-2.3 16.4-2.6 24-2.6s18.6.3 24 2.6c2 .8 2.5 1 2.5 4 0 3.5-3.4 10.3-10 16.9s-13.3 9.9-16.5 9.9-10.1-3.5-16.6-10z\"></path></svg>')}:host .cap{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M333 270.7l.3 48.5c-13 6.6-43.6 20-78.6 20-33.4 0-64.5-11.2-78.4-17l-.3-51.7-28 .2.4 69.3 7.6 3.8c2 1 47 23.4 98.7 23.4 54.5 0 98.2-26.7 100-27.9l6.7-4.1-.4-64.7z\"></path><path d=\"M427.6 214.9L253.9 143 83.2 214.7 254 279.6l111.3-42 37 67 24.6-13.5-35-63.1zM254 249.6l-95.3-36.2 95.3-40 96.5 39.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M333 270.7l.3 48.5c-13 6.6-43.6 20-78.6 20-33.4 0-64.5-11.2-78.4-17l-.3-51.7-28 .2.4 69.3 7.6 3.8c2 1 47 23.4 98.7 23.4 54.5 0 98.2-26.7 100-27.9l6.7-4.1-.4-64.7z\"></path><path d=\"M427.6 214.9L253.9 143 83.2 214.7 254 279.6l111.3-42 37 67 24.6-13.5-35-63.1zM254 249.6l-95.3-36.2 95.3-40 96.5 39.9z\"></path></svg>')}:host .lighthouse{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.8 141A14.2 14.2 0 0 0 270 127V95.3a14.2 14.2 0 0 0-28.4 0V127A14.2 14.2 0 0 0 256 141z\"></path><path d=\"M145.5 146.3l24.7 18a14.2 14.2 0 0 0 16.7-22.9l-24.7-18a14.2 14.2 0 0 0-16.7 23z\"></path><path d=\"M334.7 166.5a14.1 14.1 0 0 0 8.3-2.7l24.7-18A14.2 14.2 0 1 0 351 123l-24.7 18a14.2 14.2 0 0 0 8.3 25.7z\"></path><path d=\"M349.8 226.4a14.2 14.2 0 0 0 14.2 14.2h30.6a14.2 14.2 0 0 0 0-28.4H364a14.2 14.2 0 0 0-14.2 14.2z\"></path><path d=\"M117.7 240.6h30.6a14.2 14.2 0 0 0 0-28.4h-30.6a14.2 14.2 0 1 0 0 28.4z\"></path><path d=\"M255.8 287.2a14.7 14.7 0 1 0-14.7-14.7 14.7 14.7 0 0 0 14.7 14.7z\"></path><path d=\"M315.8 240.6h4.7a14.2 14.2 0 0 0 0-28.4h-7.6a57.6 57.6 0 0 0-56.9-55.9 54.4 54.4 0 0 0-39.7 17.3 58 58 0 0 0-15.8 37.8h-.1l-.1.9H191a14.2 14.2 0 0 0 0 28.3h6L180 396h-1.8a14.2 14.2 0 0 0 0 28.4h152.8a14.2 14.2 0 0 0 0-28.4h-2.1zm-59.8-56c14.7 0 28 13.1 28.6 27.7h-55.8c.4-15 12.7-27.6 27.2-27.6zm-30.3 56h62.7v34.3a24.1 24.1 0 0 1-9.1 18.8l-40.6 31.8-24.7 19.9zM217 379.4l39.5-31.8 37.3-28.4 5.5 76.7h-90c1.2-7 4.1-13.6 7.7-16.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.8 141A14.2 14.2 0 0 0 270 127V95.3a14.2 14.2 0 0 0-28.4 0V127A14.2 14.2 0 0 0 256 141z\"></path><path d=\"M145.5 146.3l24.7 18a14.2 14.2 0 0 0 16.7-22.9l-24.7-18a14.2 14.2 0 0 0-16.7 23z\"></path><path d=\"M334.7 166.5a14.1 14.1 0 0 0 8.3-2.7l24.7-18A14.2 14.2 0 1 0 351 123l-24.7 18a14.2 14.2 0 0 0 8.3 25.7z\"></path><path d=\"M349.8 226.4a14.2 14.2 0 0 0 14.2 14.2h30.6a14.2 14.2 0 0 0 0-28.4H364a14.2 14.2 0 0 0-14.2 14.2z\"></path><path d=\"M117.7 240.6h30.6a14.2 14.2 0 0 0 0-28.4h-30.6a14.2 14.2 0 1 0 0 28.4z\"></path><path d=\"M255.8 287.2a14.7 14.7 0 1 0-14.7-14.7 14.7 14.7 0 0 0 14.7 14.7z\"></path><path d=\"M315.8 240.6h4.7a14.2 14.2 0 0 0 0-28.4h-7.6a57.6 57.6 0 0 0-56.9-55.9 54.4 54.4 0 0 0-39.7 17.3 58 58 0 0 0-15.8 37.8h-.1l-.1.9H191a14.2 14.2 0 0 0 0 28.3h6L180 396h-1.8a14.2 14.2 0 0 0 0 28.4h152.8a14.2 14.2 0 0 0 0-28.4h-2.1zm-59.8-56c14.7 0 28 13.1 28.6 27.7h-55.8c.4-15 12.7-27.6 27.2-27.6zm-30.3 56h62.7v34.3a24.1 24.1 0 0 1-9.1 18.8l-40.6 31.8-24.7 19.9zM217 379.4l39.5-31.8 37.3-28.4 5.5 76.7h-90c1.2-7 4.1-13.6 7.7-16.5z\"></path></svg>')}:host .dumbbell{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.8 269.5v-28.3H383l.1-18.8a14.2 14.2 0 0 0-28-2.6v-17a14.2 14.2 0 0 0-14.2-14.2 14.2 14.2 0 0 0-14.2 14.2v38.4H184.1v-38.4a14.2 14.2 0 1 0-28.3 0v12a14.2 14.2 0 0 0-13.6-10.6 14.2 14.2 0 0 0-14.3 14l-.1 23.1H85.6v28.4h42.1V286a14.2 14.2 0 0 0 14 14.3h.1a14.2 14.2 0 0 0 13.9-11.3v16a14.2 14.2 0 0 0 14.1 14.3A14.2 14.2 0 0 0 184 305l.1-35.5h142.6l-.2 35.5a14.2 14.2 0 0 0 14.2 14.2 14.2 14.2 0 0 0 14.1-14.1v-11.8a14.2 14.2 0 0 0 13.8 10.9 14.2 14.2 0 0 0 14.2-14.1l.1-20.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.8 269.5v-28.3H383l.1-18.8a14.2 14.2 0 0 0-28-2.6v-17a14.2 14.2 0 0 0-14.2-14.2 14.2 14.2 0 0 0-14.2 14.2v38.4H184.1v-38.4a14.2 14.2 0 1 0-28.3 0v12a14.2 14.2 0 0 0-13.6-10.6 14.2 14.2 0 0 0-14.3 14l-.1 23.1H85.6v28.4h42.1V286a14.2 14.2 0 0 0 14 14.3h.1a14.2 14.2 0 0 0 13.9-11.3v16a14.2 14.2 0 0 0 14.1 14.3A14.2 14.2 0 0 0 184 305l.1-35.5h142.6l-.2 35.5a14.2 14.2 0 0 0 14.2 14.2 14.2 14.2 0 0 0 14.1-14.1v-11.8a14.2 14.2 0 0 0 13.8 10.9 14.2 14.2 0 0 0 14.2-14.1l.1-20.7z\"></path></svg>')}:host .sailboat{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.3 319.9a14.2 14.2 0 0 0-12.4-7.4l-139.3.4v-24.7h122.3a14.2 14.2 0 0 0 11.1-23L267.5 90.6a14.2 14.2 0 0 0-25.3 8.7V313l-141.8.5a14.2 14.2 0 0 0-11.8 22l36.8 55.4a14.4 14.4 0 0 0 1 1.3 90.2 90.2 0 0 0 69 32l119.7-.5a90.2 90.2 0 0 0 69.1-32.4 14 14 0 0 0 1-1.3l36.5-55.6a14.2 14.2 0 0 0 .6-14.5zM270.5 140.5l93.3 119.3h-93.3zM362 373.8a61.9 61.9 0 0 1-47 21.6l-119.4.5h-.2a61.9 61.9 0 0 1-46.8-21.3l-21.8-32.9 256.8-.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.3 319.9a14.2 14.2 0 0 0-12.4-7.4l-139.3.4v-24.7h122.3a14.2 14.2 0 0 0 11.1-23L267.5 90.6a14.2 14.2 0 0 0-25.3 8.7V313l-141.8.5a14.2 14.2 0 0 0-11.8 22l36.8 55.4a14.4 14.4 0 0 0 1 1.3 90.2 90.2 0 0 0 69 32l119.7-.5a90.2 90.2 0 0 0 69.1-32.4 14 14 0 0 0 1-1.3l36.5-55.6a14.2 14.2 0 0 0 .6-14.5zM270.5 140.5l93.3 119.3h-93.3zM362 373.8a61.9 61.9 0 0 1-47 21.6l-119.4.5h-.2a61.9 61.9 0 0 1-46.8-21.3l-21.8-32.9 256.8-.8z\"></path></svg>')}:host .backoffice{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M135 183.2a7.1 7.1 0 0 1 7-7H369a7.1 7.1 0 0 1 7 7v127.6h28.4V183.2a35.5 35.5 0 0 0-35.4-35.4H142.1a35.5 35.5 0 0 0-35.4 35.4v127.6H135z\"></path><path d=\"M425.6 332H85.4v28.4h340.2zM298 349.7h-85v-7h85z\"></path><path d=\"M317.9 237.5v-10.6h-12.8a28.7 28.7 0 0 0-4.5-10.9l9-9-7.5-7.5-9 9a28.7 28.7 0 0 0-11-4.5v-12.8h-10.5v12.7a28.6 28.6 0 0 0-11 4.6l-9-9-7.5 7.5 9 9a28.7 28.7 0 0 0-4.5 10.9h-12.8v10.6h12.8a28.6 28.6 0 0 0 4.5 11l-9 9 7.6 7.4 9-9a28.6 28.6 0 0 0 10.9 4.5v12.8h10.6v-12.8A28.7 28.7 0 0 0 293 256l9 9 7.5-7.5-9-9a28.6 28.6 0 0 0 4.5-10.9zm-22.9-5.3a18.1 18.1 0 1 1-18.1-18.1 18.1 18.1 0 0 1 18.1 18z\"></path><path d=\"M249.6 280.5l-2.7-6.8-8.2 3.2a19.9 19.9 0 0 0-5.7-5.8l3.5-8.1-6.8-3-3.4 8.2a19.7 19.7 0 0 0-8.2-.1l-3.3-8.2-6.8 2.7 3.3 8.2a19.7 19.7 0 0 0-5.8 5.7l-8.2-3.5-2.8 6.7 8 3.5a19.8 19.8 0 0 0 0 8.2l-8.2 3.2 2.7 6.8 8.2-3.2a19.7 19.7 0 0 0 5.7 5.8l-3.5 8.1 6.7 3 3.5-8.2a19.7 19.7 0 0 0 8.2.1l3.2 8.2 6.8-2.7-3.2-8.2a19.7 19.7 0 0 0 5.8-5.7l8.1 3.5 3-6.8-8.2-3.4a19.8 19.8 0 0 0 .1-8.2zm-16 2.4a12.5 12.5 0 1 1-16.3-7 12.6 12.6 0 0 1 16.3 7\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M135 183.2a7.1 7.1 0 0 1 7-7H369a7.1 7.1 0 0 1 7 7v127.6h28.4V183.2a35.5 35.5 0 0 0-35.4-35.4H142.1a35.5 35.5 0 0 0-35.4 35.4v127.6H135z\"></path><path d=\"M425.6 332H85.4v28.4h340.2zM298 349.7h-85v-7h85z\"></path><path d=\"M317.9 237.5v-10.6h-12.8a28.7 28.7 0 0 0-4.5-10.9l9-9-7.5-7.5-9 9a28.7 28.7 0 0 0-11-4.5v-12.8h-10.5v12.7a28.6 28.6 0 0 0-11 4.6l-9-9-7.5 7.5 9 9a28.7 28.7 0 0 0-4.5 10.9h-12.8v10.6h12.8a28.6 28.6 0 0 0 4.5 11l-9 9 7.6 7.4 9-9a28.6 28.6 0 0 0 10.9 4.5v12.8h10.6v-12.8A28.7 28.7 0 0 0 293 256l9 9 7.5-7.5-9-9a28.6 28.6 0 0 0 4.5-10.9zm-22.9-5.3a18.1 18.1 0 1 1-18.1-18.1 18.1 18.1 0 0 1 18.1 18z\"></path><path d=\"M249.6 280.5l-2.7-6.8-8.2 3.2a19.9 19.9 0 0 0-5.7-5.8l3.5-8.1-6.8-3-3.4 8.2a19.7 19.7 0 0 0-8.2-.1l-3.3-8.2-6.8 2.7 3.3 8.2a19.7 19.7 0 0 0-5.8 5.7l-8.2-3.5-2.8 6.7 8 3.5a19.8 19.8 0 0 0 0 8.2l-8.2 3.2 2.7 6.8 8.2-3.2a19.7 19.7 0 0 0 5.7 5.8l-3.5 8.1 6.7 3 3.5-8.2a19.7 19.7 0 0 0 8.2.1l3.2 8.2 6.8-2.7-3.2-8.2a19.7 19.7 0 0 0 5.8-5.7l8.1 3.5 3-6.8-8.2-3.4a19.8 19.8 0 0 0 .1-8.2zm-16 2.4a12.5 12.5 0 1 1-16.3-7 12.6 12.6 0 0 1 16.3 7\"></path></svg>')}:host .stopwatch{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M303.6 346a82.3 82.3 0 0 0 20-20l-46.3-46.3a21.7 21.7 0 0 1-6.3-15.5v-88a104 104 0 0 0-28.4 0v88a49.9 49.9 0 0 0 14.7 35.4z\"></path><path d=\"M360.8 126.7h28.4v48.1h-28.4z\" transform=\"rotate(-47.2 375 150.7)\"></path><path d=\"M115 136.8h48.1v28.4H115z\" transform=\"rotate(-45 139 151)\"></path><path d=\"M256.8 425.3c80.6 0 146.2-65.6 146.2-146.3 0-76.5-59.1-139.5-134-145.7l.2-19.6h10.5a14.2 14.2 0 1 0 0-28.3H231a14.2 14.2 0 1 0 0 28.3h10l-.4 20c-73 8-130.1 70.2-130.1 145.4 0 80.6 65.6 146.2 146.3 146.2zm0-264.2a118 118 0 1 1-118 118 118 118 0 0 1 118-118z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M303.6 346a82.3 82.3 0 0 0 20-20l-46.3-46.3a21.7 21.7 0 0 1-6.3-15.5v-88a104 104 0 0 0-28.4 0v88a49.9 49.9 0 0 0 14.7 35.4z\"></path><path d=\"M360.8 126.7h28.4v48.1h-28.4z\" transform=\"rotate(-47.2 375 150.7)\"></path><path d=\"M115 136.8h48.1v28.4H115z\" transform=\"rotate(-45 139 151)\"></path><path d=\"M256.8 425.3c80.6 0 146.2-65.6 146.2-146.3 0-76.5-59.1-139.5-134-145.7l.2-19.6h10.5a14.2 14.2 0 1 0 0-28.3H231a14.2 14.2 0 1 0 0 28.3h10l-.4 20c-73 8-130.1 70.2-130.1 145.4 0 80.6 65.6 146.2 146.3 146.2zm0-264.2a118 118 0 1 1-118 118 118 118 0 0 1 118-118z\"></path></svg>')}:host .piechart{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M241.3 424.4c-85.5 0-155-69.6-155-155.1s69.5-155 155-155h14.2v140.2l140.9.7v14.1c0 85.5-69.6 155-155 155zm-14.2-281a127 127 0 0 0-112.5 125.9 126.7 126.7 0 0 0 252.7 14.1l-140.2-.7z\"></path><path d=\"M276.7 234V85.1h14.1c74.8 0 135.6 60.4 135.6 134.7V234zM305 114.4v91.2h92a107 107 0 0 0-92-91.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M241.3 424.4c-85.5 0-155-69.6-155-155.1s69.5-155 155-155h14.2v140.2l140.9.7v14.1c0 85.5-69.6 155-155 155zm-14.2-281a127 127 0 0 0-112.5 125.9 126.7 126.7 0 0 0 252.7 14.1l-140.2-.7z\"></path><path d=\"M276.7 234V85.1h14.1c74.8 0 135.6 60.4 135.6 134.7V234zM305 114.4v91.2h92a107 107 0 0 0-92-91.2z\"></path></svg>')}:host .megaphone{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M372.4 183.4a14.1 14.1 0 0 0 8.4 2.8 14.3 14.3 0 0 0 11.4-5.7v-.2l31.3-41.7a14.2 14.2 0 0 0-22.7-17l-31.3 41.9a14.2 14.2 0 0 0 2.9 19.9z\"></path><path d=\"M426.1 224.7l-45.5 1a14.2 14.2 0 0 0 .4 28.3h.3l45.4-.9a14.2 14.2 0 1 0-.5-28.3z\"></path><path d=\"M423.5 340l-31.3-41.8a14.2 14.2 0 0 0-22.7 17l31.2 41.8v.1a14.3 14.3 0 0 0 11.5 5.7 14.2 14.2 0 0 0 11.3-22.6z\"></path><path d=\"M125 386.1a14.2 14.2 0 0 0 13.4 9.9l46 .6h.2a14.2 14.2 0 0 0 13.5-18.5l-29.3-90.8 131.5 67 1.2.7.3.2a35 35 0 0 0 17.9 5 35.3 35.3 0 0 0 35.1-35.5V151a35.3 35.3 0 0 0-35.1-35.5 34.6 34.6 0 0 0-17.7 4.9l-.8.5-153 63.3h-42.7A21 21 0 0 0 84.6 205v48s.3 2.3.7 4.3l1 4.9zm-12-173.6h28v35.7h-28zm36 155.3l-28.8-91.2h15.3L165 368zM168.6 256V206l151.1-62.2a7 7 0 0 1 6.8 7v174a7 7 0 0 1-6.8 7 6.5 6.5 0 0 1-2.8-.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M372.4 183.4a14.1 14.1 0 0 0 8.4 2.8 14.3 14.3 0 0 0 11.4-5.7v-.2l31.3-41.7a14.2 14.2 0 0 0-22.7-17l-31.3 41.9a14.2 14.2 0 0 0 2.9 19.9z\"></path><path d=\"M426.1 224.7l-45.5 1a14.2 14.2 0 0 0 .4 28.3h.3l45.4-.9a14.2 14.2 0 1 0-.5-28.3z\"></path><path d=\"M423.5 340l-31.3-41.8a14.2 14.2 0 0 0-22.7 17l31.2 41.8v.1a14.3 14.3 0 0 0 11.5 5.7 14.2 14.2 0 0 0 11.3-22.6z\"></path><path d=\"M125 386.1a14.2 14.2 0 0 0 13.4 9.9l46 .6h.2a14.2 14.2 0 0 0 13.5-18.5l-29.3-90.8 131.5 67 1.2.7.3.2a35 35 0 0 0 17.9 5 35.3 35.3 0 0 0 35.1-35.5V151a35.3 35.3 0 0 0-35.1-35.5 34.6 34.6 0 0 0-17.7 4.9l-.8.5-153 63.3h-42.7A21 21 0 0 0 84.6 205v48s.3 2.3.7 4.3l1 4.9zm-12-173.6h28v35.7h-28zm36 155.3l-28.8-91.2h15.3L165 368zM168.6 256V206l151.1-62.2a7 7 0 0 1 6.8 7v174a7 7 0 0 1-6.8 7 6.5 6.5 0 0 1-2.8-.6z\"></path></svg>')}:host .flipchart{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351 86.3H164.6a14.2 14.2 0 1 0 0 28.3h3.4v166.8c0 18.3 13 33.2 29 33.2h46v82.7h-34.7a14.2 14.2 0 0 0 0 28.4h97.9a14.2 14.2 0 1 0 0-28.4h-34.8v-82.7h46.9c16 0 29-14.9 29-33.2V114.6h3.7a14.2 14.2 0 0 0 0-28.4zm-154.7 200V114.6H319v171.7z\"></path><path d=\"M215.4 142.6h84.2v7.1h-84.2z\"></path><path d=\"M215.4 163.8h53.9v7.1h-53.9z\"></path><path d=\"M215.4 206.3h53.9v7.1h-53.9z\"></path><path d=\"M215.4 185h84.2v7.1h-84.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351 86.3H164.6a14.2 14.2 0 1 0 0 28.3h3.4v166.8c0 18.3 13 33.2 29 33.2h46v82.7h-34.7a14.2 14.2 0 0 0 0 28.4h97.9a14.2 14.2 0 1 0 0-28.4h-34.8v-82.7h46.9c16 0 29-14.9 29-33.2V114.6h3.7a14.2 14.2 0 0 0 0-28.4zm-154.7 200V114.6H319v171.7z\"></path><path d=\"M215.4 142.6h84.2v7.1h-84.2z\"></path><path d=\"M215.4 163.8h53.9v7.1h-53.9z\"></path><path d=\"M215.4 206.3h53.9v7.1h-53.9z\"></path><path d=\"M215.4 185h84.2v7.1h-84.2z\"></path></svg>')}:host .mail{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 382.7h283.5a28.3 28.3 0 0 0 28.3-28.3V155.9a28.3 28.3 0 0 0-28.3-28.3H113.4a28.3 28.3 0 0 0-28.3 28.3v198.4a28.3 28.3 0 0 0 28.3 28.4zm0-28.4V184.2a10699 10699 0 0 0 124 103.3 28.2 28.2 0 0 0 35.4 0l124-103.6v170.5H113.4zm10.4-198.4h262.3l-131 109.4c-27.3-21.9-99.4-82.6-131.3-109.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M113.4 382.7h283.5a28.3 28.3 0 0 0 28.3-28.3V155.9a28.3 28.3 0 0 0-28.3-28.3H113.4a28.3 28.3 0 0 0-28.3 28.3v198.4a28.3 28.3 0 0 0 28.3 28.4zm0-28.4V184.2a10699 10699 0 0 0 124 103.3 28.2 28.2 0 0 0 35.4 0l124-103.6v170.5H113.4zm10.4-198.4h262.3l-131 109.4c-27.3-21.9-99.4-82.6-131.3-109.4z\"></path></svg>')}:host .spirit{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"381\" cy=\"301.7\" rx=\"17.1\" ry=\"16.8\"></ellipse><path d=\"M439.4 285l-42-42.5a18.6 18.6 0 0 0-26-.4l-11 10.4-1.8 2a22.2 22.2 0 0 0 .3-4.8 21.7 21.7 0 0 0-7.2-15.1 21.4 21.4 0 0 0-4.7-3.3l13-14.5a25.2 25.2 0 0 0 6.3-18.9 26.8 26.8 0 0 0-8.7-17.9 26.3 26.3 0 0 0-13.7-6.7 27.5 27.5 0 0 0 0-3.6 28.3 28.3 0 0 0-8.8-18.6 26.2 26.2 0 0 0-18.7-7.3h-1a26.8 26.8 0 0 0-8.2-14 26.3 26.3 0 0 0-18.5-6.8 25.2 25.2 0 0 0-10 2.4l-5-7a20.9 20.9 0 0 0-18.7-8.3l-21.7 1.9a24 24 0 0 0-11.8 3.9A24.3 24.3 0 0 0 194 122a23 23 0 0 0-5.7 13.8 24.3 24.3 0 0 0-28.3 6 23 23 0 0 0-5.7 17 20.9 20.9 0 0 0 .4 2.8 27.1 27.1 0 0 0-2.8.1 23.9 23.9 0 0 0-16.3 8.1 23.2 23.2 0 0 0-.3 30.3 23.7 23.7 0 0 0-13.5 7.7 23.2 23.2 0 0 0 2.5 33l7.3 6.2-1.5 5.1a18.6 18.6 0 0 0-25.2 2.3L65.1 299a17.9 17.9 0 0 0 1.7 25.5L180.5 423a18.7 18.7 0 0 0 26-1.6l39.8-44.5a17.9 17.9 0 0 0-1.7-25.5l-6.1-5.3 23-4.5h.2c.3 0 3.3-.8 7.6-2.2l-6.8 6.4a17.9 17.9 0 0 0-.4 25.6l42 42.5a18.6 18.6 0 0 0 26 .4l108.8-103.6a17.9 17.9 0 0 0 .5-25.6zM228.8 130.3a8 8 0 0 1 5.5-2.6l22.1-2h.5a4.8 4.8 0 0 1 3.8 2l6.2 8.6-1.9 2.2-3.3 2.5-26.7 2.3a8 8 0 0 1-5.6-2 7.7 7.7 0 0 1-.6-11zm-22.7 2.1a8 8 0 0 1 5.5-2.7 22.9 22.9 0 0 0-.7 7 23.7 23.7 0 0 0 23.8 22.3h1.3l6.3-.6a7.6 7.6 0 0 1-1.7 3.2 8 8 0 0 1-11.2.8l-22.4-19a7.8 7.8 0 0 1-.9-11zm-34 19.7a8 8 0 0 1 11.3-.8l37.2 31.3a7.8 7.8 0 0 1 .8 11 8 8 0 0 1-11.2.9L173 163a7.8 7.8 0 0 1-.9-11zm-24.4 28a8.1 8.1 0 0 1 11.2-.8l37.3 31.4a7.7 7.7 0 0 1 .8 11 8 8 0 0 1-11.2.9L148.6 191a7.8 7.8 0 0 1-.9-11zM134 218a8 8 0 0 1 5.4-2.6h.7a8 8 0 0 1 5.1 1.9l22.4 18.9a7.8 7.8 0 0 1 .9 11 8 8 0 0 1-11.2.8l-22.5-18.9a7.8 7.8 0 0 1-.9-11zm96.7 148.5L194 407.3a4.2 4.2 0 0 1-5.8.3L81.3 315a4 4 0 0 1-.4-5.7l36.4-40.7a4.2 4.2 0 0 1 5.8-.4l107 92.6a4 4 0 0 1 .5 5.7zm27.6-40.3l-34.7 6.7-80.1-69.3 1.5-5.3 2 1.6a23.9 23.9 0 0 0 15.4 5.6h1.9a23.9 23.9 0 0 0 16.3-8.1 23 23 0 0 0 5.7-17.1l-.1-.8a24.5 24.5 0 0 0 4.9.5 24 24 0 0 0 18.1-8.2 23.2 23.2 0 0 0 5.3-20h1a24 24 0 0 0 18.1-8.1 23.4 23.4 0 0 0 4.1-6.8l35.7-39.3 13-15.6a7.3 7.3 0 0 1 3-.8 8.6 8.6 0 0 1 6 2.2 8.7 8.7 0 0 1 2.9 5.8 7.3 7.3 0 0 1-.8 4l-53.5 61 14.2 12.4 53.6-61.6a7 7 0 0 1 5.1-2.4 8.5 8.5 0 0 1 6 2.4 9.2 9.2 0 0 1 3 6 7.6 7.6 0 0 1-1.8 5.6l-53.3 61 14 12.2 24.8-28.4 25-28a7 7 0 0 1 5.1-2.3 8.6 8.6 0 0 1 6 2.3 8.7 8.7 0 0 1 2.9 5.8 7 7 0 0 1-1.7 5.3l-50 55.8 13.5 11.9 25.2-28.2a6.9 6.9 0 0 1 6.7 11.3l-26.7 29.5c-11 10.5-22.8 21.8-28.7 27.1a73.8 73.8 0 0 1-28.6 14.3zM424 301.8l-102.4 97.5a4.2 4.2 0 0 1-5.9-.1l-38.3-39a4 4 0 0 1 0-5.8L380 257a4.2 4.2 0 0 1 5.8 0l38.4 39a4 4 0 0 1-.1 5.8z\"></path><ellipse cx=\"116.6\" cy=\"306.8\" rx=\"17.1\" ry=\"16.8\"></ellipse></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><ellipse cx=\"381\" cy=\"301.7\" rx=\"17.1\" ry=\"16.8\"></ellipse><path d=\"M439.4 285l-42-42.5a18.6 18.6 0 0 0-26-.4l-11 10.4-1.8 2a22.2 22.2 0 0 0 .3-4.8 21.7 21.7 0 0 0-7.2-15.1 21.4 21.4 0 0 0-4.7-3.3l13-14.5a25.2 25.2 0 0 0 6.3-18.9 26.8 26.8 0 0 0-8.7-17.9 26.3 26.3 0 0 0-13.7-6.7 27.5 27.5 0 0 0 0-3.6 28.3 28.3 0 0 0-8.8-18.6 26.2 26.2 0 0 0-18.7-7.3h-1a26.8 26.8 0 0 0-8.2-14 26.3 26.3 0 0 0-18.5-6.8 25.2 25.2 0 0 0-10 2.4l-5-7a20.9 20.9 0 0 0-18.7-8.3l-21.7 1.9a24 24 0 0 0-11.8 3.9A24.3 24.3 0 0 0 194 122a23 23 0 0 0-5.7 13.8 24.3 24.3 0 0 0-28.3 6 23 23 0 0 0-5.7 17 20.9 20.9 0 0 0 .4 2.8 27.1 27.1 0 0 0-2.8.1 23.9 23.9 0 0 0-16.3 8.1 23.2 23.2 0 0 0-.3 30.3 23.7 23.7 0 0 0-13.5 7.7 23.2 23.2 0 0 0 2.5 33l7.3 6.2-1.5 5.1a18.6 18.6 0 0 0-25.2 2.3L65.1 299a17.9 17.9 0 0 0 1.7 25.5L180.5 423a18.7 18.7 0 0 0 26-1.6l39.8-44.5a17.9 17.9 0 0 0-1.7-25.5l-6.1-5.3 23-4.5h.2c.3 0 3.3-.8 7.6-2.2l-6.8 6.4a17.9 17.9 0 0 0-.4 25.6l42 42.5a18.6 18.6 0 0 0 26 .4l108.8-103.6a17.9 17.9 0 0 0 .5-25.6zM228.8 130.3a8 8 0 0 1 5.5-2.6l22.1-2h.5a4.8 4.8 0 0 1 3.8 2l6.2 8.6-1.9 2.2-3.3 2.5-26.7 2.3a8 8 0 0 1-5.6-2 7.7 7.7 0 0 1-.6-11zm-22.7 2.1a8 8 0 0 1 5.5-2.7 22.9 22.9 0 0 0-.7 7 23.7 23.7 0 0 0 23.8 22.3h1.3l6.3-.6a7.6 7.6 0 0 1-1.7 3.2 8 8 0 0 1-11.2.8l-22.4-19a7.8 7.8 0 0 1-.9-11zm-34 19.7a8 8 0 0 1 11.3-.8l37.2 31.3a7.8 7.8 0 0 1 .8 11 8 8 0 0 1-11.2.9L173 163a7.8 7.8 0 0 1-.9-11zm-24.4 28a8.1 8.1 0 0 1 11.2-.8l37.3 31.4a7.7 7.7 0 0 1 .8 11 8 8 0 0 1-11.2.9L148.6 191a7.8 7.8 0 0 1-.9-11zM134 218a8 8 0 0 1 5.4-2.6h.7a8 8 0 0 1 5.1 1.9l22.4 18.9a7.8 7.8 0 0 1 .9 11 8 8 0 0 1-11.2.8l-22.5-18.9a7.8 7.8 0 0 1-.9-11zm96.7 148.5L194 407.3a4.2 4.2 0 0 1-5.8.3L81.3 315a4 4 0 0 1-.4-5.7l36.4-40.7a4.2 4.2 0 0 1 5.8-.4l107 92.6a4 4 0 0 1 .5 5.7zm27.6-40.3l-34.7 6.7-80.1-69.3 1.5-5.3 2 1.6a23.9 23.9 0 0 0 15.4 5.6h1.9a23.9 23.9 0 0 0 16.3-8.1 23 23 0 0 0 5.7-17.1l-.1-.8a24.5 24.5 0 0 0 4.9.5 24 24 0 0 0 18.1-8.2 23.2 23.2 0 0 0 5.3-20h1a24 24 0 0 0 18.1-8.1 23.4 23.4 0 0 0 4.1-6.8l35.7-39.3 13-15.6a7.3 7.3 0 0 1 3-.8 8.6 8.6 0 0 1 6 2.2 8.7 8.7 0 0 1 2.9 5.8 7.3 7.3 0 0 1-.8 4l-53.5 61 14.2 12.4 53.6-61.6a7 7 0 0 1 5.1-2.4 8.5 8.5 0 0 1 6 2.4 9.2 9.2 0 0 1 3 6 7.6 7.6 0 0 1-1.8 5.6l-53.3 61 14 12.2 24.8-28.4 25-28a7 7 0 0 1 5.1-2.3 8.6 8.6 0 0 1 6 2.3 8.7 8.7 0 0 1 2.9 5.8 7 7 0 0 1-1.7 5.3l-50 55.8 13.5 11.9 25.2-28.2a6.9 6.9 0 0 1 6.7 11.3l-26.7 29.5c-11 10.5-22.8 21.8-28.7 27.1a73.8 73.8 0 0 1-28.6 14.3zM424 301.8l-102.4 97.5a4.2 4.2 0 0 1-5.9-.1l-38.3-39a4 4 0 0 1 0-5.8L380 257a4.2 4.2 0 0 1 5.8 0l38.4 39a4 4 0 0 1-.1 5.8z\"></path><ellipse cx=\"116.6\" cy=\"306.8\" rx=\"17.1\" ry=\"16.8\"></ellipse></svg>')}:host .microphone{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M374.8 247a14.2 14.2 0 0 0-28.3 0 94 94 0 0 1-93.9 93.8 94 94 0 0 1-93.8-93.9 14.2 14.2 0 0 0-28.3 0c0 62.6 47.2 114.3 107.8 121.4v27.9h-34.8a14.2 14.2 0 1 0 0 28.3h98a14.2 14.2 0 0 0 0-28.3h-34.8v-27.9a122.3 122.3 0 0 0 108-121.4z\"></path><path d=\"M252.6 313a72.2 72.2 0 0 0 72.2-72.1l.2-87.5a72.2 72.2 0 0 0-144.3 0l-.2 87.5a72.3 72.3 0 0 0 72.1 72.1zm.2-203.4a43.9 43.9 0 0 1 43.9 43.8l-.2 87.4a43.9 43.9 0 0 1-43.9 43.9 43.9 43.9 0 0 1-42-31.2h32a14.2 14.2 0 1 0 0-28.4h-33.8v-14.6h33.7a14.2 14.2 0 1 0 0-28.4H209v-14.6h33.6a14.2 14.2 0 1 0 0-28.4h-31a43.9 43.9 0 0 1 41.3-29.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M374.8 247a14.2 14.2 0 0 0-28.3 0 94 94 0 0 1-93.9 93.8 94 94 0 0 1-93.8-93.9 14.2 14.2 0 0 0-28.3 0c0 62.6 47.2 114.3 107.8 121.4v27.9h-34.8a14.2 14.2 0 1 0 0 28.3h98a14.2 14.2 0 0 0 0-28.3h-34.8v-27.9a122.3 122.3 0 0 0 108-121.4z\"></path><path d=\"M252.6 313a72.2 72.2 0 0 0 72.2-72.1l.2-87.5a72.2 72.2 0 0 0-144.3 0l-.2 87.5a72.3 72.3 0 0 0 72.1 72.1zm.2-203.4a43.9 43.9 0 0 1 43.9 43.8l-.2 87.4a43.9 43.9 0 0 1-43.9 43.9 43.9 43.9 0 0 1-42-31.2h32a14.2 14.2 0 1 0 0-28.4h-33.8v-14.6h33.7a14.2 14.2 0 1 0 0-28.4H209v-14.6h33.6a14.2 14.2 0 1 0 0-28.4h-31a43.9 43.9 0 0 1 41.3-29.5z\"></path></svg>')}:host .alert{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M373.6 337.7L351 319.6a28.2 28.2 0 0 1-10.6-21.6l-1.9-93.4A83.5 83.5 0 0 0 284 127a29.8 29.8 0 1 0-58.8-6.5 30 30 0 0 0 .8 6.6 83.6 83.6 0 0 0-54.4 77.4l-1.9 93.5a28.3 28.3 0 0 1-10.5 21.4L136.4 338a16 16 0 0 0 10.2 28.1h94.2v16.2h-19.5A33.7 33.7 0 0 0 255 416a33.7 33.7 0 0 0 33.7-33.7h-19.5V366h94.3a16 16 0 0 0 10-28.3zm-192.4 0a56.6 56.6 0 0 0 16.7-39l2-95.4a55.3 55.3 0 0 1 54.2-53H255.8a55.3 55.3 0 0 1 54.3 53l2 95.4a56.6 56.6 0 0 0 16.6 39z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M373.6 337.7L351 319.6a28.2 28.2 0 0 1-10.6-21.6l-1.9-93.4A83.5 83.5 0 0 0 284 127a29.8 29.8 0 1 0-58.8-6.5 30 30 0 0 0 .8 6.6 83.6 83.6 0 0 0-54.4 77.4l-1.9 93.5a28.3 28.3 0 0 1-10.5 21.4L136.4 338a16 16 0 0 0 10.2 28.1h94.2v16.2h-19.5A33.7 33.7 0 0 0 255 416a33.7 33.7 0 0 0 33.7-33.7h-19.5V366h94.3a16 16 0 0 0 10-28.3zm-192.4 0a56.6 56.6 0 0 0 16.7-39l2-95.4a55.3 55.3 0 0 1 54.2-53H255.8a55.3 55.3 0 0 1 54.3 53l2 95.4a56.6 56.6 0 0 0 16.6 39z\"></path></svg>')}:host .fraud-free{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M386.4 157a25.3 25.3 0 0 1 16.3 8.7 26.6 26.6 0 0 1 6.9 17.8v.7l-.1 2.6c-.2 1.8-3.5 45.8-22.2 96.2-25.6 69-67.7 117.4-121.9 140l-.5.2-11.3 4.1-12-4.3c-53.7-23.5-97-73.2-121.7-140-18.6-50.4-22.1-95.8-22.1-96.2l-.1-2.8v-.6a26.7 26.7 0 0 1 26.7-26.7c15.2 0 40.2-5.5 72.9-32.2A250.9 250.9 0 0 0 232 90.1c5.2-6.7 13-10 23.1-10h1a26.7 26.7 0 0 1 19.2 10.2 250 250 0 0 0 34.7 34.4c29 23.7 52 30.7 67.5 32zM252.6 396.8l1 .3 1.3-.4c46.5-19.5 83.1-62.2 105.8-123.6a358 358 0 0 0 20.5-87.9c-65-1.2-120.9-68.3-127.6-76.7a280.6 280.6 0 0 1-38 37.6c-31 25.4-61 38.5-89.5 39 .3 4 4 43.7 20.4 88 22 59.4 59.6 103.3 106 123.7zm.4-289z\"></path><path d=\"M202.2 244.9H250v3h-47.8z\"></path><path d=\"M202.2 253.9H238v3h-35.8z\"></path><path d=\"M309.7 198.7H202.2a18 18 0 0 0-17.9 17.9v59.7a18 18 0 0 0 18 18h107.4a18 18 0 0 0 18-18v-59.7a18 18 0 0 0-18-18zm0 11.9a6 6 0 0 1 6 6v6h-67.2a12 12 0 0 1-9.1-4.3l-6.4-7.7zm0 71.7H202.2a6 6 0 0 1-6-6v-59.7a6 6 0 0 1 6-6h15.2l12.8 15.4a23.8 23.8 0 0 0 18.3 8.5h67.2v41.8a6 6 0 0 1-6 6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M386.4 157a25.3 25.3 0 0 1 16.3 8.7 26.6 26.6 0 0 1 6.9 17.8v.7l-.1 2.6c-.2 1.8-3.5 45.8-22.2 96.2-25.6 69-67.7 117.4-121.9 140l-.5.2-11.3 4.1-12-4.3c-53.7-23.5-97-73.2-121.7-140-18.6-50.4-22.1-95.8-22.1-96.2l-.1-2.8v-.6a26.7 26.7 0 0 1 26.7-26.7c15.2 0 40.2-5.5 72.9-32.2A250.9 250.9 0 0 0 232 90.1c5.2-6.7 13-10 23.1-10h1a26.7 26.7 0 0 1 19.2 10.2 250 250 0 0 0 34.7 34.4c29 23.7 52 30.7 67.5 32zM252.6 396.8l1 .3 1.3-.4c46.5-19.5 83.1-62.2 105.8-123.6a358 358 0 0 0 20.5-87.9c-65-1.2-120.9-68.3-127.6-76.7a280.6 280.6 0 0 1-38 37.6c-31 25.4-61 38.5-89.5 39 .3 4 4 43.7 20.4 88 22 59.4 59.6 103.3 106 123.7zm.4-289z\"></path><path d=\"M202.2 244.9H250v3h-47.8z\"></path><path d=\"M202.2 253.9H238v3h-35.8z\"></path><path d=\"M309.7 198.7H202.2a18 18 0 0 0-17.9 17.9v59.7a18 18 0 0 0 18 18h107.4a18 18 0 0 0 18-18v-59.7a18 18 0 0 0-18-18zm0 11.9a6 6 0 0 1 6 6v6h-67.2a12 12 0 0 1-9.1-4.3l-6.4-7.7zm0 71.7H202.2a6 6 0 0 1-6-6v-59.7a6 6 0 0 1 6-6h15.2l12.8 15.4a23.8 23.8 0 0 0 18.3 8.5h67.2v41.8a6 6 0 0 1-6 6z\"></path></svg>')}:host .lunch-learn{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M399 429.3a37.8 37.8 0 0 1-26.7-11.1L298 344.8l53.6-53.6 74.3 73.4a37.9 37.9 0 0 1-26.8 64.7zm-63.4-84.5l55.5 54.5a11.4 11.4 0 0 0 16 0 11.3 11.3 0 0 0 0-15.9L351.5 329z\"></path><path d=\"M240.3 174.3a11 11 0 0 1-.8-3.4 57.7 57.7 0 0 0-16.8-37.4l-64.3-64.3-22.2 22.2 39.6 39.7-10.4 10.5-39.7-39.7-18.2 18.2 39.7 39.7-10.5 10.4L97 130.6l-20.3 20.3 64.3 64.3a57.7 57.7 0 0 0 37.3 16.8 10.8 10.8 0 0 1 3.5.8l8.7 3.5 53.3-53.3zM182.7 204l-2.7-.3a29.4 29.4 0 0 1-19-8.5l-4.3-4.4 24.6-24.6 17-17 4.3 4.4a29.4 29.4 0 0 1 8.6 19l.3 2.7z\"></path><path d=\"M411.6 170.3l-49.9-49.7a26.1 26.1 0 0 0-36.9.3l-177 177.3a26.4 26.4 0 0 0-6.5 11L100.8 400a23 23 0 0 0 5 26 23.5 23.5 0 0 0 16.7 7 22.5 22.5 0 0 0 9.2-2l91.3-39.7a26.6 26.6 0 0 0 11.3-6.8l177-177.3a26.3 26.3 0 0 0 7.8-18.3 25.5 25.5 0 0 0-7.5-18.6zm-255 173.9l31.6 31.4-56.4 24.6zm59.1 18.9l-46.3-46.4 174-174.4 46.4 46.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M399 429.3a37.8 37.8 0 0 1-26.7-11.1L298 344.8l53.6-53.6 74.3 73.4a37.9 37.9 0 0 1-26.8 64.7zm-63.4-84.5l55.5 54.5a11.4 11.4 0 0 0 16 0 11.3 11.3 0 0 0 0-15.9L351.5 329z\"></path><path d=\"M240.3 174.3a11 11 0 0 1-.8-3.4 57.7 57.7 0 0 0-16.8-37.4l-64.3-64.3-22.2 22.2 39.6 39.7-10.4 10.5-39.7-39.7-18.2 18.2 39.7 39.7-10.5 10.4L97 130.6l-20.3 20.3 64.3 64.3a57.7 57.7 0 0 0 37.3 16.8 10.8 10.8 0 0 1 3.5.8l8.7 3.5 53.3-53.3zM182.7 204l-2.7-.3a29.4 29.4 0 0 1-19-8.5l-4.3-4.4 24.6-24.6 17-17 4.3 4.4a29.4 29.4 0 0 1 8.6 19l.3 2.7z\"></path><path d=\"M411.6 170.3l-49.9-49.7a26.1 26.1 0 0 0-36.9.3l-177 177.3a26.4 26.4 0 0 0-6.5 11L100.8 400a23 23 0 0 0 5 26 23.5 23.5 0 0 0 16.7 7 22.5 22.5 0 0 0 9.2-2l91.3-39.7a26.6 26.6 0 0 0 11.3-6.8l177-177.3a26.3 26.3 0 0 0 7.8-18.3 25.5 25.5 0 0 0-7.5-18.6zm-255 173.9l31.6 31.4-56.4 24.6zm59.1 18.9l-46.3-46.4 174-174.4 46.4 46.3z\"></path></svg>')}:host .genie{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M249.8 226.9c1.2-3.4 10-3.1 11.2-.7s-4.2 19.4-5.6 19.4-6.7-15.4-5.6-18.7z\"></path><path d=\"M186 426.9l22-48.4a44 44 0 0 0 .8-37.2c-2.4-5-8-15.6-12-23.4l-2.6-4.7a72 72 0 0 1-27 5.3c-18.2-.2-34.6-15.6-35-33a35 35 0 0 1 9.9-25.4c6.7-7 16.2-10.8 26.6-10.8 17.8 0 83.6.5 86.7.6s69.3-.6 87.1-.6c10.5 0 20 3.9 26.7 10.8a35 35 0 0 1 9.9 25.5c-.4 17.3-16.8 32.7-35 32.9a76 76 0 0 1-29.3-6.2c-8 21-27.2 50.4-39.4 62.9a166.7 166.7 0 0 1-56.4 38.3zm34.9-124l1 1.9a625 625 0 0 1 13 25.4l.3 1a77 77 0 0 1 5 37.6 149 149 0 0 0 15-13.4 200 200 0 0 0 33.2-53.3l-19.6-7.6c-6.6-2.5-7.8-3-9-3.6l-4-1.5-3 1.1-6.7 2.6-3.7 1.4-20.7 8zm-52.1-25.2c-2 0-4.7.4-6.4 2.2a6.8 6.8 0 0 0-1.8 5c.1 1.6 3.7 5.2 7 5.3 7.4 0 13.9-2.4 22-5.6l2.2-.8 15.1-6-38.1-.1zm135.6.2l15 5.9 2.3.8c8.2 3.2 14.6 5.7 22 5.6 3.3 0 6.9-3.7 7-5.3a6.8 6.8 0 0 0-1.8-5c-1.7-1.8-4.4-2.2-6.4-2.2-7.1 0-22.4 0-38.1.2z\"></path><path d=\"M307.7 218c-2.6 7.6-8.8 10-16 10.7-13.3 1.1-23.6-2.4-36.3-12.2a42.4 42.4 0 0 1-24.9 11.7 65.7 65.7 0 0 1-18.2-1.2 12.1 12.1 0 0 1-9.2-8.5c3 1 6 3 9 2.7 3-.3 6-2.8 8.8-4.5 5-3 9.8-6.6 15.2-8.7s11.2-.4 16.7 1.9a6.9 6.9 0 0 0 5 .1 24.9 24.9 0 0 1 27.2 3l7 5c6.6 4.9 9.1 4.8 15.7 0z\"></path><path d=\"M233.8 189.2a6.8 6.8 0 0 0 13.7 0v-6.8a6.8 6.8 0 0 0-13.7 0v6.8z\"></path><path d=\"M269 196.2a6.8 6.8 0 0 0 6.8-6.8v-6.8a6.8 6.8 0 0 0-13.7 0v6.8a6.8 6.8 0 0 0 6.8 6.8z\"></path><path d=\"M277.6 134.7l-15 19.2 64.8 50.5a80.8 80.8 0 0 0 8.5-24.1z\"></path><path d=\"M193.3 218.7l98.8-126.4a81.1 81.1 0 0 0-24-7.7L180 197.2a81.7 81.7 0 0 0 13.3 21.5z\"></path><path d=\"M286.2 123.7l51 39.9a81.7 81.7 0 0 0-32.5-63.5z\"></path><path d=\"M250 83.9a81.7 81.7 0 0 0-75 96z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M249.8 226.9c1.2-3.4 10-3.1 11.2-.7s-4.2 19.4-5.6 19.4-6.7-15.4-5.6-18.7z\"></path><path d=\"M186 426.9l22-48.4a44 44 0 0 0 .8-37.2c-2.4-5-8-15.6-12-23.4l-2.6-4.7a72 72 0 0 1-27 5.3c-18.2-.2-34.6-15.6-35-33a35 35 0 0 1 9.9-25.4c6.7-7 16.2-10.8 26.6-10.8 17.8 0 83.6.5 86.7.6s69.3-.6 87.1-.6c10.5 0 20 3.9 26.7 10.8a35 35 0 0 1 9.9 25.5c-.4 17.3-16.8 32.7-35 32.9a76 76 0 0 1-29.3-6.2c-8 21-27.2 50.4-39.4 62.9a166.7 166.7 0 0 1-56.4 38.3zm34.9-124l1 1.9a625 625 0 0 1 13 25.4l.3 1a77 77 0 0 1 5 37.6 149 149 0 0 0 15-13.4 200 200 0 0 0 33.2-53.3l-19.6-7.6c-6.6-2.5-7.8-3-9-3.6l-4-1.5-3 1.1-6.7 2.6-3.7 1.4-20.7 8zm-52.1-25.2c-2 0-4.7.4-6.4 2.2a6.8 6.8 0 0 0-1.8 5c.1 1.6 3.7 5.2 7 5.3 7.4 0 13.9-2.4 22-5.6l2.2-.8 15.1-6-38.1-.1zm135.6.2l15 5.9 2.3.8c8.2 3.2 14.6 5.7 22 5.6 3.3 0 6.9-3.7 7-5.3a6.8 6.8 0 0 0-1.8-5c-1.7-1.8-4.4-2.2-6.4-2.2-7.1 0-22.4 0-38.1.2z\"></path><path d=\"M307.7 218c-2.6 7.6-8.8 10-16 10.7-13.3 1.1-23.6-2.4-36.3-12.2a42.4 42.4 0 0 1-24.9 11.7 65.7 65.7 0 0 1-18.2-1.2 12.1 12.1 0 0 1-9.2-8.5c3 1 6 3 9 2.7 3-.3 6-2.8 8.8-4.5 5-3 9.8-6.6 15.2-8.7s11.2-.4 16.7 1.9a6.9 6.9 0 0 0 5 .1 24.9 24.9 0 0 1 27.2 3l7 5c6.6 4.9 9.1 4.8 15.7 0z\"></path><path d=\"M233.8 189.2a6.8 6.8 0 0 0 13.7 0v-6.8a6.8 6.8 0 0 0-13.7 0v6.8z\"></path><path d=\"M269 196.2a6.8 6.8 0 0 0 6.8-6.8v-6.8a6.8 6.8 0 0 0-13.7 0v6.8a6.8 6.8 0 0 0 6.8 6.8z\"></path><path d=\"M277.6 134.7l-15 19.2 64.8 50.5a80.8 80.8 0 0 0 8.5-24.1z\"></path><path d=\"M193.3 218.7l98.8-126.4a81.1 81.1 0 0 0-24-7.7L180 197.2a81.7 81.7 0 0 0 13.3 21.5z\"></path><path d=\"M286.2 123.7l51 39.9a81.7 81.7 0 0 0-32.5-63.5z\"></path><path d=\"M250 83.9a81.7 81.7 0 0 0-75 96z\"></path></svg>')}:host .click-return{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M110.2 114v10.2l-.2 65.3a47 47 0 0 0 32.6 44.6v137.4c0 14 10.8 25.3 24 25.3h89.2v-28.3h-28.5V307H199v61.3h-28V234.3a47 47 0 0 0 18.7-11.3 46.8 46.8 0 0 0 65.6 0 46.8 46.8 0 0 0 65.7 0 47 47 0 0 0 19.6 11.5v29l28.3.2V234a47 47 0 0 0 31.8-44.4V114zm65.4 75.5a18.6 18.6 0 0 1-37.3 0l.2-47.1h37.3zm65.6 0h-.1a18.6 18.6 0 0 1-37.2.3l.3-47.5h37zm65.6.3a18.6 18.6 0 0 1-37.2-.3v-47.1H307l-.1 47zm65.5 1.3a18.6 18.6 0 0 1-37.1-1.6v-47.1h37.2l-.1 47z\"></path><circle cx=\"309.4\" cy=\"385.3\" r=\"11.4\"></circle><circle cx=\"364.2\" cy=\"385.3\" r=\"11.4\"></circle><path d=\"M399.4 295.6a6.9 6.9 0 0 0-5.5-2.7h-25.6v13.7h16.5l-4.4 15.3h-80.7v13.8h76.6l-5.2 16.8-67 .4c-8.4 0-11.3-2.2-13.6-8l-15.8-47.3-2.5-7.8c-4.7-19-13.8-20.4-20.2-20.8h-.2l-17.8.1v13.5h14.4c6.8 0 8.3 3 10.8 11.4l18.4 55.4.1.3c3.5 8.8 9 17 24.8 17 0 0 55.6 0 69.4-.4a42.6 42.6 0 0 0 4.4-.3 7.1 7.1 0 0 0 4.2-1.4c1.7-1.3 3.1-4.8 4-7.5 2.8-9 16-55.4 16-55.4a6.9 6.9 0 0 0-1-6z\"></path><path d=\"M348.8 269.4l-8.2 9.8a12.2 12.2 0 0 1-9.3 4.3h-23.5l10.4-12.4-8-6.7-20.4 24.4 20.4 24.3 8-6.7-10.4-12.4h23.5a22.6 22.6 0 0 0 17.3-8.1l8.2-9.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M110.2 114v10.2l-.2 65.3a47 47 0 0 0 32.6 44.6v137.4c0 14 10.8 25.3 24 25.3h89.2v-28.3h-28.5V307H199v61.3h-28V234.3a47 47 0 0 0 18.7-11.3 46.8 46.8 0 0 0 65.6 0 46.8 46.8 0 0 0 65.7 0 47 47 0 0 0 19.6 11.5v29l28.3.2V234a47 47 0 0 0 31.8-44.4V114zm65.4 75.5a18.6 18.6 0 0 1-37.3 0l.2-47.1h37.3zm65.6 0h-.1a18.6 18.6 0 0 1-37.2.3l.3-47.5h37zm65.6.3a18.6 18.6 0 0 1-37.2-.3v-47.1H307l-.1 47zm65.5 1.3a18.6 18.6 0 0 1-37.1-1.6v-47.1h37.2l-.1 47z\"></path><circle cx=\"309.4\" cy=\"385.3\" r=\"11.4\"></circle><circle cx=\"364.2\" cy=\"385.3\" r=\"11.4\"></circle><path d=\"M399.4 295.6a6.9 6.9 0 0 0-5.5-2.7h-25.6v13.7h16.5l-4.4 15.3h-80.7v13.8h76.6l-5.2 16.8-67 .4c-8.4 0-11.3-2.2-13.6-8l-15.8-47.3-2.5-7.8c-4.7-19-13.8-20.4-20.2-20.8h-.2l-17.8.1v13.5h14.4c6.8 0 8.3 3 10.8 11.4l18.4 55.4.1.3c3.5 8.8 9 17 24.8 17 0 0 55.6 0 69.4-.4a42.6 42.6 0 0 0 4.4-.3 7.1 7.1 0 0 0 4.2-1.4c1.7-1.3 3.1-4.8 4-7.5 2.8-9 16-55.4 16-55.4a6.9 6.9 0 0 0-1-6z\"></path><path d=\"M348.8 269.4l-8.2 9.8a12.2 12.2 0 0 1-9.3 4.3h-23.5l10.4-12.4-8-6.7-20.4 24.4 20.4 24.3 8-6.7-10.4-12.4h23.5a22.6 22.6 0 0 0 17.3-8.1l8.2-9.8z\"></path></svg>')}:host .click-collect{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M110.2 114v10.2l-.2 65.3a47 47 0 0 0 32.6 44.6v137.4c0 14 10.8 25.3 24 25.3h89.2v-28.3h-28.5V307H199v61.3h-28V234.3a47 47 0 0 0 18.7-11.3 46.8 46.8 0 0 0 65.6 0 46.8 46.8 0 0 0 65.7 0 47 47 0 0 0 19.6 11.5v29l28.3.2V234a47 47 0 0 0 31.8-44.4V114zm65.4 75.5a18.6 18.6 0 0 1-37.3 0l.2-47.1h37.3zm65.6 0h-.1a18.6 18.6 0 0 1-37.2.3l.3-47.5h37zm65.6.3a18.6 18.6 0 0 1-37.2-.3v-47.1H307l-.1 47zm65.5 1.3a18.6 18.6 0 0 1-37.1-1.6v-47.1h37.2l-.1 47z\"></path><path d=\"M370.6 337.7l14-9.6A14.6 14.6 0 0 0 391 314v-.3a14.7 14.7 0 0 0-9.7-11.4l-86.1-29a14.7 14.7 0 0 0-14.3 2.8l-1 .8-.1.2a14.7 14.7 0 0 0-4 12.2l12.6 90a14.7 14.7 0 0 0 9.4 11.7l.3.1a14.5 14.5 0 0 0 15-3.5l12-12 17.7 20.7a14.4 14.4 0 0 0 11.1 5.1 13.6 13.6 0 0 0 2-.1 14.8 14.8 0 0 0 6.8-2.8l23.2-19.3.3-.3a14.8 14.8 0 0 0 4-6 14.6 14.6 0 0 0-2.4-13.9zm-7.3-19.8l-22.5 15.4 27.3 34-13.6 11.2-28.2-33-19.4 19.1-9.6-69z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M110.2 114v10.2l-.2 65.3a47 47 0 0 0 32.6 44.6v137.4c0 14 10.8 25.3 24 25.3h89.2v-28.3h-28.5V307H199v61.3h-28V234.3a47 47 0 0 0 18.7-11.3 46.8 46.8 0 0 0 65.6 0 46.8 46.8 0 0 0 65.7 0 47 47 0 0 0 19.6 11.5v29l28.3.2V234a47 47 0 0 0 31.8-44.4V114zm65.4 75.5a18.6 18.6 0 0 1-37.3 0l.2-47.1h37.3zm65.6 0h-.1a18.6 18.6 0 0 1-37.2.3l.3-47.5h37zm65.6.3a18.6 18.6 0 0 1-37.2-.3v-47.1H307l-.1 47zm65.5 1.3a18.6 18.6 0 0 1-37.1-1.6v-47.1h37.2l-.1 47z\"></path><path d=\"M370.6 337.7l14-9.6A14.6 14.6 0 0 0 391 314v-.3a14.7 14.7 0 0 0-9.7-11.4l-86.1-29a14.7 14.7 0 0 0-14.3 2.8l-1 .8-.1.2a14.7 14.7 0 0 0-4 12.2l12.6 90a14.7 14.7 0 0 0 9.4 11.7l.3.1a14.5 14.5 0 0 0 15-3.5l12-12 17.7 20.7a14.4 14.4 0 0 0 11.1 5.1 13.6 13.6 0 0 0 2-.1 14.8 14.8 0 0 0 6.8-2.8l23.2-19.3.3-.3a14.8 14.8 0 0 0 4-6 14.6 14.6 0 0 0-2.4-13.9zm-7.3-19.8l-22.5 15.4 27.3 34-13.6 11.2-28.2-33-19.4 19.1-9.6-69z\"></path></svg>')}:host .recurring-payments{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M130.6 241.5H244v7.1H130.6z\"></path><path d=\"M130.6 262.8h85v7.1h-85z\"></path><path d=\"M385.7 131.7H130.6A42.6 42.6 0 0 0 88 174.2v141.7a42.6 42.6 0 0 0 42.5 42.5h122.1v-28.3H130.6a14.2 14.2 0 0 1-14.2-14.2V174.2a14.2 14.2 0 0 1 14.2-14.2h35.9l30.5 36.4a56.6 56.6 0 0 0 43.4 20.3h39v-28.4h-39a28.3 28.3 0 0 1-21.7-10L203.4 160h182.3a14.2 14.2 0 0 1 14.2 14.2V234h28.3v-60a42.6 42.6 0 0 0-42.5-42.4z\"></path><path d=\"M395.5 256.5l-38.3 34.3 15.3 17.1 12.4-11c0 1 0 1.9-.2 2.8a48.6 48.6 0 1 1-48.4-53.5 48.8 48.8 0 0 1 5 .3 48.2 48.2 0 0 1 20 6.5l1 .6 17.4-15.7-1.5-1.1a71.6 71.6 0 1 0 29.4 65.2c.2-2.2.3-4.5.3-6.7l12 9.5 14.1-18z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M130.6 241.5H244v7.1H130.6z\"></path><path d=\"M130.6 262.8h85v7.1h-85z\"></path><path d=\"M385.7 131.7H130.6A42.6 42.6 0 0 0 88 174.2v141.7a42.6 42.6 0 0 0 42.5 42.5h122.1v-28.3H130.6a14.2 14.2 0 0 1-14.2-14.2V174.2a14.2 14.2 0 0 1 14.2-14.2h35.9l30.5 36.4a56.6 56.6 0 0 0 43.4 20.3h39v-28.4h-39a28.3 28.3 0 0 1-21.7-10L203.4 160h182.3a14.2 14.2 0 0 1 14.2 14.2V234h28.3v-60a42.6 42.6 0 0 0-42.5-42.4z\"></path><path d=\"M395.5 256.5l-38.3 34.3 15.3 17.1 12.4-11c0 1 0 1.9-.2 2.8a48.6 48.6 0 1 1-48.4-53.5 48.8 48.8 0 0 1 5 .3 48.2 48.2 0 0 1 20 6.5l1 .6 17.4-15.7-1.5-1.1a71.6 71.6 0 1 0 29.4 65.2c.2-2.2.3-4.5.3-6.7l12 9.5 14.1-18z\"></path></svg>')}:host .ai{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M398.4 264.5a25.8 25.8 0 0 0-22.5 13.2l-53.3-.3a14.2 14.2 0 0 0-.2 28.3l55.6.4a25.8 25.8 0 1 0 20.4-41.6z\"></path><path d=\"M398.4 192.7a25.8 25.8 0 0 0-22.2 12.6l-99.2.3v-24l29.1.6h.4a54 54 0 0 0 41.4-19.3l21-24.9 2 .1a25.8 25.8 0 1 0-24.4-17.5l-20.3 24a25.8 25.8 0 0 1-19.7 9.2l-29.5-.4v-8.2a60 60 0 0 0-60.2-59.6 60.6 60.6 0 0 0-51.2 28.3 70 70 0 0 0-49.9 66.7 69 69 0 0 0 1.1 12.4 79.2 79.2 0 0 0-7 121 63.5 63.5 0 0 0-4.3 23.3 65 65 0 0 0 62 64.6 60.8 60.8 0 0 0 49.2 25.3 60 60 0 0 0 60.2-59.6v-9.2l29.4-.5a25.8 25.8 0 0 1 19.7 9.3l20.3 24.1a25.4 25.4 0 0 0-1.3 8 25.8 25.8 0 1 0 25.8-25.8h-2.4L347.7 349a54 54 0 0 0-41.5-19.3l-29.2.4v-96l100.6-.3a25.8 25.8 0 1 0 20.8-41zm-150 174.8a31.5 31.5 0 0 1-31.7 31.3 31.9 31.9 0 0 1-28.3-17.6l-4.4-8.8-9.9 1-3.3.2a36.6 36.6 0 0 1-36.7-36.4A35.9 35.9 0 0 1 140 318l7.3-11.5-11.2-7.8a51.1 51.1 0 0 1 4.3-87l10.5-6-4-11.2a40.4 40.4 0 0 1-2.5-13.8 41.6 41.6 0 0 1 33.4-40.6l7.4-1.6 3-6.3a31.6 31.6 0 0 1 60.2 13.1z\"></path><path d=\"M177.1 247a14.2 14.2 0 0 1-14.1-14 59.2 59.2 0 0 1 58.1-60.2 14.2 14.2 0 1 1 .5 28.3 30.9 30.9 0 0 0-30.3 31.4 14.2 14.2 0 0 1-13.9 14.5z\"></path><path d=\"M177.1 347.8a14.2 14.2 0 0 1-.2-28.4 30.9 30.9 0 0 0 30.3-31.4 14.2 14.2 0 1 1 28.3-.5 59.3 59.3 0 0 1-58.1 60.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M398.4 264.5a25.8 25.8 0 0 0-22.5 13.2l-53.3-.3a14.2 14.2 0 0 0-.2 28.3l55.6.4a25.8 25.8 0 1 0 20.4-41.6z\"></path><path d=\"M398.4 192.7a25.8 25.8 0 0 0-22.2 12.6l-99.2.3v-24l29.1.6h.4a54 54 0 0 0 41.4-19.3l21-24.9 2 .1a25.8 25.8 0 1 0-24.4-17.5l-20.3 24a25.8 25.8 0 0 1-19.7 9.2l-29.5-.4v-8.2a60 60 0 0 0-60.2-59.6 60.6 60.6 0 0 0-51.2 28.3 70 70 0 0 0-49.9 66.7 69 69 0 0 0 1.1 12.4 79.2 79.2 0 0 0-7 121 63.5 63.5 0 0 0-4.3 23.3 65 65 0 0 0 62 64.6 60.8 60.8 0 0 0 49.2 25.3 60 60 0 0 0 60.2-59.6v-9.2l29.4-.5a25.8 25.8 0 0 1 19.7 9.3l20.3 24.1a25.4 25.4 0 0 0-1.3 8 25.8 25.8 0 1 0 25.8-25.8h-2.4L347.7 349a54 54 0 0 0-41.5-19.3l-29.2.4v-96l100.6-.3a25.8 25.8 0 1 0 20.8-41zm-150 174.8a31.5 31.5 0 0 1-31.7 31.3 31.9 31.9 0 0 1-28.3-17.6l-4.4-8.8-9.9 1-3.3.2a36.6 36.6 0 0 1-36.7-36.4A35.9 35.9 0 0 1 140 318l7.3-11.5-11.2-7.8a51.1 51.1 0 0 1 4.3-87l10.5-6-4-11.2a40.4 40.4 0 0 1-2.5-13.8 41.6 41.6 0 0 1 33.4-40.6l7.4-1.6 3-6.3a31.6 31.6 0 0 1 60.2 13.1z\"></path><path d=\"M177.1 247a14.2 14.2 0 0 1-14.1-14 59.2 59.2 0 0 1 58.1-60.2 14.2 14.2 0 1 1 .5 28.3 30.9 30.9 0 0 0-30.3 31.4 14.2 14.2 0 0 1-13.9 14.5z\"></path><path d=\"M177.1 347.8a14.2 14.2 0 0 1-.2-28.4 30.9 30.9 0 0 0 30.3-31.4 14.2 14.2 0 1 1 28.3-.5 59.3 59.3 0 0 1-58.1 60.3z\"></path></svg>')}:host .file{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 425.2h212.6V207.3L275.7 85H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1c-7.8 0-14.2-6.4-14.2-14.2V127.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 425.2h212.6V207.3L275.7 85H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1c-7.8 0-14.2-6.4-14.2-14.2V127.6z\"></path></svg>')}:host .qr-scanner{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326 85H184.2a28.4 28.4 0 0 0-28.3 28.4v283.4a28.4 28.4 0 0 0 28.4 28.4H326a28.4 28.4 0 0 0 28.4-28.3V113.4A28.4 28.4 0 0 0 326 85zm-141.8 28.4H326v223.2H184.2zM326 396.9H184.2v-53.2H326v53.1z\"></path><path d=\"M302.1 212.4h9.4v-37a4.7 4.7 0 0 0-4.7-4.7h-37v9.3H302z\"></path><path d=\"M208.8 180h32.4v-9.4h-37a4.7 4.7 0 0 0-4.7 4.7v37h9.4z\"></path><path d=\"M302.2 273.4H270v9.4h37a4.7 4.7 0 0 0 4.7-4.7V241h-9.4z\"></path><path d=\"M208.8 241h-9.3v37a4.7 4.7 0 0 0 4.7 4.8h37v-9.4h-32.4z\"></path><circle cx=\"255.8\" cy=\"370.5\" r=\"14.2\" transform=\"rotate(-7 255.7 370.4)\"></circle><path d=\"M218 222.1h32.8v-32.8H218zm9.4-23.4h14v14h-14z\"></path><path d=\"M231.3 202.6h6.2v6.2h-6.2z\"></path><path d=\"M218 264.2h32.8v-32.8H218zm9.4-23.4h14v14h-14z\"></path><path d=\"M231.3 244.7h6.2v6.2h-6.2z\"></path><path d=\"M293.1 231.4h-32.8v32.8H293zm-9.4 23.4h-14v-14h14z\"></path><path d=\"M273.6 244.7h6.2v6.2h-6.2z\"></path><path d=\"M260.3 189.2V222H293v-32.8zm23.4 23.4h-14v-14h14z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326 85H184.2a28.4 28.4 0 0 0-28.3 28.4v283.4a28.4 28.4 0 0 0 28.4 28.4H326a28.4 28.4 0 0 0 28.4-28.3V113.4A28.4 28.4 0 0 0 326 85zm-141.8 28.4H326v223.2H184.2zM326 396.9H184.2v-53.2H326v53.1z\"></path><path d=\"M302.1 212.4h9.4v-37a4.7 4.7 0 0 0-4.7-4.7h-37v9.3H302z\"></path><path d=\"M208.8 180h32.4v-9.4h-37a4.7 4.7 0 0 0-4.7 4.7v37h9.4z\"></path><path d=\"M302.2 273.4H270v9.4h37a4.7 4.7 0 0 0 4.7-4.7V241h-9.4z\"></path><path d=\"M208.8 241h-9.3v37a4.7 4.7 0 0 0 4.7 4.8h37v-9.4h-32.4z\"></path><circle cx=\"255.8\" cy=\"370.5\" r=\"14.2\" transform=\"rotate(-7 255.7 370.4)\"></circle><path d=\"M218 222.1h32.8v-32.8H218zm9.4-23.4h14v14h-14z\"></path><path d=\"M231.3 202.6h6.2v6.2h-6.2z\"></path><path d=\"M218 264.2h32.8v-32.8H218zm9.4-23.4h14v14h-14z\"></path><path d=\"M231.3 244.7h6.2v6.2h-6.2z\"></path><path d=\"M293.1 231.4h-32.8v32.8H293zm-9.4 23.4h-14v-14h14z\"></path><path d=\"M273.6 244.7h6.2v6.2h-6.2z\"></path><path d=\"M260.3 189.2V222H293v-32.8zm23.4 23.4h-14v-14h14z\"></path></svg>')}:host .split{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M321.3 275.9H191h130.3z\"></path><path d=\"M374.4 140.2q-7 0-7-8.9H361q0 14 13.3 13.9 8.6 0 12-5.7 2.5-4.4 2.5-14 0-8-2.2-11.9-2.8-5.3-10-5.3a11.5 11.5 0 0 0-9 4.1l.9-19.2h18.6v-5h-24.8l-1 30.6h6.2a6.2 6.2 0 0 1 2.5-4.1 7.7 7.7 0 0 1 4.8-1.6q7.4 0 7.4 12.4 0 7.7-1.4 10.7-1.6 4-6.4 4z\"></path><path d=\"M410.3 145.2q8.8 0 11.8-7 2.1-5 2.1-18v-12.4q0-10.3-2-14.5-3-6-11.8-6-14.2 0-14.2 20.5v12.3q0 13.7 2.3 18.8 3 6.3 11.8 6.3zm-7.7-32.6q0-10.5 1.2-14.6 1.6-5.7 6.6-5.7 5.1 0 6.5 5.5.8 3.3.8 14.8v8.8q0 9.4-.6 12.4-1.5 6.6-6.9 6.6-4.8 0-6.4-5.1-1.2-3.8-1.2-14.2z\"></path><path d=\"M213.9 213.4q6.1-5.7 3.8-12.5-1.8-4.9-10.1-13.9l-8-8.7q-6.7-7.2-10.8-8.8-6-2.3-12.1 3.4-10 9.2 3.2 23.5l8 8.6q8.8 9.6 13.7 11.6 6.2 2.5 12.3-3.2zm-20.9-12l-5.4-5.8q-6.8-7.4-8.7-11-2.5-5 1-8.2t8.1-.4q2.7 1.8 10.1 9.8l5.7 6.1q6 6.6 7.5 9 3.3 5.7-.5 9.1-3.4 3.2-7.8.6-3.3-1.8-10-9.1z\"></path><path d=\"M166 202.3a15.6 15.6 0 0 1 4.4 7.7l6.8 27.6 4.6 4.2 17.6-19.3-4-3.7-12.4 13.6-4.7-20.8c-1-4.4-2.6-10.6-7-14.6-5.9-5.3-11.3-4.4-16.7 1.6-4.7 5-6 11.1-.9 16.7l1.9 1.7 4.8-5.3a20.3 20.3 0 0 1-2-2.1c-1.8-2.3-2.3-4.8 0-7.3 2.4-2.8 5.2-2.2 7.6 0z\"></path><path d=\"M293.6 142.3q-4.6-4.3-12.3-1.5-12.6 4.6-6 22.6l4 10.8q4.3 12.1 8 15.8 4.7 4.6 12.4 1.8t8.2-10q.2-5-4-16.4l-4-11q-3.2-9-6.3-12.1zm4.6 45.3q-4.4 1.5-7.4-2.5-2.2-3-5.6-12.1l-2.7-7.4q-3.4-9.3-3.6-13.3-.4-5.6 4-7.1t7.4 2.8q1.8 2.6 5.5 12.6l2.8 7.8q3 8.3 3.5 11.1.8 6.3-4 8z\"></path><path d=\"M135.8 260.7h40l-62.5-62.5 65.1-65.2 127.8 127.7h40L266 180.5l-10.7-29.3-5 1.8a35.6 35.6 0 0 1-4 7.8L227 141.4l73.2-26.6 53 145.6 27-8.8-53.6-147a28.1 28.1 0 0 0-36.2-16.4l-85.6 31.1-6.3-6.3a28.4 28.4 0 0 0-40.1 0l-65.2 65.1a28.4 28.4 0 0 0 0 40.1zM252 160.3l3.7 10-5.8-5.8a39.2 39.2 0 0 0 2.1-4.2z\"></path><path d=\"M397.5 275.9H114.1a28.4 28.4 0 0 0-28.4 28.3v92.1a28.4 28.4 0 0 0 28.4 28.4h283.4a28.4 28.4 0 0 0 28.4-28.4v-92a28.4 28.4 0 0 0-28.4-28.4zm0 36.1v84.3H114.1v-92h283.4z\"></path><path d=\"M182.3 351.7c2.8-4.1 6.6-10 6.6-16.6 0-8.7-4.8-12.4-13.6-12.4-7.5 0-13.4 3.4-14 11.7l-.1 2.8h7.8a21.4 21.4 0 0 1 .3-3.2c.5-3.1 2.1-5.5 5.8-5.5 4 0 5.6 2.6 5.6 6.2a17 17 0 0 1-2.9 9.4l-17.3 26v6.8H189v-6h-20z\"></path><path d=\"M210.2 322.7c-12.1 0-14.3 9-14.3 19.3v13c0 13.6 1 23 14.1 23s14-10.5 14-23.2v-13.2c0-10.8-1.3-19-13.8-19zM210 372c-6 0-6.2-7-6.2-17.5v-7.8c0-10.7.3-18.4 6.3-18.4s6 7.5 6 18.4v8.1c0 8.4.4 17.2-6.1 17.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M321.3 275.9H191h130.3z\"></path><path d=\"M374.4 140.2q-7 0-7-8.9H361q0 14 13.3 13.9 8.6 0 12-5.7 2.5-4.4 2.5-14 0-8-2.2-11.9-2.8-5.3-10-5.3a11.5 11.5 0 0 0-9 4.1l.9-19.2h18.6v-5h-24.8l-1 30.6h6.2a6.2 6.2 0 0 1 2.5-4.1 7.7 7.7 0 0 1 4.8-1.6q7.4 0 7.4 12.4 0 7.7-1.4 10.7-1.6 4-6.4 4z\"></path><path d=\"M410.3 145.2q8.8 0 11.8-7 2.1-5 2.1-18v-12.4q0-10.3-2-14.5-3-6-11.8-6-14.2 0-14.2 20.5v12.3q0 13.7 2.3 18.8 3 6.3 11.8 6.3zm-7.7-32.6q0-10.5 1.2-14.6 1.6-5.7 6.6-5.7 5.1 0 6.5 5.5.8 3.3.8 14.8v8.8q0 9.4-.6 12.4-1.5 6.6-6.9 6.6-4.8 0-6.4-5.1-1.2-3.8-1.2-14.2z\"></path><path d=\"M213.9 213.4q6.1-5.7 3.8-12.5-1.8-4.9-10.1-13.9l-8-8.7q-6.7-7.2-10.8-8.8-6-2.3-12.1 3.4-10 9.2 3.2 23.5l8 8.6q8.8 9.6 13.7 11.6 6.2 2.5 12.3-3.2zm-20.9-12l-5.4-5.8q-6.8-7.4-8.7-11-2.5-5 1-8.2t8.1-.4q2.7 1.8 10.1 9.8l5.7 6.1q6 6.6 7.5 9 3.3 5.7-.5 9.1-3.4 3.2-7.8.6-3.3-1.8-10-9.1z\"></path><path d=\"M166 202.3a15.6 15.6 0 0 1 4.4 7.7l6.8 27.6 4.6 4.2 17.6-19.3-4-3.7-12.4 13.6-4.7-20.8c-1-4.4-2.6-10.6-7-14.6-5.9-5.3-11.3-4.4-16.7 1.6-4.7 5-6 11.1-.9 16.7l1.9 1.7 4.8-5.3a20.3 20.3 0 0 1-2-2.1c-1.8-2.3-2.3-4.8 0-7.3 2.4-2.8 5.2-2.2 7.6 0z\"></path><path d=\"M293.6 142.3q-4.6-4.3-12.3-1.5-12.6 4.6-6 22.6l4 10.8q4.3 12.1 8 15.8 4.7 4.6 12.4 1.8t8.2-10q.2-5-4-16.4l-4-11q-3.2-9-6.3-12.1zm4.6 45.3q-4.4 1.5-7.4-2.5-2.2-3-5.6-12.1l-2.7-7.4q-3.4-9.3-3.6-13.3-.4-5.6 4-7.1t7.4 2.8q1.8 2.6 5.5 12.6l2.8 7.8q3 8.3 3.5 11.1.8 6.3-4 8z\"></path><path d=\"M135.8 260.7h40l-62.5-62.5 65.1-65.2 127.8 127.7h40L266 180.5l-10.7-29.3-5 1.8a35.6 35.6 0 0 1-4 7.8L227 141.4l73.2-26.6 53 145.6 27-8.8-53.6-147a28.1 28.1 0 0 0-36.2-16.4l-85.6 31.1-6.3-6.3a28.4 28.4 0 0 0-40.1 0l-65.2 65.1a28.4 28.4 0 0 0 0 40.1zM252 160.3l3.7 10-5.8-5.8a39.2 39.2 0 0 0 2.1-4.2z\"></path><path d=\"M397.5 275.9H114.1a28.4 28.4 0 0 0-28.4 28.3v92.1a28.4 28.4 0 0 0 28.4 28.4h283.4a28.4 28.4 0 0 0 28.4-28.4v-92a28.4 28.4 0 0 0-28.4-28.4zm0 36.1v84.3H114.1v-92h283.4z\"></path><path d=\"M182.3 351.7c2.8-4.1 6.6-10 6.6-16.6 0-8.7-4.8-12.4-13.6-12.4-7.5 0-13.4 3.4-14 11.7l-.1 2.8h7.8a21.4 21.4 0 0 1 .3-3.2c.5-3.1 2.1-5.5 5.8-5.5 4 0 5.6 2.6 5.6 6.2a17 17 0 0 1-2.9 9.4l-17.3 26v6.8H189v-6h-20z\"></path><path d=\"M210.2 322.7c-12.1 0-14.3 9-14.3 19.3v13c0 13.6 1 23 14.1 23s14-10.5 14-23.2v-13.2c0-10.8-1.3-19-13.8-19zM210 372c-6 0-6.2-7-6.2-17.5v-7.8c0-10.7.3-18.4 6.3-18.4s6 7.5 6 18.4v8.1c0 8.4.4 17.2-6.1 17.2z\"></path></svg>')}:host .generic{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281.3 425.2h-39c-22.3-.2-39-15-40.8-36.2-27.3.2-48.3.1-72.5.1h-28.7a14.2 14.2 0 1 1 0-28.3H129c24.2 0 45.1 0 72.4-.2 10 0 26.8 3.2 28.4 25.7.3 4.7 2.7 10.4 12.6 10.4 30.3.2 58.3.2 85.7 0a27.3 27.3 0 0 0 9.2-1.7c6-2.3 7.4-8.5 6.6-13.5-1-6-6-10-12.9-10-21.7-.4-42.8-.2-68.2 0h-.2c-14 0-23.4-7.8-25.8-21.2-1-6.4-2.6-10.4-4.6-12s-6.4-2.6-12.9-2.6c-15.9-.2-60.1-.1-92.4-.1H99.4a14.2 14.2 0 0 1 0-28.4h27.4l92.7.1c25.9.2 39.8 11.2 44.8 35.8 24.8-.2 45.6-.3 67.2 0 20.7.3 37.3 14.3 40.4 34s-6.8 37.7-24.5 44.5a55.3 55.3 0 0 1-19 3.4c-15.5.2-31 .2-47.1.2zm-77.2-36zm-2.9-2.7zM265 346zm-59.6-157.2h-105a14.2 14.2 0 0 1 0-28.3h139c6.5 0 8.9-2.3 10.4-4.6 2-3 3.9-7.3.6-14.3-.9-1.8-2.6-5.4-10.9-5.6-13-.2-26.4-.1-39.3 0H189a24 24 0 0 1-11.6-2.6c-3.6-1.9-8.2-5.8-9.9-13.8a35.8 35.8 0 0 0-1.2-4.6 38.1 38.1 0 0 0-5.3-.2H99.3a14.2 14.2 0 0 1 0-28.3h61.6c8 0 16.2.7 23 6 5.2 4 8 9.5 9.6 15h6.5c13 0 26.6-.1 40 .2 16.7.3 29.4 8 36 21.7 6.8 14.5 5.8 29.5-2.7 42.3a39 39 0 0 1-33.9 17.1h-34.1z\"></path><path d=\"M292.5 294.7l-47-.2a55.1 55.1 0 0 1-19-3.5c-17.8-6.8-27.6-24.6-24.5-44.4s19.7-33.7 40.4-34c23.2-.4 46.5-.2 67.2-.1 5-24.5 18.9-35.5 44.8-35.8H411.6a14.2 14.2 0 0 1 0 28.3H392l-37.5.1c-6.6 0-10.9 1-12.9 2.6s-3.6 5.7-4.7 12c-2.3 13.5-11.7 21.2-25.7 21.2h-.3c-21-.2-44.7-.4-68.2 0C236 241 231 245 230 251c-.8 5 .5 11.2 6.6 13.6a26.8 26.8 0 0 0 9.2 1.6c27.3.2 55.3.2 85.7 0 9.8 0 12.3-5.6 12.6-10.3.7-9.7 5.2-25.7 28-25.7h39.2a14.2 14.2 0 1 1 0 28.4H391l-18.8-.1c-1.8 21.2-18.4 36-40.7 36l-39 .2zm80.2-38.8zM309 215.4z\"></path><path d=\"M411.6 114.6h-116a14.2 14.2 0 1 1 0-28.4h116a14.2 14.2 0 1 1 0 28.4z\"></path><path d=\"M159.6 265.9H99.3a14.2 14.2 0 1 1 0-28.4h60.3a14.2 14.2 0 0 1 0 28.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M281.3 425.2h-39c-22.3-.2-39-15-40.8-36.2-27.3.2-48.3.1-72.5.1h-28.7a14.2 14.2 0 1 1 0-28.3H129c24.2 0 45.1 0 72.4-.2 10 0 26.8 3.2 28.4 25.7.3 4.7 2.7 10.4 12.6 10.4 30.3.2 58.3.2 85.7 0a27.3 27.3 0 0 0 9.2-1.7c6-2.3 7.4-8.5 6.6-13.5-1-6-6-10-12.9-10-21.7-.4-42.8-.2-68.2 0h-.2c-14 0-23.4-7.8-25.8-21.2-1-6.4-2.6-10.4-4.6-12s-6.4-2.6-12.9-2.6c-15.9-.2-60.1-.1-92.4-.1H99.4a14.2 14.2 0 0 1 0-28.4h27.4l92.7.1c25.9.2 39.8 11.2 44.8 35.8 24.8-.2 45.6-.3 67.2 0 20.7.3 37.3 14.3 40.4 34s-6.8 37.7-24.5 44.5a55.3 55.3 0 0 1-19 3.4c-15.5.2-31 .2-47.1.2zm-77.2-36zm-2.9-2.7zM265 346zm-59.6-157.2h-105a14.2 14.2 0 0 1 0-28.3h139c6.5 0 8.9-2.3 10.4-4.6 2-3 3.9-7.3.6-14.3-.9-1.8-2.6-5.4-10.9-5.6-13-.2-26.4-.1-39.3 0H189a24 24 0 0 1-11.6-2.6c-3.6-1.9-8.2-5.8-9.9-13.8a35.8 35.8 0 0 0-1.2-4.6 38.1 38.1 0 0 0-5.3-.2H99.3a14.2 14.2 0 0 1 0-28.3h61.6c8 0 16.2.7 23 6 5.2 4 8 9.5 9.6 15h6.5c13 0 26.6-.1 40 .2 16.7.3 29.4 8 36 21.7 6.8 14.5 5.8 29.5-2.7 42.3a39 39 0 0 1-33.9 17.1h-34.1z\"></path><path d=\"M292.5 294.7l-47-.2a55.1 55.1 0 0 1-19-3.5c-17.8-6.8-27.6-24.6-24.5-44.4s19.7-33.7 40.4-34c23.2-.4 46.5-.2 67.2-.1 5-24.5 18.9-35.5 44.8-35.8H411.6a14.2 14.2 0 0 1 0 28.3H392l-37.5.1c-6.6 0-10.9 1-12.9 2.6s-3.6 5.7-4.7 12c-2.3 13.5-11.7 21.2-25.7 21.2h-.3c-21-.2-44.7-.4-68.2 0C236 241 231 245 230 251c-.8 5 .5 11.2 6.6 13.6a26.8 26.8 0 0 0 9.2 1.6c27.3.2 55.3.2 85.7 0 9.8 0 12.3-5.6 12.6-10.3.7-9.7 5.2-25.7 28-25.7h39.2a14.2 14.2 0 1 1 0 28.4H391l-18.8-.1c-1.8 21.2-18.4 36-40.7 36l-39 .2zm80.2-38.8zM309 215.4z\"></path><path d=\"M411.6 114.6h-116a14.2 14.2 0 1 1 0-28.4h116a14.2 14.2 0 1 1 0 28.4z\"></path><path d=\"M159.6 265.9H99.3a14.2 14.2 0 1 1 0-28.4h60.3a14.2 14.2 0 0 1 0 28.4z\"></path></svg>')}:host .process{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M341.6 171v-57h25.8V85.5h-222v28.3H170v57a67.7 67.7 0 0 0 24.3 52l39.5 32.9h-.1l-39.4 33a67.7 67.7 0 0 0-24.3 52v56h-24.6V425h222v-28.3h-25.8V341a67.7 67.7 0 0 0-24.3-52l-39.4-33 39.4-33a67.7 67.7 0 0 0 24.3-52zM299 310.5a39.4 39.4 0 0 1 14.1 30.3v55.8H198.4V341a39.4 39.4 0 0 1 14-30.3l27.8-23.1 15.6-13.1zM313.2 171a39.4 39.4 0 0 1-14.1 30.3l-27.7 23.2-15.6 13-43.3-36.2a39.4 39.4 0 0 1-14.1-30.3v-57h114.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M341.6 171v-57h25.8V85.5h-222v28.3H170v57a67.7 67.7 0 0 0 24.3 52l39.5 32.9h-.1l-39.4 33a67.7 67.7 0 0 0-24.3 52v56h-24.6V425h222v-28.3h-25.8V341a67.7 67.7 0 0 0-24.3-52l-39.4-33 39.4-33a67.7 67.7 0 0 0 24.3-52zM299 310.5a39.4 39.4 0 0 1 14.1 30.3v55.8H198.4V341a39.4 39.4 0 0 1 14-30.3l27.8-23.1 15.6-13.1zM313.2 171a39.4 39.4 0 0 1-14.1 30.3l-27.7 23.2-15.6 13-43.3-36.2a39.4 39.4 0 0 1-14.1-30.3v-57h114.8z\"></path></svg>')}:host .suitcase{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.2 157h-56.3l-10.7-13.8-.3-.5-15.4-18.3a32.8 32.8 0 0 0-25.2-11.8h-72a32.9 32.9 0 0 0-25.2 11.8l-15.2 18.1L164 157h-50.4a28.4 28.4 0 0 0-28.3 28.4v181.4a28.4 28.4 0 0 0 28.3 28.3h283.5a28.4 28.4 0 0 0 28.3-28.3V185.3a28.4 28.4 0 0 0-28.3-28.3zm-183.4-14.4a4.5 4.5 0 0 1 3.5-1.7h72a4.5 4.5 0 0 1 3.6 1.7l12 14.4H201.8zm183.4 224.2H113.7V185.3h283.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M397.2 157h-56.3l-10.7-13.8-.3-.5-15.4-18.3a32.8 32.8 0 0 0-25.2-11.8h-72a32.9 32.9 0 0 0-25.2 11.8l-15.2 18.1L164 157h-50.4a28.4 28.4 0 0 0-28.3 28.4v181.4a28.4 28.4 0 0 0 28.3 28.3h283.5a28.4 28.4 0 0 0 28.3-28.3V185.3a28.4 28.4 0 0 0-28.3-28.3zm-183.4-14.4a4.5 4.5 0 0 1 3.5-1.7h72a4.5 4.5 0 0 1 3.6 1.7l12 14.4H201.8zm183.4 224.2H113.7V185.3h283.5z\"></path></svg>')}:host .capsule{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M298.7 161.5c3.9 0 6.2 3.2 7 7.1l37 162H371l-36.9-162c-3.4-19.8-15.9-35.4-35.4-35.4h-85c-19.5 0-32 15.6-35.4 35.4l-36.9 162h28.3l37-162c.8-3.9 3.1-7 7-7z\"></path><path d=\"M396.8 351.9H113v28.3h283.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M298.7 161.5c3.9 0 6.2 3.2 7 7.1l37 162H371l-36.9-162c-3.4-19.8-15.9-35.4-35.4-35.4h-85c-19.5 0-32 15.6-35.4 35.4l-36.9 162h28.3l37-162c.8-3.9 3.1-7 7-7z\"></path><path d=\"M396.8 351.9H113v28.3h283.8z\"></path></svg>')}:host .tin{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M347.1 174.9l-16.8-34.5v-7.6a14.2 14.2 0 0 0-14.2-14.2h-32.7l9.7-8.8a14.2 14.2 0 1 0-19-21l-33 29.8h-51.4a14.2 14.2 0 0 0-13.9 17l1.3 6.2-16.2 33a14.2 14.2 0 0 0-1.4 6.3v186c0 48.8 29.5 56.1 47 56.1h95c17.6 0 47-7.3 47-56.1V181a14.2 14.2 0 0 0-1.4-6.2zM320.3 367c0 27.9-10.8 27.9-18.7 27.9h-95c-7.8 0-18.7 0-18.7-27.8V184.4l16.9-34.4a14.2 14.2 0 0 0 1-3h96.6a14.5 14.5 0 0 0 1 3l16.9 34.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M347.1 174.9l-16.8-34.5v-7.6a14.2 14.2 0 0 0-14.2-14.2h-32.7l9.7-8.8a14.2 14.2 0 1 0-19-21l-33 29.8h-51.4a14.2 14.2 0 0 0-13.9 17l1.3 6.2-16.2 33a14.2 14.2 0 0 0-1.4 6.3v186c0 48.8 29.5 56.1 47 56.1h95c17.6 0 47-7.3 47-56.1V181a14.2 14.2 0 0 0-1.4-6.2zM320.3 367c0 27.9-10.8 27.9-18.7 27.9h-95c-7.8 0-18.7 0-18.7-27.8V184.4l16.9-34.4a14.2 14.2 0 0 0 1-3h96.6a14.5 14.5 0 0 0 1 3l16.9 34.4z\"></path></svg>')}:host .pet{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M289 424.4h7.2a42.5 42.5 0 0 0 42.3-39.7V189.4a42 42 0 0 0-12.4-30l-.3-.2-51.6-46a14.1 14.1 0 0 1-4.8-10.5v-17h-28.2v17a42.4 42.4 0 0 0 14.1 31.6l51 45.4a14 14 0 0 1 4 9.7v193.5a14.2 14.2 0 0 1-14.2 13.3h-82a14.1 14.1 0 0 1-14.1-13.3V189.3a14 14 0 0 1 3.9-9.8l35.6-31.7-18.6-21.2-36.5 32.5-.3.3a42.1 42.1 0 0 0-12.3 29.9v195.3a42.5 42.5 0 0 0 42.2 39.8h75z\"></path><path d=\"M230.8 227.3c0-2.6-.6-4.3-1.8-5.3-1-.8-3-1.3-5.5-1.3h-2.9v13.4h2.7a15.7 15.7 0 0 0 3.4-.3 5.5 5.5 0 0 0 2.4-1.1 4.4 4.4 0 0 0 1.3-2.1 11.2 11.2 0 0 0 .4-3.3m8-.1q0 7.9-4 10.7-3 2-10.5 2h-3.7v18.2h-8v-43.2h12.9q6.9 0 10 2.6c2.3 1.8 3.4 5 3.4 9.7\"></path><path d=\"M244.5 258.1v-43.2h22.6v5.9h-14.7v11.8H266v5.9h-13.6v13.6h15.2v6h-23.1z\"></path><path d=\"M288.8 220.8v37.3h-8v-37.3h-10v-5.9h28v5.9h-10z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M289 424.4h7.2a42.5 42.5 0 0 0 42.3-39.7V189.4a42 42 0 0 0-12.4-30l-.3-.2-51.6-46a14.1 14.1 0 0 1-4.8-10.5v-17h-28.2v17a42.4 42.4 0 0 0 14.1 31.6l51 45.4a14 14 0 0 1 4 9.7v193.5a14.2 14.2 0 0 1-14.2 13.3h-82a14.1 14.1 0 0 1-14.1-13.3V189.3a14 14 0 0 1 3.9-9.8l35.6-31.7-18.6-21.2-36.5 32.5-.3.3a42.1 42.1 0 0 0-12.3 29.9v195.3a42.5 42.5 0 0 0 42.2 39.8h75z\"></path><path d=\"M230.8 227.3c0-2.6-.6-4.3-1.8-5.3-1-.8-3-1.3-5.5-1.3h-2.9v13.4h2.7a15.7 15.7 0 0 0 3.4-.3 5.5 5.5 0 0 0 2.4-1.1 4.4 4.4 0 0 0 1.3-2.1 11.2 11.2 0 0 0 .4-3.3m8-.1q0 7.9-4 10.7-3 2-10.5 2h-3.7v18.2h-8v-43.2h12.9q6.9 0 10 2.6c2.3 1.8 3.4 5 3.4 9.7\"></path><path d=\"M244.5 258.1v-43.2h22.6v5.9h-14.7v11.8H266v5.9h-13.6v13.6h15.2v6h-23.1z\"></path><path d=\"M288.8 220.8v37.3h-8v-37.3h-10v-5.9h28v5.9h-10z\"></path></svg>')}:host .bottle{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M196 425.7l-.2-200a60 60 0 0 1 59.9-60 60 60 0 0 1 60 59.9v200zM255.6 194a31.6 31.6 0 0 0-31.5 31.5v171.7h63.2l-.1-171.7a31.6 31.6 0 0 0-31.6-31.6z\"></path><path d=\"M242.1 85.7h28.4v61.5h-28.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M196 425.7l-.2-200a60 60 0 0 1 59.9-60 60 60 0 0 1 60 59.9v200zM255.6 194a31.6 31.6 0 0 0-31.5 31.5v171.7h63.2l-.1-171.7a31.6 31.6 0 0 0-31.6-31.6z\"></path><path d=\"M242.1 85.7h28.4v61.5h-28.4z\"></path></svg>')}:host .cake{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M399.2 398.6V294.1c0-17.8-16.8-32.3-37.5-32.3h-20.3V218c0-14-12.4-25.3-27.6-25.3h-44.2l-.2-35.7-28.4.1.2 35.6h-48.4c-15.3 0-27.7 11.4-27.7 25.3v44h-13.4c-20.7 0-37.5 14.4-37.5 32.2v104.4H84.8v28.3h341.6v-28.3zM193.5 221H313v40.7H193.5zm-41.8 69.2h210c6.1 0 9.2 3.2 9.2 4v37l-2.4-1.5a37.5 37.5 0 0 0-31.7-2.5l-28 10.4-28 10.4a9.3 9.3 0 0 1-7.8-.7l-17.7-10v-.2l-18.7-10.6A37.6 37.6 0 0 0 205 324L177 334.4 149 345a9.2 9.2 0 0 1-6.5 0v-50.7c0-.7 3-4 9.2-4zm-9.2 83.3l3.3.2a37.9 37.9 0 0 0 13.1-2.4l28-10.4 28-10.4a9.3 9.3 0 0 1 7.8.6l17.7 10.2 18.6 10.7a37.5 37.5 0 0 0 31.7 2.6l28-10.4 28-10.4a9.3 9.3 0 0 1 7.7.6L371 364v34.7H142.5z\"></path><path d=\"M247.2 134.7a15.8 15.8 0 0 0 15.3 0 16 16 0 0 0 3.5-2.6 15.8 15.8 0 0 0 3-18.2L255 85.2l-14.2 28.7a15.8 15.8 0 0 0 6.5 20.8z\"></path><path d=\"M215.6 232.4a6.5 6.5 0 1 0 6.5 6.5 6.5 6.5 0 0 0-6.5-6.5z\"></path><path d=\"M256 233.5a6.5 6.5 0 1 0 6.6 6.5 6.5 6.5 0 0 0-6.5-6.5z\"></path><path d=\"M296.5 233.5a6.5 6.5 0 1 0 6.6 6.5 6.5 6.5 0 0 0-6.6-6.5z\"></path><circle cx=\"168.2\" cy=\"312.6\" r=\"8.6\"></circle><path d=\"M214.4 368.1a8.6 8.6 0 1 0 8.6 8.6 8.6 8.6 0 0 0-8.6-8.6z\"></path><circle cx=\"283.4\" cy=\"312.6\" r=\"8.6\"></circle><path d=\"M345.8 368.1a8.6 8.6 0 1 0 8.6 8.6 8.6 8.6 0 0 0-8.6-8.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M399.2 398.6V294.1c0-17.8-16.8-32.3-37.5-32.3h-20.3V218c0-14-12.4-25.3-27.6-25.3h-44.2l-.2-35.7-28.4.1.2 35.6h-48.4c-15.3 0-27.7 11.4-27.7 25.3v44h-13.4c-20.7 0-37.5 14.4-37.5 32.2v104.4H84.8v28.3h341.6v-28.3zM193.5 221H313v40.7H193.5zm-41.8 69.2h210c6.1 0 9.2 3.2 9.2 4v37l-2.4-1.5a37.5 37.5 0 0 0-31.7-2.5l-28 10.4-28 10.4a9.3 9.3 0 0 1-7.8-.7l-17.7-10v-.2l-18.7-10.6A37.6 37.6 0 0 0 205 324L177 334.4 149 345a9.2 9.2 0 0 1-6.5 0v-50.7c0-.7 3-4 9.2-4zm-9.2 83.3l3.3.2a37.9 37.9 0 0 0 13.1-2.4l28-10.4 28-10.4a9.3 9.3 0 0 1 7.8.6l17.7 10.2 18.6 10.7a37.5 37.5 0 0 0 31.7 2.6l28-10.4 28-10.4a9.3 9.3 0 0 1 7.7.6L371 364v34.7H142.5z\"></path><path d=\"M247.2 134.7a15.8 15.8 0 0 0 15.3 0 16 16 0 0 0 3.5-2.6 15.8 15.8 0 0 0 3-18.2L255 85.2l-14.2 28.7a15.8 15.8 0 0 0 6.5 20.8z\"></path><path d=\"M215.6 232.4a6.5 6.5 0 1 0 6.5 6.5 6.5 6.5 0 0 0-6.5-6.5z\"></path><path d=\"M256 233.5a6.5 6.5 0 1 0 6.6 6.5 6.5 6.5 0 0 0-6.5-6.5z\"></path><path d=\"M296.5 233.5a6.5 6.5 0 1 0 6.6 6.5 6.5 6.5 0 0 0-6.6-6.5z\"></path><circle cx=\"168.2\" cy=\"312.6\" r=\"8.6\"></circle><path d=\"M214.4 368.1a8.6 8.6 0 1 0 8.6 8.6 8.6 8.6 0 0 0-8.6-8.6z\"></path><circle cx=\"283.4\" cy=\"312.6\" r=\"8.6\"></circle><path d=\"M345.8 368.1a8.6 8.6 0 1 0 8.6 8.6 8.6 8.6 0 0 0-8.6-8.6z\"></path></svg>')}:host .file-text{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 251.6h170.1v7.1H170.1z\"></path><path d=\"M170.1 272.8h170.1v7.1H170.1z\"></path><path d=\"M170.1 294.1h170.1v7.1H170.1z\"></path><path d=\"M170.1 425.2h212.6V207.3L275.7 85H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1c-7.8 0-14.2-6.4-14.2-14.2V127.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 251.6h170.1v7.1H170.1z\"></path><path d=\"M170.1 272.8h170.1v7.1H170.1z\"></path><path d=\"M170.1 294.1h170.1v7.1H170.1z\"></path><path d=\"M170.1 425.2h212.6V207.3L275.7 85H170.1a42.6 42.6 0 0 0-42.5 42.5v255.1c0 23.5 19 42.6 42.5 42.6zm113.4-288.3l53.8 61.5h-53.8v-61.5zm-127.6-9.3c0-7.8 6.4-14.2 14.2-14.2h85v113.4h99.2v170.1H170.1c-7.8 0-14.2-6.4-14.2-14.2V127.6z\"></path></svg>')}:host .flower{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.8 208.8a78.2 78.2 0 0 0-92-52c-3-41.1-33.6-71.4-73.6-71.4a73.3 73.3 0 0 0-54 23.1 79 79 0 0 0-20.9 48.4 78.2 78.2 0 0 0-92 52 80.8 80.8 0 0 0 44 98.1 78.2 78.2 0 0 0 21 103.6 76.1 76.1 0 0 0 44.8 14.9 72 72 0 0 0 11.9-1 75.8 75.8 0 0 0 45.3-26c11.9 14 27.5 23 44.6 26a74.2 74.2 0 0 0 56-14A78.2 78.2 0 0 0 379 307a80.7 80.7 0 0 0 44-98.2zm-165.6-95c26.4 0 45.6 21 45.6 49.8a57.5 57.5 0 0 1-.6 7.8l-23.5 35.3A55.4 55.4 0 0 0 237 205l-.6-.8-25.3-31.6a58.7 58.7 0 0 1-.7-9c0-28.4 20-49.8 46.8-49.8zm-.3 170.5a27.1 27.1 0 0 1-2.2-54.2h1a27.1 27.1 0 0 1 1.2 54.2zm-139.5-66.7a49.8 49.8 0 0 1 62.6-32 61.6 61.6 0 0 1 10.9 4.8 15.8 15.8 0 0 0 1.4.7l22.8 28.5a55.2 55.2 0 0 0-13.5 49.6l-41.8 15.5a61.3 61.3 0 0 1-10.5-2.3 51.8 51.8 0 0 1-32-64.8zm90 179a47 47 0 0 1-35.5-9 49.8 49.8 0 0 1-11-69.4 56.5 56.5 0 0 1 4.4-5.3l49.5-18.4a55.5 55.5 0 0 0 27.6 16.5v59.2a59 59 0 0 1-4 6.5 48.6 48.6 0 0 1-31 19.9zm153.8-41.4a49.5 49.5 0 0 1-19.9 32.5c-10.8 7.8-22.8 10.9-34.7 8.9s-22.7-9-30.6-20a59.9 59.9 0 0 1-5.2-8.8v-57.2a55.1 55.1 0 0 0 25.7-15.9l2.4-2.7a14 14 0 0 0 3.4 1.8l42.1 15.6a61 61 0 0 1 7.9 8.8 49.4 49.4 0 0 1 8.9 37zm2.7-72.8a58 58 0 0 1-6.3 1.6l-45.5-16.8a14 14 0 0 0-1.7-.5 55.8 55.8 0 0 0 .8-11.8 55.1 55.1 0 0 0-10.5-30.2l23.5-35.3a60 60 0 0 1 9-3.8 49.8 49.8 0 0 1 62.7 32c8.6 26.7-6 56.4-32 64.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.8 208.8a78.2 78.2 0 0 0-92-52c-3-41.1-33.6-71.4-73.6-71.4a73.3 73.3 0 0 0-54 23.1 79 79 0 0 0-20.9 48.4 78.2 78.2 0 0 0-92 52 80.8 80.8 0 0 0 44 98.1 78.2 78.2 0 0 0 21 103.6 76.1 76.1 0 0 0 44.8 14.9 72 72 0 0 0 11.9-1 75.8 75.8 0 0 0 45.3-26c11.9 14 27.5 23 44.6 26a74.2 74.2 0 0 0 56-14A78.2 78.2 0 0 0 379 307a80.7 80.7 0 0 0 44-98.2zm-165.6-95c26.4 0 45.6 21 45.6 49.8a57.5 57.5 0 0 1-.6 7.8l-23.5 35.3A55.4 55.4 0 0 0 237 205l-.6-.8-25.3-31.6a58.7 58.7 0 0 1-.7-9c0-28.4 20-49.8 46.8-49.8zm-.3 170.5a27.1 27.1 0 0 1-2.2-54.2h1a27.1 27.1 0 0 1 1.2 54.2zm-139.5-66.7a49.8 49.8 0 0 1 62.6-32 61.6 61.6 0 0 1 10.9 4.8 15.8 15.8 0 0 0 1.4.7l22.8 28.5a55.2 55.2 0 0 0-13.5 49.6l-41.8 15.5a61.3 61.3 0 0 1-10.5-2.3 51.8 51.8 0 0 1-32-64.8zm90 179a47 47 0 0 1-35.5-9 49.8 49.8 0 0 1-11-69.4 56.5 56.5 0 0 1 4.4-5.3l49.5-18.4a55.5 55.5 0 0 0 27.6 16.5v59.2a59 59 0 0 1-4 6.5 48.6 48.6 0 0 1-31 19.9zm153.8-41.4a49.5 49.5 0 0 1-19.9 32.5c-10.8 7.8-22.8 10.9-34.7 8.9s-22.7-9-30.6-20a59.9 59.9 0 0 1-5.2-8.8v-57.2a55.1 55.1 0 0 0 25.7-15.9l2.4-2.7a14 14 0 0 0 3.4 1.8l42.1 15.6a61 61 0 0 1 7.9 8.8 49.4 49.4 0 0 1 8.9 37zm2.7-72.8a58 58 0 0 1-6.3 1.6l-45.5-16.8a14 14 0 0 0-1.7-.5 55.8 55.8 0 0 0 .8-11.8 55.1 55.1 0 0 0-10.5-30.2l23.5-35.3a60 60 0 0 1 9-3.8 49.8 49.8 0 0 1 62.7 32c8.6 26.7-6 56.4-32 64.8z\"></path></svg>')}:host .fingerprint{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351.3 176.1a14.2 14.2 0 0 1-12.9-8.1c-15.4-32.7-44.3-70.4-94.6-64.4-22 2.6-49 20.4-72 47.5a14.2 14.2 0 0 1-21.6-18.4C190 86 226.6 77.1 240.4 75.4c30.3-3.6 86.7 2 123.7 80.5a14.2 14.2 0 0 1-12.8 20.2z\"></path><path d=\"M262 424.5c-27 0-52.6-8-74-23.7a151.4 151.4 0 0 1-55.4-91.2 14.2 14.2 0 0 1 28.2-2.8c.8 7 11.8 47.5 44 71.1 28 20.6 64.3 24 102.3 9.5a14.2 14.2 0 1 1 10.1 26.5 155.3 155.3 0 0 1-55.1 10.6z\"></path><path d=\"M193.2 319.8A14.2 14.2 0 0 1 185 294c24-16.7 38.7-31.3 50.6-43 13.6-13.5 35.3-46.5 39.6-69.6 1.3-7.6.5-14.8-2.4-19.2a19.5 19.5 0 0 0-11.4-8c-8.2-1.2-24-1-38 14.9a620.4 620.4 0 0 1-66.4 64.4 14.2 14.2 0 1 1-17.9-22c.3-.3 33.3-27.3 63-61.1a69.2 69.2 0 0 1 63.7-24.2c11.8 1.9 23.8 10 30.7 20.6s9.2 25 6.5 39.7c-5.6 30-31.2 68.5-47.5 84.7a378 378 0 0 1-54.4 46.1 14 14 0 0 1-8 2.5z\"></path><path d=\"M171.8 276.1a14.2 14.2 0 0 1-6.6-26.7 192 192 0 0 0 67.6-69.4 14.2 14.2 0 1 1 24.6 14 215.2 215.2 0 0 1-79.1 80.6 14.2 14.2 0 0 1-6.5 1.5z\"></path><path d=\"M216.7 358.3a14.2 14.2 0 0 1-8-26c8.9-6 16-11 21.7-15 20.1-14.3 29-21.5 49.2-22 23.6-.4 44.4 7 79.8 32.4a14.2 14.2 0 0 1-16.6 23c-20.3-14.6-39.4-27.3-61.1-26.7l-2 .2c-12.7 1-14.3 3-33 16.2l-22 15.4a14 14 0 0 1-8 2.5z\"></path><path d=\"M340.5 234.4l-2.5-.1c-10.2-.6-19.7-5-27.6-12.7a14.2 14.2 0 0 1 19.6-20.4c3 3 6.3 4.6 9.6 4.8 4 .2 8.6-1.2 14-3a14.2 14.2 0 0 1 9 26.9 68 68 0 0 1-22.1 4.5z\"></path><path d=\"M262.4 378.2a14.2 14.2 0 0 1-6.2-26.9c9.5-4.6 18.9-9.4 30-9.6 12.4 0 24.3 3 35 11a14.2 14.2 0 0 1 2.8 19.9c-4.7 6.3-12.1 6.7-19.9 2.8a36 36 0 0 0-17.3-5.2c-6 .4-11 3.2-18.2 6.6a14 14 0 0 1-6.2 1.4z\"></path><path d=\"M344.7 286.3l-4.4-.1a81.5 81.5 0 0 1-51.8-17.6 14.2 14.2 0 0 1 18.3-21.6 56.5 56.5 0 0 0 34.3 10.9 90.4 90.4 0 0 0 22-1.8 14.2 14.2 0 1 1 6 27.7 114.8 114.8 0 0 1-24.4 2.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M351.3 176.1a14.2 14.2 0 0 1-12.9-8.1c-15.4-32.7-44.3-70.4-94.6-64.4-22 2.6-49 20.4-72 47.5a14.2 14.2 0 0 1-21.6-18.4C190 86 226.6 77.1 240.4 75.4c30.3-3.6 86.7 2 123.7 80.5a14.2 14.2 0 0 1-12.8 20.2z\"></path><path d=\"M262 424.5c-27 0-52.6-8-74-23.7a151.4 151.4 0 0 1-55.4-91.2 14.2 14.2 0 0 1 28.2-2.8c.8 7 11.8 47.5 44 71.1 28 20.6 64.3 24 102.3 9.5a14.2 14.2 0 1 1 10.1 26.5 155.3 155.3 0 0 1-55.1 10.6z\"></path><path d=\"M193.2 319.8A14.2 14.2 0 0 1 185 294c24-16.7 38.7-31.3 50.6-43 13.6-13.5 35.3-46.5 39.6-69.6 1.3-7.6.5-14.8-2.4-19.2a19.5 19.5 0 0 0-11.4-8c-8.2-1.2-24-1-38 14.9a620.4 620.4 0 0 1-66.4 64.4 14.2 14.2 0 1 1-17.9-22c.3-.3 33.3-27.3 63-61.1a69.2 69.2 0 0 1 63.7-24.2c11.8 1.9 23.8 10 30.7 20.6s9.2 25 6.5 39.7c-5.6 30-31.2 68.5-47.5 84.7a378 378 0 0 1-54.4 46.1 14 14 0 0 1-8 2.5z\"></path><path d=\"M171.8 276.1a14.2 14.2 0 0 1-6.6-26.7 192 192 0 0 0 67.6-69.4 14.2 14.2 0 1 1 24.6 14 215.2 215.2 0 0 1-79.1 80.6 14.2 14.2 0 0 1-6.5 1.5z\"></path><path d=\"M216.7 358.3a14.2 14.2 0 0 1-8-26c8.9-6 16-11 21.7-15 20.1-14.3 29-21.5 49.2-22 23.6-.4 44.4 7 79.8 32.4a14.2 14.2 0 0 1-16.6 23c-20.3-14.6-39.4-27.3-61.1-26.7l-2 .2c-12.7 1-14.3 3-33 16.2l-22 15.4a14 14 0 0 1-8 2.5z\"></path><path d=\"M340.5 234.4l-2.5-.1c-10.2-.6-19.7-5-27.6-12.7a14.2 14.2 0 0 1 19.6-20.4c3 3 6.3 4.6 9.6 4.8 4 .2 8.6-1.2 14-3a14.2 14.2 0 0 1 9 26.9 68 68 0 0 1-22.1 4.5z\"></path><path d=\"M262.4 378.2a14.2 14.2 0 0 1-6.2-26.9c9.5-4.6 18.9-9.4 30-9.6 12.4 0 24.3 3 35 11a14.2 14.2 0 0 1 2.8 19.9c-4.7 6.3-12.1 6.7-19.9 2.8a36 36 0 0 0-17.3-5.2c-6 .4-11 3.2-18.2 6.6a14 14 0 0 1-6.2 1.4z\"></path><path d=\"M344.7 286.3l-4.4-.1a81.5 81.5 0 0 1-51.8-17.6 14.2 14.2 0 0 1 18.3-21.6 56.5 56.5 0 0 0 34.3 10.9 90.4 90.4 0 0 0 22-1.8 14.2 14.2 0 1 1 6 27.7 114.8 114.8 0 0 1-24.4 2.5z\"></path></svg>')}:host .pig{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"200.7\" cy=\"242.2\" r=\"15.4\"></circle><path d=\"M409.5 221.9l11-18.7a56.5 56.5 0 0 0 4.9-47.6l-26.8 9.3a28.3 28.3 0 0 1-2.4 23.8l-5 8.5a132.6 132.6 0 0 0-16.5-14.4A177.2 177.2 0 0 0 270 150.4c-14.2 0-25 4.6-34.6 8.6-3 1.2-5.8 2.4-8.7 3.4l-48.4-8.8-14.7-2.6a21.3 21.3 0 0 0-24.2 26.7l9 31.7-15.5 24.3h-18.5A28.4 28.4 0 0 0 86 262.2v42.5a28.4 28.4 0 0 0 28.3 28.3h27.1l19.6 18.2-7 19.7a28.4 28.4 0 0 0 25.8 40.1h40.3a28.3 28.3 0 0 0 23.6-12.6l.8-1.2 5.6-13.7 68.5-5.7 6.1 17 .5 1a28.2 28.2 0 0 0 25.1 15.2h34.2a28.4 28.4 0 0 0 26.7-37.9L399.7 336a100 100 0 0 0 22.7-63.2 105.4 105.4 0 0 0-13-51zm-37.8 119.5l12.5 40.5.3.8h-34l-7.7-21.5-.4-1a21.2 21.2 0 0 0-18.8-11.4 21.4 21.4 0 0 0-4.7.5l-72 6a21.2 21.2 0 0 0-19.5 9.4l-.8 1.2-6.7 16.8h-40l.4-.8 8.5-24.2A21.4 21.4 0 0 0 183 333l-23.2-21.5a21.3 21.3 0 0 0-15.5-6.7h-30v-42.6H137a21.3 21.3 0 0 0 19.3-12.5l16.6-25.9a21.2 21.2 0 0 0 3.6-18.9l-6.8-23.9 50.6 9.2c6.6 1.2 9 1.6 12.6.2 4.9-1.6 9.2-3.4 13.4-5.2 8.5-3.5 15.2-6.3 23.7-6.3 32.8 0 64.9 9.7 87.9 26.7 16.5 12.2 36.2 33.7 36.2 67.1a73 73 0 0 1-18.7 48.3 21.3 21.3 0 0 0-3.7 20.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"200.7\" cy=\"242.2\" r=\"15.4\"></circle><path d=\"M409.5 221.9l11-18.7a56.5 56.5 0 0 0 4.9-47.6l-26.8 9.3a28.3 28.3 0 0 1-2.4 23.8l-5 8.5a132.6 132.6 0 0 0-16.5-14.4A177.2 177.2 0 0 0 270 150.4c-14.2 0-25 4.6-34.6 8.6-3 1.2-5.8 2.4-8.7 3.4l-48.4-8.8-14.7-2.6a21.3 21.3 0 0 0-24.2 26.7l9 31.7-15.5 24.3h-18.5A28.4 28.4 0 0 0 86 262.2v42.5a28.4 28.4 0 0 0 28.3 28.3h27.1l19.6 18.2-7 19.7a28.4 28.4 0 0 0 25.8 40.1h40.3a28.3 28.3 0 0 0 23.6-12.6l.8-1.2 5.6-13.7 68.5-5.7 6.1 17 .5 1a28.2 28.2 0 0 0 25.1 15.2h34.2a28.4 28.4 0 0 0 26.7-37.9L399.7 336a100 100 0 0 0 22.7-63.2 105.4 105.4 0 0 0-13-51zm-37.8 119.5l12.5 40.5.3.8h-34l-7.7-21.5-.4-1a21.2 21.2 0 0 0-18.8-11.4 21.4 21.4 0 0 0-4.7.5l-72 6a21.2 21.2 0 0 0-19.5 9.4l-.8 1.2-6.7 16.8h-40l.4-.8 8.5-24.2A21.4 21.4 0 0 0 183 333l-23.2-21.5a21.3 21.3 0 0 0-15.5-6.7h-30v-42.6H137a21.3 21.3 0 0 0 19.3-12.5l16.6-25.9a21.2 21.2 0 0 0 3.6-18.9l-6.8-23.9 50.6 9.2c6.6 1.2 9 1.6 12.6.2 4.9-1.6 9.2-3.4 13.4-5.2 8.5-3.5 15.2-6.3 23.7-6.3 32.8 0 64.9 9.7 87.9 26.7 16.5 12.2 36.2 33.7 36.2 67.1a73 73 0 0 1-18.7 48.3 21.3 21.3 0 0 0-3.7 20.4z\"></path></svg>')}:host .paddle{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M415 319l-37.8-37.3-.8-.7a156.7 156.7 0 0 0-46.6-30 51 51 0 0 0-41.4 2l-12.2-12 96-92.8a15 15 0 0 0 2-2.3l4.8 4.5a14.2 14.2 0 1 0 19.6-20.5L369.3 102a14.2 14.2 0 1 0-19.6 20.5l4.3 4.1a13 13 0 0 0-1.5 1.2L256.1 221l-94.6-94a13.8 13.8 0 0 0-1.7-1.3l3-3a14.2 14.2 0 1 0-20-20.1L114.2 131a14.2 14.2 0 0 0 19.9 20.1l5.9-5.8a15.3 15.3 0 0 0 1.5 1.9l94.3 93.5-13.5 13a51.3 51.3 0 0 0-43-2.4l-.7.2-.6.4a196.3 196.3 0 0 0-45 29.8l-.4.3-37.7 38.2a31.8 31.8 0 0 0 .3 44.9l38 37.6a31.6 31.6 0 0 0 22.3 9.2h.2a31.6 31.6 0 0 0 22.4-9.4l37.4-37.8.7-.8a156.5 156.5 0 0 0 29.9-46.7 50.9 50.9 0 0 0-3.4-43.8l13.2-12.7 11.8 11.6a51.3 51.3 0 0 0-3.8 45.4l.3.8.3.6a195.6 195.6 0 0 0 29.8 45l.4.4 38.1 37.8a31.8 31.8 0 0 0 45-.3l37.6-38a31.8 31.8 0 0 0-.3-44.9zm-195.5-12a129 129 0 0 1-24.7 38.1l-37 37.4a3.3 3.3 0 0 1-2.4 1 3.4 3.4 0 0 1-2.4-1L115 345a3.4 3.4 0 0 1 0-4.8l37-37.4c13-11.4 20.1-15.8 38.4-25.4a23 23 0 0 1 7.7-1.4h1l-40.3 39a14.2 14.2 0 0 0 19.7 20.4l42.2-40.8a22.9 22.9 0 0 1-1.1 12.5zm175.6 37l-37.6 38a3.4 3.4 0 0 1-4.8 0l-37.4-37a166.5 166.5 0 0 1-25.4-38.3 22.8 22.8 0 0 1-1.3-7.7 23.2 23.2 0 0 1 .5-5.3l41.3 41a14.2 14.2 0 0 0 20-20.1L311.5 276a23 23 0 0 1 8.1 1.5 129 129 0 0 1 38.1 24.7l37.4 37a3.4 3.4 0 0 1 0 4.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M415 319l-37.8-37.3-.8-.7a156.7 156.7 0 0 0-46.6-30 51 51 0 0 0-41.4 2l-12.2-12 96-92.8a15 15 0 0 0 2-2.3l4.8 4.5a14.2 14.2 0 1 0 19.6-20.5L369.3 102a14.2 14.2 0 1 0-19.6 20.5l4.3 4.1a13 13 0 0 0-1.5 1.2L256.1 221l-94.6-94a13.8 13.8 0 0 0-1.7-1.3l3-3a14.2 14.2 0 1 0-20-20.1L114.2 131a14.2 14.2 0 0 0 19.9 20.1l5.9-5.8a15.3 15.3 0 0 0 1.5 1.9l94.3 93.5-13.5 13a51.3 51.3 0 0 0-43-2.4l-.7.2-.6.4a196.3 196.3 0 0 0-45 29.8l-.4.3-37.7 38.2a31.8 31.8 0 0 0 .3 44.9l38 37.6a31.6 31.6 0 0 0 22.3 9.2h.2a31.6 31.6 0 0 0 22.4-9.4l37.4-37.8.7-.8a156.5 156.5 0 0 0 29.9-46.7 50.9 50.9 0 0 0-3.4-43.8l13.2-12.7 11.8 11.6a51.3 51.3 0 0 0-3.8 45.4l.3.8.3.6a195.6 195.6 0 0 0 29.8 45l.4.4 38.1 37.8a31.8 31.8 0 0 0 45-.3l37.6-38a31.8 31.8 0 0 0-.3-44.9zm-195.5-12a129 129 0 0 1-24.7 38.1l-37 37.4a3.3 3.3 0 0 1-2.4 1 3.4 3.4 0 0 1-2.4-1L115 345a3.4 3.4 0 0 1 0-4.8l37-37.4c13-11.4 20.1-15.8 38.4-25.4a23 23 0 0 1 7.7-1.4h1l-40.3 39a14.2 14.2 0 0 0 19.7 20.4l42.2-40.8a22.9 22.9 0 0 1-1.1 12.5zm175.6 37l-37.6 38a3.4 3.4 0 0 1-4.8 0l-37.4-37a166.5 166.5 0 0 1-25.4-38.3 22.8 22.8 0 0 1-1.3-7.7 23.2 23.2 0 0 1 .5-5.3l41.3 41a14.2 14.2 0 0 0 20-20.1L311.5 276a23 23 0 0 1 8.1 1.5 129 129 0 0 1 38.1 24.7l37.4 37a3.4 3.4 0 0 1 0 4.9z\"></path></svg>')}:host .package{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M253.2 256.6a14.2 14.2 0 0 1-5.2-1l-125.9-49.2a14.2 14.2 0 0 1-.4-26.2l126-55a14.2 14.2 0 0 1 10.8-.1l130 51.3a14.2 14.2 0 0 1 .1 26.3l-130 53a14.2 14.2 0 0 1-5.4 1zm-88.8-64.1l88.7 34.7 92.1-37.4-91.6-36.2z\"></path><path d=\"M253.4 384.7a14 14 0 0 1-5.2-1L117 332.3l10.3-26.4 126 49.4 130.5-53 10.7 26.2-135.8 55.1a14.3 14.3 0 0 1-5.3 1z\"></path><path d=\"M253.9 320.5a14.2 14.2 0 0 1-5.2-1l-131.3-51.4 10.4-26.4 126 49.4 130.5-53 10.6 26.2-135.7 55.2a14.3 14.3 0 0 1-5.3 1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M253.2 256.6a14.2 14.2 0 0 1-5.2-1l-125.9-49.2a14.2 14.2 0 0 1-.4-26.2l126-55a14.2 14.2 0 0 1 10.8-.1l130 51.3a14.2 14.2 0 0 1 .1 26.3l-130 53a14.2 14.2 0 0 1-5.4 1zm-88.8-64.1l88.7 34.7 92.1-37.4-91.6-36.2z\"></path><path d=\"M253.4 384.7a14 14 0 0 1-5.2-1L117 332.3l10.3-26.4 126 49.4 130.5-53 10.7 26.2-135.8 55.1a14.3 14.3 0 0 1-5.3 1z\"></path><path d=\"M253.9 320.5a14.2 14.2 0 0 1-5.2-1l-131.3-51.4 10.4-26.4 126 49.4 130.5-53 10.6 26.2-135.7 55.2a14.3 14.3 0 0 1-5.3 1z\"></path></svg>')}:host .connectivity{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M304.4 260.5H326a48.7 48.7 0 1 0 0-10h-21.7V140.3H326a48.7 48.7 0 1 0 0-10h-21.7V105a18 18 0 0 0-17.6-18.4h-63.2A18 18 0 0 0 206 105v23.7h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3c-9.6 0-17.4 8.1-17.4 18.1v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8 17.4-18v-27H206V249h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3C94.9 206.9 87 215 87 225v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8.1 17.4-18.1v-27H206v109.4h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3c-9.6 0-17.4 8.1-17.4 18.1v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8.1 17.4-18.1v-27H206v26.8a18 18 0 0 0 17.5 18.4h63.2a18 18 0 0 0 17.6-18.4v-25.3H326a48.7 48.7 0 1 0 0-10h-21.7zm70.1-32.6a27.7 27.7 0 1 1-27.6 27.6 27.7 27.7 0 0 1 27.6-27.6zm0-120.3a27.7 27.7 0 1 1-27.6 27.7 27.7 27.7 0 0 1 27.6-27.7zM163.3 163H108v-55.3h55.3zm0 120.2H108v-55.2h55.3zm0 119.4H108v-55.2h55.3zm120 .1h-56.2v-295h56.3zm91.2-55.3a27.7 27.7 0 1 1-27.6 27.6 27.7 27.7 0 0 1 27.6-27.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M304.4 260.5H326a48.7 48.7 0 1 0 0-10h-21.7V140.3H326a48.7 48.7 0 1 0 0-10h-21.7V105a18 18 0 0 0-17.6-18.4h-63.2A18 18 0 0 0 206 105v23.7h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3c-9.6 0-17.4 8.1-17.4 18.1v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8 17.4-18v-27H206V249h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3C94.9 206.9 87 215 87 225v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8.1 17.4-18.1v-27H206v109.4h-21.8v-24c0-10-7.8-18.1-17.5-18.1h-62.3c-9.6 0-17.4 8.1-17.4 18.1v61c0 10 7.8 18.1 17.4 18.1h62.4c9.6 0 17.4-8.1 17.4-18.1v-27H206v26.8a18 18 0 0 0 17.5 18.4h63.2a18 18 0 0 0 17.6-18.4v-25.3H326a48.7 48.7 0 1 0 0-10h-21.7zm70.1-32.6a27.7 27.7 0 1 1-27.6 27.6 27.7 27.7 0 0 1 27.6-27.6zm0-120.3a27.7 27.7 0 1 1-27.6 27.7 27.7 27.7 0 0 1 27.6-27.7zM163.3 163H108v-55.3h55.3zm0 120.2H108v-55.2h55.3zm0 119.4H108v-55.2h55.3zm120 .1h-56.2v-295h56.3zm91.2-55.3a27.7 27.7 0 1 1-27.6 27.6 27.7 27.7 0 0 1 27.6-27.6z\"></path></svg>')}:host .crystal-ball{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M307.8 344.6H200.4a73.2 73.2 0 0 0-43.6 14.6l-43 32.2 17 22.7 43-32.2a44.6 44.6 0 0 1 26.6-8.9h107.4a44.7 44.7 0 0 1 26.6 8.9l43 32.2 17-22.7-43-32.2a73.2 73.2 0 0 0-43.6-14.6z\"></path><path d=\"M160.3 329a120.6 120.6 0 0 1-26.9-76.4 122 122 0 1 1 244 0c0 42.5-24 73-28.8 78.7l21.7 18.2c8.3-9.8 35.4-45.9 35.4-96.9 0-82.8-67.4-150.3-150.3-150.3S105 169.8 105 252.6a150.7 150.7 0 0 0 33.1 94.2z\"></path><path d=\"M242.2 186.2a2.9 2.9 0 0 0-2.7-2h-18.9l-5.8-18a2.9 2.9 0 0 0-5.5 0l-5.8 18h-18.9a2.9 2.9 0 0 0-1.7 5.2l15.3 11-5.9 18a2.9 2.9 0 0 0 4.5 3.2l15.2-11 15.3 11a2.9 2.9 0 0 0 4.4-3.2l-5.8-18 15.2-11a2.9 2.9 0 0 0 1.1-3.2z\"></path><path d=\"M275.7 204.9a1.4 1.4 0 0 0-1.4-1h-9.5l-3-9a1.5 1.5 0 0 0-1.3-1 1.4 1.4 0 0 0-1.4 1l-3 9h-9.5a1.5 1.5 0 0 0-.9 2.6l7.7 5.6-2.9 9a1.5 1.5 0 0 0 2.2 1.7l7.8-5.6 7.7 5.6a1.4 1.4 0 0 0 .8.3 1.4 1.4 0 0 0 .9-.3 1.4 1.4 0 0 0 .5-1.6l-3-9 7.8-5.7a1.4 1.4 0 0 0 .5-1.6z\"></path><path d=\"M227.8 242.5a1.5 1.5 0 0 0-1.4-1H217l-3-9a1.5 1.5 0 0 0-2.7 0l-3 9h-9.5a1.5 1.5 0 0 0-.9 2.7l7.7 5.6-3 9a1.5 1.5 0 0 0 2.3 1.7l7.7-5.6 7.7 5.6a1.4 1.4 0 0 0 .9.2 1.4 1.4 0 0 0 .8-.2 1.4 1.4 0 0 0 .5-1.7l-3-9 7.8-5.6a1.5 1.5 0 0 0 .6-1.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M307.8 344.6H200.4a73.2 73.2 0 0 0-43.6 14.6l-43 32.2 17 22.7 43-32.2a44.6 44.6 0 0 1 26.6-8.9h107.4a44.7 44.7 0 0 1 26.6 8.9l43 32.2 17-22.7-43-32.2a73.2 73.2 0 0 0-43.6-14.6z\"></path><path d=\"M160.3 329a120.6 120.6 0 0 1-26.9-76.4 122 122 0 1 1 244 0c0 42.5-24 73-28.8 78.7l21.7 18.2c8.3-9.8 35.4-45.9 35.4-96.9 0-82.8-67.4-150.3-150.3-150.3S105 169.8 105 252.6a150.7 150.7 0 0 0 33.1 94.2z\"></path><path d=\"M242.2 186.2a2.9 2.9 0 0 0-2.7-2h-18.9l-5.8-18a2.9 2.9 0 0 0-5.5 0l-5.8 18h-18.9a2.9 2.9 0 0 0-1.7 5.2l15.3 11-5.9 18a2.9 2.9 0 0 0 4.5 3.2l15.2-11 15.3 11a2.9 2.9 0 0 0 4.4-3.2l-5.8-18 15.2-11a2.9 2.9 0 0 0 1.1-3.2z\"></path><path d=\"M275.7 204.9a1.4 1.4 0 0 0-1.4-1h-9.5l-3-9a1.5 1.5 0 0 0-1.3-1 1.4 1.4 0 0 0-1.4 1l-3 9h-9.5a1.5 1.5 0 0 0-.9 2.6l7.7 5.6-2.9 9a1.5 1.5 0 0 0 2.2 1.7l7.8-5.6 7.7 5.6a1.4 1.4 0 0 0 .8.3 1.4 1.4 0 0 0 .9-.3 1.4 1.4 0 0 0 .5-1.6l-3-9 7.8-5.7a1.4 1.4 0 0 0 .5-1.6z\"></path><path d=\"M227.8 242.5a1.5 1.5 0 0 0-1.4-1H217l-3-9a1.5 1.5 0 0 0-2.7 0l-3 9h-9.5a1.5 1.5 0 0 0-.9 2.7l7.7 5.6-3 9a1.5 1.5 0 0 0 2.3 1.7l7.7-5.6 7.7 5.6a1.4 1.4 0 0 0 .9.2 1.4 1.4 0 0 0 .8-.2 1.4 1.4 0 0 0 .5-1.7l-3-9 7.8-5.6a1.5 1.5 0 0 0 .6-1.7z\"></path></svg>')}:host .TPP{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385.8 170h-49.6v-56.7A28.4 28.4 0 0 0 307.8 85H180.3a28.4 28.4 0 0 0-28.4 28.4v40.2h28.4v-40.3h127.5v283.5H237V333h-28.4v63.8h-28.3V333h-28.4v92.1h262.2V198.4a28.4 28.4 0 0 0-28.3-28.4zm0 226.8h-49.6V198.4h49.6z\"></path><path d=\"M125.5 285.4h-16v-67.1h-17v-13.8h50v13.8h-17z\"></path><path d=\"M174.6 204.6q13.4 0 19.7 6.5t6.4 18.6a33.3 33.3 0 0 1-2.8 14 21 21 0 0 1-8.8 9.6q-6 3.5-15.4 3.5h-5.2v28.6h-16v-80.8zm-1 13.4h-5v25.3h3.5q6 0 9.3-3.1t3.3-10.3q0-11.9-11.1-11.9z\"></path><path d=\"M234.8 204.6q13.3 0 19.7 6.5t6.3 18.6a33.3 33.3 0 0 1-2.8 14 21 21 0 0 1-8.8 9.6q-6 3.5-15.4 3.5h-5.2v28.6h-16v-80.8zm-1 13.4h-5.1v25.3h3.6q6 0 9.3-3.1t3.2-10.3q0-11.9-11-11.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385.8 170h-49.6v-56.7A28.4 28.4 0 0 0 307.8 85H180.3a28.4 28.4 0 0 0-28.4 28.4v40.2h28.4v-40.3h127.5v283.5H237V333h-28.4v63.8h-28.3V333h-28.4v92.1h262.2V198.4a28.4 28.4 0 0 0-28.3-28.4zm0 226.8h-49.6V198.4h49.6z\"></path><path d=\"M125.5 285.4h-16v-67.1h-17v-13.8h50v13.8h-17z\"></path><path d=\"M174.6 204.6q13.4 0 19.7 6.5t6.4 18.6a33.3 33.3 0 0 1-2.8 14 21 21 0 0 1-8.8 9.6q-6 3.5-15.4 3.5h-5.2v28.6h-16v-80.8zm-1 13.4h-5v25.3h3.5q6 0 9.3-3.1t3.3-10.3q0-11.9-11.1-11.9z\"></path><path d=\"M234.8 204.6q13.3 0 19.7 6.5t6.3 18.6a33.3 33.3 0 0 1-2.8 14 21 21 0 0 1-8.8 9.6q-6 3.5-15.4 3.5h-5.2v28.6h-16v-80.8zm-1 13.4h-5.1v25.3h3.6q6 0 9.3-3.1t3.2-10.3q0-11.9-11-11.9z\"></path></svg>')}:host .paragraph{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M189 171.7l1.1 3.2v.1a66.1 66.1 0 0 0 15.4 23.6 75.5 75.5 0 0 0 24.7 16.1 7023 7023 0 0 0 37.2 15.1l24.9 10.1 15.3 6.2a39.6 39.6 0 0 1 25.7 32.2c.8 9.3-2.2 18.3-8.7 26.3h32.7a62.6 62.6 0 0 0 .2-46.5l-1.8-4.2-1-2a71 71 0 0 0-36.1-32.1l-40.3-16.4-37.1-15a41.6 41.6 0 0 1-24.3-23.6 41.9 41.9 0 0 1 2-33 45.3 45.3 0 0 1 37.8-25.8c18.9-2.3 39.5 2.7 54.3 7.8l2.9 1 9.6-26.7C305.4 81.9 278.8 74.9 253 78a73.6 73.6 0 0 0-59.8 41.4 71 71 0 0 0-6 45.8l1.8 6.5z\"></path><path d=\"M199.7 292.9l40.9 16.1 37.1 14.7a41.2 41.2 0 0 1 24.7 23.4 39 39 0 0 1-2.2 31.6c-7.7 15.2-21.1 23.6-40.9 25.8-18.8 2.1-43.1-1.6-70.5-10.8l-9 26.9a220.1 220.1 0 0 0 68.5 12.7c36.6 0 63.2-14.1 77.2-41.9 8.5-16.8 9.9-36 3.9-53l-.5-1.4a64.7 64.7 0 0 0-14.6-22.6 76.4 76.4 0 0 0-26.1-17.1L251 282.6l-40.8-16.1c-14.8-5.9-24.7-18-25.8-31.5-.8-9.7 2.8-19 10.4-27.3a79 79 0 0 1-16.2-23.8 65.1 65.1 0 0 0-22.5 53.5 66.6 66.6 0 0 0 43.6 55.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M189 171.7l1.1 3.2v.1a66.1 66.1 0 0 0 15.4 23.6 75.5 75.5 0 0 0 24.7 16.1 7023 7023 0 0 0 37.2 15.1l24.9 10.1 15.3 6.2a39.6 39.6 0 0 1 25.7 32.2c.8 9.3-2.2 18.3-8.7 26.3h32.7a62.6 62.6 0 0 0 .2-46.5l-1.8-4.2-1-2a71 71 0 0 0-36.1-32.1l-40.3-16.4-37.1-15a41.6 41.6 0 0 1-24.3-23.6 41.9 41.9 0 0 1 2-33 45.3 45.3 0 0 1 37.8-25.8c18.9-2.3 39.5 2.7 54.3 7.8l2.9 1 9.6-26.7C305.4 81.9 278.8 74.9 253 78a73.6 73.6 0 0 0-59.8 41.4 71 71 0 0 0-6 45.8l1.8 6.5z\"></path><path d=\"M199.7 292.9l40.9 16.1 37.1 14.7a41.2 41.2 0 0 1 24.7 23.4 39 39 0 0 1-2.2 31.6c-7.7 15.2-21.1 23.6-40.9 25.8-18.8 2.1-43.1-1.6-70.5-10.8l-9 26.9a220.1 220.1 0 0 0 68.5 12.7c36.6 0 63.2-14.1 77.2-41.9 8.5-16.8 9.9-36 3.9-53l-.5-1.4a64.7 64.7 0 0 0-14.6-22.6 76.4 76.4 0 0 0-26.1-17.1L251 282.6l-40.8-16.1c-14.8-5.9-24.7-18-25.8-31.5-.8-9.7 2.8-19 10.4-27.3a79 79 0 0 1-16.2-23.8 65.1 65.1 0 0 0-22.5 53.5 66.6 66.6 0 0 0 43.6 55.5z\"></path></svg>')}:host .calendar{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 354.3a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm42.5 85a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm127.6-113.4a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-42.6-85.1a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-42.5-85.1a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-28.3-70.9a14.2 14.2 0 1 1-28.4 0 14.2 14.2 0 0 1 28.4 0z\"></path><path d=\"M382.7 113.4h-28.3V85H326v28.3H212.6v28.3H326v28.3h28.3v-28.3h28.3c7.8 0 14.2 6.4 14.2 14.2v226.8c0 7.8-6.4 14.2-14.2 14.2h-255c-7.8 0-14.2-6.4-14.2-14.2V155.9c0-7.8 6.4-14.2 14.2-14.2h28.3V170h28.3V85h-28.3v28.3h-28.3a42.6 42.6 0 0 0-42.5 42.5v226.8a42.6 42.6 0 0 0 42.5 42.5h255.1a42.6 42.6 0 0 0 42.5-42.5V155.9a42.6 42.6 0 0 0-42.5-42.5z\"></path><circle cx=\"255.1\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"340.2\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"340.2\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"340.2\" r=\"14.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.1 354.3a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm42.5 85a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm0-42.5a14.2 14.2 0 1 1 0-28.4 14.2 14.2 0 0 1 0 28.4zm127.6-113.4a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-42.6-85.1a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-42.5-85.1a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.6a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm0 42.5a14.2 14.2 0 1 1 0 28.4 14.2 14.2 0 0 1 0-28.4zm-28.3-70.9a14.2 14.2 0 1 1-28.4 0 14.2 14.2 0 0 1 28.4 0z\"></path><path d=\"M382.7 113.4h-28.3V85H326v28.3H212.6v28.3H326v28.3h28.3v-28.3h28.3c7.8 0 14.2 6.4 14.2 14.2v226.8c0 7.8-6.4 14.2-14.2 14.2h-255c-7.8 0-14.2-6.4-14.2-14.2V155.9c0-7.8 6.4-14.2 14.2-14.2h28.3V170h28.3V85h-28.3v28.3h-28.3a42.6 42.6 0 0 0-42.5 42.5v226.8a42.6 42.6 0 0 0 42.5 42.5h255.1a42.6 42.6 0 0 0 42.5-42.5V155.9a42.6 42.6 0 0 0-42.5-42.5z\"></path><circle cx=\"255.1\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"212.6\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"255.1\" r=\"14.2\"></circle><circle cx=\"297.6\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"340.2\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"297.6\" r=\"14.2\"></circle><circle cx=\"170.1\" cy=\"340.2\" r=\"14.2\"></circle><circle cx=\"212.6\" cy=\"340.2\" r=\"14.2\"></circle><circle cx=\"255.1\" cy=\"340.2\" r=\"14.2\"></circle></svg>')}:host .book{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.7 135.6a28 28 0 0 0-20.6-8c-58.6 1.5-100.8 13.3-141 39.4-40.1-26.1-82.3-37.9-140.9-39.4a28.2 28.2 0 0 0-29.1 28.3v177a28.3 28.3 0 0 0 28.3 28.3h13.5l3.4.1h.5l3.7.1h.1c13.8.4 27.2 1.3 40.4 3.4l3.9.7h.1l3.8.7h.2l3.7.8.3.1 3.5.8.4.1 3.4.9.6.2 3.3.9.7.2 3.1 1 .8.3a35.2 35.2 0 0 1 4 1.3l2.8 1 1.1.4 2.7 1 1.2.5 2.5 1.1 1.4.6 2.4 1.1 1.5.7 2.2 1.1 1.6.8 2.1 1.1 1.7.9 2 1.1 1.8 1.1 1.9 1.1 1.9 1.2 2.1 1.3a28.5 28.5 0 0 0 29.6.7V191.5l1.3-.8c35.4-23 73.2-33.4 126.3-34.8v177c-36.2.1-71.8 1.6-106.6 14.7v30.7c33.5-15.4 68.5-17 106.7-17.1a28.4 28.4 0 0 0 28.3-28.3v-177a28.7 28.7 0 0 0-8.6-20.3zm-175.8 166v55.5c-41.5-21.9-84.1-24-127.6-24.2v-177c53 1.4 90.8 11.8 126.2 34.8l1.3.8v110.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.7 135.6a28 28 0 0 0-20.6-8c-58.6 1.5-100.8 13.3-141 39.4-40.1-26.1-82.3-37.9-140.9-39.4a28.2 28.2 0 0 0-29.1 28.3v177a28.3 28.3 0 0 0 28.3 28.3h13.5l3.4.1h.5l3.7.1h.1c13.8.4 27.2 1.3 40.4 3.4l3.9.7h.1l3.8.7h.2l3.7.8.3.1 3.5.8.4.1 3.4.9.6.2 3.3.9.7.2 3.1 1 .8.3a35.2 35.2 0 0 1 4 1.3l2.8 1 1.1.4 2.7 1 1.2.5 2.5 1.1 1.4.6 2.4 1.1 1.5.7 2.2 1.1 1.6.8 2.1 1.1 1.7.9 2 1.1 1.8 1.1 1.9 1.1 1.9 1.2 2.1 1.3a28.5 28.5 0 0 0 29.6.7V191.5l1.3-.8c35.4-23 73.2-33.4 126.3-34.8v177c-36.2.1-71.8 1.6-106.6 14.7v30.7c33.5-15.4 68.5-17 106.7-17.1a28.4 28.4 0 0 0 28.3-28.3v-177a28.7 28.7 0 0 0-8.6-20.3zm-175.8 166v55.5c-41.5-21.9-84.1-24-127.6-24.2v-177c53 1.4 90.8 11.8 126.2 34.8l1.3.8v110.1z\"></path></svg>')}:host .rss{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M411 396.9h-28.3c0-71.9-28-139.6-78.9-190.4a267.5 267.5 0 0 0-190.4-78.9V99.2a296 296 0 0 1 210.5 87.2A295.6 295.6 0 0 1 411 396.9z\"></path><path d=\"M326 396.9h-28.3a184.5 184.5 0 0 0-184.3-184.3v-28.3A212.8 212.8 0 0 1 326 396.9z\"></path><path d=\"M163 403.9a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zm0-85a28.3 28.3 0 1 0 0 56.7 28.3 28.3 0 0 0 0-56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M411 396.9h-28.3c0-71.9-28-139.6-78.9-190.4a267.5 267.5 0 0 0-190.4-78.9V99.2a296 296 0 0 1 210.5 87.2A295.6 295.6 0 0 1 411 396.9z\"></path><path d=\"M326 396.9h-28.3a184.5 184.5 0 0 0-184.3-184.3v-28.3A212.8 212.8 0 0 1 326 396.9z\"></path><path d=\"M163 403.9a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zm0-85a28.3 28.3 0 1 0 0 56.7 28.3 28.3 0 0 0 0-56.7z\"></path></svg>')}:host .coins{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M163 432.3a85 85 0 1 1 .1-170.1 85 85 0 0 1-.1 170.1zm0-141.8a56.7 56.7 0 1 0 0 113.4 56.7 56.7 0 0 0 0-113.4z\"></path><path d=\"M360.4 171.1l-4.7 28a56.8 56.8 0 1 1-64.6 64.1l-27.9 5.3a85.1 85.1 0 1 0 97.2-97.4z\"></path><path d=\"M255.1 78a85 85 0 1 0 .1 170.1 85 85 0 0 0-.1-170.1zm0 141.7a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4z\"></path><path d=\"M254.5 191.5c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.2 11.6-1.9 20.1-15 20.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M163 432.3a85 85 0 1 1 .1-170.1 85 85 0 0 1-.1 170.1zm0-141.8a56.7 56.7 0 1 0 0 113.4 56.7 56.7 0 0 0 0-113.4z\"></path><path d=\"M360.4 171.1l-4.7 28a56.8 56.8 0 1 1-64.6 64.1l-27.9 5.3a85.1 85.1 0 1 0 97.2-97.4z\"></path><path d=\"M255.1 78a85 85 0 1 0 .1 170.1 85 85 0 0 0-.1-170.1zm0 141.7a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4z\"></path><path d=\"M254.5 191.5c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.2 11.6-1.9 20.1-15 20.1z\"></path></svg>')}:host .banknote{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M85 304.7v92.1a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3H113.4A28.4 28.4 0 0 0 85 304.7zm311.9 0v92.1H113.4v-92.1h283.5z\"></path><path d=\"M188.3 371.4h-20l13.3-19.2c2.8-4.1 6.7-10 6.7-16.6 0-8.7-4.8-12.5-13.6-12.5-7.5 0-13.4 3.4-14.1 11.7l-.1 2.8h7.9l.2-3.2c.5-3.2 2.2-5.5 5.9-5.5 4.1 0 5.6 2.6 5.6 6.2 0 2.9-.9 6.3-2.9 9.3l-17.3 26v6.8h28.5v-5.8z\"></path><path d=\"M209.3 378.4c13.2 0 14-10.4 14-23.1v-13.2c0-10.7-1.4-18.9-13.8-18.9-12.2 0-14.3 9.1-14.3 19.4v12.9c0 13.6 1.1 22.9 14.1 22.9zm-6.1-31.1c0-10.7.2-18.4 6.3-18.4 6.2 0 5.9 7.4 5.9 18.4v8.1c0 8.4.4 17.2-6.1 17.2-5.9 0-6.2-7.1-6.2-17.5v-7.8z\"></path><path d=\"M137.6 262.1l20.7-19.4-53.3-53.4 65.1-65.2 7.4 7.4 40.2 40.2 89.2 89.2 19.6-20.5-107.9-107.8 73.2-26.6 56.8 156.2 26.9-8.8-57.2-157A28.2 28.2 0 0 0 282 79.5l-85.6 31.1-6.3-6.3a28 28 0 0 0-40 0L85 169.4a28 28 0 0 0 0 40l52.6 52.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M85 304.7v92.1a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3H113.4A28.4 28.4 0 0 0 85 304.7zm311.9 0v92.1H113.4v-92.1h283.5z\"></path><path d=\"M188.3 371.4h-20l13.3-19.2c2.8-4.1 6.7-10 6.7-16.6 0-8.7-4.8-12.5-13.6-12.5-7.5 0-13.4 3.4-14.1 11.7l-.1 2.8h7.9l.2-3.2c.5-3.2 2.2-5.5 5.9-5.5 4.1 0 5.6 2.6 5.6 6.2 0 2.9-.9 6.3-2.9 9.3l-17.3 26v6.8h28.5v-5.8z\"></path><path d=\"M209.3 378.4c13.2 0 14-10.4 14-23.1v-13.2c0-10.7-1.4-18.9-13.8-18.9-12.2 0-14.3 9.1-14.3 19.4v12.9c0 13.6 1.1 22.9 14.1 22.9zm-6.1-31.1c0-10.7.2-18.4 6.3-18.4 6.2 0 5.9 7.4 5.9 18.4v8.1c0 8.4.4 17.2-6.1 17.2-5.9 0-6.2-7.1-6.2-17.5v-7.8z\"></path><path d=\"M137.6 262.1l20.7-19.4-53.3-53.4 65.1-65.2 7.4 7.4 40.2 40.2 89.2 89.2 19.6-20.5-107.9-107.8 73.2-26.6 56.8 156.2 26.9-8.8-57.2-157A28.2 28.2 0 0 0 282 79.5l-85.6 31.1-6.3-6.3a28 28 0 0 0-40 0L85 169.4a28 28 0 0 0 0 40l52.6 52.7z\"></path></svg>')}:host .cash{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M159.8 377.4v-6.8l17.3-26c2-3 2.9-6.5 2.9-9.3 0-3.6-1.6-6.2-5.6-6.2-3.7 0-5.3 2.3-5.9 5.5-.2 1-.2 2.1-.2 3.2h-7.9l.1-2.8c.7-8.3 6.6-11.7 14.1-11.7 8.8 0 13.6 3.8 13.6 12.5a30 30 0 0 1-6.7 16.6l-13.3 19.2h20v6h-28.4z\"></path><path d=\"M209.3 378.4c-13.1 0-14.1-9.3-14.1-23v-12.9c0-10.3 2.2-19.4 14.3-19.4 12.5 0 13.8 8.2 13.8 18.9v13.2c.1 12.8-.8 23.2-14 23.2zm6.1-31.1c0-11 .3-18.4-5.9-18.4-6.1 0-6.3 7.7-6.3 18.4v7.8c0 10.4.2 17.5 6.2 17.5 6.5 0 6.1-8.8 6.1-17.2v-8.1z\"></path><path d=\"M396.9 276.4h-14.2v28.3h14.2v92.1H113.4v-92.1h85v-28.3h-85a28.3 28.3 0 0 0-28.3 28.3v92.1a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3z\"></path><path d=\"M311 151.3a85 85 0 1 0-104.6 94.1A85 85 0 1 0 311 151.3zm-20.4 139.3a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zM170.1 163a56.7 56.7 0 0 1 111.7-13.7 85.2 85.2 0 0 0-74.4 67 56.9 56.9 0 0 1-37.3-53.3z\"></path><g><path d=\"M289.9 262.4c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.3 11.6-1.9 20.1-15 20.1z\"></path></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M159.8 377.4v-6.8l17.3-26c2-3 2.9-6.5 2.9-9.3 0-3.6-1.6-6.2-5.6-6.2-3.7 0-5.3 2.3-5.9 5.5-.2 1-.2 2.1-.2 3.2h-7.9l.1-2.8c.7-8.3 6.6-11.7 14.1-11.7 8.8 0 13.6 3.8 13.6 12.5a30 30 0 0 1-6.7 16.6l-13.3 19.2h20v6h-28.4z\"></path><path d=\"M209.3 378.4c-13.1 0-14.1-9.3-14.1-23v-12.9c0-10.3 2.2-19.4 14.3-19.4 12.5 0 13.8 8.2 13.8 18.9v13.2c.1 12.8-.8 23.2-14 23.2zm6.1-31.1c0-11 .3-18.4-5.9-18.4-6.1 0-6.3 7.7-6.3 18.4v7.8c0 10.4.2 17.5 6.2 17.5 6.5 0 6.1-8.8 6.1-17.2v-8.1z\"></path><path d=\"M396.9 276.4h-14.2v28.3h14.2v92.1H113.4v-92.1h85v-28.3h-85a28.3 28.3 0 0 0-28.3 28.3v92.1a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3z\"></path><path d=\"M311 151.3a85 85 0 1 0-104.6 94.1A85 85 0 1 0 311 151.3zm-20.4 139.3a56.7 56.7 0 1 1 0-113.4 56.7 56.7 0 0 1 0 113.4zM170.1 163a56.7 56.7 0 0 1 111.7-13.7 85.2 85.2 0 0 0-74.4 67 56.9 56.9 0 0 1-37.3-53.3z\"></path><g><path d=\"M289.9 262.4c-9.2 0-14-4.3-14-13.8h8.3c0 4.3 1.2 7.7 5.9 7.7 5.8 0 6.4-5.7 6.4-13.9 0-4.7-.4-11.1-6.1-11.1-3.4 0-5.6 2.4-6.1 5.5h-8l1-31.4h26v6.2h-18.2l-.8 17.7c2.5-2.6 4.7-3.9 8.8-3.9 10.1 0 11.8 8 11.8 16.9.3 11.6-1.9 20.1-15 20.1z\"></path></g></svg>')}:host .cashless{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.6 185.4c-4.7 0-5.9-3.4-5.9-7.7h-8.3c0 9.6 4.7 13.8 14 13.8 13.1 0 15.2-8.5 15.2-20.2 0-8.9-1.7-16.9-11.8-16.9-4.2 0-6.3 1.3-8.8 3.9l.8-17.7H261v-6.2h-26l-1 31.4h8c.5-3.2 2.7-5.5 6.1-5.5 5.7 0 6.1 6.5 6.1 11.1-.2 8.3-.7 14-6.6 14z\"></path><path d=\"M218.2 242.6l23.3-23.3a56.7 56.7 0 1 1 62.8-62.8l23.3-23.3a85 85 0 1 0-109.4 109.4z\"></path><path d=\"M308.6 281.3c2.8-4.1 6.7-10 6.7-16.6 0-8.7-4.8-12.5-13.6-12.5-7.5 0-13.4 3.4-14.1 11.7l-.1 2.8h7.9l.2-3.2c.5-3.2 2.2-5.5 5.9-5.5 4.1 0 5.6 2.6 5.6 6.2 0 2.9-.9 6.3-2.9 9.3l-17.3 26v6.8h28.5v-6h-20l13.2-19z\"></path><path d=\"M336.6 252.3c-12.2 0-14.3 9.1-14.3 19.4v12.9c0 13.7 1.1 23 14.1 23 13.2 0 14-10.4 14-23.1v-13.2c0-10.8-1.3-19-13.8-19zm-.2 49.4c-5.9 0-6.2-7.1-6.2-17.5v-7.8c0-10.7.2-18.4 6.3-18.4 6.2 0 5.9 7.4 5.9 18.4v8.1c.1 8.5.5 17.2-6 17.2z\"></path><path d=\"M102.1 428.1l73.8-73.8h220.9a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3h-72.1l103.4-103.4-20-20L164.2 326h-50.8v-92.1h42.5v-28.3h-42.5a28.3 28.3 0 0 0-28.3 28.3V326a28.3 28.3 0 0 0 28.3 28.3h22.5l-53.8 53.8 20 20zm194.3-194.2h100.4V326H204.3l92.1-92.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.6 185.4c-4.7 0-5.9-3.4-5.9-7.7h-8.3c0 9.6 4.7 13.8 14 13.8 13.1 0 15.2-8.5 15.2-20.2 0-8.9-1.7-16.9-11.8-16.9-4.2 0-6.3 1.3-8.8 3.9l.8-17.7H261v-6.2h-26l-1 31.4h8c.5-3.2 2.7-5.5 6.1-5.5 5.7 0 6.1 6.5 6.1 11.1-.2 8.3-.7 14-6.6 14z\"></path><path d=\"M218.2 242.6l23.3-23.3a56.7 56.7 0 1 1 62.8-62.8l23.3-23.3a85 85 0 1 0-109.4 109.4z\"></path><path d=\"M308.6 281.3c2.8-4.1 6.7-10 6.7-16.6 0-8.7-4.8-12.5-13.6-12.5-7.5 0-13.4 3.4-14.1 11.7l-.1 2.8h7.9l.2-3.2c.5-3.2 2.2-5.5 5.9-5.5 4.1 0 5.6 2.6 5.6 6.2 0 2.9-.9 6.3-2.9 9.3l-17.3 26v6.8h28.5v-6h-20l13.2-19z\"></path><path d=\"M336.6 252.3c-12.2 0-14.3 9.1-14.3 19.4v12.9c0 13.7 1.1 23 14.1 23 13.2 0 14-10.4 14-23.1v-13.2c0-10.8-1.3-19-13.8-19zm-.2 49.4c-5.9 0-6.2-7.1-6.2-17.5v-7.8c0-10.7.2-18.4 6.3-18.4 6.2 0 5.9 7.4 5.9 18.4v8.1c.1 8.5.5 17.2-6 17.2z\"></path><path d=\"M102.1 428.1l73.8-73.8h220.9a28.3 28.3 0 0 0 28.3-28.3v-92.1a28.3 28.3 0 0 0-28.3-28.3h-72.1l103.4-103.4-20-20L164.2 326h-50.8v-92.1h42.5v-28.3h-42.5a28.3 28.3 0 0 0-28.3 28.3V326a28.3 28.3 0 0 0 28.3 28.3h22.5l-53.8 53.8 20 20zm194.3-194.2h100.4V326H204.3l92.1-92.1z\"></path></svg>')}:host .card{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 251.6H241v7.1H127.6z\"></path><path d=\"M127.6 272.8h85v7.1h-85z\"></path><path d=\"M127.6 368.5h255.1a42.6 42.6 0 0 0 42.5-42.5V184.3a42.6 42.6 0 0 0-42.5-42.5H127.6a42.6 42.6 0 0 0-42.5 42.5V326a42.5 42.5 0 0 0 42.5 42.5zm-14.2-184.2c0-7.8 6.4-14.2 14.2-14.2h35.9l30.5 36.4a56.5 56.5 0 0 0 43.4 20.3h39v-28.3h-39c-8.4 0-16.3-3.7-21.7-10.1l-15.3-18.2h182.3c7.8 0 14.2 6.4 14.2 14.2V326c0 7.8-6.4 14.2-14.2 14.2H127.6c-7.8 0-14.2-6.4-14.2-14.2V184.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 251.6H241v7.1H127.6z\"></path><path d=\"M127.6 272.8h85v7.1h-85z\"></path><path d=\"M127.6 368.5h255.1a42.6 42.6 0 0 0 42.5-42.5V184.3a42.6 42.6 0 0 0-42.5-42.5H127.6a42.6 42.6 0 0 0-42.5 42.5V326a42.5 42.5 0 0 0 42.5 42.5zm-14.2-184.2c0-7.8 6.4-14.2 14.2-14.2h35.9l30.5 36.4a56.5 56.5 0 0 0 43.4 20.3h39v-28.3h-39c-8.4 0-16.3-3.7-21.7-10.1l-15.3-18.2h182.3c7.8 0 14.2 6.4 14.2 14.2V326c0 7.8-6.4 14.2-14.2 14.2H127.6c-7.8 0-14.2-6.4-14.2-14.2V184.3z\"></path></svg>')}:host .clock{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M277.6 257.5a28 28 0 0 1-8.3-20v-110H241v110c0 15.1 5.9 29.4 16.6 40.1l56.8 56.8a97.2 97.2 0 0 0 20-20l-56.8-56.9z\"></path><path d=\"M255.1 85A170.3 170.3 0 0 0 85 255.1c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1S348.9 85 255.1 85zm118.2 248.2a136.4 136.4 0 0 1-28.5 31.5 140.6 140.6 0 0 1-89.6 32A141.8 141.8 0 0 1 113.5 255c0-78.2 63.6-141.7 141.7-141.7S396.9 177 396.9 255.1c0 28.9-8.7 55.7-23.6 78.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M277.6 257.5a28 28 0 0 1-8.3-20v-110H241v110c0 15.1 5.9 29.4 16.6 40.1l56.8 56.8a97.2 97.2 0 0 0 20-20l-56.8-56.9z\"></path><path d=\"M255.1 85A170.3 170.3 0 0 0 85 255.1c0 93.8 76.3 170.1 170.1 170.1s170.1-76.3 170.1-170.1S348.9 85 255.1 85zm118.2 248.2a136.4 136.4 0 0 1-28.5 31.5 140.6 140.6 0 0 1-89.6 32A141.8 141.8 0 0 1 113.5 255c0-78.2 63.6-141.7 141.7-141.7S396.9 177 396.9 255.1c0 28.9-8.7 55.7-23.6 78.1z\"></path></svg>')}:host .leaf{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M268 334.4h36.5L272.2 306H268c-44.9 0-79.8-11.8-103.7-35-24.4-23.8-36.8-59.3-36.8-105.5v-37.4h56.7c44.9 0 79.8 11.8 103.7 35 24.4 23.8 36.8 59.3 36.8 105.5v17.1L271.1 237 252 258l52.8 48h-.4l11.2 9.8 16.3 14.8 6.5 5.9 31.9 29a37.3 37.3 0 0 1 12.2 27.7v17.1H411v-17.1c0-18.5-7.8-36.2-21.5-48.6l-36.5-33v-42.9c0-107.3-61.5-168.8-168.8-168.8h-58A27.1 27.1 0 0 0 99.1 127v38.7c.1 107.1 61.6 168.7 168.9 168.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M268 334.4h36.5L272.2 306H268c-44.9 0-79.8-11.8-103.7-35-24.4-23.8-36.8-59.3-36.8-105.5v-37.4h56.7c44.9 0 79.8 11.8 103.7 35 24.4 23.8 36.8 59.3 36.8 105.5v17.1L271.1 237 252 258l52.8 48h-.4l11.2 9.8 16.3 14.8 6.5 5.9 31.9 29a37.3 37.3 0 0 1 12.2 27.7v17.1H411v-17.1c0-18.5-7.8-36.2-21.5-48.6l-36.5-33v-42.9c0-107.3-61.5-168.8-168.8-168.8h-58A27.1 27.1 0 0 0 99.1 127v38.7c.1 107.1 61.6 168.7 168.9 168.7z\"></path></svg>')}:host .flexibility{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M166.1 248.8l4.6 29.6 171-30-4.7-29.5z\"></path><path d=\"M197.7 405.7a28.6 28.6 0 0 1 17.2-10.4l.3-.1 112.5-25.6a16.3 16.3 0 0 0 12.4-16.4 16.2 16.2 0 0 0-12.9-15.9L257 323.8l84.8-15.5-4.9-29.5-155.4 28.4c-7.5 1.4-13 8.2-13 16.2s5.4 14.8 12.9 16.2l77.7 15-49.3 11.2a56.3 56.3 0 0 0-34.1 20.7l-25.5 32.1 21.9 19.2 25.6-32.1zm7.8-72.8l20.7-3.6 79 15.2-18.7 4-81-15.6z\"></path><path d=\"M170.8 218.5L326.2 190c7.5-1.4 13-8.2 13-16.2s-5.4-14.8-12.9-16.2l-77.7-15 49.3-11.2a56.3 56.3 0 0 0 34.1-20.7l25.5-32.1-21.9-19.2-25.5 32.1a28.6 28.6 0 0 1-17.2 10.4l-.3.1-112.5 25.6a16.3 16.3 0 0 0-12.4 16.4c.1 7.9 5.6 14.5 12.9 15.9l70.2 13.5L166 189l4.8 29.5zm131.5-54.1l-20.7 3.6-79-15.2 18.7-4 81 15.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M166.1 248.8l4.6 29.6 171-30-4.7-29.5z\"></path><path d=\"M197.7 405.7a28.6 28.6 0 0 1 17.2-10.4l.3-.1 112.5-25.6a16.3 16.3 0 0 0 12.4-16.4 16.2 16.2 0 0 0-12.9-15.9L257 323.8l84.8-15.5-4.9-29.5-155.4 28.4c-7.5 1.4-13 8.2-13 16.2s5.4 14.8 12.9 16.2l77.7 15-49.3 11.2a56.3 56.3 0 0 0-34.1 20.7l-25.5 32.1 21.9 19.2 25.6-32.1zm7.8-72.8l20.7-3.6 79 15.2-18.7 4-81-15.6z\"></path><path d=\"M170.8 218.5L326.2 190c7.5-1.4 13-8.2 13-16.2s-5.4-14.8-12.9-16.2l-77.7-15 49.3-11.2a56.3 56.3 0 0 0 34.1-20.7l25.5-32.1-21.9-19.2-25.5 32.1a28.6 28.6 0 0 1-17.2 10.4l-.3.1-112.5 25.6a16.3 16.3 0 0 0-12.4 16.4c.1 7.9 5.6 14.5 12.9 15.9l70.2 13.5L166 189l4.8 29.5zm131.5-54.1l-20.7 3.6-79-15.2 18.7-4 81 15.6z\"></path></svg>')}:host .piggy-bank{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"199.7\" cy=\"242.2\" r=\"15.4\"></circle><path d=\"M373.7 182.8l-3.6-2.6-18 22 4.8 3.3c16.5 12.2 36.2 33.7 36.2 67.2 0 17.4-5.9 32.7-18.7 48.2a21.4 21.4 0 0 0-3.7 20.5l12.5 40.5.3.8h-34l-7.6-21.5-.5-.9a21.3 21.3 0 0 0-23.5-11l-72.1 5.9c-7.6-.6-15 2.9-19.4 9.4l-.8 1.2-6.8 16.8h-40l.4-.8 8.5-24.2a21.3 21.3 0 0 0-5.8-24.7l-23.2-21.5c-4-4.3-9.6-6.7-15.5-6.7h-29.9v-42.5H136a21 21 0 0 0 19.3-12.5l16.5-25.9a21 21 0 0 0 3.6-18.9l-6.8-23.9a2184 2184 0 0 0 25.4 4.6l4.2-28-35.8-6.5a21.1 21.1 0 0 0-24.3 26.7l9.1 31.7-15.5 24.3h-18.5a28.3 28.3 0 0 0-28.3 28.3v42.5a28.3 28.3 0 0 0 28.3 28.3h27.1l19.5 18.1-6.9 19.7a28.2 28.2 0 0 0 25.8 40H219c9.5 0 18.3-4.7 23.6-12.6l.8-1.2 5.5-13.7 68.6-5.6 6.1 17.1.5.9a28.3 28.3 0 0 0 25.1 15.3h34.1a28.5 28.5 0 0 0 26.7-37.8L398.7 336a100.3 100.3 0 0 0 22.8-63.2c-.1-35.4-17-67.3-47.8-90z\"></path><path d=\"M222.5 184.4l12.7-5.9 13-6.1a40.4 40.4 0 0 1-4.9-17l-.1-2.3a39.8 39.8 0 1 1 71.8 23.6l11.3 8.3 11.5 8.4a67.2 67.2 0 0 0 13.3-40.4c0-37.6-30.6-68.2-68.2-68.2a68.2 68.2 0 0 0-60.4 99.6z\"></path><path d=\"M113.4 333.1h27.1l19.5 18.1-6.9 19.7a28.2 28.2 0 0 0 25.8 40h40.3c9.5 0 18.3-4.7 23.6-12.6l.8-1.2 5.5-13.7 68.6-5.6 6.1 17.1.5.9a28.3 28.3 0 0 0 25.1 15.3h34.1a28.5 28.5 0 0 0 26.7-37.8L398.7 336a100.3 100.3 0 0 0 22.8-63.2c0-35.3-16.9-67.3-47.7-90l-3.6-2.6-18 22 4.8 3.3c16.5 12.2 36.2 33.7 36.2 67.2 0 17.4-5.9 32.7-18.7 48.2a21.4 21.4 0 0 0-3.7 20.5l12.5 40.5.3.8h-34l-7.6-21.5-.5-.9a21.3 21.3 0 0 0-23.5-11l-72.1 5.9c-7.6-.6-15 2.9-19.4 9.4l-.8 1.2-6.8 16.8h-40l.4-.8 8.5-24.2a21.3 21.3 0 0 0-5.8-24.7l-23.2-21.5c-4-4.3-9.6-6.7-15.5-6.7h-29.9v-42.5H136a21 21 0 0 0 19.3-12.5l16.5-25.9a21 21 0 0 0 3.6-18.9l-6.8-23.9a2184 2184 0 0 0 25.4 4.6l4.2-28-35.8-6.5a21.1 21.1 0 0 0-24.3 26.7l9.1 31.7-15.5 24.3h-18.5a28.3 28.3 0 0 0-28.3 28.3v42.5a28.6 28.6 0 0 0 28.5 28.5z\"></path><path d=\"M283.2 85a68.3 68.3 0 0 0-60.6 99.4l12.7-5.9 13-6.1a40.4 40.4 0 0 1-4.9-17l-.1-2.3a39.8 39.8 0 1 1 71.8 23.6l11.3 8.3 11.5 8.4a67.2 67.2 0 0 0 13.3-40.4 68 68 0 0 0-68-68z\"></path><circle cx=\"199.7\" cy=\"242.2\" r=\"15.4\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"199.7\" cy=\"242.2\" r=\"15.4\"></circle><path d=\"M373.7 182.8l-3.6-2.6-18 22 4.8 3.3c16.5 12.2 36.2 33.7 36.2 67.2 0 17.4-5.9 32.7-18.7 48.2a21.4 21.4 0 0 0-3.7 20.5l12.5 40.5.3.8h-34l-7.6-21.5-.5-.9a21.3 21.3 0 0 0-23.5-11l-72.1 5.9c-7.6-.6-15 2.9-19.4 9.4l-.8 1.2-6.8 16.8h-40l.4-.8 8.5-24.2a21.3 21.3 0 0 0-5.8-24.7l-23.2-21.5c-4-4.3-9.6-6.7-15.5-6.7h-29.9v-42.5H136a21 21 0 0 0 19.3-12.5l16.5-25.9a21 21 0 0 0 3.6-18.9l-6.8-23.9a2184 2184 0 0 0 25.4 4.6l4.2-28-35.8-6.5a21.1 21.1 0 0 0-24.3 26.7l9.1 31.7-15.5 24.3h-18.5a28.3 28.3 0 0 0-28.3 28.3v42.5a28.3 28.3 0 0 0 28.3 28.3h27.1l19.5 18.1-6.9 19.7a28.2 28.2 0 0 0 25.8 40H219c9.5 0 18.3-4.7 23.6-12.6l.8-1.2 5.5-13.7 68.6-5.6 6.1 17.1.5.9a28.3 28.3 0 0 0 25.1 15.3h34.1a28.5 28.5 0 0 0 26.7-37.8L398.7 336a100.3 100.3 0 0 0 22.8-63.2c-.1-35.4-17-67.3-47.8-90z\"></path><path d=\"M222.5 184.4l12.7-5.9 13-6.1a40.4 40.4 0 0 1-4.9-17l-.1-2.3a39.8 39.8 0 1 1 71.8 23.6l11.3 8.3 11.5 8.4a67.2 67.2 0 0 0 13.3-40.4c0-37.6-30.6-68.2-68.2-68.2a68.2 68.2 0 0 0-60.4 99.6z\"></path><path d=\"M113.4 333.1h27.1l19.5 18.1-6.9 19.7a28.2 28.2 0 0 0 25.8 40h40.3c9.5 0 18.3-4.7 23.6-12.6l.8-1.2 5.5-13.7 68.6-5.6 6.1 17.1.5.9a28.3 28.3 0 0 0 25.1 15.3h34.1a28.5 28.5 0 0 0 26.7-37.8L398.7 336a100.3 100.3 0 0 0 22.8-63.2c0-35.3-16.9-67.3-47.7-90l-3.6-2.6-18 22 4.8 3.3c16.5 12.2 36.2 33.7 36.2 67.2 0 17.4-5.9 32.7-18.7 48.2a21.4 21.4 0 0 0-3.7 20.5l12.5 40.5.3.8h-34l-7.6-21.5-.5-.9a21.3 21.3 0 0 0-23.5-11l-72.1 5.9c-7.6-.6-15 2.9-19.4 9.4l-.8 1.2-6.8 16.8h-40l.4-.8 8.5-24.2a21.3 21.3 0 0 0-5.8-24.7l-23.2-21.5c-4-4.3-9.6-6.7-15.5-6.7h-29.9v-42.5H136a21 21 0 0 0 19.3-12.5l16.5-25.9a21 21 0 0 0 3.6-18.9l-6.8-23.9a2184 2184 0 0 0 25.4 4.6l4.2-28-35.8-6.5a21.1 21.1 0 0 0-24.3 26.7l9.1 31.7-15.5 24.3h-18.5a28.3 28.3 0 0 0-28.3 28.3v42.5a28.6 28.6 0 0 0 28.5 28.5z\"></path><path d=\"M283.2 85a68.3 68.3 0 0 0-60.6 99.4l12.7-5.9 13-6.1a40.4 40.4 0 0 1-4.9-17l-.1-2.3a39.8 39.8 0 1 1 71.8 23.6l11.3 8.3 11.5 8.4a67.2 67.2 0 0 0 13.3-40.4 68 68 0 0 0-68-68z\"></path><circle cx=\"199.7\" cy=\"242.2\" r=\"15.4\"></circle></svg>')}:host .stability{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142.3 236.7a28.3 28.3 0 0 1 21.7-10.1l32.9.1h116.6l32.8.1c16.8 0 32.6-7.4 43.4-20.3l25.1-29.9-21.7-18.2-25.1 29.9a28.3 28.3 0 0 1-21.7 10.1l-32.9-.1H196.8l-32.9-.1a56.5 56.5 0 0 0-43.4 20.3l-25.1 29.9 21.7 18.2 25.2-29.9z\"></path><path d=\"M142.3 321.9a28.3 28.3 0 0 1 21.7-10.1l32.9.1h116.6l32.8.1c16.8 0 32.6-7.4 43.4-20.3l25.1-29.9-21.7-18.2-25.1 29.8a28.3 28.3 0 0 1-21.7 10.1l-32.9-.1H196.8l-32.9-.1a56.5 56.5 0 0 0-43.4 20.3l-25.1 29.9 21.7 18.2 25.2-29.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M142.3 236.7a28.3 28.3 0 0 1 21.7-10.1l32.9.1h116.6l32.8.1c16.8 0 32.6-7.4 43.4-20.3l25.1-29.9-21.7-18.2-25.1 29.9a28.3 28.3 0 0 1-21.7 10.1l-32.9-.1H196.8l-32.9-.1a56.5 56.5 0 0 0-43.4 20.3l-25.1 29.9 21.7 18.2 25.2-29.9z\"></path><path d=\"M142.3 321.9a28.3 28.3 0 0 1 21.7-10.1l32.9.1h116.6l32.8.1c16.8 0 32.6-7.4 43.4-20.3l25.1-29.9-21.7-18.2-25.1 29.8a28.3 28.3 0 0 1-21.7 10.1l-32.9-.1H196.8l-32.9-.1a56.5 56.5 0 0 0-43.4 20.3l-25.1 29.9 21.7 18.2 25.2-29.8z\"></path></svg>')}:host .lightbulb{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M190.2 223.7v58.6c0 10.4 4 20.2 11.4 27.6l16.9 17 20.1-20-16.9-17c-2-2-3.1-4.7-3.1-7.6v-57.5a35.9 35.9 0 0 1 71.6-.5V282c0 2.9-1.2 5.8-3.3 7.8L273 303l-.2.2-.1.1-66.7 66.6 20 20 66.7-66.6 13.7-13.1a39 39 0 0 0 12-28.3v-57.2-1a64.2 64.2 0 0 0-128.2 0z\"></path><path d=\"M215.4 391.3h89.4v28.3h-89.4z\" transform=\"rotate(-45 260.1 405.5)\"></path><path d=\"M321.2 129.8h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 354 144)\"></path><path d=\"M142.1 111.2h28.3v65.6h-28.3z\" transform=\"rotate(-49.3 156.2 144)\"></path><path d=\"M240.1 66.1h28.3v64.5h-28.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M190.2 223.7v58.6c0 10.4 4 20.2 11.4 27.6l16.9 17 20.1-20-16.9-17c-2-2-3.1-4.7-3.1-7.6v-57.5a35.9 35.9 0 0 1 71.6-.5V282c0 2.9-1.2 5.8-3.3 7.8L273 303l-.2.2-.1.1-66.7 66.6 20 20 66.7-66.6 13.7-13.1a39 39 0 0 0 12-28.3v-57.2-1a64.2 64.2 0 0 0-128.2 0z\"></path><path d=\"M215.4 391.3h89.4v28.3h-89.4z\" transform=\"rotate(-45 260.1 405.5)\"></path><path d=\"M321.2 129.8h65.6v28.3h-65.6z\" transform=\"rotate(-40.7 354 144)\"></path><path d=\"M142.1 111.2h28.3v65.6h-28.3z\" transform=\"rotate(-49.3 156.2 144)\"></path><path d=\"M240.1 66.1h28.3v64.5h-28.3z\"></path></svg>')}:host .success{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 368.5H99.2v56.7h28.3v-56.7zm56.7-56.7H156v113.4h28.3V311.8zm56.6-56.7h-28.3v170.1h28.3V255.1zm56.7-56.7h-28.3v226.8h28.3V198.4zm56.7-56.7H326v283.5h28.3V141.7zM411 85h-28.3v340.2H411V85z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M127.6 368.5H99.2v56.7h28.3v-56.7zm56.7-56.7H156v113.4h28.3V311.8zm56.6-56.7h-28.3v170.1h28.3V255.1zm56.7-56.7h-28.3v226.8h28.3V198.4zm56.7-56.7H326v283.5h28.3V141.7zM411 85h-28.3v340.2H411V85z\"></path></svg>')}:host .global{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 432.3c97.7 0 177.2-79.5 177.2-177.2 0-97.7-79.5-177.2-177.2-177.2A177.4 177.4 0 0 0 78 255.1c0 97.7 79.4 177.2 177.1 177.2zm148.8-180.7h-71.2a329 329 0 0 0-8.9-74.4h58a146.4 146.4 0 0 1 22.1 74.4zM255.1 403.9c-9.6 0-18.9-.9-28-2.7a110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7h119.1c-2.9 10.3-6.4 20-10.4 28.7a108.9 108.9 0 0 1-21.2 32.4 142 142 0 0 1-27.9 2.7zm61.5-70.8H193.7a321.8 321.8 0 0 1-9.1-74.4h141c-.2 26.4-3.4 51.8-9 74.4zm13.9-37.7l.4-3.9.7-7.9.5-8 .4-8.1.2-8.8h71.2c-.6 27.2-8.6 52.7-22.1 74.4h-58a290 290 0 0 0 6.7-37.7zm-4.9-43.8h-141c.3-26.5 3.4-51.9 9.1-74.4h122.9a316 316 0 0 1 9 74.4zm-148.1 0h-71.2c.6-27.2 8.6-52.7 22.1-74.4h58a329 329 0 0 0-8.9 74.4zm0 7.1l.2 8.8.4 8.1.5 8 .7 7.9.4 3.9a308 308 0 0 0 6.6 37.7h-58a148.7 148.7 0 0 1-22.1-74.4h71.3zm-44.4 81.5h55.1c3.1 11.4 6.9 22 11.3 31.7a133.5 133.5 0 0 0 15.8 26.7 149.8 149.8 0 0 1-82.2-58.4zm161.8 58.3c5.7-7.3 11-16.2 15.8-26.7 4.4-9.7 8.2-20.3 11.3-31.7h55.1a148.5 148.5 0 0 1-82.2 58.4zm82.3-228.4H322c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.5 149.5 0 0 1 82.3 58.4zm-94.1-61.2c7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H195.6c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151.9 151.9 0 0 1 55.9 0zm-67.8 2.8c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7h-55.1c19.5-28 48.5-49 82.2-58.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 432.3c97.7 0 177.2-79.5 177.2-177.2 0-97.7-79.5-177.2-177.2-177.2A177.4 177.4 0 0 0 78 255.1c0 97.7 79.4 177.2 177.1 177.2zm148.8-180.7h-71.2a329 329 0 0 0-8.9-74.4h58a146.4 146.4 0 0 1 22.1 74.4zM255.1 403.9c-9.6 0-18.9-.9-28-2.7a110.8 110.8 0 0 1-21.2-32.4c-4-8.8-7.5-18.4-10.4-28.7h119.1c-2.9 10.3-6.4 20-10.4 28.7a108.9 108.9 0 0 1-21.2 32.4 142 142 0 0 1-27.9 2.7zm61.5-70.8H193.7a321.8 321.8 0 0 1-9.1-74.4h141c-.2 26.4-3.4 51.8-9 74.4zm13.9-37.7l.4-3.9.7-7.9.5-8 .4-8.1.2-8.8h71.2c-.6 27.2-8.6 52.7-22.1 74.4h-58a290 290 0 0 0 6.7-37.7zm-4.9-43.8h-141c.3-26.5 3.4-51.9 9.1-74.4h122.9a316 316 0 0 1 9 74.4zm-148.1 0h-71.2c.6-27.2 8.6-52.7 22.1-74.4h58a329 329 0 0 0-8.9 74.4zm0 7.1l.2 8.8.4 8.1.5 8 .7 7.9.4 3.9a308 308 0 0 0 6.6 37.7h-58a148.7 148.7 0 0 1-22.1-74.4h71.3zm-44.4 81.5h55.1c3.1 11.4 6.9 22 11.3 31.7a133.5 133.5 0 0 0 15.8 26.7 149.8 149.8 0 0 1-82.2-58.4zm161.8 58.3c5.7-7.3 11-16.2 15.8-26.7 4.4-9.7 8.2-20.3 11.3-31.7h55.1a148.5 148.5 0 0 1-82.2 58.4zm82.3-228.4H322c-3.1-11.4-6.9-22-11.3-31.7a133.5 133.5 0 0 0-15.8-26.7 149.5 149.5 0 0 1 82.3 58.4zm-94.1-61.2c7.7 7.7 14.9 18.6 21.2 32.4 4 8.8 7.5 18.4 10.4 28.7H195.6c2.9-10.3 6.4-20 10.4-28.7a108.9 108.9 0 0 1 21.2-32.4 151.9 151.9 0 0 1 55.9 0zm-67.8 2.8c-5.7 7.3-11 16.2-15.8 26.7-4.4 9.7-8.2 20.3-11.3 31.7h-55.1c19.5-28 48.5-49 82.2-58.4z\"></path></svg>')}:host .gears{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M100.2 386.7l16.7-6.9c3.6 5.2 8.1 9.8 13.5 13.5l-6.9 16.7 21.2 8.8 6.9-16.7a51 51 0 0 0 19.1 0l6.9 16.7L199 410l-6.9-16.7c5.2-3.6 9.8-8.2 13.5-13.5l16.7 6.9 8.8-21.2-16.7-6.9a51.6 51.6 0 0 0 0-19.2l16.7-6.9-8.8-21.2-16.7 6.9a52.5 52.5 0 0 0-13.5-13.5L199 288l-21.2-8.8-6.9 16.7a53.3 53.3 0 0 0-19.1 0l-6.9-16.7-21.2 8.8 6.9 16.7a52.5 52.5 0 0 0-13.5 13.5l-16.7-6.9-8.8 21.2 16.7 6.9a53.3 53.3 0 0 0 0 19.1l-16.7 6.9 8.6 21.3zm32.4-49.6a31 31 0 0 1 57.3 23.7 31 31 0 0 1-40.5 16.8 31 31 0 0 1-16.8-40.5z\"></path><path d=\"M244.6 245.5l-24.1 24.1 20 20 24.1-24.1a76.4 76.4 0 0 0 29.2 12.1v34.1h28.3v-34.1c10.6-2 20.5-6.2 29.2-12.1l24.1 24.1 20-20-24.1-24.1a76.6 76.6 0 0 0 12.1-29.1h34.1V188h-34.1a76.6 76.6 0 0 0-12.1-29.1l24.1-24.1-20-20-24.1 24.1a76.4 76.4 0 0 0-29.2-12.1V92.6h-28.3v34.1a77.7 77.7 0 0 0-29.2 12.1l-24.1-24.1-20 20 24.1 24.1a76.4 76.4 0 0 0-12.1 29.2h-34.1v28.3h34.1c2 10.7 6.2 20.6 12.1 29.2zm63.4-91.7a48.4 48.4 0 0 1 48.4 48.4v.1a48.4 48.4 0 1 1-48.4-48.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M100.2 386.7l16.7-6.9c3.6 5.2 8.1 9.8 13.5 13.5l-6.9 16.7 21.2 8.8 6.9-16.7a51 51 0 0 0 19.1 0l6.9 16.7L199 410l-6.9-16.7c5.2-3.6 9.8-8.2 13.5-13.5l16.7 6.9 8.8-21.2-16.7-6.9a51.6 51.6 0 0 0 0-19.2l16.7-6.9-8.8-21.2-16.7 6.9a52.5 52.5 0 0 0-13.5-13.5L199 288l-21.2-8.8-6.9 16.7a53.3 53.3 0 0 0-19.1 0l-6.9-16.7-21.2 8.8 6.9 16.7a52.5 52.5 0 0 0-13.5 13.5l-16.7-6.9-8.8 21.2 16.7 6.9a53.3 53.3 0 0 0 0 19.1l-16.7 6.9 8.6 21.3zm32.4-49.6a31 31 0 0 1 57.3 23.7 31 31 0 0 1-40.5 16.8 31 31 0 0 1-16.8-40.5z\"></path><path d=\"M244.6 245.5l-24.1 24.1 20 20 24.1-24.1a76.4 76.4 0 0 0 29.2 12.1v34.1h28.3v-34.1c10.6-2 20.5-6.2 29.2-12.1l24.1 24.1 20-20-24.1-24.1a76.6 76.6 0 0 0 12.1-29.1h34.1V188h-34.1a76.6 76.6 0 0 0-12.1-29.1l24.1-24.1-20-20-24.1 24.1a76.4 76.4 0 0 0-29.2-12.1V92.6h-28.3v34.1a77.7 77.7 0 0 0-29.2 12.1l-24.1-24.1-20 20 24.1 24.1a76.4 76.4 0 0 0-12.1 29.2h-34.1v28.3h34.1c2 10.7 6.2 20.6 12.1 29.2zm63.4-91.7a48.4 48.4 0 0 1 48.4 48.4v.1a48.4 48.4 0 1 1-48.4-48.5z\"></path></svg>')}:host .cheveron-right{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M211.4 407.4l-18.8-21.2 135.6-120.5a14 14 0 0 0 4.8-10.6 14 14 0 0 0-4.8-10.6L192.6 124l18.8-21.2L347 223.3a42.5 42.5 0 0 1 0 63.6L211.4 407.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M211.4 407.4l-18.8-21.2 135.6-120.5a14 14 0 0 0 4.8-10.6 14 14 0 0 0-4.8-10.6L192.6 124l18.8-21.2L347 223.3a42.5 42.5 0 0 1 0 63.6L211.4 407.4z\"></path></svg>')}:host .map-marker{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 411.2c-9.1 0-17.1-5.8-19.8-14.5l-58.9-188.6a82.6 82.6 0 0 1 20.1-84.7 82.3 82.3 0 0 1 58.6-24.3c22 0 42.7 8.5 58.3 24l.3.3a82.6 82.6 0 0 1 20.1 84.7l-58.9 188.6a20.7 20.7 0 0 1-19.8 14.5zm0-283.8a54.2 54.2 0 0 0-38.6 16 54.2 54.2 0 0 0-13.2 55.8l.1.3 51.7 165.4 51.8-165.7a54 54 0 0 0-13.1-55.7l-.1-.1a54.2 54.2 0 0 0-38.6-16z\"></path><circle cx=\"255.1\" cy=\"184.3\" r=\"21.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.1 411.2c-9.1 0-17.1-5.8-19.8-14.5l-58.9-188.6a82.6 82.6 0 0 1 20.1-84.7 82.3 82.3 0 0 1 58.6-24.3c22 0 42.7 8.5 58.3 24l.3.3a82.6 82.6 0 0 1 20.1 84.7l-58.9 188.6a20.7 20.7 0 0 1-19.8 14.5zm0-283.8a54.2 54.2 0 0 0-38.6 16 54.2 54.2 0 0 0-13.2 55.8l.1.3 51.7 165.4 51.8-165.7a54 54 0 0 0-13.1-55.7l-.1-.1a54.2 54.2 0 0 0-38.6-16z\"></path><circle cx=\"255.1\" cy=\"184.3\" r=\"21.2\"></circle></svg>')}:host .share{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M395.4 323.6a57 57 0 0 0-78.9-18.7c-5 3.1-9.5 6.9-13.3 11.3l-97.9-48.9a54.3 54.3 0 0 0 0-24.4l97.9-49a57.2 57.2 0 1 0-12.7-25.3l-97.9 49a57.2 57.2 0 1 0 0 75l97.9 49a57 57 0 0 0 42.8 67.9 57.5 57.5 0 0 0 62.1-85.9zm-48.8-196a29 29 0 1 1-28.9 29v-1.4a29 29 0 0 1 28.9-27.6zM165.7 279.1a29 29 0 1 1 12.7-25.4v2.8a29.2 29.2 0 0 1-12.7 22.6zm174.2 102.8a29 29 0 0 1-9.6-52.2l1.1-.7a28.1 28.1 0 0 1 21.8-3.5 29 29 0 0 1-13.3 56.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M395.4 323.6a57 57 0 0 0-78.9-18.7c-5 3.1-9.5 6.9-13.3 11.3l-97.9-48.9a54.3 54.3 0 0 0 0-24.4l97.9-49a57.2 57.2 0 1 0-12.7-25.3l-97.9 49a57.2 57.2 0 1 0 0 75l97.9 49a57 57 0 0 0 42.8 67.9 57.5 57.5 0 0 0 62.1-85.9zm-48.8-196a29 29 0 1 1-28.9 29v-1.4a29 29 0 0 1 28.9-27.6zM165.7 279.1a29 29 0 1 1 12.7-25.4v2.8a29.2 29.2 0 0 1-12.7 22.6zm174.2 102.8a29 29 0 0 1-9.6-52.2l1.1-.7a28.1 28.1 0 0 1 21.8-3.5 29 29 0 0 1-13.3 56.4z\"></path></svg>')}:host .exchange{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M218.4 207.1a62.3 62.3 0 0 1 47.7-22.2h121.6l-51.3 61.3 21.9 18 78.2-93.5-79.2-94.6-21.7 18.2 52.1 62.2H266.2a90.1 90.1 0 0 0-69.4 32.4l-28.4 33.9 21.9 18 28.1-33.7z\"></path><path d=\"M205.5 325.5h-83l51.3-61.4-21.8-18-78.4 93.6 79.2 94.6 21.8-18.2-52.1-62.2h83\"></path><path d=\"M205.5 353.9H244a90.1 90.1 0 0 0 69.4-32.4l28.5-34-21.9-18-28.3 33.8a62.3 62.3 0 0 1-47.7 22.2h-38.5\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M218.4 207.1a62.3 62.3 0 0 1 47.7-22.2h121.6l-51.3 61.3 21.9 18 78.2-93.5-79.2-94.6-21.7 18.2 52.1 62.2H266.2a90.1 90.1 0 0 0-69.4 32.4l-28.4 33.9 21.9 18 28.1-33.7z\"></path><path d=\"M205.5 325.5h-83l51.3-61.4-21.8-18-78.4 93.6 79.2 94.6 21.8-18.2-52.1-62.2h83\"></path><path d=\"M205.5 353.9H244a90.1 90.1 0 0 0 69.4-32.4l28.5-34-21.9-18-28.3 33.8a62.3 62.3 0 0 1-47.7 22.2h-38.5\"></path></svg>')}:host .download{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 269.3h-28.3v28.3h28.3v99.2H113.4v-99.2h28.3v-28.3h-28.3A28.4 28.4 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.2 28.2 0 0 0-28.2-28.3z\"></path><path d=\"M331.5 243.5l-62.2 52.1V174.1a90.1 90.1 0 0 0-32.4-69.4l-36.3-30.4L182.4 96l36.3 30.4a62.3 62.3 0 0 1 22.2 47.7v121.6l-62.3-52.1-18.2 21.7 94.6 79.2 94.6-79.2-18.1-21.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 269.3h-28.3v28.3h28.3v99.2H113.4v-99.2h28.3v-28.3h-28.3A28.4 28.4 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.2 28.2 0 0 0-28.2-28.3z\"></path><path d=\"M331.5 243.5l-62.2 52.1V174.1a90.1 90.1 0 0 0-32.4-69.4l-36.3-30.4L182.4 96l36.3 30.4a62.3 62.3 0 0 1 22.2 47.7v121.6l-62.3-52.1-18.2 21.7 94.6 79.2 94.6-79.2-18.1-21.8z\"></path></svg>')}:host .exclamation{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M240.9 99.2h28.3v240.9h-28.3z\"></path><circle cx=\"255\" cy=\"389.8\" r=\"21.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M240.9 99.2h28.3v240.9h-28.3z\"></path><circle cx=\"255\" cy=\"389.8\" r=\"21.2\"></circle></svg>')}:host .check{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M210.9 375.9a42.7 42.7 0 0 1-30.1-12.5l-77.5-77.5 20-20 77.5 77.5a14 14 0 0 0 10.6 4.1 14 14 0 0 0 10.2-5l178.5-210 21.6 18.4-178.5 210a42.4 42.4 0 0 1-30.7 14.9l-1.6.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M210.9 375.9a42.7 42.7 0 0 1-30.1-12.5l-77.5-77.5 20-20 77.5 77.5a14 14 0 0 0 10.6 4.1 14 14 0 0 0 10.2-5l178.5-210 21.6 18.4-178.5 210a42.4 42.4 0 0 1-30.7 14.9l-1.6.1z\"></path></svg>')}:host .question{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M269.3 340.2H241v-29.9c0-46.4 21.2-69.8 62.8-99 28.6-20 36.8-41.4 25.1-65.1a46.6 46.6 0 0 0-33.9-24.1 87.3 87.3 0 0 0-70.8 18.7l-18.4-21.5a115.2 115.2 0 0 1 95-24.9 74.1 74.1 0 0 1 53.6 39.3 69 69 0 0 1 5 52.5c-5.6 17.7-18.8 34-39.3 48.3-39.8 27.9-50.8 44.2-50.8 75.8v29.9z\"></path><circle cx=\"255\" cy=\"389.8\" r=\"21.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M269.3 340.2H241v-29.9c0-46.4 21.2-69.8 62.8-99 28.6-20 36.8-41.4 25.1-65.1a46.6 46.6 0 0 0-33.9-24.1 87.3 87.3 0 0 0-70.8 18.7l-18.4-21.5a115.2 115.2 0 0 1 95-24.9 74.1 74.1 0 0 1 53.6 39.3 69 69 0 0 1 5 52.5c-5.6 17.7-18.8 34-39.3 48.3-39.8 27.9-50.8 44.2-50.8 75.8v29.9z\"></path><circle cx=\"255\" cy=\"389.8\" r=\"21.2\"></circle></svg>')}:host .trash{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M327.7 425.2H182.5c-22.4 0-41-17.5-42.4-39.9l-12.5-200.2 28.3-1.8 12.5 200.2c.5 7.5 6.7 13.3 14.1 13.3h145.2a14 14 0 0 0 14.1-13.3l12.5-200.2 28.3 1.8-12.5 200.2a42.6 42.6 0 0 1-42.4 39.9z\"></path><path d=\"M113.4 134.6h283.5v28.3H113.4z\"></path><path d=\"M226.8 85h56.7v28.3h-56.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M327.7 425.2H182.5c-22.4 0-41-17.5-42.4-39.9l-12.5-200.2 28.3-1.8 12.5 200.2c.5 7.5 6.7 13.3 14.1 13.3h145.2a14 14 0 0 0 14.1-13.3l12.5-200.2 28.3 1.8-12.5 200.2a42.6 42.6 0 0 1-42.4 39.9z\"></path><path d=\"M113.4 134.6h283.5v28.3H113.4z\"></path><path d=\"M226.8 85h56.7v28.3h-56.7z\"></path></svg>')}:host .warning{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M390.1 425.2H120.2c-14.9 0-28.5-7.6-36.3-20.4a42.28 42.28 0 0 1-1.5-41.6l135.1-262.4c7.4-14 21.8-22.8 37.7-22.8 15.9 0 30.3 8.7 37.7 22.8v.1l135 262.3c6.8 13.3 6.3 28.8-1.5 41.6a42.23 42.23 0 0 1-36.3 20.4zM242.6 114l-135 262.2c-3.3 6.4-.7 11.8.5 13.9 1.2 2 4.9 6.8 12.1 6.8h269.9c7.2 0 10.9-4.8 12.1-6.8 1.2-2 3.8-7.5.5-13.9L267.7 114c-2.5-4.7-7.2-7.6-12.5-7.6-5.4 0-10.1 2.8-12.6 7.6z\"></path><path d=\"M240.9 170.1h28.3v134.6h-28.3z\"></path><circle cx=\"255\" cy=\"347.3\" r=\"21.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M390.1 425.2H120.2c-14.9 0-28.5-7.6-36.3-20.4a42.28 42.28 0 0 1-1.5-41.6l135.1-262.4c7.4-14 21.8-22.8 37.7-22.8 15.9 0 30.3 8.7 37.7 22.8v.1l135 262.3c6.8 13.3 6.3 28.8-1.5 41.6a42.23 42.23 0 0 1-36.3 20.4zM242.6 114l-135 262.2c-3.3 6.4-.7 11.8.5 13.9 1.2 2 4.9 6.8 12.1 6.8h269.9c7.2 0 10.9-4.8 12.1-6.8 1.2-2 3.8-7.5.5-13.9L267.7 114c-2.5-4.7-7.2-7.6-12.5-7.6-5.4 0-10.1 2.8-12.6 7.6z\"></path><path d=\"M240.9 170.1h28.3v134.6h-28.3z\"></path><circle cx=\"255\" cy=\"347.3\" r=\"21.2\"></circle></svg>')}:host .arrow-right{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M195.4 269.8h164L307.3 332l21.7 18.2 79.2-94.6-79.1-94.6-21.7 18.2 52.1 62.3H195.4a62 62 0 0 1-47.7-22.2L117.3 183l-21.7 18.2 30.4 36.3a90.4 90.4 0 0 0 69.4 32.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M195.4 269.8h164L307.3 332l21.7 18.2 79.2-94.6-79.1-94.6-21.7 18.2 52.1 62.3H195.4a62 62 0 0 1-47.7-22.2L117.3 183l-21.7 18.2 30.4 36.3a90.4 90.4 0 0 0 69.4 32.3z\"></path></svg>')}:host .skull{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.3 342.2l.5.4c2.1 1.6 4.3 6.2 4.3 8.8V383a31 31 0 0 0 31 31h95a31 31 0 0 0 31-31v-31.6c0-2.6 2.3-7.2 4.3-8.8l.5-.4L374 306a52.1 52.1 0 0 0 15.7-37.2V220h-.1A136.3 136.3 0 0 0 253.9 89.2h-.6a136.1 136.1 0 0 0-135.6 130.6h-.1v48.8c0 13.9 5.7 27.5 15.7 37.2l37 36.4zm-32.7-116.9c0-64 52.1-116.1 116.1-116.1 64 0 116.1 52.1 116.1 116.1v43.4a32 32 0 0 1-9.7 22.9L323.8 327a33.5 33.5 0 0 0-11.6 24.2v31.6a11 11 0 0 1-11 11h-21.5v-53h-10v53h-32v-53h-10v53h-21.5a11 11 0 0 1-11-11v-31.6c0-8.7-4.9-18.7-11.6-24.2l-36.3-35.4c-6.1-6-9.7-14.3-9.7-22.9v-43.4z\"></path><path d=\"M190.6 256.8a21 21 0 1 0 42 0v-21a21 21 0 1 0-42 0v21z\"></path><path d=\"M295.7 277.8a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M170.3 342.2l.5.4c2.1 1.6 4.3 6.2 4.3 8.8V383a31 31 0 0 0 31 31h95a31 31 0 0 0 31-31v-31.6c0-2.6 2.3-7.2 4.3-8.8l.5-.4L374 306a52.1 52.1 0 0 0 15.7-37.2V220h-.1A136.3 136.3 0 0 0 253.9 89.2h-.6a136.1 136.1 0 0 0-135.6 130.6h-.1v48.8c0 13.9 5.7 27.5 15.7 37.2l37 36.4zm-32.7-116.9c0-64 52.1-116.1 116.1-116.1 64 0 116.1 52.1 116.1 116.1v43.4a32 32 0 0 1-9.7 22.9L323.8 327a33.5 33.5 0 0 0-11.6 24.2v31.6a11 11 0 0 1-11 11h-21.5v-53h-10v53h-32v-53h-10v53h-21.5a11 11 0 0 1-11-11v-31.6c0-8.7-4.9-18.7-11.6-24.2l-36.3-35.4c-6.1-6-9.7-14.3-9.7-22.9v-43.4z\"></path><path d=\"M190.6 256.8a21 21 0 1 0 42 0v-21a21 21 0 1 0-42 0v21z\"></path><path d=\"M295.7 277.8a21 21 0 0 0 21-21v-21a21 21 0 1 0-42 0v21a21 21 0 0 0 21 21z\"></path></svg>')}:host .berlin{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M83.4 179.6h343.5v28.6H83.4z\"></path><path d=\"M112 235.3h28.6v157.4H112z\"></path><path d=\"M197.9 235.3h28.6v157.4h-28.6z\"></path><path d=\"M283.7 235.3h28.6v157.4h-28.6z\"></path><path d=\"M283.7 129.1H298v41.1h-14.3z\"></path><path d=\"M248 106.4h14.3v63.8H248z\"></path><path d=\"M212.2 129.1h14.3v41.1h-14.3z\"></path><path d=\"M369.6 235.3h28.6v157.4h-28.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M83.4 179.6h343.5v28.6H83.4z\"></path><path d=\"M112 235.3h28.6v157.4H112z\"></path><path d=\"M197.9 235.3h28.6v157.4h-28.6z\"></path><path d=\"M283.7 235.3h28.6v157.4h-28.6z\"></path><path d=\"M283.7 129.1H298v41.1h-14.3z\"></path><path d=\"M248 106.4h14.3v63.8H248z\"></path><path d=\"M212.2 129.1h14.3v41.1h-14.3z\"></path><path d=\"M369.6 235.3h28.6v157.4h-28.6z\"></path></svg>')}:host .london{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M419.5 202A169.3 169.3 0 0 0 258.9 85.9 169.5 169.5 0 0 0 98.3 202H67.4v108.7h31.8a169.3 169.3 0 0 0 159.7 113.6c73.8 0 136.6-47.6 159.7-113.6h24.6V202h-23.7zm-160.6-87.9c59 0 109.5 36.4 130.6 87.9H128.3a141.3 141.3 0 0 1 130.6-87.9zm0 282.1c-58 0-107.9-35.2-129.6-85.4h259.1a141.1 141.1 0 0 1-129.5 85.4zm155.9-120.7H103v.2V233h311.8v42.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M419.5 202A169.3 169.3 0 0 0 258.9 85.9 169.5 169.5 0 0 0 98.3 202H67.4v108.7h31.8a169.3 169.3 0 0 0 159.7 113.6c73.8 0 136.6-47.6 159.7-113.6h24.6V202h-23.7zm-160.6-87.9c59 0 109.5 36.4 130.6 87.9H128.3a141.3 141.3 0 0 1 130.6-87.9zm0 282.1c-58 0-107.9-35.2-129.6-85.4h259.1a141.1 141.1 0 0 1-129.5 85.4zm155.9-120.7H103v.2V233h311.8v42.5z\"></path></svg>')}:host .zurich{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M332.4 342.7c3.9 13.1 5.4 26.5 6 40.1.1 1.2-.7 10.6-.5 12.4l1.8-2.8c25.7-45.2 52.4-98.4 78.1-143.6 5.8-10.2 5.2-20.5-1.5-28.4a21.7 21.7 0 0 0-31.9-1.8 22.4 22.4 0 0 0-1.5 32.8l2.9 2.8-2.1 3.6-50.5 80.1a7.2 7.2 0 0 0-.8 4.8M61.6 230.2c7.7-38.5 30.9-66.5 64.2-86.4a125 125 0 0 1 43.3-14.8c.4-2.1.8-4 1-5.8a6.9 6.9 0 0 1 4.4-5.8 25 25 0 0 1 16.4-1.6c3.7 1 5 2.9 4.8 6.7l-.4 4.5c28.2.2 55.7 2.3 83.2 4.8l-4.7 54.1-21.4.6c-3.1.1-5.4 1.3-6.3 4.4-.9 3.1-.4 6.2 2.5 7.9 2.6 1.5 5.7 3 8.5 3a3170.9 3170.9 0 0 0 69.6-1.5c-3.2 7.7-6.4 14.8-9.1 22-1.1 3-2.8 3.7-5.6 3.7-10.2 0-20.3.4-30.5.3-11-.1-22.1.1-33.1-.8a32.1 32.1 0 0 1-28.7-31.7 32.9 32.9 0 0 1 28.7-33.2l5.2-.4.6-6.6c-10.7-.3-21-.6-31.4-.7-.9 0-27.3.7-27.4 1.7-.8 9.8-3.6 46.5-4 56.3-.4 10 3.9 16.5 13.1 20.4 2.6 1.1 5.4 2 8.1 2.6 15.2 3.3 30.7 3.3 46.2 3.1l14.9-.4c-.9 5-1.4 9.5-2.5 13.9-.6 2.3.3 3.4 2 4.7a157.3 157.3 0 0 1 45 52l1.5 2.5a7112 7112 0 0 0 32.9-52.2c.6-.9.3-2.8-.3-3.9a47.1 47.1 0 0 1-3.8-37.6 50.7 50.7 0 0 1 41.9-35.5 51 51 0 0 1 50.7 19.7c24.9 35.3-1.9 67.2-1.9 67.2L365.6 395h-52.5a141.5 141.5 0 0 0-79.8-135c-1.6-.7-3.4-.9-5.2-1.1-10.7-1-21.5-1.1-31.9-3.1-20.2-3.7-30.3-16.2-31.7-36.8-1.1-17.1-.8-34.1.7-51.1l.9-10.6c-2.1.5-4 .9-5.7 1.5-37 12.7-62.3 37.3-71 75.7-8.7 38.5 2.6 72.2 31.7 98.9 16.4 15 51.9 46.9 68.6 61.6h-38c-8.4-7.5-43-36-51.2-43.6-35.7-32.6-48.4-74-38.9-121.2\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M332.4 342.7c3.9 13.1 5.4 26.5 6 40.1.1 1.2-.7 10.6-.5 12.4l1.8-2.8c25.7-45.2 52.4-98.4 78.1-143.6 5.8-10.2 5.2-20.5-1.5-28.4a21.7 21.7 0 0 0-31.9-1.8 22.4 22.4 0 0 0-1.5 32.8l2.9 2.8-2.1 3.6-50.5 80.1a7.2 7.2 0 0 0-.8 4.8M61.6 230.2c7.7-38.5 30.9-66.5 64.2-86.4a125 125 0 0 1 43.3-14.8c.4-2.1.8-4 1-5.8a6.9 6.9 0 0 1 4.4-5.8 25 25 0 0 1 16.4-1.6c3.7 1 5 2.9 4.8 6.7l-.4 4.5c28.2.2 55.7 2.3 83.2 4.8l-4.7 54.1-21.4.6c-3.1.1-5.4 1.3-6.3 4.4-.9 3.1-.4 6.2 2.5 7.9 2.6 1.5 5.7 3 8.5 3a3170.9 3170.9 0 0 0 69.6-1.5c-3.2 7.7-6.4 14.8-9.1 22-1.1 3-2.8 3.7-5.6 3.7-10.2 0-20.3.4-30.5.3-11-.1-22.1.1-33.1-.8a32.1 32.1 0 0 1-28.7-31.7 32.9 32.9 0 0 1 28.7-33.2l5.2-.4.6-6.6c-10.7-.3-21-.6-31.4-.7-.9 0-27.3.7-27.4 1.7-.8 9.8-3.6 46.5-4 56.3-.4 10 3.9 16.5 13.1 20.4 2.6 1.1 5.4 2 8.1 2.6 15.2 3.3 30.7 3.3 46.2 3.1l14.9-.4c-.9 5-1.4 9.5-2.5 13.9-.6 2.3.3 3.4 2 4.7a157.3 157.3 0 0 1 45 52l1.5 2.5a7112 7112 0 0 0 32.9-52.2c.6-.9.3-2.8-.3-3.9a47.1 47.1 0 0 1-3.8-37.6 50.7 50.7 0 0 1 41.9-35.5 51 51 0 0 1 50.7 19.7c24.9 35.3-1.9 67.2-1.9 67.2L365.6 395h-52.5a141.5 141.5 0 0 0-79.8-135c-1.6-.7-3.4-.9-5.2-1.1-10.7-1-21.5-1.1-31.9-3.1-20.2-3.7-30.3-16.2-31.7-36.8-1.1-17.1-.8-34.1.7-51.1l.9-10.6c-2.1.5-4 .9-5.7 1.5-37 12.7-62.3 37.3-71 75.7-8.7 38.5 2.6 72.2 31.7 98.9 16.4 15 51.9 46.9 68.6 61.6h-38c-8.4-7.5-43-36-51.2-43.6-35.7-32.6-48.4-74-38.9-121.2\"></path></svg>')}:host .handshake{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M265.4 341.4a22.5 22.5 0 0 0-13.5-6.2 22.3 22.3 0 0 0-24.6-25.6 22.4 22.4 0 0 0-25.4-21.5 22.3 22.3 0 0 0-37.8-14L146.8 291a22.2 22.2 0 0 0-.5 31.6c2.9 3 6.4 4.9 10.1 6a22.5 22.5 0 0 0 3.7 29.2c4.1 3.7 9.3 5.6 14.8 5.6h1.4l1.1-.1v.7a22.3 22.3 0 0 0 22.3 21h1.4c3.8-.2 7.4-1.4 10.6-3.4a22.5 22.5 0 0 0 21.4 15.8h.4a22 22 0 0 0 15.7-6.8l16.8-17.3a22.8 22.8 0 0 0-.6-31.9zm-112.8-34.5c0-2.6 1.1-5.1 3-6.9l17.3-16.8a9.7 9.7 0 0 1 13.8.2 9.9 9.9 0 0 1 .6 13l-18 17.7-.1-.1a9.7 9.7 0 0 1-13.8-.2 9.4 9.4 0 0 1-2.8-6.9zm29.7 40.6a9.6 9.6 0 0 1-6.7 3.3c-2.6.1-5.1-.7-7.1-2.4a9.8 9.8 0 0 1-.8-13.8l29.7-30.3.3-.3a9.8 9.8 0 0 1 14.6 13l-30 30.5zm24.8 21.5a9.6 9.6 0 0 1-6.7 3.3c-2.6.1-5.1-.7-7.1-2.4a9.8 9.8 0 0 1-.9-13.8l29.7-30.3.3-.3a9.8 9.8 0 0 1 14.7 13l-30 30.5zm36.6-19.1a9.8 9.8 0 0 1 6.1-2.1 9.7 9.7 0 0 1 7 16.5L240 381.6a10 10 0 0 1-6.9 3c-2.6.1-5.1-.9-7-2.8-3.9-3.8-4-10-.2-13.8l.1-.1 17.7-18z\"></path><path d=\"M123.7 246c-.5 7 2.2 13.8 7.2 18.7l12.3 12.4 9.1-8.7-12.5-12.6-.1-.1a11.2 11.2 0 0 1-3.4-8.8l1.3-18.7 55.3-56.9 17.9-2a11 11 0 0 1 8.9 3l16.2 15.9 9.1-8.7-16.6-16.2c-5.1-4.9-12-7.2-19-6.5l-7.1.8c1-4.7-.1-9.3-3.5-12.6L171 118c-2.9-2.8-7-4-11.4-3.4-3.7.6-7.4 2.5-10.2 5.4l-64.1 66c-6.5 6.6-7.1 16.2-1.4 21.6l27.8 27a13 13 0 0 0 11.4 3.4l1.2-.2-.6 8.2zm-2.3-19.5L92 197.8l69.2-72 30 29.1-69.8 71.6z\"></path><circle cx=\"120.4\" cy=\"197.7\" r=\"9.7\"></circle><path d=\"M424.8 178l-67.1-63c-3-2.8-6.7-4.6-10.5-5-4.3-.5-8.4 1-11.2 3.9l-26.6 28.3a13.2 13.2 0 0 0-3.2 11.4l.3 1.2-8.3-.4a24 24 0 0 0-18.6 7.5l-18 19-24.9 23.8-8.7 8.4a22.3 22.3 0 0 0 15.1 38.5c6 .1 11.6-2.1 15.9-6.2l18.4-17.3 84.7 81.1a9.6 9.6 0 0 1 2.5 6.8c-.1 2.6-1.2 5-3.1 6.8a9.8 9.8 0 0 1-13.8-.5l-45.5-38.2-8.1 9.6 43.6 36.8a8.6 8.6 0 0 1 2.2 7c-.2 2.8-1.5 5.6-3.5 7.5a9.9 9.9 0 0 1-12.7.6L293.2 319l-8.3 9.5 29.7 26.2a9.8 9.8 0 0 1-1.2 13 9.8 9.8 0 0 1-13.8-.5l-12.9-11.1-8.2 9.6 11.5 9.8-.1.1c3.6 3.8 3.2 10-.8 13.8a9.7 9.7 0 0 1-13.8-.5l-3.8-3.1-8.8 9 3.7 3a22.4 22.4 0 0 0 38.5-15l1.1.1h.8a22.3 22.3 0 0 0 22.4-22.4h.6c5.5 0 11-2 15.3-6a23.9 23.9 0 0 0 7.5-16.3l1.5.1h.8a22.3 22.3 0 0 0 16.4-37.6L320 253l-42.2-42.2-27.3 25.7a9.8 9.8 0 0 1-13.5-14.1l8.7-8.3 25-23.9 18.4-19.4c2.3-2.4 5.5-3.7 8.7-3.6l18.8 1 49 45.9 3.5 19.5a11 11 0 0 1-2.5 9.2L350 262.9l9.2 8.7 17.1-20.7a24 24 0 0 0 5.2-19.4l-.5-3c3.2 2.4 6.9 3.7 10.4 3.7a13 13 0 0 0 9.6-4l26.6-28.3c5-6.1 4-15.6-2.8-21.9zm-33.3 41.3L318 151.4l28-30.2 73.8 67.3-28.3 30.8z\"></path><circle cx=\"390.3\" cy=\"188.8\" r=\"9.7\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M265.4 341.4a22.5 22.5 0 0 0-13.5-6.2 22.3 22.3 0 0 0-24.6-25.6 22.4 22.4 0 0 0-25.4-21.5 22.3 22.3 0 0 0-37.8-14L146.8 291a22.2 22.2 0 0 0-.5 31.6c2.9 3 6.4 4.9 10.1 6a22.5 22.5 0 0 0 3.7 29.2c4.1 3.7 9.3 5.6 14.8 5.6h1.4l1.1-.1v.7a22.3 22.3 0 0 0 22.3 21h1.4c3.8-.2 7.4-1.4 10.6-3.4a22.5 22.5 0 0 0 21.4 15.8h.4a22 22 0 0 0 15.7-6.8l16.8-17.3a22.8 22.8 0 0 0-.6-31.9zm-112.8-34.5c0-2.6 1.1-5.1 3-6.9l17.3-16.8a9.7 9.7 0 0 1 13.8.2 9.9 9.9 0 0 1 .6 13l-18 17.7-.1-.1a9.7 9.7 0 0 1-13.8-.2 9.4 9.4 0 0 1-2.8-6.9zm29.7 40.6a9.6 9.6 0 0 1-6.7 3.3c-2.6.1-5.1-.7-7.1-2.4a9.8 9.8 0 0 1-.8-13.8l29.7-30.3.3-.3a9.8 9.8 0 0 1 14.6 13l-30 30.5zm24.8 21.5a9.6 9.6 0 0 1-6.7 3.3c-2.6.1-5.1-.7-7.1-2.4a9.8 9.8 0 0 1-.9-13.8l29.7-30.3.3-.3a9.8 9.8 0 0 1 14.7 13l-30 30.5zm36.6-19.1a9.8 9.8 0 0 1 6.1-2.1 9.7 9.7 0 0 1 7 16.5L240 381.6a10 10 0 0 1-6.9 3c-2.6.1-5.1-.9-7-2.8-3.9-3.8-4-10-.2-13.8l.1-.1 17.7-18z\"></path><path d=\"M123.7 246c-.5 7 2.2 13.8 7.2 18.7l12.3 12.4 9.1-8.7-12.5-12.6-.1-.1a11.2 11.2 0 0 1-3.4-8.8l1.3-18.7 55.3-56.9 17.9-2a11 11 0 0 1 8.9 3l16.2 15.9 9.1-8.7-16.6-16.2c-5.1-4.9-12-7.2-19-6.5l-7.1.8c1-4.7-.1-9.3-3.5-12.6L171 118c-2.9-2.8-7-4-11.4-3.4-3.7.6-7.4 2.5-10.2 5.4l-64.1 66c-6.5 6.6-7.1 16.2-1.4 21.6l27.8 27a13 13 0 0 0 11.4 3.4l1.2-.2-.6 8.2zm-2.3-19.5L92 197.8l69.2-72 30 29.1-69.8 71.6z\"></path><circle cx=\"120.4\" cy=\"197.7\" r=\"9.7\"></circle><path d=\"M424.8 178l-67.1-63c-3-2.8-6.7-4.6-10.5-5-4.3-.5-8.4 1-11.2 3.9l-26.6 28.3a13.2 13.2 0 0 0-3.2 11.4l.3 1.2-8.3-.4a24 24 0 0 0-18.6 7.5l-18 19-24.9 23.8-8.7 8.4a22.3 22.3 0 0 0 15.1 38.5c6 .1 11.6-2.1 15.9-6.2l18.4-17.3 84.7 81.1a9.6 9.6 0 0 1 2.5 6.8c-.1 2.6-1.2 5-3.1 6.8a9.8 9.8 0 0 1-13.8-.5l-45.5-38.2-8.1 9.6 43.6 36.8a8.6 8.6 0 0 1 2.2 7c-.2 2.8-1.5 5.6-3.5 7.5a9.9 9.9 0 0 1-12.7.6L293.2 319l-8.3 9.5 29.7 26.2a9.8 9.8 0 0 1-1.2 13 9.8 9.8 0 0 1-13.8-.5l-12.9-11.1-8.2 9.6 11.5 9.8-.1.1c3.6 3.8 3.2 10-.8 13.8a9.7 9.7 0 0 1-13.8-.5l-3.8-3.1-8.8 9 3.7 3a22.4 22.4 0 0 0 38.5-15l1.1.1h.8a22.3 22.3 0 0 0 22.4-22.4h.6c5.5 0 11-2 15.3-6a23.9 23.9 0 0 0 7.5-16.3l1.5.1h.8a22.3 22.3 0 0 0 16.4-37.6L320 253l-42.2-42.2-27.3 25.7a9.8 9.8 0 0 1-13.5-14.1l8.7-8.3 25-23.9 18.4-19.4c2.3-2.4 5.5-3.7 8.7-3.6l18.8 1 49 45.9 3.5 19.5a11 11 0 0 1-2.5 9.2L350 262.9l9.2 8.7 17.1-20.7a24 24 0 0 0 5.2-19.4l-.5-3c3.2 2.4 6.9 3.7 10.4 3.7a13 13 0 0 0 9.6-4l26.6-28.3c5-6.1 4-15.6-2.8-21.9zm-33.3 41.3L318 151.4l28-30.2 73.8 67.3-28.3 30.8z\"></path><circle cx=\"390.3\" cy=\"188.8\" r=\"9.7\"></circle></svg>')}:host .puzzle{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.2 436.3a53.2 53.2 0 0 1-53.2-50.5h-77.4V280.2h25.8a24.9 24.9 0 0 0 0-49.8h-25.8V124.5h77.8a53.3 53.3 0 0 1 106.4 0l77-.1-.1 105.4h-25.2a24.9 24.9 0 0 0 0 49.8h25.2v106.1h-77.3a53.3 53.3 0 0 1-53.2 50.6zm-102.3-78.8h77.4v25.8a24.9 24.9 0 0 0 49.8 0v-25.8h77.2V308a53.2 53.2 0 0 1 0-106.4v-48.8l-76.9.1V127a24.9 24.9 0 0 0-49.8 0v25.9h-77.7v49.2a53.2 53.2 0 0 1 0 106.4v49z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M255.2 436.3a53.2 53.2 0 0 1-53.2-50.5h-77.4V280.2h25.8a24.9 24.9 0 0 0 0-49.8h-25.8V124.5h77.8a53.3 53.3 0 0 1 106.4 0l77-.1-.1 105.4h-25.2a24.9 24.9 0 0 0 0 49.8h25.2v106.1h-77.3a53.3 53.3 0 0 1-53.2 50.6zm-102.3-78.8h77.4v25.8a24.9 24.9 0 0 0 49.8 0v-25.8h77.2V308a53.2 53.2 0 0 1 0-106.4v-48.8l-76.9.1V127a24.9 24.9 0 0 0-49.8 0v25.9h-77.7v49.2a53.2 53.2 0 0 1 0 106.4v49z\"></path></svg>')}:host .projector{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M324.1 296.9a55 55 0 1 1 0-109.9 55 55 0 0 1 0 109.9zm0-82.6a27.7 27.7 0 1 0 0 55.4 27.7 27.7 0 0 0 0-55.4z\"></path><path d=\"M142.9 200h85v7.1h-85z\"></path><path d=\"M142.9 227.3h85v7.1h-85z\"></path><path d=\"M142.9 254.7h85v7.1h-85z\"></path><path d=\"M396.6 142.8H113.1a28.3 28.3 0 0 0-28.3 28.3v141.7a28.3 28.3 0 0 0 28.3 28.3H124a38.9 38.9 0 0 0-3.8 16.6V368h21v-10.2c0-6.9 4.2-13.3 10.6-16.1l-.2-.4h206.1l-.2.4a17.7 17.7 0 0 1 10.6 16.1V368h21v-10.2c0-5.9-1.4-11.5-3.8-16.6h11.2a28.3 28.3 0 0 0 28.3-28.3V171.2a28.2 28.2 0 0 0-28.2-28.4zm0 170.1H113.1V171.2h283.5v141.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M324.1 296.9a55 55 0 1 1 0-109.9 55 55 0 0 1 0 109.9zm0-82.6a27.7 27.7 0 1 0 0 55.4 27.7 27.7 0 0 0 0-55.4z\"></path><path d=\"M142.9 200h85v7.1h-85z\"></path><path d=\"M142.9 227.3h85v7.1h-85z\"></path><path d=\"M142.9 254.7h85v7.1h-85z\"></path><path d=\"M396.6 142.8H113.1a28.3 28.3 0 0 0-28.3 28.3v141.7a28.3 28.3 0 0 0 28.3 28.3H124a38.9 38.9 0 0 0-3.8 16.6V368h21v-10.2c0-6.9 4.2-13.3 10.6-16.1l-.2-.4h206.1l-.2.4a17.7 17.7 0 0 1 10.6 16.1V368h21v-10.2c0-5.9-1.4-11.5-3.8-16.6h11.2a28.3 28.3 0 0 0 28.3-28.3V171.2a28.2 28.2 0 0 0-28.2-28.4zm0 170.1H113.1V171.2h283.5v141.7z\"></path></svg>')}:host .speechbubble{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M209.4 418.2v-28.3c7.6 0 14.7-2.9 20-8.3l31.8-31.8a56.3 56.3 0 0 1 40.1-16.6h95.8V148.9H113.6v184.3h114v28.3h-114a28.3 28.3 0 0 1-28.3-28.3V148.9a28.3 28.3 0 0 1 28.3-28.3h283.5a28.3 28.3 0 0 1 28.3 28.3v184.3a28.3 28.3 0 0 1-28.3 28.3h-95.8c-7.6 0-14.7 2.9-20 8.3l-31.8 31.8a56.3 56.3 0 0 1-40.1 16.6z\"></path><path d=\"M170.8 205h170.1v7.1H170.8z\"></path><path d=\"M170.8 226.2h141.7v7.1H170.8z\"></path><path d=\"M170.8 247.5h155.9v7.1H170.8z\"></path><path d=\"M170.8 268.8h141.7v7.1H170.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M209.4 418.2v-28.3c7.6 0 14.7-2.9 20-8.3l31.8-31.8a56.3 56.3 0 0 1 40.1-16.6h95.8V148.9H113.6v184.3h114v28.3h-114a28.3 28.3 0 0 1-28.3-28.3V148.9a28.3 28.3 0 0 1 28.3-28.3h283.5a28.3 28.3 0 0 1 28.3 28.3v184.3a28.3 28.3 0 0 1-28.3 28.3h-95.8c-7.6 0-14.7 2.9-20 8.3l-31.8 31.8a56.3 56.3 0 0 1-40.1 16.6z\"></path><path d=\"M170.8 205h170.1v7.1H170.8z\"></path><path d=\"M170.8 226.2h141.7v7.1H170.8z\"></path><path d=\"M170.8 247.5h155.9v7.1H170.8z\"></path><path d=\"M170.8 268.8h141.7v7.1H170.8z\"></path></svg>')}:host .cloud{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M236.7 370.7h-75.5c-18 0-35.4-6.2-49-17.5a73 73 0 0 1-11.4-100.5 74.8 74.8 0 0 1 42.6-27.2c-.4-38.3 17.7-67.4 50.7-80.8 31.9-12.9 64.2-5.1 91.8 21.9a63.2 63.2 0 0 1 66.5 4.9c20.5 14 30 34 27.9 58.5a76.2 76.2 0 0 1 31.7 26.5 70.1 70.1 0 0 1 12.2 46.8 74 74 0 0 1-66.1 66.8c-3.4.4-6.8.6-10.2.6H236.7zM224.3 167c-6.4 0-12.9 1.3-19.5 4-31.4 12.7-34.9 42.3-32.3 64.9l1.6 14.2-17.4 1.8a48.4 48.4 0 0 0-33.5 18.1 45 45 0 0 0-8.6 34.6 46.5 46.5 0 0 0 46.6 37.8H347.8c2.3 0 4.6-.1 6.9-.4a45.7 45.7 0 0 0 41.2-41.8c2.1-19.7-11.7-39.6-32.2-46.2l-3.1-1.1-1-.4-11.8-4.3 2.8-12.2c4.2-18.5-.3-31.6-14.3-41.1-14.5-9.9-29-9.5-45.4 1.3l-10.4 6.8-8.1-9.4c-15.3-17.7-31.5-26.6-48.1-26.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M236.7 370.7h-75.5c-18 0-35.4-6.2-49-17.5a73 73 0 0 1-11.4-100.5 74.8 74.8 0 0 1 42.6-27.2c-.4-38.3 17.7-67.4 50.7-80.8 31.9-12.9 64.2-5.1 91.8 21.9a63.2 63.2 0 0 1 66.5 4.9c20.5 14 30 34 27.9 58.5a76.2 76.2 0 0 1 31.7 26.5 70.1 70.1 0 0 1 12.2 46.8 74 74 0 0 1-66.1 66.8c-3.4.4-6.8.6-10.2.6H236.7zM224.3 167c-6.4 0-12.9 1.3-19.5 4-31.4 12.7-34.9 42.3-32.3 64.9l1.6 14.2-17.4 1.8a48.4 48.4 0 0 0-33.5 18.1 45 45 0 0 0-8.6 34.6 46.5 46.5 0 0 0 46.6 37.8H347.8c2.3 0 4.6-.1 6.9-.4a45.7 45.7 0 0 0 41.2-41.8c2.1-19.7-11.7-39.6-32.2-46.2l-3.1-1.1-1-.4-11.8-4.3 2.8-12.2c4.2-18.5-.3-31.6-14.3-41.1-14.5-9.9-29-9.5-45.4 1.3l-10.4 6.8-8.1-9.4c-15.3-17.7-31.5-26.6-48.1-26.6z\"></path></svg>')}:host .key{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326 175.6a70.6 70.6 0 0 0-141 0v.2c0 34.5 25 63.2 57.8 69.2v160.1h28.3v-30.4h26.3v-46h-26.3v-84.3a70.5 70.5 0 0 0 54.8-68.5v-.1l.1-.2zm-70.5 42.2a42.3 42.3 0 0 1-42.2-42.1c.1-23.2 19-42.1 42.2-42.1s42.1 18.9 42.2 42.1a42.3 42.3 0 0 1-42.2 42.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M326 175.6a70.6 70.6 0 0 0-141 0v.2c0 34.5 25 63.2 57.8 69.2v160.1h28.3v-30.4h26.3v-46h-26.3v-84.3a70.5 70.5 0 0 0 54.8-68.5v-.1l.1-.2zm-70.5 42.2a42.3 42.3 0 0 1-42.2-42.1c.1-23.2 19-42.1 42.2-42.1s42.1 18.9 42.2 42.1a42.3 42.3 0 0 1-42.2 42.1z\"></path></svg>')}:host .glass{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M266.9 394.6l-.1-123.3a75.4 75.4 0 0 0 61-73.9l-.1-113.1h-28.3l.1 113.1a47 47 0 0 1-46.8 46.9 47 47 0 0 1-46.9-46.8l-.1-113.1h-28.3l.1 113.1a75.3 75.3 0 0 0 61.1 73.8l.1 123.3h-54.4v28.3l135.3-.1v-28.3l-52.7.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M266.9 394.6l-.1-123.3a75.4 75.4 0 0 0 61-73.9l-.1-113.1h-28.3l.1 113.1a47 47 0 0 1-46.8 46.9 47 47 0 0 1-46.9-46.8l-.1-113.1h-28.3l.1 113.1a75.3 75.3 0 0 0 61.1 73.8l.1 123.3h-54.4v28.3l135.3-.1v-28.3l-52.7.1z\"></path></svg>')}:host .arrow-up{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M371.5 152l-123.4 1.1.3 28.3 81.2-.7-66.2 80.6-37.9 46.1a61.6 61.6 0 0 1-47.5 22.7l-47.4.4.3 28.3 47.4-.4c26.9-.3 52-12.3 69.1-33.1l37.9-46.2 66.2-80.6 15 79.8 27.9-5.2L371.5 152z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M371.5 152l-123.4 1.1.3 28.3 81.2-.7-66.2 80.6-37.9 46.1a61.6 61.6 0 0 1-47.5 22.7l-47.4.4.3 28.3 47.4-.4c26.9-.3 52-12.3 69.1-33.1l37.9-46.2 66.2-80.6 15 79.8 27.9-5.2L371.5 152z\"></path></svg>')}:host .diversify{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.7 242.4c-3.7-10.7-12.4-19-23.3-22.3-11.6-3.5-24.6-.6-33.6 7.4-4.9 4.3-8.5 10-10.3 16.2l-45.8.9c-1.1-6-3.3-11.7-6.2-16.8l35.6-32.5c13.4 7 30.3 4.5 41-6.1a35.93 35.93 0 0 0 7.6-39.7 35.59 35.59 0 0 0-26.8-20.5 35.58 35.58 0 0 0-32.4 12.1 35.58 35.58 0 0 0-6.6 33.9c.6 1.8 1.3 3.6 2.2 5.2l-34.4 31.4c-6.6-5.3-14.5-9.1-23.1-10.8l-1-44.2a35.5 35.5 0 0 0 23.8-27.2c2.4-13-3-26.8-13.6-34.7a35.66 35.66 0 0 0-38.4-2.6 35.54 35.54 0 0 0-18.1 32.5 35.5 35.5 0 0 0 25 32.2l1 43.8c-9.8 1.8-18.7 6.2-25.9 12.5L188 180.7c6.6-12.3 5.2-27.6-3.4-38.5a35.76 35.76 0 0 0-33.9-13 35.6 35.6 0 0 0-27 22.6 35.6 35.6 0 0 0 7.8 36.9 35.77 35.77 0 0 0 41.4 6.9l33.2 34.5c-2.3 4.4-3.9 9.2-4.9 14.2l-45.7.3a35.67 35.67 0 0 0-23.9-23.4c-10-2.9-21.1-1.1-29.7 4.8-4.9 3.4-9 8-11.7 13.3a35.67 35.67 0 0 0 4.1 38.1c4.8 5.9 11.5 10.2 18.8 12 8.7 2.2 18 .9 25.8-3.4 7.9-4.3 13.8-11.7 16.5-20.2l45.7-.3c1 5.1 2.7 10 5 14.5l-35.8 37.2a35.81 35.81 0 0 0-38.3 4.1 35.6 35.6 0 0 0-11.9 36.2c3 11.4 11.6 20.8 22.8 24.6 12.2 4.2 26.1 1.3 35.6-7.5a35.7 35.7 0 0 0 9.3-37.4c-.6-1.8-1.4-3.5-2.2-5.1l33.9-35.1c7.2 6.2 16 10.6 25.7 12.5l1 46.8c-13.3 4-23.2 15.8-24.9 29.5-1.6 13.5 4.8 27 16.3 34.3 11.4 7.2 26.4 7.1 37.8-.2 11.5-7.4 17.9-21.1 16-34.6a35.69 35.69 0 0 0-19.9-27.1c-1.3-.6-2.6-1.2-4-1.6l-1-47.2c7.4-1.5 14.3-4.5 20.3-8.6l34.8 31.7a35.7 35.7 0 0 0 1.8 35.6 35.76 35.76 0 0 0 34.1 15.8 35.6 35.6 0 0 0 29.6-25.9c3.1-11.6 0-24.2-8-33a35.65 35.65 0 0 0-37.3-9.7c-1.7.6-3.4 1.3-5.1 2.2l-34.9-31.9c3.9-5.8 6.7-12.5 8.1-19.6l46.2-.9a35.6 35.6 0 0 0 33.5 24.3c13.6 0 26.2-8 32-20.3 3.6-8.4 4.1-18 1.1-26.7-3.1-8.9 3.1 8.9 0 0zm-71.1-91.9c5.5-1.5 11.6.6 15 5.2 3.8 5.1 3.7 12.2-.2 17.2-3.9 4.9-10.8 6.7-16.6 4.2-5.3-2.3-8.8-7.8-8.5-13.6.3-6.1 4.5-11.4 10.3-13 1.3-.4-7.5 2 0 0zm-181.4 18.2c-1.9 5.4-7 9.3-12.8 9.5-5.7.2-11.1-3.2-13.4-8.4-1.4-3.2-1.6-6.9-.4-10.3 1.9-5.4 7-9.3 12.8-9.5 5.7-.2 11.1 3.2 13.4 8.4 1.4 3.2 1.5 6.9.4 10.3zm-35.9 92.7c-3 6-10.2 9.1-16.7 7.2-5.6-1.7-9.6-6.7-10-12.5-.4-5.6 2.7-11.1 7.8-13.6s11.3-1.7 15.5 2c4.8 4.1 6.2 11.2 3.4 16.9-1.7 3.4 3.5-6.9 0 0zm32.6 93.5c-2.4 5-7.7 8.1-13.2 7.9-5.1-.2-9.8-3.2-12.1-7.8-2.8-5.5-1.5-12.4 3-16.6a14.3 14.3 0 0 1 17.2-1.5c6 3.8 8.2 11.7 5.1 18-1.7 3.4 1.6-3.4 0 0zm75-237.9c3.3-6.9 11.9-9.9 18.8-6.5 8.7 4.2 10.6 16.2 3.5 22.9-6.7 6.4-18 4.4-22.2-3.8-2-4-2-8.7-.1-12.6 1.6-3.4-3.4 7 0 0zm28.3 272.7c.2 6.4-4.2 12.3-10.4 14-5.4 1.4-11.2-.5-14.7-4.9-3.6-4.6-4.1-11.1-1-16.1 3.3-5.3 9.8-7.9 15.9-6.3 5.8 1.7 10 7.2 10.2 13.3.1 3.7-.2-7.7 0 0zm-14.9-100.6a34.3 34.3 0 0 1-31.9-22.3c-5-13.4-.7-28.9 10.3-38 11-9.1 27-10.3 39.2-2.9 12.2 7.4 18.6 22 15.8 36a34.44 34.44 0 0 1-28.1 26.8c-1.8.3-3.5.4-5.3.4zm83.8 55.9c1.5-5.6 6.5-9.7 12.2-10.3a14.13 14.13 0 0 1 15 17.8c-1.7 6.1-7.4 10.4-13.7 10.4-5.7-.1-10.9-3.6-13-8.9-1.1-2.9-1.3-6.1-.5-9 1.7-6.2-2 7.5 0 0zm62.9-84.9c-2.3 4.8-7.3 7.9-12.6 7.9-5.4.1-10.4-3.1-12.8-7.9-2.4-4.9-1.7-10.9 1.7-15.1 4.3-5.2 11.8-6.6 17.7-3.4 6.6 3.6 9.2 11.9 6 18.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M422.7 242.4c-3.7-10.7-12.4-19-23.3-22.3-11.6-3.5-24.6-.6-33.6 7.4-4.9 4.3-8.5 10-10.3 16.2l-45.8.9c-1.1-6-3.3-11.7-6.2-16.8l35.6-32.5c13.4 7 30.3 4.5 41-6.1a35.93 35.93 0 0 0 7.6-39.7 35.59 35.59 0 0 0-26.8-20.5 35.58 35.58 0 0 0-32.4 12.1 35.58 35.58 0 0 0-6.6 33.9c.6 1.8 1.3 3.6 2.2 5.2l-34.4 31.4c-6.6-5.3-14.5-9.1-23.1-10.8l-1-44.2a35.5 35.5 0 0 0 23.8-27.2c2.4-13-3-26.8-13.6-34.7a35.66 35.66 0 0 0-38.4-2.6 35.54 35.54 0 0 0-18.1 32.5 35.5 35.5 0 0 0 25 32.2l1 43.8c-9.8 1.8-18.7 6.2-25.9 12.5L188 180.7c6.6-12.3 5.2-27.6-3.4-38.5a35.76 35.76 0 0 0-33.9-13 35.6 35.6 0 0 0-27 22.6 35.6 35.6 0 0 0 7.8 36.9 35.77 35.77 0 0 0 41.4 6.9l33.2 34.5c-2.3 4.4-3.9 9.2-4.9 14.2l-45.7.3a35.67 35.67 0 0 0-23.9-23.4c-10-2.9-21.1-1.1-29.7 4.8-4.9 3.4-9 8-11.7 13.3a35.67 35.67 0 0 0 4.1 38.1c4.8 5.9 11.5 10.2 18.8 12 8.7 2.2 18 .9 25.8-3.4 7.9-4.3 13.8-11.7 16.5-20.2l45.7-.3c1 5.1 2.7 10 5 14.5l-35.8 37.2a35.81 35.81 0 0 0-38.3 4.1 35.6 35.6 0 0 0-11.9 36.2c3 11.4 11.6 20.8 22.8 24.6 12.2 4.2 26.1 1.3 35.6-7.5a35.7 35.7 0 0 0 9.3-37.4c-.6-1.8-1.4-3.5-2.2-5.1l33.9-35.1c7.2 6.2 16 10.6 25.7 12.5l1 46.8c-13.3 4-23.2 15.8-24.9 29.5-1.6 13.5 4.8 27 16.3 34.3 11.4 7.2 26.4 7.1 37.8-.2 11.5-7.4 17.9-21.1 16-34.6a35.69 35.69 0 0 0-19.9-27.1c-1.3-.6-2.6-1.2-4-1.6l-1-47.2c7.4-1.5 14.3-4.5 20.3-8.6l34.8 31.7a35.7 35.7 0 0 0 1.8 35.6 35.76 35.76 0 0 0 34.1 15.8 35.6 35.6 0 0 0 29.6-25.9c3.1-11.6 0-24.2-8-33a35.65 35.65 0 0 0-37.3-9.7c-1.7.6-3.4 1.3-5.1 2.2l-34.9-31.9c3.9-5.8 6.7-12.5 8.1-19.6l46.2-.9a35.6 35.6 0 0 0 33.5 24.3c13.6 0 26.2-8 32-20.3 3.6-8.4 4.1-18 1.1-26.7-3.1-8.9 3.1 8.9 0 0zm-71.1-91.9c5.5-1.5 11.6.6 15 5.2 3.8 5.1 3.7 12.2-.2 17.2-3.9 4.9-10.8 6.7-16.6 4.2-5.3-2.3-8.8-7.8-8.5-13.6.3-6.1 4.5-11.4 10.3-13 1.3-.4-7.5 2 0 0zm-181.4 18.2c-1.9 5.4-7 9.3-12.8 9.5-5.7.2-11.1-3.2-13.4-8.4-1.4-3.2-1.6-6.9-.4-10.3 1.9-5.4 7-9.3 12.8-9.5 5.7-.2 11.1 3.2 13.4 8.4 1.4 3.2 1.5 6.9.4 10.3zm-35.9 92.7c-3 6-10.2 9.1-16.7 7.2-5.6-1.7-9.6-6.7-10-12.5-.4-5.6 2.7-11.1 7.8-13.6s11.3-1.7 15.5 2c4.8 4.1 6.2 11.2 3.4 16.9-1.7 3.4 3.5-6.9 0 0zm32.6 93.5c-2.4 5-7.7 8.1-13.2 7.9-5.1-.2-9.8-3.2-12.1-7.8-2.8-5.5-1.5-12.4 3-16.6a14.3 14.3 0 0 1 17.2-1.5c6 3.8 8.2 11.7 5.1 18-1.7 3.4 1.6-3.4 0 0zm75-237.9c3.3-6.9 11.9-9.9 18.8-6.5 8.7 4.2 10.6 16.2 3.5 22.9-6.7 6.4-18 4.4-22.2-3.8-2-4-2-8.7-.1-12.6 1.6-3.4-3.4 7 0 0zm28.3 272.7c.2 6.4-4.2 12.3-10.4 14-5.4 1.4-11.2-.5-14.7-4.9-3.6-4.6-4.1-11.1-1-16.1 3.3-5.3 9.8-7.9 15.9-6.3 5.8 1.7 10 7.2 10.2 13.3.1 3.7-.2-7.7 0 0zm-14.9-100.6a34.3 34.3 0 0 1-31.9-22.3c-5-13.4-.7-28.9 10.3-38 11-9.1 27-10.3 39.2-2.9 12.2 7.4 18.6 22 15.8 36a34.44 34.44 0 0 1-28.1 26.8c-1.8.3-3.5.4-5.3.4zm83.8 55.9c1.5-5.6 6.5-9.7 12.2-10.3a14.13 14.13 0 0 1 15 17.8c-1.7 6.1-7.4 10.4-13.7 10.4-5.7-.1-10.9-3.6-13-8.9-1.1-2.9-1.3-6.1-.5-9 1.7-6.2-2 7.5 0 0zm62.9-84.9c-2.3 4.8-7.3 7.9-12.6 7.9-5.4.1-10.4-3.1-12.8-7.9-2.4-4.9-1.7-10.9 1.7-15.1 4.3-5.2 11.8-6.6 17.7-3.4 6.6 3.6 9.2 11.9 6 18.5z\"></path></svg>')}:host .no-smoking{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M331.1 242.1h15.8v28.3h-15.8z\"></path><path d=\"M352.9 242.1h15.8v28.3h-15.8z\"></path><path d=\"M255.1 83.9A171.4 171.4 0 0 0 83.9 255.1c0 94.4 76.8 171.2 171.2 171.2 94.4 0 171.2-76.8 171.2-171.2 0-94.4-76.8-171.2-171.2-171.2zM398 255.1c0 35.4-12.9 67.8-34.3 92.8l-77.5-77.5H324v-28.3h-66.2l-95.4-95.4A142.9 142.9 0 0 1 398 255.1zm-285.7 0c0-33.2 11.4-63.8 30.4-88l75 75h-77.6v28.3h106l97.1 97.1a143 143 0 0 1-230.9-112.4z\"></path><path d=\"M356.6 214.7l-1.8 17.2 9.9 1 1.8-17.2c.7-7-1.6-14-6.6-19.1l-7.2 6.9c2.9 3 4.3 7.1 3.9 11.2z\"></path><path d=\"M341.4 218.1a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M331.1 242.1h15.8v28.3h-15.8z\"></path><path d=\"M352.9 242.1h15.8v28.3h-15.8z\"></path><path d=\"M255.1 83.9A171.4 171.4 0 0 0 83.9 255.1c0 94.4 76.8 171.2 171.2 171.2 94.4 0 171.2-76.8 171.2-171.2 0-94.4-76.8-171.2-171.2-171.2zM398 255.1c0 35.4-12.9 67.8-34.3 92.8l-77.5-77.5H324v-28.3h-66.2l-95.4-95.4A142.9 142.9 0 0 1 398 255.1zm-285.7 0c0-33.2 11.4-63.8 30.4-88l75 75h-77.6v28.3h106l97.1 97.1a143 143 0 0 1-230.9-112.4z\"></path><path d=\"M356.6 214.7l-1.8 17.2 9.9 1 1.8-17.2c.7-7-1.6-14-6.6-19.1l-7.2 6.9c2.9 3 4.3 7.1 3.9 11.2z\"></path><path d=\"M341.4 218.1a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>')}:host .smoking{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M138.5 242.3v28.3h186v-28.3h-186z\"></path><path d=\"M331.1 242.1h15.8v28.3h-15.8z\"></path><path d=\"M352.9 242.1h15.8v28.3h-15.8z\"></path><path d=\"M356.6 214.7l-1.8 17.2 9.9 1 1.8-17.2c.7-7-1.6-14-6.6-19.1l-7.2 6.9c2.9 3 4.3 7.1 3.9 11.2z\"></path><path d=\"M341.4 218.1a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M138.5 242.3v28.3h186v-28.3h-186z\"></path><path d=\"M331.1 242.1h15.8v28.3h-15.8z\"></path><path d=\"M352.9 242.1h15.8v28.3h-15.8z\"></path><path d=\"M356.6 214.7l-1.8 17.2 9.9 1 1.8-17.2c.7-7-1.6-14-6.6-19.1l-7.2 6.9c2.9 3 4.3 7.1 3.9 11.2z\"></path><path d=\"M341.4 218.1a24 24 0 0 1-7-18.8l1.4-25.7 10 .6-1.5 25.9a14 14 0 0 0 4 11l-6.9 7z\"></path></svg>')}:host .surveillance{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.4 197.7l-29.3-94a21.3 21.3 0 0 0-13-13.5 26 26 0 0 0-16.8-.4l-193.5 60.3L93 171.7l44.1 61 24.6-7.3 14.7 47.2a21.3 21.3 0 0 0 13 13.5c2.8 1.1 5.8 1.6 8.9 1.6 2.7 0 5.3-.4 8-1.2l193.5-60.3c12.8-4.1 20.2-16.8 16.6-28.5zm-214.7 60.5L176 176l185.8-57.9 25.6 82.2-185.7 57.9z\"></path><path d=\"M345.2 341.5l-4.6-4a17.3 17.3 0 0 1-6-13.4l.3-47.8-36.7 11.4-.6 35.8a54.2 54.2 0 0 0 18.8 42l69.1 59.7 24.2-28-64.5-55.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.4 197.7l-29.3-94a21.3 21.3 0 0 0-13-13.5 26 26 0 0 0-16.8-.4l-193.5 60.3L93 171.7l44.1 61 24.6-7.3 14.7 47.2a21.3 21.3 0 0 0 13 13.5c2.8 1.1 5.8 1.6 8.9 1.6 2.7 0 5.3-.4 8-1.2l193.5-60.3c12.8-4.1 20.2-16.8 16.6-28.5zm-214.7 60.5L176 176l185.8-57.9 25.6 82.2-185.7 57.9z\"></path><path d=\"M345.2 341.5l-4.6-4a17.3 17.3 0 0 1-6-13.4l.3-47.8-36.7 11.4-.6 35.8a54.2 54.2 0 0 0 18.8 42l69.1 59.7 24.2-28-64.5-55.7z\"></path></svg>')}:host .arrow-down{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385 149.7l-47.4.4c-26.9.3-52 12.3-69.1 33.1L231 228.9l-66.2 80.6-15-79.8-27.9 5.3 22.9 121.2 123.4-1.1-.3-28.3-81.2.7 65.8-80.1 37.9-46.2a61.6 61.6 0 0 1 47.5-22.7l47.4-.4-.3-28.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M385 149.7l-47.4.4c-26.9.3-52 12.3-69.1 33.1L231 228.9l-66.2 80.6-15-79.8-27.9 5.3 22.9 121.2 123.4-1.1-.3-28.3-81.2.7 65.8-80.1 37.9-46.2a61.6 61.6 0 0 1 47.5-22.7l47.4-.4-.3-28.4z\"></path></svg>')}:host .calculator{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M353.2 424.1H157.5a28.3 28.3 0 0 1-28.3-28.3V114.6a28.3 28.3 0 0 1 28.3-28.3h195.7a28.3 28.3 0 0 1 28.3 28.3v281.2a28.2 28.2 0 0 1-28.3 28.3zm0-309.5H157.5v281.2h195.7V114.6z\"></path><circle cx=\"200.3\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"200.3\" cy=\"299.4\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"299.4\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"299.4\" r=\"17.3\"></circle><g><circle cx=\"200.3\" cy=\"243.3\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"243.3\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"243.3\" r=\"17.3\"></circle></g><path d=\"M331.3 204.9H182.6V133h148.7v71.9zm-138.5-11h128.3V144H192.8v49.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M353.2 424.1H157.5a28.3 28.3 0 0 1-28.3-28.3V114.6a28.3 28.3 0 0 1 28.3-28.3h195.7a28.3 28.3 0 0 1 28.3 28.3v281.2a28.2 28.2 0 0 1-28.3 28.3zm0-309.5H157.5v281.2h195.7V114.6z\"></path><circle cx=\"200.3\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"355.7\" r=\"17.3\"></circle><circle cx=\"200.3\" cy=\"299.4\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"299.4\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"299.4\" r=\"17.3\"></circle><g><circle cx=\"200.3\" cy=\"243.3\" r=\"17.3\"></circle><circle cx=\"313.2\" cy=\"243.3\" r=\"17.3\"></circle><circle cx=\"256.7\" cy=\"243.3\" r=\"17.3\"></circle></g><path d=\"M331.3 204.9H182.6V133h148.7v71.9zm-138.5-11h128.3V144H192.8v49.9z\"></path></svg>')}:host .parking{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M418.2 218.9L263.8 116a14 14 0 0 0-15.7 0L93.8 218.9 78 195.3 232.4 92.4a42.3 42.3 0 0 1 47.2 0L434 195.3l-15.8 23.6z\"></path><path d=\"M335 269.3c0 26.6-6.8 44.6-20.5 54-10.1 7-27.7 10.6-52.8 10.6H243v91.5h-40.5V207.1h64.9c23.3 0 40.4 4.4 51 13.3 11.1 9.2 16.6 25.5 16.6 48.9zm-40.5.3c0-12.7-3.1-21.5-9.4-26.6-5.4-4.2-14.7-6.3-27.8-6.3h-14.5v67.6h13.3c6.8 0 12.7-.6 17.5-1.7a28 28 0 0 0 11.9-5.6c3.1-2.6 5.4-6.2 6.8-10.7a53.6 53.6 0 0 0 2.2-16.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M418.2 218.9L263.8 116a14 14 0 0 0-15.7 0L93.8 218.9 78 195.3 232.4 92.4a42.3 42.3 0 0 1 47.2 0L434 195.3l-15.8 23.6z\"></path><path d=\"M335 269.3c0 26.6-6.8 44.6-20.5 54-10.1 7-27.7 10.6-52.8 10.6H243v91.5h-40.5V207.1h64.9c23.3 0 40.4 4.4 51 13.3 11.1 9.2 16.6 25.5 16.6 48.9zm-40.5.3c0-12.7-3.1-21.5-9.4-26.6-5.4-4.2-14.7-6.3-27.8-6.3h-14.5v67.6h13.3c6.8 0 12.7-.6 17.5-1.7a28 28 0 0 0 11.9-5.6c3.1-2.6 5.4-6.2 6.8-10.7a53.6 53.6 0 0 0 2.2-16.7z\"></path></svg>')}:host .train{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"210.8\" cy=\"330.3\" r=\"15.5\"></circle><circle cx=\"301.6\" cy=\"330.4\" r=\"15.5\"></circle><path d=\"M315.4 283.3H196.2v-88.7h119.3v88.7zm-108.2-11h97.3v-66.7h-97.3v66.7z\"></path><path d=\"M337.6 144.3h-61l22.4-26.8c5.3-6.4 13.2-10 21.5-10h44.3v-21h-44.3a49.2 49.2 0 0 0-37.6 17.5l-27.6 33-27.6-33a49 49 0 0 0-37.6-17.5h-43.3v21h43.3c8.3 0 16.1 3.7 21.5 10l22.5 26.8h-59.6a28.3 28.3 0 0 0-28.3 28.3v200.6a28.3 28.3 0 0 0 28.3 28.3h2.1a36 36 0 0 0-2.5 13.1v9.3h21v-9.3a15 15 0 0 1 7.8-13.1h105.3c4.9 2.7 7.8 7.6 7.8 13.1v9.3h21v-9.3c0-4.6-.9-9-2.5-13.1h3.1a28.3 28.3 0 0 0 28.3-28.3V172.7a28.4 28.4 0 0 0-28.3-28.4zm0 229H174.4V172.7h163.2v200.6z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"210.8\" cy=\"330.3\" r=\"15.5\"></circle><circle cx=\"301.6\" cy=\"330.4\" r=\"15.5\"></circle><path d=\"M315.4 283.3H196.2v-88.7h119.3v88.7zm-108.2-11h97.3v-66.7h-97.3v66.7z\"></path><path d=\"M337.6 144.3h-61l22.4-26.8c5.3-6.4 13.2-10 21.5-10h44.3v-21h-44.3a49.2 49.2 0 0 0-37.6 17.5l-27.6 33-27.6-33a49 49 0 0 0-37.6-17.5h-43.3v21h43.3c8.3 0 16.1 3.7 21.5 10l22.5 26.8h-59.6a28.3 28.3 0 0 0-28.3 28.3v200.6a28.3 28.3 0 0 0 28.3 28.3h2.1a36 36 0 0 0-2.5 13.1v9.3h21v-9.3a15 15 0 0 1 7.8-13.1h105.3c4.9 2.7 7.8 7.6 7.8 13.1v9.3h21v-9.3c0-4.6-.9-9-2.5-13.1h3.1a28.3 28.3 0 0 0 28.3-28.3V172.7a28.4 28.4 0 0 0-28.3-28.4zm0 229H174.4V172.7h163.2v200.6z\"></path></svg>')}:host .contactless{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M303.4 438.4l-20-20A229.2 229.2 0 0 0 351 255.2c0-61.6-24-119.6-67.6-163.2l20-20c48.9 48.9 75.9 114 75.9 183.2s-27 134.2-75.9 183.2z\"></path><path d=\"M249.2 389.5l-20-20a159.6 159.6 0 0 0 0-225.5l20-20a188 188 0 0 1 0 265.5z\"></path><path d=\"M195 337.1l-20-20a87 87 0 0 0 0-123.8l20-20c21.9 21.9 34 51 34 82a115 115 0 0 1-34 81.8z\"></path><path d=\"M140.8 291.7l-20-20a23.2 23.2 0 0 0 0-33l20-20a51.4 51.4 0 0 1 0 73z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M303.4 438.4l-20-20A229.2 229.2 0 0 0 351 255.2c0-61.6-24-119.6-67.6-163.2l20-20c48.9 48.9 75.9 114 75.9 183.2s-27 134.2-75.9 183.2z\"></path><path d=\"M249.2 389.5l-20-20a159.6 159.6 0 0 0 0-225.5l20-20a188 188 0 0 1 0 265.5z\"></path><path d=\"M195 337.1l-20-20a87 87 0 0 0 0-123.8l20-20c21.9 21.9 34 51 34 82a115 115 0 0 1-34 81.8z\"></path><path d=\"M140.8 291.7l-20-20a23.2 23.2 0 0 0 0-33l20-20a51.4 51.4 0 0 1 0 73z\"></path></svg>')}:host .glasses{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M435.7 397.7l-41.8 11.7-25.9-92.8a63.7 63.7 0 0 0 31.3-73.6l-24.9-89.2-27.3 7.6 24.9 89.2a35.8 35.8 0 1 1-69 19.2l-24.2-86.7 12.8-28.2-25.8-11.7-38.3 84.3a35.8 35.8 0 1 1-65.2-29.6l38.3-84.3-25.8-11.7-38.3 84.3a64.3 64.3 0 0 0 19.6 77.6l-39.8 87.7-38-17.5-11.7 25.8 100.8 45.8 11.7-25.8-36.8-16.7 39.8-87.6a64.2 64.2 0 0 0 71.3-36.3l7.2-15.9 15.1 54.1a63.7 63.7 0 0 0 61.7 46.9l3.3-.1 25.9 92.8-37.5 10.5 7.6 27.3L443.4 425l-7.7-27.3z\"></path><ellipse cx=\"205.5\" cy=\"193.2\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 205.5 193.2)\"></ellipse><ellipse cx=\"221.5\" cy=\"130.5\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 221.5 130.5)\"></ellipse><ellipse cx=\"315\" cy=\"145\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 315 145)\"></ellipse><ellipse cx=\"310.5\" cy=\"204.5\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-60.6 310.5 204.5)\"></ellipse><ellipse cx=\"346.6\" cy=\"259.9\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-60.6 346.6 260)\"></ellipse><ellipse cx=\"241.4\" cy=\"68.9\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 241.4 68.9)\"></ellipse><ellipse cx=\"255.6\" cy=\"109.4\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 255.6 109.4)\"></ellipse></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M435.7 397.7l-41.8 11.7-25.9-92.8a63.7 63.7 0 0 0 31.3-73.6l-24.9-89.2-27.3 7.6 24.9 89.2a35.8 35.8 0 1 1-69 19.2l-24.2-86.7 12.8-28.2-25.8-11.7-38.3 84.3a35.8 35.8 0 1 1-65.2-29.6l38.3-84.3-25.8-11.7-38.3 84.3a64.3 64.3 0 0 0 19.6 77.6l-39.8 87.7-38-17.5-11.7 25.8 100.8 45.8 11.7-25.8-36.8-16.7 39.8-87.6a64.2 64.2 0 0 0 71.3-36.3l7.2-15.9 15.1 54.1a63.7 63.7 0 0 0 61.7 46.9l3.3-.1 25.9 92.8-37.5 10.5 7.6 27.3L443.4 425l-7.7-27.3z\"></path><ellipse cx=\"205.5\" cy=\"193.2\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 205.5 193.2)\"></ellipse><ellipse cx=\"221.5\" cy=\"130.5\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 221.5 130.5)\"></ellipse><ellipse cx=\"315\" cy=\"145\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 315 145)\"></ellipse><ellipse cx=\"310.5\" cy=\"204.5\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-60.6 310.5 204.5)\"></ellipse><ellipse cx=\"346.6\" cy=\"259.9\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-60.6 346.6 260)\"></ellipse><ellipse cx=\"241.4\" cy=\"68.9\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 241.4 68.9)\"></ellipse><ellipse cx=\"255.6\" cy=\"109.4\" rx=\"14.2\" ry=\"14.2\" transform=\"rotate(-65.6 255.6 109.4)\"></ellipse></svg>')}:host .way-up{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M83.2 150.5l17.4 21.3L152 130l-1.1 83.4h-.1l-.7 54.1A51.7 51.7 0 0 1 131 307l-31.5 25.7 17.4 21.3 31.5-25.7a79.3 79.3 0 0 0 29.2-60.4l.7-51.4h.1l1.2-86.1 50.3 43.2 17.9-20.8-81.3-69.9-83.3 67.6z\"></path><path d=\"M340.2 82.9L257 150.5l17.4 21.3 51.4-41.9-1.1 83.4h-.1l-.7 54.1a51.7 51.7 0 0 1-19.1 39.5l-31.5 25.7 17.4 21.3 31.5-25.7a79.3 79.3 0 0 0 29.2-60.4l.7-51.4h.1l1.2-86.1 50.3 43.2 17.9-20.8-81.4-69.8z\"></path><path d=\"M85.4 395.2h340.2v28.3H85.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M83.2 150.5l17.4 21.3L152 130l-1.1 83.4h-.1l-.7 54.1A51.7 51.7 0 0 1 131 307l-31.5 25.7 17.4 21.3 31.5-25.7a79.3 79.3 0 0 0 29.2-60.4l.7-51.4h.1l1.2-86.1 50.3 43.2 17.9-20.8-81.3-69.9-83.3 67.6z\"></path><path d=\"M340.2 82.9L257 150.5l17.4 21.3 51.4-41.9-1.1 83.4h-.1l-.7 54.1a51.7 51.7 0 0 1-19.1 39.5l-31.5 25.7 17.4 21.3 31.5-25.7a79.3 79.3 0 0 0 29.2-60.4l.7-51.4h.1l1.2-86.1 50.3 43.2 17.9-20.8-81.4-69.8z\"></path><path d=\"M85.4 395.2h340.2v28.3H85.4z\"></path></svg>')}:host .umbrella{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M270.4 116.9V96.3H242v20.5c-78.8 7-141 73.3-141 153.8h28.3a20.8 20.8 0 1 1 41.6 0H199.9a20.8 20.8 0 1 1 41.6 0h.1l-.9 84.3c-.3 32.9-5 36.6-7.8 38.9l-25.1 20 17.6 22.2 25.1-20c13.4-10.7 18.3-26.6 18.6-60.8l.9-84.6a20.8 20.8 0 1 1 41.6 0H340.1a20.8 20.8 0 1 1 41.6 0H410a154.8 154.8 0 0 0-139.6-153.7zm90.4 104.6a48.8 48.8 0 0 0-35 14.7 48.8 48.8 0 0 0-70 0 48.8 48.8 0 0 0-70.3.3 49 49 0 0 0-46.7-13.7 126.2 126.2 0 0 1 233.4 0c-3.7-.8-7.5-1.3-11.4-1.3z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M270.4 116.9V96.3H242v20.5c-78.8 7-141 73.3-141 153.8h28.3a20.8 20.8 0 1 1 41.6 0H199.9a20.8 20.8 0 1 1 41.6 0h.1l-.9 84.3c-.3 32.9-5 36.6-7.8 38.9l-25.1 20 17.6 22.2 25.1-20c13.4-10.7 18.3-26.6 18.6-60.8l.9-84.6a20.8 20.8 0 1 1 41.6 0H340.1a20.8 20.8 0 1 1 41.6 0H410a154.8 154.8 0 0 0-139.6-153.7zm90.4 104.6a48.8 48.8 0 0 0-35 14.7 48.8 48.8 0 0 0-70 0 48.8 48.8 0 0 0-70.3.3 49 49 0 0 0-46.7-13.7 126.2 126.2 0 0 1 233.4 0c-3.7-.8-7.5-1.3-11.4-1.3z\"></path></svg>')}:host .cash-machine{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.3 177.7a28.1 28.1 0 0 0-28.3-28.3h-.1l-283.5.6a28.4 28.4 0 0 0-28.3 28.5l.2 21.2a28.5 28.5 0 0 0 28.3 28.3h.1l32.4-.1v-28.3l-32.5.1-.2-21.3 54.9-.1v148.3a34.4 34.4 0 0 0 34.3 34.3H317a34.4 34.4 0 0 0 34.3-34.3V177.8l45.6-.1.2 21.3-26.3.1v28.3l26.3-.1a28.1 28.1 0 0 0 28.3-28.5l-.1-21.1zm-211.2.4v59.8c0 6.8-3 13.2-8.2 17.5l-14.7 12.3v-89.6h22.9zm114.3 148.4c0 6.3-5.1 11.4-11.4 11.4H202.6c-6.3 0-11.4-5.1-11.4-11.4v-29l29.4-24.6a45.5 45.5 0 0 0 16.3-35V178l91.5-.2v148.7z\"></path><path d=\"M257 235h5.7v91.5H257z\"></path><path d=\"M274.1 257.9h5.7v68.6h-5.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M425.3 177.7a28.1 28.1 0 0 0-28.3-28.3h-.1l-283.5.6a28.4 28.4 0 0 0-28.3 28.5l.2 21.2a28.5 28.5 0 0 0 28.3 28.3h.1l32.4-.1v-28.3l-32.5.1-.2-21.3 54.9-.1v148.3a34.4 34.4 0 0 0 34.3 34.3H317a34.4 34.4 0 0 0 34.3-34.3V177.8l45.6-.1.2 21.3-26.3.1v28.3l26.3-.1a28.1 28.1 0 0 0 28.3-28.5l-.1-21.1zm-211.2.4v59.8c0 6.8-3 13.2-8.2 17.5l-14.7 12.3v-89.6h22.9zm114.3 148.4c0 6.3-5.1 11.4-11.4 11.4H202.6c-6.3 0-11.4-5.1-11.4-11.4v-29l29.4-24.6a45.5 45.5 0 0 0 16.3-35V178l91.5-.2v148.7z\"></path><path d=\"M257 235h5.7v91.5H257z\"></path><path d=\"M274.1 257.9h5.7v68.6h-5.7z\"></path></svg>')}:host .terminal{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M248.1 352.4h3.7v52.5h-3.7z\"></path><path d=\"M259.1 361h3.7v43.9h-3.7z\"></path><path d=\"M297.2 352v52.6c0 4-3.3 7.3-7.3 7.3h-73.1c-4 0-7.3-3.3-7.3-7.3v-18.5l18.8-15.7a29.2 29.2 0 0 0 10.2-18.4h-14.9a15 15 0 0 1-4.6 7.2l-9.4 7.9v-15H195v52.6c0 12.1 9.8 21.9 21.9 21.9H290c12.1 0 21.9-9.8 21.9-21.9V352h-14.7z\"></path><path d=\"M328.2 340.2H181.6a21.2 21.2 0 0 1-21.2-21.2V108.3c0-11.7 9.5-21.2 21.2-21.2h146.6c11.7 0 21.2 9.5 21.2 21.2v210.6c0 11.7-9.5 21.3-21.2 21.3zM181.6 108.3v210.6h146.6V108.3H181.6z\"></path><path d=\"M314.9 219.9H195.3v-99.1h119.6v99.1zm-111.3-8.3h103.1V129H203.6v82.6z\"></path><path d=\"M279.4 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M279.4 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M279.4 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M247.6 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M247.6 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M247.6 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M216.2 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M216.2 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M216.2 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M311.6 305.3h-19.7a2.9 2.9 0 0 1-2.9-2.9V276c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9v26.4c-.1 1.6-1.4 2.9-2.9 2.9z\"></path><path d=\"M311.6 265.9h-19.7a2.9 2.9 0 0 1-2.9-2.9v-26.4c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9V263c-.1 1.6-1.4 2.9-2.9 2.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M248.1 352.4h3.7v52.5h-3.7z\"></path><path d=\"M259.1 361h3.7v43.9h-3.7z\"></path><path d=\"M297.2 352v52.6c0 4-3.3 7.3-7.3 7.3h-73.1c-4 0-7.3-3.3-7.3-7.3v-18.5l18.8-15.7a29.2 29.2 0 0 0 10.2-18.4h-14.9a15 15 0 0 1-4.6 7.2l-9.4 7.9v-15H195v52.6c0 12.1 9.8 21.9 21.9 21.9H290c12.1 0 21.9-9.8 21.9-21.9V352h-14.7z\"></path><path d=\"M328.2 340.2H181.6a21.2 21.2 0 0 1-21.2-21.2V108.3c0-11.7 9.5-21.2 21.2-21.2h146.6c11.7 0 21.2 9.5 21.2 21.2v210.6c0 11.7-9.5 21.3-21.2 21.3zM181.6 108.3v210.6h146.6V108.3H181.6z\"></path><path d=\"M314.9 219.9H195.3v-99.1h119.6v99.1zm-111.3-8.3h103.1V129H203.6v82.6z\"></path><path d=\"M279.4 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M279.4 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M279.4 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M247.6 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M247.6 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M247.6 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M216.2 253.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M216.2 279.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M216.2 305.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M311.6 305.3h-19.7a2.9 2.9 0 0 1-2.9-2.9V276c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9v26.4c-.1 1.6-1.4 2.9-2.9 2.9z\"></path><path d=\"M311.6 265.9h-19.7a2.9 2.9 0 0 1-2.9-2.9v-26.4c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9V263c-.1 1.6-1.4 2.9-2.9 2.9z\"></path></svg>')}:host .mobile-terminal{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M231.9 351.3h3.7v52.5h-3.7z\"></path><path d=\"M242.9 360h3.7v43.9h-3.7z\"></path><path d=\"M281.1 351v52.6c0 4-3.3 7.3-7.3 7.3h-73.1c-4 0-7.3-3.3-7.3-7.3v-18.5l18.8-15.7a29.2 29.2 0 0 0 10.2-18.4h-14.9a15 15 0 0 1-4.6 7.2l-9.4 7.9v-15h-14.6v52.6c0 12.1 9.8 21.9 21.9 21.9h73.1c12.1 0 21.9-9.8 21.9-21.9V351h-14.7z\"></path><path d=\"M312 339.2H165.4a21.2 21.2 0 0 1-21.2-21.2V107.3c0-11.7 9.5-21.2 21.2-21.2H312c11.7 0 21.2 9.5 21.2 21.2v210.6a21.2 21.2 0 0 1-21.2 21.3zM165.4 107.3v210.6H312V107.3H165.4z\"></path><path d=\"M298.7 218.9H179.2v-99.1h119.6v99.1zm-111.3-8.3h103.1V128H187.4v82.6z\"></path><path d=\"M263.2 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M263.2 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M263.2 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M200.1 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M200.1 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M200.1 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M295.4 304.2h-19.7a2.9 2.9 0 0 1-2.9-2.9V275c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9v26.4a2.9 2.9 0 0 1-2.9 2.8z\"></path><path d=\"M295.4 264.9h-19.7a2.9 2.9 0 0 1-2.9-2.9v-26.4c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9V262c-.1 1.6-1.3 2.9-2.9 2.9z\"></path><path d=\"M404.2 185.6l-5.5-5.5a63.4 63.4 0 0 0 18.7-45.2c0-17.1-6.6-33.1-18.7-45.2l5.5-5.5a71.6 71.6 0 0 1 0 101.4z\"></path><path d=\"M389.2 172l-5.5-5.5a44.2 44.2 0 0 0 0-62.4l5.5-5.5a52 52 0 0 1 0 73.4z\"></path><path d=\"M374.2 157.5l-5.5-5.5a24 24 0 0 0 0-34.2l5.5-5.5a31.8 31.8 0 0 1 0 45.2z\"></path><path d=\"M359.2 145l-5.5-5.5a6.6 6.6 0 0 0 0-9.2l5.5-5.5a14.2 14.2 0 0 1 0 20.2z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M231.9 351.3h3.7v52.5h-3.7z\"></path><path d=\"M242.9 360h3.7v43.9h-3.7z\"></path><path d=\"M281.1 351v52.6c0 4-3.3 7.3-7.3 7.3h-73.1c-4 0-7.3-3.3-7.3-7.3v-18.5l18.8-15.7a29.2 29.2 0 0 0 10.2-18.4h-14.9a15 15 0 0 1-4.6 7.2l-9.4 7.9v-15h-14.6v52.6c0 12.1 9.8 21.9 21.9 21.9h73.1c12.1 0 21.9-9.8 21.9-21.9V351h-14.7z\"></path><path d=\"M312 339.2H165.4a21.2 21.2 0 0 1-21.2-21.2V107.3c0-11.7 9.5-21.2 21.2-21.2H312c11.7 0 21.2 9.5 21.2 21.2v210.6a21.2 21.2 0 0 1-21.2 21.3zM165.4 107.3v210.6H312V107.3H165.4z\"></path><path d=\"M298.7 218.9H179.2v-99.1h119.6v99.1zm-111.3-8.3h103.1V128H187.4v82.6z\"></path><path d=\"M263.2 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M263.2 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M263.2 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M231.4 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.2 2.7-2.7 2.7z\"></path><path d=\"M200.1 252.2h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M200.1 278.5h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M200.1 304.9h-18.7a2.7 2.7 0 0 1-2.7-2.7v-13.6c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v13.6c0 1.5-1.3 2.7-2.7 2.7z\"></path><path d=\"M295.4 304.2h-19.7a2.9 2.9 0 0 1-2.9-2.9V275c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9v26.4a2.9 2.9 0 0 1-2.9 2.8z\"></path><path d=\"M295.4 264.9h-19.7a2.9 2.9 0 0 1-2.9-2.9v-26.4c0-1.6 1.3-2.9 2.9-2.9h19.7c1.6 0 2.9 1.3 2.9 2.9V262c-.1 1.6-1.3 2.9-2.9 2.9z\"></path><path d=\"M404.2 185.6l-5.5-5.5a63.4 63.4 0 0 0 18.7-45.2c0-17.1-6.6-33.1-18.7-45.2l5.5-5.5a71.6 71.6 0 0 1 0 101.4z\"></path><path d=\"M389.2 172l-5.5-5.5a44.2 44.2 0 0 0 0-62.4l5.5-5.5a52 52 0 0 1 0 73.4z\"></path><path d=\"M374.2 157.5l-5.5-5.5a24 24 0 0 0 0-34.2l5.5-5.5a31.8 31.8 0 0 1 0 45.2z\"></path><path d=\"M359.2 145l-5.5-5.5a6.6 6.6 0 0 0 0-9.2l5.5-5.5a14.2 14.2 0 0 1 0 20.2z\"></path></svg>')}:host .cash-register{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.7 397.1l-283.5-.9a28.3 28.3 0 0 1-28.3-28.3v-46.8a28.3 28.3 0 0 1 28.3-28.3l283.5.9A28.3 28.3 0 0 1 425 322v46.8a28.3 28.3 0 0 1-28.3 28.3zm-283.5-75.9V368l283.5.9v-46.8l-283.5-.9z\"></path><path d=\"M404.5 274.4h-28.3V146.8c0-3.9-3.2-7.1-7.1-7.1H142.3a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V146.8a35.5 35.5 0 0 1 35.4-35.4H369a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><circle cx=\"257.8\" cy=\"345.1\" r=\"14.2\"></circle><path d=\"M335.1 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.5.1-2.7-1.2-2.7-2.7z\"></path><path d=\"M308.8 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7H325c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.4.1-2.6-1.2-2.6-2.7z\"></path><path d=\"M282.4 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.5.1-2.7-1.2-2.7-2.7z\"></path><path d=\"M335.1 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.7-2.7z\"></path><path d=\"M308.8 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7H325c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.6-2.7z\"></path><path d=\"M282.4 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.7-2.7z\"></path><path d=\"M283 249.4v-19.7c0-1.6 1.3-2.9 2.9-2.9h26.4c1.6 0 2.9 1.3 2.9 2.9v19.7c0 1.6-1.3 2.9-2.9 2.9h-26.4a2.9 2.9 0 0 1-2.9-2.9z\"></path><path d=\"M322.4 249.4v-19.7c0-1.6 1.3-2.9 2.9-2.9h26.4c1.6 0 2.9 1.3 2.9 2.9v19.7c0 1.6-1.3 2.9-2.9 2.9h-26.4a2.9 2.9 0 0 1-2.9-2.9z\"></path><path d=\"M269.7 255.5h-114v-96.4h113.9v96.4zm-103-11h91.9v-74.4h-91.9v74.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.7 397.1l-283.5-.9a28.3 28.3 0 0 1-28.3-28.3v-46.8a28.3 28.3 0 0 1 28.3-28.3l283.5.9A28.3 28.3 0 0 1 425 322v46.8a28.3 28.3 0 0 1-28.3 28.3zm-283.5-75.9V368l283.5.9v-46.8l-283.5-.9z\"></path><path d=\"M404.5 274.4h-28.3V146.8c0-3.9-3.2-7.1-7.1-7.1H142.3a7.1 7.1 0 0 0-7.1 7.1v127.6h-28.3V146.8a35.5 35.5 0 0 1 35.4-35.4H369a35.5 35.5 0 0 1 35.4 35.4v127.6z\"></path><circle cx=\"257.8\" cy=\"345.1\" r=\"14.2\"></circle><path d=\"M335.1 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.5.1-2.7-1.2-2.7-2.7z\"></path><path d=\"M308.8 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7H325c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.4.1-2.6-1.2-2.6-2.7z\"></path><path d=\"M282.4 217.2v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6c-1.5.1-2.7-1.2-2.7-2.7z\"></path><path d=\"M335.1 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.7-2.7z\"></path><path d=\"M308.8 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7H325c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.6-2.7z\"></path><path d=\"M282.4 185.4v-18.7c0-1.5 1.2-2.7 2.7-2.7h13.6c1.5 0 2.7 1.2 2.7 2.7v18.7c0 1.5-1.2 2.7-2.7 2.7h-13.6a2.7 2.7 0 0 1-2.7-2.7z\"></path><path d=\"M283 249.4v-19.7c0-1.6 1.3-2.9 2.9-2.9h26.4c1.6 0 2.9 1.3 2.9 2.9v19.7c0 1.6-1.3 2.9-2.9 2.9h-26.4a2.9 2.9 0 0 1-2.9-2.9z\"></path><path d=\"M322.4 249.4v-19.7c0-1.6 1.3-2.9 2.9-2.9h26.4c1.6 0 2.9 1.3 2.9 2.9v19.7c0 1.6-1.3 2.9-2.9 2.9h-26.4a2.9 2.9 0 0 1-2.9-2.9z\"></path><path d=\"M269.7 255.5h-114v-96.4h113.9v96.4zm-103-11h91.9v-74.4h-91.9v74.4z\"></path></svg>')}:host .shopping-cart{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"237.8\" cy=\"363.6\" r=\"23.4\"></circle><circle cx=\"350.9\" cy=\"363.6\" r=\"23.4\"></circle><path d=\"M425.9 178.6a14.2 14.2 0 0 0-11.3-5.7H241.1v28.3h154.6l-9.1 31.6H220.1v28.3h158.1L367.4 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.3v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4C400.9 287 428.2 191 428.2 191a14 14 0 0 0-2.3-12.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"237.8\" cy=\"363.6\" r=\"23.4\"></circle><circle cx=\"350.9\" cy=\"363.6\" r=\"23.4\"></circle><path d=\"M425.9 178.6a14.2 14.2 0 0 0-11.3-5.7H241.1v28.3h154.6l-9.1 31.6H220.1v28.3h158.1L367.4 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.3v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4C400.9 287 428.2 191 428.2 191a14 14 0 0 0-2.3-12.4z\"></path></svg>')}:host .upload{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 269.3h-28.3v28.3h28.3v99.2H113.4v-99.2h28.3v-28.3h-28.3A28.4 28.4 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.2 28.2 0 0 0-28.2-28.3z\"></path><path d=\"M347 175.2l-62.2-52.1v121.5a90.1 90.1 0 0 1-32.4 69.4l-36.3 30.4-18.2-21.7 36.3-30.4a62.4 62.4 0 0 0 22.3-47.7V123l-62.3 52.1-18.2-21.7 94.6-79.2 94.6 79.2-18.2 21.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M396.9 269.3h-28.3v28.3h28.3v99.2H113.4v-99.2h28.3v-28.3h-28.3A28.4 28.4 0 0 0 85 297.6v99.2a28.3 28.3 0 0 0 28.3 28.3h283.5a28.3 28.3 0 0 0 28.3-28.3v-99.2a28.2 28.2 0 0 0-28.2-28.3z\"></path><path d=\"M347 175.2l-62.2-52.1v121.5a90.1 90.1 0 0 1-32.4 69.4l-36.3 30.4-18.2-21.7 36.3-30.4a62.4 62.4 0 0 0 22.3-47.7V123l-62.3 52.1-18.2-21.7 94.6-79.2 94.6 79.2-18.2 21.8z\"></path></svg>')}:host .funnel{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M111.5 276.3l124.3 111.1c3 2.7 4.7 6.5 4.7 10.6v36.9h28.3V398c0-12.1-5.2-23.6-14.2-31.7L131.1 255.7a14.1 14.1 0 0 1-3.9-9.8v-62H98.8v62c0 11.3 4.4 22 12.4 30l.3.4z\"></path><path d=\"M289 372.2l108.6-95.6.7-.6c8-8 12.5-18.7 12.5-30.1v-62h-28.3v62c0 3.7-1.4 7.1-3.9 9.8l-108.2 95.2 18.6 21.3z\"></path><path d=\"M268.8 153.3c0-20.9-9.2-40.5-25.2-54L217 77l-18.2 21.7 26.7 22.3c9.5 8 15 19.8 15 32.2l.1 78.9-39.7-33.1-18.2 21.7 72 60.2 72-60.2-18.1-21.7-39.6 33.2-.2-78.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M111.5 276.3l124.3 111.1c3 2.7 4.7 6.5 4.7 10.6v36.9h28.3V398c0-12.1-5.2-23.6-14.2-31.7L131.1 255.7a14.1 14.1 0 0 1-3.9-9.8v-62H98.8v62c0 11.3 4.4 22 12.4 30l.3.4z\"></path><path d=\"M289 372.2l108.6-95.6.7-.6c8-8 12.5-18.7 12.5-30.1v-62h-28.3v62c0 3.7-1.4 7.1-3.9 9.8l-108.2 95.2 18.6 21.3z\"></path><path d=\"M268.8 153.3c0-20.9-9.2-40.5-25.2-54L217 77l-18.2 21.7 26.7 22.3c9.5 8 15 19.8 15 32.2l.1 78.9-39.7-33.1-18.2 21.7 72 60.2 72-60.2-18.1-21.7-39.6 33.2-.2-78.9z\"></path></svg>')}:host .rock{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M370.6 120.9v-.4a37 37 0 0 0-39.5-35 37.3 37.3 0 0 0-35 39.1l-.4 33.9-80.5-.5-.4-33.5a37.4 37.4 0 0 0-74.5-4.1v.4l-1.2 61.9.7 27.8.2 39.3a42.4 42.4 0 0 0 13.8 31.1l31.7 39h-15.9c-11.1 0-20.1 9-20.1 20.1v64.6c0 11.1 9 20.1 20.1 20.1h162.6c11.1 0 20.1-9 20.1-20.1V340c0-11.1-9-20.1-20.1-20.1h-17.4l42.6-39.6a39.5 39.5 0 0 0 13.5-30.5l.2-39.3-.5-89.6zm-73.3 58.6l-.3 24.2v.3c.2 4-1.1 7.8-3.7 10.8a14.7 14.7 0 0 1-25.7-8.8l-.6-26.6 30.3.1zm-53.2-.3l-.3 23.6v.3c.2 4-1.1 7.8-3.7 10.8a14.7 14.7 0 0 1-25.7-8.8l-.6-26 30.3.1zm88.3 160.9v64.6l-.1.1H169.7l-.1-.1v-64.6l.1-.1 162.7.1c-.1-.1 0-.1 0 0zM286 320h-73.2l-41.2-48.2a42.7 42.7 0 0 1-10.6-21.6v-.1l-.2-39.6-.7-27.4 1.2-61.3a16.4 16.4 0 0 1 17.3-15.2c4.4.3 8.3 2.2 11.2 5.5 2.9 3.3 4.3 7.5 4.1 11.8v.4l.5 36.8 1.1 44.9v.3a33.6 33.6 0 0 0 60 19.2 33.3 33.3 0 0 0 26.8 13.5 31.6 31.6 0 0 0 12.8 29.4l24.9 18.3-34 33.3zm63.9-69.8c.1 5.5-2.2 10.8-6.3 14.4l-11.2 9.4-25.8-21-.3-.2a13.5 13.5 0 0 1-5.7-9.2c-.6-3.8.4-7.7 2.7-10.9 2.3-3.3 5.6-5.5 9.4-6.2 3.7-.8 7.5-.1 10.5 2l26.7 20v1.7zm.2-25.5l-15.4-11.6-.3-.2a30.9 30.9 0 0 0-18.4-5.5l.1-4.2.4-35.3.7-43.8v-.4a16.3 16.3 0 1 1 32.6-2.1l.5 88.8-.2 14.3z\"></path><circle cx=\"204.1\" cy=\"372.4\" r=\"14.2\"></circle></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M370.6 120.9v-.4a37 37 0 0 0-39.5-35 37.3 37.3 0 0 0-35 39.1l-.4 33.9-80.5-.5-.4-33.5a37.4 37.4 0 0 0-74.5-4.1v.4l-1.2 61.9.7 27.8.2 39.3a42.4 42.4 0 0 0 13.8 31.1l31.7 39h-15.9c-11.1 0-20.1 9-20.1 20.1v64.6c0 11.1 9 20.1 20.1 20.1h162.6c11.1 0 20.1-9 20.1-20.1V340c0-11.1-9-20.1-20.1-20.1h-17.4l42.6-39.6a39.5 39.5 0 0 0 13.5-30.5l.2-39.3-.5-89.6zm-73.3 58.6l-.3 24.2v.3c.2 4-1.1 7.8-3.7 10.8a14.7 14.7 0 0 1-25.7-8.8l-.6-26.6 30.3.1zm-53.2-.3l-.3 23.6v.3c.2 4-1.1 7.8-3.7 10.8a14.7 14.7 0 0 1-25.7-8.8l-.6-26 30.3.1zm88.3 160.9v64.6l-.1.1H169.7l-.1-.1v-64.6l.1-.1 162.7.1c-.1-.1 0-.1 0 0zM286 320h-73.2l-41.2-48.2a42.7 42.7 0 0 1-10.6-21.6v-.1l-.2-39.6-.7-27.4 1.2-61.3a16.4 16.4 0 0 1 17.3-15.2c4.4.3 8.3 2.2 11.2 5.5 2.9 3.3 4.3 7.5 4.1 11.8v.4l.5 36.8 1.1 44.9v.3a33.6 33.6 0 0 0 60 19.2 33.3 33.3 0 0 0 26.8 13.5 31.6 31.6 0 0 0 12.8 29.4l24.9 18.3-34 33.3zm63.9-69.8c.1 5.5-2.2 10.8-6.3 14.4l-11.2 9.4-25.8-21-.3-.2a13.5 13.5 0 0 1-5.7-9.2c-.6-3.8.4-7.7 2.7-10.9 2.3-3.3 5.6-5.5 9.4-6.2 3.7-.8 7.5-.1 10.5 2l26.7 20v1.7zm.2-25.5l-15.4-11.6-.3-.2a30.9 30.9 0 0 0-18.4-5.5l.1-4.2.4-35.3.7-43.8v-.4a16.3 16.3 0 1 1 32.6-2.1l.5 88.8-.2 14.3z\"></path><circle cx=\"204.1\" cy=\"372.4\" r=\"14.2\"></circle></svg>')}:host .shopping-cart-download{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"236.7\" cy=\"408.1\" r=\"23.4\"></circle><circle cx=\"349.7\" cy=\"408.1\" r=\"23.4\"></circle><path d=\"M424.8 223.1a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3h46.9l-9.1 31.6H219v28.3h158l-10.7 34.8-138.2.7c-17.2 0-23.2-4.4-28-16.5L167.4 227l-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.3v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1.1-4.2.2-8.9-2.4-12.4z\"></path><path d=\"M331.5 180.3l-41.2 34.5v-80.5a60 60 0 0 0-21.4-46l-24.1-20.1-12 14.4 24 20.1a41.1 41.1 0 0 1 14.7 31.6v80.5l-41.2-34.5-12 14.4 62.7 52.4 62.7-52.4-12.2-14.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"236.7\" cy=\"408.1\" r=\"23.4\"></circle><circle cx=\"349.7\" cy=\"408.1\" r=\"23.4\"></circle><path d=\"M424.8 223.1a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3h46.9l-9.1 31.6H219v28.3h158l-10.7 34.8-138.2.7c-17.2 0-23.2-4.4-28-16.5L167.4 227l-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.3v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1.1-4.2.2-8.9-2.4-12.4z\"></path><path d=\"M331.5 180.3l-41.2 34.5v-80.5a60 60 0 0 0-21.4-46l-24.1-20.1-12 14.4 24 20.1a41.1 41.1 0 0 1 14.7 31.6v80.5l-41.2-34.5-12 14.4 62.7 52.4 62.7-52.4-12.2-14.4z\"></path></svg>')}:host .shopping-cart-chf{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"238.1\" cy=\"363.7\" r=\"23.4\"></circle><circle cx=\"351.1\" cy=\"363.7\" r=\"23.4\"></circle><path d=\"M426.2 178.7a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3H396l-9.1 31.6H220.4v28.3h158.1L367.8 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.4v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1-4.3.1-8.9-2.5-12.5z\"></path><path d=\"M233.4 178c0 8.3-1.9 14.4-5.7 18.2-3.8 3.8-9.7 5.7-17.7 5.7-10.6 0-17.6-3.5-21-10.6a76.1 76.1 0 0 1-3.6-28.6c0-13.4 1.2-22.7 3.6-27.8 3.4-7.3 10.6-11 21.5-11 7.8 0 13.4 1.8 16.9 5.4 3.5 3.6 5.3 9.3 5.3 17v1.7h-13.6v-1.4c0-8.4-3-12.6-8.9-12.6-4.5 0-7.6 2.5-9.1 7.4a79.7 79.7 0 0 0-1.7 20.2c0 11.7.6 19.4 1.7 23.2 1.3 4.6 4.2 7 8.7 7 3.9 0 6.7-1.5 8.3-4.6a24 24 0 0 0 1.5-9.7v-1.8h13.8v2.3z\"></path><path d=\"M277.2 200.4v-34h-19.7v34h-13.9v-75.1h13.9v31h19.7v-31h13.9v75.1h-13.9z\"></path><path d=\"M319.7 135.7v20.9H342v10.2h-22.2v33.7H306v-75.1h37.2v10.4h-23.5z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"238.1\" cy=\"363.7\" r=\"23.4\"></circle><circle cx=\"351.1\" cy=\"363.7\" r=\"23.4\"></circle><path d=\"M426.2 178.7a14.2 14.2 0 0 0-11.3-5.7h-65.7v28.3H396l-9.1 31.6H220.4v28.3h158.1L367.8 296l-138.2.7c-17.2 0-23.2-4.4-28-16.5l-32.7-97.6-5-15.9c-9.9-39.4-28.6-42.1-41.7-43.1h-.5l-36.8.4v27.8l29.8.3c14 0 17 6.1 22.2 23.3l38 114.3.2.7c7.1 18.2 18.3 34.9 51.2 34.9 0 0 114.8-.1 143.1-.7a82 82 0 0 0 9.1-.5c3.1-.1 6.2-1.1 8.7-3 3.5-2.7 6.5-9.8 8.3-15.4 5.9-18.5 33.2-114.5 33.2-114.5 1-4.3.1-8.9-2.5-12.5z\"></path><path d=\"M233.4 178c0 8.3-1.9 14.4-5.7 18.2-3.8 3.8-9.7 5.7-17.7 5.7-10.6 0-17.6-3.5-21-10.6a76.1 76.1 0 0 1-3.6-28.6c0-13.4 1.2-22.7 3.6-27.8 3.4-7.3 10.6-11 21.5-11 7.8 0 13.4 1.8 16.9 5.4 3.5 3.6 5.3 9.3 5.3 17v1.7h-13.6v-1.4c0-8.4-3-12.6-8.9-12.6-4.5 0-7.6 2.5-9.1 7.4a79.7 79.7 0 0 0-1.7 20.2c0 11.7.6 19.4 1.7 23.2 1.3 4.6 4.2 7 8.7 7 3.9 0 6.7-1.5 8.3-4.6a24 24 0 0 0 1.5-9.7v-1.8h13.8v2.3z\"></path><path d=\"M277.2 200.4v-34h-19.7v34h-13.9v-75.1h13.9v31h19.7v-31h13.9v75.1h-13.9z\"></path><path d=\"M319.7 135.7v20.9H342v10.2h-22.2v33.7H306v-75.1h37.2v10.4h-23.5z\"></path></svg>')}:host .big-data{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M432.3 180.3a43.9 43.9 0 0 0-78.5-26.7l-105.5-33.5a43.9 43.9 0 1 0-74 40.3L105 286.6a43.8 43.8 0 1 0 32.1 73.7l142.8 25.9a43.8 43.8 0 1 0 77.3-32.1L399 222.9a44 44 0 0 0 33.3-42.6zm-109 157.9c-2.4 0-4.8.2-7.1.6l-21.7-41.7a53 53 0 0 0 17.3-60.2l47.1-24.5a43.2 43.2 0 0 0 18.1 10.1l-37.8 118.7c-5-2-10.3-3-15.9-3zm-114.7-83c0 3.8.4 7.6 1.2 11.2l-71.2 35.9A43.2 43.2 0 0 0 126 292l66.2-120.3a42.9 42.9 0 0 0 21.2 1.4l20.3 37a53 53 0 0 0-25.1 45.1zm53.2-24.9a24.8 24.8 0 1 1 0 49.6 24.8 24.8 0 0 1 0-49.6zm126.8-65.4a15.4 15.4 0 1 1 0 30.8 15.4 15.4 0 0 1 0-30.8zm-41.4 29.8L300.6 219a53 53 0 0 0-47-16.4l-21-38.2a43.6 43.6 0 0 0 15.1-22.4l97.7 31a44 44 0 0 0 1.8 21.7zm-141.5-80.1a15.4 15.4 0 1 1 0 30.8 15.4 15.4 0 0 1 0-30.8zM105.1 345.8a15.4 15.4 0 1 1 0-30.8 15.4 15.4 0 0 1 0 30.8zm42.8-24.7l70.3-35.5a53.2 53.2 0 0 0 57.4 20.8l21.2 40.7a44 44 0 0 0-14 18.2l-135.2-24.5a45.7 45.7 0 0 0 .3-19.7zm175.4 76.2a15.4 15.4 0 1 1 0-30.8 15.4 15.4 0 0 1 0 30.8z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M432.3 180.3a43.9 43.9 0 0 0-78.5-26.7l-105.5-33.5a43.9 43.9 0 1 0-74 40.3L105 286.6a43.8 43.8 0 1 0 32.1 73.7l142.8 25.9a43.8 43.8 0 1 0 77.3-32.1L399 222.9a44 44 0 0 0 33.3-42.6zm-109 157.9c-2.4 0-4.8.2-7.1.6l-21.7-41.7a53 53 0 0 0 17.3-60.2l47.1-24.5a43.2 43.2 0 0 0 18.1 10.1l-37.8 118.7c-5-2-10.3-3-15.9-3zm-114.7-83c0 3.8.4 7.6 1.2 11.2l-71.2 35.9A43.2 43.2 0 0 0 126 292l66.2-120.3a42.9 42.9 0 0 0 21.2 1.4l20.3 37a53 53 0 0 0-25.1 45.1zm53.2-24.9a24.8 24.8 0 1 1 0 49.6 24.8 24.8 0 0 1 0-49.6zm126.8-65.4a15.4 15.4 0 1 1 0 30.8 15.4 15.4 0 0 1 0-30.8zm-41.4 29.8L300.6 219a53 53 0 0 0-47-16.4l-21-38.2a43.6 43.6 0 0 0 15.1-22.4l97.7 31a44 44 0 0 0 1.8 21.7zm-141.5-80.1a15.4 15.4 0 1 1 0 30.8 15.4 15.4 0 0 1 0-30.8zM105.1 345.8a15.4 15.4 0 1 1 0-30.8 15.4 15.4 0 0 1 0 30.8zm42.8-24.7l70.3-35.5a53.2 53.2 0 0 0 57.4 20.8l21.2 40.7a44 44 0 0 0-14 18.2l-135.2-24.5a45.7 45.7 0 0 0 .3-19.7zm175.4 76.2a15.4 15.4 0 1 1 0-30.8 15.4 15.4 0 0 1 0 30.8z\"></path></svg>')}:host .dna{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.5 366.5L225.4 348l-11.6 9.7a48.2 48.2 0 0 0-17.2 36.9v31.2h28.3v-31.2c0-5.9 2.6-11.4 7.1-15.2l9.9-8.3 5.6-4.6z\"></path><path d=\"M298.4 187.6L232 132.1a19.8 19.8 0 0 1-7.1-15.2V85.7h-28.3v31.2c0 14.3 6.3 27.7 17.2 36.9l66.4 55.5c4.5 3.8 7.1 9.3 7.1 15.2V287c0 5.9-2.6 11.4-7.1 15.2l-9.9 8.3-5.6 4.7 22.1 18.5 11.7-9.8a48.2 48.2 0 0 0 17.2-36.9v-62.4a48.8 48.8 0 0 0-17.3-37z\"></path><g><path d=\"M298.4 357.7L232 302.2a19.8 19.8 0 0 1-7.1-15.2v-62.4c0-5.9 2.6-11.4 7.1-15.2l9.9-8.3 5.5-4.6-22-18.5-11.6 9.7a48.2 48.2 0 0 0-17.2 36.9V287c0 14.3 6.3 27.7 17.2 36.9l66.4 55.5c4.5 3.8 7.1 9.3 7.1 15.2v31.2h28.3v-31.2c0-14.2-6.3-27.7-17.2-36.9z\"></path><path d=\"M287.3 85.7v31.2c0 5.9-2.6 11.4-7.1 15.2l-9.9 8.3-5.6 4.6 22 18.5 11.7-9.8a48.2 48.2 0 0 0 17.2-36.9V85.7h-28.3z\"></path></g></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M247.5 366.5L225.4 348l-11.6 9.7a48.2 48.2 0 0 0-17.2 36.9v31.2h28.3v-31.2c0-5.9 2.6-11.4 7.1-15.2l9.9-8.3 5.6-4.6z\"></path><path d=\"M298.4 187.6L232 132.1a19.8 19.8 0 0 1-7.1-15.2V85.7h-28.3v31.2c0 14.3 6.3 27.7 17.2 36.9l66.4 55.5c4.5 3.8 7.1 9.3 7.1 15.2V287c0 5.9-2.6 11.4-7.1 15.2l-9.9 8.3-5.6 4.7 22.1 18.5 11.7-9.8a48.2 48.2 0 0 0 17.2-36.9v-62.4a48.8 48.8 0 0 0-17.3-37z\"></path><g><path d=\"M298.4 357.7L232 302.2a19.8 19.8 0 0 1-7.1-15.2v-62.4c0-5.9 2.6-11.4 7.1-15.2l9.9-8.3 5.5-4.6-22-18.5-11.6 9.7a48.2 48.2 0 0 0-17.2 36.9V287c0 14.3 6.3 27.7 17.2 36.9l66.4 55.5c4.5 3.8 7.1 9.3 7.1 15.2v31.2h28.3v-31.2c0-14.2-6.3-27.7-17.2-36.9z\"></path><path d=\"M287.3 85.7v31.2c0 5.9-2.6 11.4-7.1 15.2l-9.9 8.3-5.6 4.6 22 18.5 11.7-9.8a48.2 48.2 0 0 0 17.2-36.9V85.7h-28.3z\"></path></g></svg>')}:host .blockchain{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.8 181.4c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v28.4h-22.6V94.4c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v28.4h-20V94.4c0-10.5-8.2-19-18.2-19H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h30.7v21H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h30.7v21H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19V388h20v28.4c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-28.2H329v28.2c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-30v-21h30c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-28.6v-21h28.6zm-66.8-85h64v64h-64v-64zm-128.7 0h64v64h-64v-64zm-126 0h64v64h-64v-64zm38 85h28.8c10.1 0 18.2-8.5 18.2-19v-29.6h20v29.6c0 10.5 8.2 19 18.2 19h29.7v21h-29.7a18.6 18.6 0 0 0-18.2 19v28.9h-20v-28.9c0-10.5-8.2-19-18.2-19h-28.8v-21zm88 106v-64h64v64h-64zm-126-64h64v64h-64v-64zm64.1 191h-64v-64h64v64zm40.9-66V378h-20v-29.7c0-10.5-8.2-19-18.2-19h-28.8v-21h28.8c10.1 0 18.2-8.5 18.2-19v-29.2h20v29.2c0 10.5 8.2 19 18.2 19h29.7v21h-29.7c-10 .1-18.2 8.6-18.2 19.1zm85.1 66h-64v-64h64v64zm128.7 0h-64v-64h64v64zm-37.2-85h-29.6a18.6 18.6 0 0 0-18.2 19v29.9h-22.6v-29.9c0-10.5-8.2-19-18.2-19h-29.9v-21h29.9c10.1 0 18.2-8.5 18.2-19v-29.2H329v29.2c0 10.5 8.2 19 18.2 19h29.6v21zm37.2-42h-64v-64h64v64zm-35.8-85h-31a18.6 18.6 0 0 0-18.2 19v28.9h-22.6v-28.9c0-10.5-8.2-19-18.2-19h-29.9v-21h29.9c10.1 0 18.2-8.5 18.2-19v-29.6H329v29.6c0 10.5 8.2 19 18.2 19h31v21z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M416.8 181.4c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v28.4h-22.6V94.4c0-10.5-8.2-19-18.2-19h-69.6a18.6 18.6 0 0 0-18.2 19v28.4h-20V94.4c0-10.5-8.2-19-18.2-19H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h30.7v21H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h30.7v21H92.6a18.6 18.6 0 0 0-18.2 19v68c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19V388h20v28.4c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-28.2H329v28.2c0 10.5 8.2 19 18.2 19h69.6c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-30v-21h30c10.1 0 18.2-8.5 18.2-19v-68c0-10.5-8.2-19-18.2-19h-28.6v-21h28.6zm-66.8-85h64v64h-64v-64zm-128.7 0h64v64h-64v-64zm-126 0h64v64h-64v-64zm38 85h28.8c10.1 0 18.2-8.5 18.2-19v-29.6h20v29.6c0 10.5 8.2 19 18.2 19h29.7v21h-29.7a18.6 18.6 0 0 0-18.2 19v28.9h-20v-28.9c0-10.5-8.2-19-18.2-19h-28.8v-21zm88 106v-64h64v64h-64zm-126-64h64v64h-64v-64zm64.1 191h-64v-64h64v64zm40.9-66V378h-20v-29.7c0-10.5-8.2-19-18.2-19h-28.8v-21h28.8c10.1 0 18.2-8.5 18.2-19v-29.2h20v29.2c0 10.5 8.2 19 18.2 19h29.7v21h-29.7c-10 .1-18.2 8.6-18.2 19.1zm85.1 66h-64v-64h64v64zm128.7 0h-64v-64h64v64zm-37.2-85h-29.6a18.6 18.6 0 0 0-18.2 19v29.9h-22.6v-29.9c0-10.5-8.2-19-18.2-19h-29.9v-21h29.9c10.1 0 18.2-8.5 18.2-19v-29.2H329v29.2c0 10.5 8.2 19 18.2 19h29.6v21zm37.2-42h-64v-64h64v64zm-35.8-85h-31a18.6 18.6 0 0 0-18.2 19v28.9h-22.6v-28.9c0-10.5-8.2-19-18.2-19h-29.9v-21h29.9c10.1 0 18.2-8.5 18.2-19v-29.6H329v29.6c0 10.5 8.2 19 18.2 19h31v21z\"></path></svg>')}:host .crowdfunding{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M248.4 385.8L218.7 361a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0V338a46 46 0 0 0 6.2 23l-29.7 24.9a53 53 0 0 0-19 40.7v10.7h21.3v-10.7c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v10.7h21.3v-10.7a53.8 53.8 0 0 0-19.2-40.7zM154 338v-28.3a24.8 24.8 0 1 1 49.6 0V338a24.8 24.8 0 1 1-49.6 0z\"></path><path d=\"M189.4 249.3v-7.1c0-9.5 4.2-18.4 11.4-24.4l35.7-29.9a45.8 45.8 0 0 0 40.5 0l35.7 29.8 2.6 2.4a32 32 0 0 1 8.8 22v7.1h21.3v-7.1a53.2 53.2 0 0 0-19-40.8l-32.7-27.4a45.6 45.6 0 0 0 9.2-27.6V118a46.2 46.2 0 0 0-92.2 0v28.3c0 10.3 3.4 19.9 9.2 27.6l-32.7 27.4a53 53 0 0 0-19 40.7v7.1h21.2zm42.6-131a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path><path d=\"M371.3 324.4l-3.1 18.7a37.9 37.9 0 0 1-5.6 75.2c-19 0-34.8-14.1-37.4-32.5l-18.6 3.5a56.8 56.8 0 1 0 64.7-64.9z\"></path><path d=\"M301.1 262.2a56.8 56.8 0 0 0 0 113.4 56.8 56.8 0 0 0 0-113.4zm0 94.6a37.8 37.8 0 1 1 0-75.7 37.8 37.8 0 0 1 0 75.7z\"></path><path d=\"M300.7 338c-6.2 0-9.3-2.8-9.3-9.2h5.5c0 2.8.8 5.1 4 5.1 3.9 0 4.3-3.8 4.3-9.3 0-3.1-.3-7.4-4.1-7.4-2.3 0-3.7 1.6-4.1 3.7h-5.3l.7-21h17.3v4.2h-12.1l-.5 11.8c1.7-1.7 3.1-2.6 5.9-2.6 6.7 0 7.9 5.3 7.9 11.3-.1 7.7-1.5 13.4-10.2 13.4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M248.4 385.8L218.7 361a46 46 0 0 0 6.2-23v-28.3a46.2 46.2 0 0 0-92.2 0V338a46 46 0 0 0 6.2 23l-29.7 24.9a53 53 0 0 0-19 40.7v10.7h21.3v-10.7c0-9.5 4.2-18.4 11.4-24.4l30.7-25.7a45.7 45.7 0 0 0 50.6 0l30.7 25.6a32 32 0 0 1 11.4 24.4v10.7h21.3v-10.7a53.8 53.8 0 0 0-19.2-40.7zM154 338v-28.3a24.8 24.8 0 1 1 49.6 0V338a24.8 24.8 0 1 1-49.6 0z\"></path><path d=\"M189.4 249.3v-7.1c0-9.5 4.2-18.4 11.4-24.4l35.7-29.9a45.8 45.8 0 0 0 40.5 0l35.7 29.8 2.6 2.4a32 32 0 0 1 8.8 22v7.1h21.3v-7.1a53.2 53.2 0 0 0-19-40.8l-32.7-27.4a45.6 45.6 0 0 0 9.2-27.6V118a46.2 46.2 0 0 0-92.2 0v28.3c0 10.3 3.4 19.9 9.2 27.6l-32.7 27.4a53 53 0 0 0-19 40.7v7.1h21.2zm42.6-131a24.8 24.8 0 1 1 49.6 0v28.3a24.8 24.8 0 1 1-49.6 0v-28.3z\"></path><path d=\"M371.3 324.4l-3.1 18.7a37.9 37.9 0 0 1-5.6 75.2c-19 0-34.8-14.1-37.4-32.5l-18.6 3.5a56.8 56.8 0 1 0 64.7-64.9z\"></path><path d=\"M301.1 262.2a56.8 56.8 0 0 0 0 113.4 56.8 56.8 0 0 0 0-113.4zm0 94.6a37.8 37.8 0 1 1 0-75.7 37.8 37.8 0 0 1 0 75.7z\"></path><path d=\"M300.7 338c-6.2 0-9.3-2.8-9.3-9.2h5.5c0 2.8.8 5.1 4 5.1 3.9 0 4.3-3.8 4.3-9.3 0-3.1-.3-7.4-4.1-7.4-2.3 0-3.7 1.6-4.1 3.7h-5.3l.7-21h17.3v4.2h-12.1l-.5 11.8c1.7-1.7 3.1-2.6 5.9-2.6 6.7 0 7.9 5.3 7.9 11.3-.1 7.7-1.5 13.4-10.2 13.4z\"></path></svg>')}:host .cryptocurrency{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M382.9 311.6A140 140 0 0 1 115.3 255 140 140 0 0 1 383 198.6h30.5A168.5 168.5 0 0 0 255.1 86.9C162.4 86.9 87 162.3 87 255s75.4 168.1 168.1 168.1c72.9 0 135-46.6 158.3-111.6h-30.5z\"></path><path d=\"M421.2 240.8h-82.4a85.4 85.4 0 0 0-169 16.2 85.3 85.3 0 1 0 169.7 12.2h81.7v-28.4zm-166.1 73.1a57 57 0 1 1 0-113.9 57 57 0 0 1 0 113.9z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M382.9 311.6A140 140 0 0 1 115.3 255 140 140 0 0 1 383 198.6h30.5A168.5 168.5 0 0 0 255.1 86.9C162.4 86.9 87 162.3 87 255s75.4 168.1 168.1 168.1c72.9 0 135-46.6 158.3-111.6h-30.5z\"></path><path d=\"M421.2 240.8h-82.4a85.4 85.4 0 0 0-169 16.2 85.3 85.3 0 1 0 169.7 12.2h81.7v-28.4zm-166.1 73.1a57 57 0 1 1 0-113.9 57 57 0 0 1 0 113.9z\"></path></svg>')}:host .identity-management{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M310.9 284.3l-16.3 19.2 21.9 18.3 36.9 30.8c5.7 4.8 9 11.8 9 19.3v34.7h25.2v-34.7c0-14.9-6.6-29-18-38.6l-36.9-30.8-21.8-18.2z\"></path><path d=\"M110.5 371.9c0-7.5 3.3-14.5 9-19.3l36.9-30.8 40.2-33.6a75.6 75.6 0 0 0 115.3-63.9v-50.6a75.6 75.6 0 0 0-151 0v50.5a75.7 75.7 0 0 0 16.6 47l-37.3 31.2-36.9 30.8a50.5 50.5 0 0 0-18 38.6v34.7h25.2v-34.6zM186 224v-50.4a50.4 50.4 0 0 1 100.8 0v50.6A50.4 50.4 0 0 1 186 224z\"></path><path d=\"M223.3 400.3l12.6 18.9 12.6-18.9v-81.8h-25.2z\"></path><path d=\"M254.8 439.4z\"></path><path d=\"M426 170.9a39.4 39.4 0 0 0-78.8 0v.1c.1 19.2 14 35.3 32.3 38.6V299h15.8v-17H410v-25.7h-14.6v-47a39.4 39.4 0 0 0 30.6-38.2v-.2c0 .1 0 0 0 0zm-39.4 23.6a23.5 23.5 0 1 1 0-47 23.5 23.5 0 0 1 0 47z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M310.9 284.3l-16.3 19.2 21.9 18.3 36.9 30.8c5.7 4.8 9 11.8 9 19.3v34.7h25.2v-34.7c0-14.9-6.6-29-18-38.6l-36.9-30.8-21.8-18.2z\"></path><path d=\"M110.5 371.9c0-7.5 3.3-14.5 9-19.3l36.9-30.8 40.2-33.6a75.6 75.6 0 0 0 115.3-63.9v-50.6a75.6 75.6 0 0 0-151 0v50.5a75.7 75.7 0 0 0 16.6 47l-37.3 31.2-36.9 30.8a50.5 50.5 0 0 0-18 38.6v34.7h25.2v-34.6zM186 224v-50.4a50.4 50.4 0 0 1 100.8 0v50.6A50.4 50.4 0 0 1 186 224z\"></path><path d=\"M223.3 400.3l12.6 18.9 12.6-18.9v-81.8h-25.2z\"></path><path d=\"M254.8 439.4z\"></path><path d=\"M426 170.9a39.4 39.4 0 0 0-78.8 0v.1c.1 19.2 14 35.3 32.3 38.6V299h15.8v-17H410v-25.7h-14.6v-47a39.4 39.4 0 0 0 30.6-38.2v-.2c0 .1 0 0 0 0zm-39.4 23.6a23.5 23.5 0 1 1 0-47 23.5 23.5 0 0 1 0 47z\"></path></svg>')}:host .iot{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M156.2 330.4h-32.4v-149h32.4v149z\"></path><path d=\"M297.2 278.1c0 17.2-5.1 30.6-15.4 40.2a57.9 57.9 0 0 1-41.3 14.4 57.4 57.4 0 0 1-41.2-14.3c-10-9.6-15.1-23-15.1-40.3 0-17 5.2-30.4 15.7-40a58.8 58.8 0 0 1 41.4-14.4c17.3 0 31 4.8 40.9 14.3 10 9.5 15 22.9 15 40.1zm-31.3.2c0-10-1.7-18.2-5.2-24.5-4.4-8-11.1-12-20.2-12-16.6 0-24.9 12.2-24.9 36.5 0 24.5 8.3 36.7 24.9 36.7 9.1 0 15.8-4.1 20.2-12.2a51.1 51.1 0 0 0 5.2-24.5z\"></path><path d=\"M406.1 205.1h-46.6v125.4h-32.4V205.1h-46.6v-23.7h125.6v23.7z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M156.2 330.4h-32.4v-149h32.4v149z\"></path><path d=\"M297.2 278.1c0 17.2-5.1 30.6-15.4 40.2a57.9 57.9 0 0 1-41.3 14.4 57.4 57.4 0 0 1-41.2-14.3c-10-9.6-15.1-23-15.1-40.3 0-17 5.2-30.4 15.7-40a58.8 58.8 0 0 1 41.4-14.4c17.3 0 31 4.8 40.9 14.3 10 9.5 15 22.9 15 40.1zm-31.3.2c0-10-1.7-18.2-5.2-24.5-4.4-8-11.1-12-20.2-12-16.6 0-24.9 12.2-24.9 36.5 0 24.5 8.3 36.7 24.9 36.7 9.1 0 15.8-4.1 20.2-12.2a51.1 51.1 0 0 0 5.2-24.5z\"></path><path d=\"M406.1 205.1h-46.6v125.4h-32.4V205.1h-46.6v-23.7h125.6v23.7z\"></path></svg>')}:host .drop-zone{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"256\" cy=\"256\" r=\"256\" opacity=\"0.2\"></circle><circle cx=\"270.9\" cy=\"102.4\" r=\"13.3\"></circle><circle cx=\"239.5\" cy=\"134.5\" r=\"13.3\"></circle><path d=\"M330.5 54.6a14 14 0 0 0-4-8.1 12.7 12.7 0 0 0-8.8-3.7 126 126 0 0 0-50.8 4.8 126.8 126.8 0 0 0-77 67l-10.5-2c-10-1.9-19.7.9-26.4 7.5l-14 13.7 11.7 12 14-13.7a13 13 0 0 1 11.6-3l22.7 4.2.2-1 .7.3c15-35.7 39-58.8 71-68.8a111.1 111.1 0 0 1 43.3-4.5c.9 3.4 4.2 19.4-1.2 39.8a94.8 94.8 0 0 1-20.2 37.5 153.3 153.3 0 0 1-51.8 37.3l.1.2-1 .3 4.9 23.3c1 4.8 0 9.1-2.6 11.9l-13.7 14 12 11.7 13.7-14a29.3 29.3 0 0 0 7-27l-2.3-10.7c19-10.1 34.6-22.2 46.5-36a112.5 112.5 0 0 0 23.7-44.1c6.6-24.8 2.2-44.6 1.2-48.9z\"></path><path d=\"M164.4 204.3l33.1-35.6 9 8.4-33 35.6z\"></path><path d=\"M161.8 171.8l18-19.3 9.1 8.4-18 19.4z\"></path><path d=\"M197.2 204.7l18-19.3 9 8.5-18 19.3z\"></path><path d=\"M322.6 388h118.1V267l-59.4-68h-58.7a23.7 23.7 0 0 0-23.6 23.6v141.7a23.6 23.6 0 0 0 23.6 23.7zm63-160.2l29.9 34.2h-30zm-70.9-5.1a8 8 0 0 1 7.9-8h47.2v63H425v94.6H322.6a8 8 0 0 1-7.9-8V222.8zM123.6 326.2h93.1v3.9h-93.1zm0 11.6h93.1v3.9h-93.1z\"></path><path d=\"M185 405.7h-61.4a7.8 7.8 0 0 1-7.8-7.7V258.3a7.8 7.8 0 0 1 7.8-7.8H170v62h54.3v41.6H240V302l-58.7-67h-57.7a23.3 23.3 0 0 0-23.3 23.3V398a23.3 23.3 0 0 0 23.3 23.3H185zm.6-142.3l29.5 33.7h-29.5z\"></path><path d=\"M219.4 406.7a25.4 25.4 0 0 1-19-8.5v38.2l19-15 19 15v-38.2a25.4 25.4 0 0 1-19 8.5z\"></path><path d=\"M219.4 399.6A18.5 18.5 0 1 0 201 381a18.5 18.5 0 0 0 18.4 18.4zM123.6 350h93.1v3.9h-93.1z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><circle cx=\"256\" cy=\"256\" r=\"256\" opacity=\"0.2\"></circle><circle cx=\"270.9\" cy=\"102.4\" r=\"13.3\"></circle><circle cx=\"239.5\" cy=\"134.5\" r=\"13.3\"></circle><path d=\"M330.5 54.6a14 14 0 0 0-4-8.1 12.7 12.7 0 0 0-8.8-3.7 126 126 0 0 0-50.8 4.8 126.8 126.8 0 0 0-77 67l-10.5-2c-10-1.9-19.7.9-26.4 7.5l-14 13.7 11.7 12 14-13.7a13 13 0 0 1 11.6-3l22.7 4.2.2-1 .7.3c15-35.7 39-58.8 71-68.8a111.1 111.1 0 0 1 43.3-4.5c.9 3.4 4.2 19.4-1.2 39.8a94.8 94.8 0 0 1-20.2 37.5 153.3 153.3 0 0 1-51.8 37.3l.1.2-1 .3 4.9 23.3c1 4.8 0 9.1-2.6 11.9l-13.7 14 12 11.7 13.7-14a29.3 29.3 0 0 0 7-27l-2.3-10.7c19-10.1 34.6-22.2 46.5-36a112.5 112.5 0 0 0 23.7-44.1c6.6-24.8 2.2-44.6 1.2-48.9z\"></path><path d=\"M164.4 204.3l33.1-35.6 9 8.4-33 35.6z\"></path><path d=\"M161.8 171.8l18-19.3 9.1 8.4-18 19.4z\"></path><path d=\"M197.2 204.7l18-19.3 9 8.5-18 19.3z\"></path><path d=\"M322.6 388h118.1V267l-59.4-68h-58.7a23.7 23.7 0 0 0-23.6 23.6v141.7a23.6 23.6 0 0 0 23.6 23.7zm63-160.2l29.9 34.2h-30zm-70.9-5.1a8 8 0 0 1 7.9-8h47.2v63H425v94.6H322.6a8 8 0 0 1-7.9-8V222.8zM123.6 326.2h93.1v3.9h-93.1zm0 11.6h93.1v3.9h-93.1z\"></path><path d=\"M185 405.7h-61.4a7.8 7.8 0 0 1-7.8-7.7V258.3a7.8 7.8 0 0 1 7.8-7.8H170v62h54.3v41.6H240V302l-58.7-67h-57.7a23.3 23.3 0 0 0-23.3 23.3V398a23.3 23.3 0 0 0 23.3 23.3H185zm.6-142.3l29.5 33.7h-29.5z\"></path><path d=\"M219.4 406.7a25.4 25.4 0 0 1-19-8.5v38.2l19-15 19 15v-38.2a25.4 25.4 0 0 1-19 8.5z\"></path><path d=\"M219.4 399.6A18.5 18.5 0 1 0 201 381a18.5 18.5 0 0 0 18.4 18.4zM123.6 350h93.1v3.9h-93.1z\"></path></svg>')}:host .menu{mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M4 10h24a2 2 0 0 0 0-4H4a2 2 0 0 0 0 4zm24 4H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4zm0 8H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4z\"></path></svg>');-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 510.2 510.2\"><path d=\"M4 10h24a2 2 0 0 0 0-4H4a2 2 0 0 0 0 4zm24 4H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4zm0 8H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4z\"></path></svg>')}";
var SixPictoStyle0 = sixPictoCss;

/**
 * @since 1.1
 * @status stable
 *
 * @part icon - The component's icon wrapper.
 */
class SixPicto {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = 'medium';
    }
    render() {
        var _a;
        const iconName = (_a = this.host.innerHTML) === null || _a === void 0 ? void 0 : _a.trim();
        return (hAsync(Host, { key: 'eeac4f0c4130ee89846bbd7d5357097f622a59a2' }, hAsync("div", { key: 'b944548e794bf927a3b6448cf95cdb89771e2e67', part: "icon", class: {
                [`is-size-${this.size}`]: typeof this.size != null || this.size.trim() !== '',
                [`${iconName}`]: true,
            } })));
    }
    get host() { return getElement(this); }
    static get style() { return SixPictoStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-picto",
        "$members$": {
            "size": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixProgressBarCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--height:16px;--track-color:var(--six-progress-track-color);--indicator-color:var(--six-progress-indicator-color);--label-color:var(--six-progress-label-color);display:block}.progress-bar{position:relative;background-color:var(--track-color);height:var(--height);border-radius:var(--sl-border-radius-pill);overflow:hidden}.progress-bar__indicator{height:100%;font-family:var(--six-font-sans);font-size:12px;font-weight:var(--six-font-weight-normal);background-color:var(--indicator-color);color:var(--label-color);text-align:center;line-height:var(--height);white-space:nowrap;overflow:hidden;transition:400ms width, 400ms background-color;user-select:none}.progress-bar--indeterminate .progress-bar__indicator{position:absolute;animation:indeterminate 2.5s infinite cubic-bezier(0.37, 0, 0.63, 1)}@keyframes indeterminate{0%{left:-50%;width:50%}75%,100%{left:100%;width:50%}}";
var SixProgressBarStyle0 = sixProgressBarCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - A label to show inside the indicator.
 *
 * @part base - The component's base wrapper.
 * @part indicator - The progress bar indicator.
 * @part label - The progress bar label.
 */
class SixProgressBar {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.percentage = 0;
        this.indeterminate = false;
    }
    render() {
        return (hAsync("div", { key: 'f608cc3d71f203a61fc9df087ec575c0c3492c5c', part: "base", class: {
                'progress-bar': true,
                'progress-bar--indeterminate': this.indeterminate,
            }, role: "progressbar", "aria-valuemin": "0", "aria-valuemax": "100", "aria-valuenow": this.indeterminate ? null : this.percentage }, hAsync("div", { key: 'e3338e5b2801eee82d23014de0d1450d96734ed6', part: "indicator", class: "progress-bar__indicator", style: {
                width: `${this.percentage}%`,
            } }, !this.indeterminate && (hAsync("span", { key: '7b1854dd789df5c0ec8674c92f9b83eb3cff5136', part: "label", class: "progress-bar__label" }, hAsync("slot", { key: 'e276f62022d67d798929c45d77b43b32c084fc95' }))))));
    }
    static get style() { return SixProgressBarStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-progress-bar",
        "$members$": {
            "percentage": [2],
            "indeterminate": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixProgressRingCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--track-color:var(--six-progress-track-color);--indicator-color:var(--six-progress-indicator-color);display:inline-flex}.progress-ring{display:inline-flex;align-items:center;justify-content:center;position:relative}.progress-ring__image{transform:rotate(-90deg);transform-origin:50% 50%}.progress-ring__track{stroke:var(--track-color)}.progress-ring__indicator{stroke:var(--indicator-color);transition:0.35s stroke-dashoffset, 0.35s stroke}.progress-ring__label{display:flex;align-items:center;justify-content:center;position:absolute;top:0;left:0;width:100%;height:100%;text-align:center;user-select:none;font-family:var(--six-font-family)}";
var SixProgressRingStyle0 = sixProgressRingCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - A label to show inside the ring.
 *
 * @part base - The component's base wrapper.
 * @part label - The progress ring label.
 */
class SixProgressRing {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = 128;
        this.strokeWidth = 4;
        this.percentage = 0;
    }
    handlePercentageChange() {
        this.updateProgress();
    }
    componentDidLoad() {
        this.updateProgress();
    }
    updateProgress() {
        var _a;
        if (((_a = this.indicator) === null || _a === void 0 ? void 0 : _a.r) == null)
            return;
        const radius = this.indicator.r.baseVal.value;
        const circumference = radius * 2 * Math.PI;
        const offset = circumference - (this.percentage / 100) * circumference;
        this.indicator.style.strokeDasharray = `${circumference} ${circumference}`;
        this.indicator.style.strokeDashoffset = `${offset}`;
    }
    render() {
        return (hAsync("div", { key: 'e09ffe97cbc1a44bd5c2006d0ecb35d89080f8af', part: "base", class: "progress-ring" }, hAsync("svg", { key: '20cc7c1538d71910135e3fe211446c8f08b1ce4d', class: "progress-ring__image", width: this.size, height: this.size }, hAsync("circle", { key: '25f245f920c534d8da8f29776dde7b4ded21e713', class: "progress-ring__track", "stroke-width": this.strokeWidth, "stroke-linecap": "round", fill: "transparent", r: this.size / 2 - this.strokeWidth * 2, cx: this.size / 2, cy: this.size / 2 }), hAsync("circle", { key: '1c5ef08a2ba59c059a3cde7d49602dda047af141', ref: (el) => (this.indicator = el), class: "progress-ring__indicator", "stroke-width": this.strokeWidth, "stroke-linecap": "round", fill: "transparent", r: this.size / 2 - this.strokeWidth * 2, cx: this.size / 2, cy: this.size / 2 })), hAsync("span", { key: '2949b9164e9500cdb9969b3b541e1701b679f7fe', part: "label", class: "progress-ring__label" }, hAsync("slot", { key: 'b18182513d8937160d8a24386e0703a0df89a6e8' }))));
    }
    static get watchers() { return {
        "percentage": ["handlePercentageChange"]
    }; }
    static get style() { return SixProgressRingStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-progress-ring",
        "$members$": {
            "size": [2],
            "strokeWidth": [2, "stroke-width"],
            "percentage": [2]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixRadioCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block}.radio{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.radio__icon{display:inline-flex;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size)}.radio__icon svg{width:100%;height:100%}.radio__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size);border:solid var(--six-border-width) var(--six-input-border-color);border-radius:50%;background-color:var(--six-input-background-color);color:transparent;transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow}.radio__control input[type=radio]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none}.radio:not(.radio--checked):not(.radio--disabled) .radio__control:hover{border-color:var(--six-input-border-color-hover)}.radio--checked .radio__control{color:var(--six-selection-control-color);border-color:var(--six-selection-control-color)}.radio.radio--checked:not(.radio--disabled) .radio__control:hover{color:var(--six-input-border-color-focus);border-color:var(--six-input-border-color-focus)}.radio--disabled{cursor:not-allowed;color:var(--six-input-color-disabled)}.radio--disabled .radio__control{border-color:var(--six-input-border-color-disabled)}.radio--disabled.radio--checked .radio__control{color:var(--six-selection-control-color-disabled)}.radio__label{line-height:var(--six-selection-control-toggle-size);margin-left:0.5em;user-select:none}";
var SixRadioStyle0 = sixRadioCss;

let id$7 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The radio's label.
 *
 * @part base - The component's base wrapper.
 * @part control - The radio control.
 * @part checked-icon - The container the wraps the checked icon.
 * @part label - The radio label.
 */
class SixRadio {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixBlur = createEvent(this, "six-radio-blur", 7);
        this.sixChange = createEvent(this, "six-radio-change", 7);
        this.sixFocus = createEvent(this, "six-radio-focus", 7);
        this.inputId = `radio-${++id$7}`;
        this.labelId = `radio-label-${id$7}`;
        this.eventListeners = new EventListeners();
        this.handleClick = () => {
            if (this.nativeInput != null) {
                this.checked = this.nativeInput.checked;
                this.sixChange.emit();
            }
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleKeyDown = (keyboardEvent) => {
            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(keyboardEvent.key)) {
                const radios = this.getAllRadios().filter((radio) => !radio.disabled);
                const incr = ['ArrowUp', 'ArrowLeft'].includes(keyboardEvent.key) ? -1 : 1;
                let index = radios.indexOf(this.host) + incr;
                if (index < 0)
                    index = radios.length - 1;
                if (index > radios.length - 1)
                    index = 0;
                this.getAllRadios().forEach((radio) => (radio.checked = false));
                radios[index].setFocus();
                radios[index].checked = true;
                radios[index].dispatchEvent(new CustomEvent('six-radio-change', { bubbles: true, cancelable: true }));
                keyboardEvent.preventDefault();
            }
        };
        this.handleMouseDown = (event) => {
            var _a;
            // Prevent clicks on the label from briefly blurring the input
            event.preventDefault();
            (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus();
        };
        this.hasFocus = false;
        this.name = '';
        this.value = 'on';
        this.disabled = false;
        this.checked = false;
        this.invalid = false;
    }
    handleCheckedChange() {
        if (this.checked) {
            this.getSiblingRadios().forEach((radio) => (radio.checked = false));
        }
        if (this.nativeInput != null) {
            this.nativeInput.checked = this.checked;
        }
    }
    handleNameChange(name) {
        if (this.nativeInput != null) {
            this.nativeInput.name = name;
        }
    }
    connectedCallback() {
        this.eventListeners.forward('six-radio-change', 'change', this.host);
        this.eventListeners.forward('six-radio-blur', 'blur', this.host);
        this.eventListeners.forward('six-radio-focus', 'focus', this.host);
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    /** Sets focus on the radio. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the radio. */
    async removeFocus() {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.blur();
    }
    getAllRadios() {
        const form = this.host.closest('form') || document.body;
        if (this.name === '')
            return [];
        return [...form.querySelectorAll('six-radio')].filter((radio) => radio.name === this.name);
    }
    getSiblingRadios() {
        return this.getAllRadios().filter((radio) => radio !== this.host);
    }
    render() {
        return (hAsync("label", { key: '1b6f98dbd3e95d64cb272c0b9c82b88fb9d67a7e', part: "base", class: {
                radio: true,
                'radio--checked': this.checked,
                'radio--disabled': this.disabled,
                'radio--focused': this.hasFocus,
            }, htmlFor: this.inputId, onKeyDown: this.handleKeyDown, onMouseDown: this.handleMouseDown }, hAsync("span", { key: 'c8740894c30202709d78edfd1ab8ad0efb724d1d', part: "control", class: "radio__control" }, hAsync("span", { key: '2c3f19b963075cf1b6e3f9b10f322b228fd9d9f5', part: "checked-icon", class: "radio__icon" }, hAsync("svg", { key: 'a7ba9f65e0c0afa5d07aaabfe142fc72e68d1b3b', viewBox: "0 0 16 16" }, hAsync("g", { key: '7f929b5e3ba26ed47da766acbc5103ec132ffc5c', stroke: "none", "stroke-width": "1", fill: "none", "fill-rule": "evenodd" }, hAsync("g", { key: '7ee2d214b117083ce717b0492fa1ff7b02943201', fill: "currentColor" }, hAsync("circle", { key: 'de9ccc22cb186b1accae8b1c43a894827f4985fc', cx: "8", cy: "8", r: "5" }))))), hAsync("input", { key: '33504cb97e18a1dbf1f9c09c52dd526b2a549eee', ref: (el) => (this.nativeInput = el), id: this.inputId, type: "radio", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, role: "radio", "aria-checked": this.checked ? 'true' : 'false', "aria-labelledby": this.labelId, onClick: this.handleClick, onBlur: this.handleBlur, onFocus: this.handleFocus })), hAsync("span", { key: 'c83bf568da9bd0451c2ea98e3ecd4f40d2093574', part: "label", id: this.labelId, class: "radio__label" }, hAsync("slot", { key: 'a68a99a2050d405cdfcc3be435ec6719a389ca02' }))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "checked": ["handleCheckedChange"],
        "name": ["handleNameChange"]
    }; }
    static get style() { return SixRadioStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-radio",
        "$members$": {
            "name": [1],
            "value": [513],
            "disabled": [4],
            "checked": [1540],
            "invalid": [516],
            "hasFocus": [32],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["value", "value"], ["checked", "checked"], ["invalid", "invalid"]]
    }; }
}

const sixRangeCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{--thumb-size:14px;--tooltip-offset-y:10px;--track-color:var(--six-color-web-rock-900);--thumb-color:var(--six-color-web-rock-900);--track-height:3px;display:block}.range{position:relative}.range .range__control{-webkit-appearance:none;width:100%;height:var(--six-input-height-medium);background:transparent;line-height:var(--six-input-height-medium);vertical-align:middle}.range .range__control::-webkit-slider-runnable-track{width:100%;height:var(--track-height);border-radius:3px;border:none}.range .range__control::-webkit-slider-thumb{border:none;width:var(--thumb-size);height:var(--thumb-size);border-radius:50%;background-color:var(--thumb-color);-webkit-appearance:none;margin-top:calc(var(--thumb-size) / -2 + var(--track-height) / 2);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow, var(--six-transition-fast) transform;cursor:pointer}.range .range__control:not(:disabled)::-webkit-slider-thumb:hover{background-color:var(--thumb-color)}.range .range__control:not(:disabled):focus::-webkit-slider-thumb{background-color:var(--thumb-color)}.range .range__control:not(:disabled)::-webkit-slider-thumb:active{background-color:var(--thumb-color);cursor:grabbing}.range .range__control::-moz-focus-outer{border:0}.range .range__control::-moz-range-track{width:100%;height:var(--track-height);background-color:var(--six-progress-track-color);border-radius:3px;border:none}.range .range__control::-moz-range-progress{height:var(--track-height);border-radius:3px;background-color:var(--track-color);border:none}.range .range__control::-moz-range-thumb{border:none;height:var(--thumb-size);width:var(--thumb-size);border-radius:50%;background-color:var(--thumb-color);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow, var(--six-transition-fast) transform;cursor:pointer}.range .range__control:not(:disabled)::-moz-range-thumb:hover{background-color:var(--thumb-color)}.range .range__control:not(:disabled):focus::-moz-range-thumb{background-color:var(--thumb-color)}.range .range__control:not(:disabled)::-moz-range-thumb:active{background-color:var(--thumb-color);cursor:grabbing}.range .range__control:focus{outline:none}.range .range__control:disabled::-webkit-slider-thumb{cursor:not-allowed;color:var(--six-color-web-rock-300);border-color:var(--six-color-web-rock-300);background-color:var(--six-color-web-rock-300)}.range .range__control:disabled::-moz-range-thumb{cursor:not-allowed;color:var(--six-color-web-rock-300);border-color:var(--six-color-web-rock-300);background-color:var(--six-color-web-rock-300)}.range__tooltip{position:absolute;z-index:var(--six-z-index-tooltip);left:2px;border-radius:var(--six-border-radius-medium);background-color:var(--six-color-web-rock-900);font-family:var(--six-font-family);font-size:var(--six-tooltip-font-size);font-weight:var(--six-tooltip-font-weight);line-height:var(--six-tooltip-line-height);color:var(--six-color-white);opacity:0;padding:var(--six-spacing-xxx-small) var(--six-spacing-xx-small);transition:var(--six-transition-fast) opacity;pointer-events:none}.range__tooltip::after{content:\"\";position:absolute;width:0;height:0;left:50%;margin-left:calc(-1 * var(--six-tooltip-arrow-size))}.range--tooltip-visible .range__tooltip{opacity:1}.range--tooltip-top .range__tooltip{top:calc(-1 * var(--thumb-size) - var(--tooltip-offset-y))}.range--tooltip-top .range__tooltip::after{border-top:var(--six-tooltip-arrow-size) solid var(--six-color-web-rock-900);border-left:var(--six-tooltip-arrow-size) solid transparent;border-right:var(--six-tooltip-arrow-size) solid transparent;top:100%}.range--tooltip-bottom .range__tooltip{bottom:calc(-1 * var(--thumb-size) - var(--tooltip-offset-y))}.range--tooltip-bottom .range__tooltip::after{border-bottom:var(--six-tooltip-arrow-size) solid var(--six-color-web-rock-900);border-left:var(--six-tooltip-arrow-size) solid transparent;border-right:var(--six-tooltip-arrow-size) solid transparent;bottom:100%}";
var SixRangeStyle0 = sixRangeCss;

let id$6 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot label - The input's label. Alternatively, you can use the label prop.
 * @slot help-text - Help text that describes how to use the input. Alternatively, you can use the help-text prop.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part input - The native range input.
 * @part tooltip - The range tooltip.
 */
class SixRange {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-range-change", 7);
        this.sixBlur = createEvent(this, "six-range-blur", 7);
        this.sixFocus = createEvent(this, "six-range-focus", 7);
        this.inputId = `input-${++id$6}`;
        this.labelId = `input-label-${id$6}`;
        this.helpTextId = `input-help-text-${id$6}`;
        this.errorTextId = `input-error-text-${id$6}`;
        this.eventListeners = new EventListeners();
        this.handleInput = () => {
            if (this.nativeInput != null) {
                this.update(parseFloat(this.nativeInput.value));
            }
            requestAnimationFrame(() => {
                this.sixChange.emit();
            });
        };
        this.handleBlur = () => {
            var _a;
            this.hasFocus = false;
            this.hasTooltip = false;
            this.sixBlur.emit();
            if (this.nativeInput != null) {
                (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.unobserve(this.nativeInput);
            }
        };
        this.handleFocus = () => {
            var _a;
            this.hasFocus = true;
            this.hasTooltip = true;
            this.sixFocus.emit();
            if (this.nativeInput != null) {
                (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.observe(this.nativeInput);
            }
        };
        this.handleSlotChange = () => {
            this.hasHelpTextSlot = hasSlot(this.host, 'help-text');
            this.hasLabelSlot = hasSlot(this.host, 'label');
            this.hasErrorTextSlot = hasSlot(this.host, 'error-text');
        };
        this.handleTouchStart = () => {
            this.setFocus();
        };
        this.hasFocus = false;
        this.hasHelpTextSlot = false;
        this.hasErrorTextSlot = false;
        this.hasLabelSlot = false;
        this.hasTooltip = false;
        this.name = '';
        this.value = 0;
        this.required = false;
        this.helpText = '';
        this.disabled = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.min = 0;
        this.max = 100;
        this.step = 1;
        this.tooltip = 'top';
        this.tooltipFormatter = (value) => value.toString();
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    handleValueChange() {
        this.update();
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
    }
    componentWillLoad() {
        this.update();
        this.handleSlotChange();
    }
    componentDidLoad() {
        const nativeInput = this.nativeInput;
        if (nativeInput == null) {
            return;
        }
        this.update();
        this.resizeObserver = new ResizeObserver(() => this.update());
    }
    disconnectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    componentDidUpdate() {
        const { min, max } = this.getMinMax();
        this.syncTooltip(min, max, this.value);
    }
    getMinMax() {
        var _a, _b;
        const min = (_a = Number(this.min)) !== null && _a !== void 0 ? _a : 0;
        const max = (_b = Number(this.max)) !== null && _b !== void 0 ? _b : 0;
        return { min, max };
    }
    /** Sets focus on the input. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the input. */
    async removeFocus() {
        var _a;
        (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.blur();
    }
    syncTooltip(min, max, value) {
        if (this.tooltip !== 'none' && this.nativeInput != null && this.output != null) {
            const percent = Math.max(0, (value - min) / (max - min));
            const inputWidth = this.nativeInput.offsetWidth;
            const tooltipWidth = this.output.offsetWidth;
            const thumbSize = getComputedStyle(this.nativeInput).getPropertyValue('--thumb-size');
            const x = `calc(${inputWidth * percent}px - calc(calc(${percent} * ${thumbSize}) - calc(${thumbSize} / 2)))`;
            this.output.style.transform = `translateX(${x})`;
            this.output.style.marginLeft = `-${tooltipWidth / 2}px`;
        }
    }
    isFirefox() {
        return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
    }
    update(updateValue) {
        var _a, _b;
        if (updateValue != null) {
            this.value = updateValue;
        }
        const min = (_a = Number(this.min)) !== null && _a !== void 0 ? _a : 0;
        const max = (_b = Number(this.max)) !== null && _b !== void 0 ? _b : 0;
        let value;
        const parsedValue = parseFloat(this.value);
        if (isNaN(parsedValue)) {
            value = this.getDefaultValue(min, max);
        }
        else {
            value = parsedValue;
        }
        if (this.nativeInput != null) {
            // The value may have constraints, so we set the native control's
            // value and sync it back to ensure it adheres to min, max, and step
            // properly.
            this.nativeInput.value = value.toString();
            this.value = parseFloat(this.nativeInput.value);
        }
        else {
            this.value = value;
        }
        this.calculateColorRunnableTrack(min, max, this.value);
        this.syncTooltip(min, max, this.value);
    }
    /**
     * from https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#value
     */
    getDefaultValue(min, max) {
        return max < min ? min : min + (max - min) / 2;
    }
    /**
     * For Firefox this functionality is not needed because it is supported by standard CSS.
     */
    calculateColorRunnableTrack(min, max, value) {
        if (!this.isFirefox() && this.nativeInput != null) {
            const percent = Math.ceil(((value - min) / (max - min)) * 100);
            this.nativeInput.style.background =
                '-webkit-linear-gradient(left, var(--track-color) 0%, var(--track-color) ' +
                    percent +
                    '%, var(--six-color-web-rock-300) ' +
                    percent +
                    '%)';
        }
    }
    render() {
        return (hAsync(FormControl, { key: '913b66d4eb5aa5b68ae95f1206c9980d8ea667ca', inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, size: "medium", errorTextId: this.errorTextId, errorText: this.errorText, hasErrorTextSlot: this.hasErrorTextSlot, errorTextCount: this.errorTextCount, disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("div", { key: '04ccd3b0577d7f5b4a3bfb5a043e47093df75bbf', part: "base", class: {
                range: true,
                // States
                'range--disabled': this.disabled,
                'range--focused': this.hasFocus,
                'range--tooltip-visible': this.hasTooltip,
                'range--tooltip-top': this.tooltip === 'top',
                'range--tooltip-bottom': this.tooltip === 'bottom',
            }, onTouchStart: this.handleTouchStart }, hAsync("input", { key: '128f188b76ee5b9f77237017a794c96de858994d', part: "input", ref: (el) => (this.nativeInput = el), type: "range", class: "range__control", name: this.name, disabled: this.disabled, min: this.min, max: this.max, step: this.step, value: this.value, onInput: this.handleInput, onFocus: this.handleFocus, onBlur: this.handleBlur }), this.tooltip !== 'none' && (hAsync("output", { key: '98fb9159f2d805cd0d6e146512ca42210bd69963', part: "tooltip", ref: (el) => (this.output = el), class: "range__tooltip" }, this.tooltipFormatter(this.value))))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "label": ["handleLabelChange"],
        "errorText": ["handleLabelChange"],
        "helpText": ["handleLabelChange"],
        "value": ["handleValueChange"],
        "min": ["handleValueChange"],
        "max": ["handleValueChange"]
    }; }
    static get style() { return SixRangeStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-range",
        "$members$": {
            "name": [1],
            "value": [1026],
            "required": [4],
            "helpText": [1, "help-text"],
            "disabled": [4],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "min": [2],
            "max": [2],
            "step": [2],
            "tooltip": [1],
            "tooltipFormatter": [16],
            "hasFocus": [32],
            "hasHelpTextSlot": [32],
            "hasErrorTextSlot": [32],
            "hasLabelSlot": [32],
            "hasTooltip": [32],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["invalid", "invalid"]]
    }; }
}

const sixRootCss = ":host{display:block;overflow:hidden;height:inherit}.six-root{display:grid;grid-template:auto 1fr auto/auto 1fr auto;height:100%}.six-root__container--padded{padding:var(--six-spacing-xxx-large)}.six-root__left-sidebar{height:100%;overflow:scroll;grid-column:1/2}.six-root__right-sidebar{height:100%;overflow:scroll;grid-column:3/4}.six-root nav{overflow:hidden}header{grid-column:1/4;position:sticky;top:0;z-index:var(--six-z-index-header);margin-right:2px}main{height:100%;display:flex;flex-direction:column;justify-content:space-between;grid-column:2/3;overflow:auto}footer{grid-column:1/4}";
var SixRootStyle0 = sixRootCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot header - Used to define the header component.
 * @slot main - Used to define the components in the main area.
 * @slot left-sidebar - Used to define the sidebar on the left side.
 * @slot right-sidebar - Used to define the sidebar on the right side.
 * @slot footer - Used to define the footer component.
 */
class SixRoot {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.padded = true;
        this.stage = null;
        this.version = '';
    }
    render() {
        return (hAsync("host", { key: '549ee9fd2e4850365083c9ae5d8d253dffbc466d', class: "six-root" }, hAsync("header", { key: '046e93e958b343eb136876eee02798770f1feefe', part: "header" }, this.stage && hAsync("six-stage-indicator", { key: 'e423d4ceb86b2d2d018490a621c54794877a300f', stage: this.stage }, this.version), hAsync("slot", { key: 'ee66ebecd9d1245483a90762bc4141918d03b014', name: "header" })), hAsync("nav", { key: 'd0cdeb47a188daa81aeeea0f7c9a9a57d51b9d88', class: "six-root__left-sidebar", part: "left-sidebar" }, hAsync("slot", { key: 'c7542081f6914e7c5491e1d301e2a091d3e96ff5', name: "left-sidebar" })), hAsync("main", { key: 'e5e7a34d2892fd2abdaa1a04cc7d625aefde269d', part: "main" }, hAsync("div", { key: '3cac5b7f321ef72d0b112cfbfe62387c3cb25f12', class: { 'six-root__container': true, 'six-root__container--padded': this.padded }, part: "container" }, hAsync("slot", { key: 'fca6a6cf79eaacf46a66c3b7c2edff570237653a', name: "main" })), hAsync("div", { key: '4ebed8d2d26c21e7191f920fb6b2aa72345db598', class: "six-root__footer" }, hAsync("slot", { key: 'b0c246ac208e9e00fe9715067bdcbfd31781bf1c', name: "footer" }))), hAsync("nav", { key: 'fca1cc465b5251f3abd3d36df370244430efdf63', class: "six-root__right-sidebar", part: "right-sidebar" }, hAsync("slot", { key: '3181f6a8cc65a2fc1b59edf0944934b2dfb83396', name: "right-sidebar" }))));
    }
    get host() { return getElement(this); }
    static get style() { return SixRootStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-root",
        "$members$": {
            "padded": [4],
            "stage": [1],
            "version": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixSearchFieldCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.search-box{z-index:var(--six-z-index-search-field)}.search-box__icon{cursor:pointer}";
var SixSearchFieldStyle0 = sixSearchFieldCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the results below the search component.
 */
class SixSearchField {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.searchFieldChange = createEvent(this, "six-search-field-change", 7);
        this.eventListeners = new EventListeners();
        this.handleInputChange = () => {
            if (this.inputElement != null) {
                this.searchFieldChange.emit({ value: this.inputElement.value });
            }
        };
        this.placeholder = undefined;
        this.debounce = DEFAULT_DEBOUNCE_FAST;
        this.disabled = false;
        this.value = '';
        this.clearable = false;
    }
    handleValueChange() {
        if (this.inputElement != null) {
            this.inputElement.value = this.value;
        }
    }
    componentDidLoad() {
        if (this.inputElement == null)
            return;
        this.eventListeners.add(this.inputElement, 'six-input-input', debounce$1(this.handleInputChange, this.debounce));
        this.eventListeners.add(this.inputElement, 'keydown', (event) => {
            const keyboardEvent = event;
            if (keyboardEvent.key === 'Enter') {
                // emit immediately
                this.handleInputChange();
            }
        });
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    render() {
        return (hAsync("div", { key: '045aed33c2cfa19af88ab23c642ce7574b8cfae5', class: "search-box" }, hAsync("six-input", { key: '5938a5d9613574fae1f1094bdefdf3ce96729750', ref: (el) => (this.inputElement = el), placeholder: this.placeholder, value: this.value, disabled: this.disabled, clearable: this.clearable }, hAsync("six-icon", { key: 'b6751944913567cdf88fab8fab75064c839c1d2c', class: "search-box__icon", slot: "prefix", size: "small", onClick: this.handleInputChange }, "search")), hAsync("slot", { key: '1487fe58f51d60e882fdb0a51a3fa9c3cd44164b' })));
    }
    static get watchers() { return {
        "value": ["handleValueChange"]
    }; }
    static get style() { return SixSearchFieldStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-search-field",
        "$members$": {
            "placeholder": [1],
            "debounce": [514],
            "disabled": [516],
            "value": [513],
            "clearable": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["debounce", "debounce"], ["disabled", "disabled"], ["value", "value"]]
    }; }
}

const languages = ['de', 'fr', 'it', 'en', 'es'];
function getLanguage() {
    const documentLang = document.documentElement.lang;
    if (languages.includes(documentLang)) {
        return documentLang;
    }
    return 'de';
}

function convertToValidValue(value, multiple) {
    if (multiple) {
        if (Array.isArray(value)) {
            return value.filter((element) => typeof element === 'string');
        }
        else if (typeof value === 'string' && value.length > 0) {
            return [value];
        }
        else {
            return [];
        }
    }
    else {
        if (typeof value === 'string') {
            return value;
        }
        else {
            return '';
        }
    }
}
function convertToValidArrayValue(value) {
    return convertToValidValue(value, true);
}
function valueEquals(a, b) {
    if (Array.isArray(a) && Array.isArray(b)) {
        return a.length === b.length && a.every((element, index) => element === b[index]);
    }
    else if (typeof a === 'string' && typeof b === 'string') {
        return a === b;
    }
    return false;
}

const sixSelectCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host,.select{display:block}.select__box{display:inline-flex;align-items:center;justify-content:start;position:relative;width:100%;font-family:var(--six-font-family);font-weight:var(--six-input-font-weight);font-size:var(--six-input-font-size-medium);letter-spacing:var(--six-input-letter-spacing);background-color:var(--six-input-background-color);border:solid var(--six-border-width) var(--six-input-border-color);vertical-align:middle;transition:var(--six-transition-fast) color, var(--six-transition-fast) border, var(--six-transition-fast) box-shadow;cursor:pointer}.select__box--line{border:none;border-bottom:solid var(--six-border-width) var(--six-input-border-color)}.select__box--autocomplete{border:none;overflow:initial}.select:not(.select--disabled) .select__box:hover{background-color:var(--six-input-background-color-hover);color:var(--six-input-color-hover);border-bottom-color:var(--six-input-border-color-hover)}.select:not(.select--disabled) .select__box:hover:not(.select__box--line){border-color:var(--six-input-border-color-hover)}.select:not(.select--disabled) .select__box:focus{background-color:var(--six-input-background-color-focus);outline:none;color:var(--six-input-color-focus);border-bottom-color:var(--six-input-border-color-focus);box-shadow:0 1px 0 0 var(--six-input-border-color-focus)}.select:not(.select--disabled) .select__box:focus:not(.select__box--line){border-color:var(--six-input-border-color-focus);box-shadow:var(--six-input-focus-shadow)}.select--disabled .select__box{background-color:var(--six-input-background-color-disabled);color:var(--six-input-color-disabled);cursor:not-allowed;outline:none}.select--disabled .select__box:not(.select__box--line){border-color:var(--six-input-border-color-disabled)}.select--disabled .select__clear{pointer-events:none}.select--invalid:not(.select--disabled):not(.select--focused) .select__box{border-bottom-color:var(--six-input-border-color-danger)}.select--invalid:not(.select--disabled):not(.select--focused) .select__box:not(.input--line){border-color:var(--six-input-border-color-danger)}.display__values{display:flex;flex:1 1 auto;align-items:center;user-select:none;overflow:hidden;scrollbar-width:none;-ms-overflow-style:none}.display__values::-webkit-scrollbar{width:0;height:0}.display__values-values{flex:0 1 auto;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.display__values-and-counter{display:flex;overflow:hidden}.select__clear{flex-shrink:0;flex-grow:0;display:inline}.select__icon{flex-shrink:0;flex-grow:0;display:inline;transition:var(--six-transition-medium) transform ease}.select--open .select__icon{transform:rotate(-180deg)}.placeholder{color:var(--six-input-placeholder-color)}.select--disabled .placeholder{color:var(--six-input-placeholder-color-disabled)}.select__hidden-select{clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.select__input{position:absolute;top:0;left:0;width:100%;height:100%}.select--small .select__box{border-radius:var(--six-input-border-radius-small);font-size:var(--six-input-font-size-small);min-height:var(--six-height-small)}.select--small .select__box--line{border:none;border-bottom:solid var(--six-border-width) var(--six-input-border-color)}.select--small .display__values{margin:0 0 0 var(--six-input-spacing-small)}.select--small .select__clear{margin-right:var(--six-spacing-xxx-small)}.select--small .select__icon{margin-right:var(--six-spacing-x-small)}.select--medium .select__box{border-radius:var(--six-input-border-radius-medium);font-size:var(--six-input-font-size-medium);min-height:var(--six-height-medium)}.select--medium .select__box--line{border:none;border-bottom:solid var(--six-border-width) var(--six-input-border-color)}.select--medium .display__values{margin:0 0 0 var(--six-input-spacing-medium)}.select--medium .select__clear{margin-right:var(--six-spacing-xxx-small)}.select--medium .select__icon{margin-right:var(--six-spacing-x-small)}.select--large .select__box{border-radius:var(--six-input-border-radius-large);font-size:var(--six-input-font-size-large);min-height:var(--six-height-large)}.select--large .select__box--line{border:none;border-bottom:solid var(--six-border-width) var(--six-input-border-color)}.select--large .display__values{margin:0 0 0 var(--six-input-spacing-large)}.select--large .select__clear{margin-right:var(--six-spacing-xxx-small)}.select--large .select__icon{margin-right:var(--six-spacing-x-small)}.select--pill.select--small .select__box{border-radius:var(--six-height-small)}.select--pill.select--medium .select__box{border-radius:var(--six-height-medium)}.select--pill.select--large .select__box{border-radius:var(--six-height-large)}.select__menu{width:100%}.select__menu--hidden{display:none}six-icon-button::part(base){padding-top:0;padding-bottom:0}.selection-container--border{border-bottom:solid var(--six-border-width) var(--six-menu-divider-color);padding-top:var(--six-spacing-xx-small);padding-bottom:var(--six-spacing-xx-small)}.display-value--hidden{display:none}.overflow-count{color:var(--six-color-web-rock-600);padding-left:var(--six-spacing-x-small)}.overflow-count-hidden{display:none}.separator--hidden{display:none}.select-all{border-top:1px solid var(--six-color-web-rock-300);display:flex;justify-content:end}";
var SixSelectStyle0 = sixSelectCss;

let id$5 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The select's options in the form of menu items.
 * @slot label - The select's label. Alternatively, you can use the label prop.
 * @slot help-text - Help text that describes how to use the select.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part clear-button - The input's clear button, exported from six-input.
 * @part form-control - The form control that wraps the label, input, and help text.
 * @part help-text - The select's help text.
 * @part icon - The select's icon.
 * @part label - The select's label.
 * @part menu - The select menu, a six-menu element.
 * @part tag - The multiselect option, a six-tag element.
 * @part tags - The container in which multiselect options are rendered.
 */
class SixSelect {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-select-change", 7);
        this.sixFocus = createEvent(this, "six-select-focus", 7);
        this.sixBlur = createEvent(this, "six-select-blur", 7);
        this.inputId = `select-${++id$5}`;
        this.labelId = `select-label-${id$5}`;
        this.helpTextId = `select-help-text-${id$5}`;
        this.errorTextId = `select-error-text-${id$5}`;
        this.eventListeners = new EventListeners();
        this.activeItemIndex = -1;
        this.resizeObserver = new ResizeObserver(() => this.updateDisplayedValues());
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleClearClick = async (event) => {
            var _a;
            event.stopPropagation();
            await this.clearValues();
            await ((_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.show());
            await this.setFocus();
            this.sixChange.emit({ value: this.value, isSelected: true });
        };
        this.handleKeyDown = (event) => {
            var _a, _b, _c, _d;
            if (this.virtualScroll || this.autocomplete) {
                return;
            }
            if (['Control', 'Escape'].includes(event.key)) {
                return;
            }
            const items = this.getVisibleItems();
            // Ctrl-A selects all items
            if (this.isOpen && this.multiple && event.code === 'KeyA' && event.ctrlKey) {
                event.preventDefault();
                this.selectAll();
                return;
            }
            // Tabbing out of the control closes it
            if (event.key === 'Tab') {
                if (this.isOpen) {
                    (_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.hide();
                }
                return;
            }
            if (event.key === ' ' && !this.multiple) {
                return;
            }
            // Enter and Space selects the active item
            if (this.activeItemIndex >= 0 && ['Enter', ' '].includes(event.key)) {
                const activeItem = items.at(this.activeItemIndex);
                event.preventDefault();
                activeItem === null || activeItem === void 0 ? void 0 : activeItem.click();
                return;
            }
            // Move the selection when pressing up or down
            if (['ArrowDown', 'ArrowUp', 'Home', 'End'].includes(event.key)) {
                // Show the menu if it's not already open
                if (!this.isOpen) {
                    (_b = this.dropdown) === null || _b === void 0 ? void 0 : _b.show();
                }
                if (items.length > 0) {
                    event.preventDefault();
                    if (event.key === 'ArrowDown') {
                        this.activeItemIndex++;
                    }
                    else if (event.key === 'ArrowUp') {
                        this.activeItemIndex--;
                    }
                    else if (event.key === 'Home') {
                        this.activeItemIndex = 0;
                    }
                    else if (event.key === 'End') {
                        this.activeItemIndex = items.length - 1;
                    }
                    if (this.activeItemIndex < 0)
                        this.activeItemIndex = 0;
                    if (this.activeItemIndex > items.length - 1)
                        this.activeItemIndex = items.length - 1;
                    (_c = items.at(this.activeItemIndex)) === null || _c === void 0 ? void 0 : _c.setFocus();
                }
            }
            // All other keys open the menu
            if (!this.isOpen) {
                event.stopPropagation();
                event.preventDefault();
                (_d = this.dropdown) === null || _d === void 0 ? void 0 : _d.show();
            }
        };
        this.handleLabelClick = () => {
            var _a;
            (_a = this.box) === null || _a === void 0 ? void 0 : _a.focus();
        };
        this.handleMenuSelect = (event) => {
            const currentItem = event.detail.item;
            if (this.multiple) {
                currentItem.checked = !currentItem.checked;
            }
            else {
                this.getItems().forEach((i) => (i.checked = false));
                currentItem.checked = true;
            }
            this.syncValueFromItems();
            this.sixChange.emit({ value: this.value, isSelected: true });
        };
        this.handleMenuShow = (event) => {
            if (this.disabled) {
                event.preventDefault();
                return;
            }
            this.activeItemIndex = -1;
            if (!this.virtualScroll && this.multiple) {
                // reset display style of main items
                const mainItems = this.getItems();
                mainItems.forEach((item) => (item.style.display = 'unset'));
                // show selected menu items in the selection container and hide them in the main container
                const checkedItems = getCheckedItems(convertToValidArrayValue(this.value), mainItems);
                checkedItems.forEach((i) => (i.style.display = 'none'));
                this.selectionContainerItems = checkedItems.map((item) => {
                    return (hAsync("six-menu-item", { key: item.value, checked: true, value: item.value, checkType: this.multiple ? 'checkbox' : 'check', onClick: (event) => {
                            event.stopPropagation();
                            if (!this.disabled) {
                                const menuItem = event.target;
                                const isChecked = menuItem.checked;
                                menuItem.checked = !isChecked;
                                item.checked = !isChecked;
                                this.syncValueFromItems();
                                this.sixChange.emit({ value: this.value, isSelected: true });
                            }
                        } }, this.getItemLabel(item)));
                });
            }
            this.isOpen = true;
        };
        this.handleMenuHide = () => {
            this.isOpen = false;
            if (this.multiple) {
                this.handleBlur();
            }
        };
        this.handleSlotChange = () => {
            this.hasHelpTextSlot = hasSlot(this.host, 'help-text');
            this.hasLabelSlot = hasSlot(this.host, 'label');
            this.hasErrorTextSlot = hasSlot(this.host, 'error-text');
            this.syncItemsFromValue();
        };
        this.hasFocus = false;
        this.hasHelpTextSlot = false;
        this.hasLabelSlot = false;
        this.hasErrorTextSlot = false;
        this.isOpen = false;
        this.displayedValues = [];
        this.selectionContainerItems = [];
        this.multiple = false;
        this.selectAllButton = false;
        this.selectAllText = undefined;
        this.maxTagsVisible = 3;
        this.disabled = false;
        this.name = '';
        this.placeholder = '';
        this.filterPlaceholder = undefined;
        this.filterDebounce = undefined;
        this.size = 'medium';
        this.hoist = false;
        this.value = '';
        this.pill = false;
        this.helpText = '';
        this.required = false;
        this.clearable = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.line = false;
        this.filter = false;
        this.asyncFilter = false;
        this.autocomplete = false;
        this.inputDebounce = DEFAULT_DEBOUNCE_FAST;
        this.options = null;
        this.virtualScroll = false;
    }
    handleDisabledChange() {
        var _a;
        if (this.disabled && this.isOpen) {
            (_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.hide();
        }
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    handleMultipleChange() {
        this.value = convertToValidValue(this.value, this.multiple);
        this.syncItemsFromValue();
    }
    async handleValueChange() {
        const newValue = convertToValidValue(this.value, this.multiple);
        if (!valueEquals(this.value, newValue)) {
            this.value = newValue;
        }
        await this.syncItemsFromValue();
    }
    connectedCallback() {
        var _a;
        if (this.virtualScroll && this.options === null) {
            console.error('Options must be defined when using virtual scrolling');
        }
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.forward('six-select-change', 'change', this.host);
        this.eventListeners.forward('six-select-blur', 'blur', this.host);
        this.eventListeners.forward('six-select-focus', 'focus', this.host);
        if (this.displayValuesContainer) {
            this.resizeObserver.observe(this.displayValuesContainer);
        }
    }
    componentWillLoad() {
        this.value = convertToValidValue(this.value, this.multiple);
        this.handleSlotChange();
    }
    componentDidLoad() {
        if (this.displayValuesContainer) {
            this.resizeObserver.observe(this.displayValuesContainer);
        }
        // We need to do an initial sync after the component has rendered, so this will suppress the re-render warning
        requestAnimationFrame(() => this.syncItemsFromValue());
        if (this.autocomplete && this.autocompleteInput != null) {
            const autocompleteInput = this.autocompleteInput;
            this.eventListeners.add(autocompleteInput, 'six-input-input', debounce$1((event) => {
                var _a;
                this.value = autocompleteInput.value;
                this.sixChange.emit({ value: this.value, isSelected: false });
                event.stopPropagation();
                if (this.virtualScroll || this.value.length > 0) {
                    (_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.show();
                }
            }, this.inputDebounce));
            const selectedLabel = this.displayedValues.join(', ');
            autocompleteInput.value = selectedLabel;
        }
    }
    disconnectedCallback() {
        var _a;
        this.resizeObserver.disconnect();
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    /** Sets focus on the select. */
    async setFocus(options) {
        var _a;
        this.hasFocus = true;
        (_a = this.box) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    getItemLabel(item) {
        var _a, _b;
        const slot = (_a = item.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('slot:not([name])');
        if (slot != null) {
            return getTextContent(slot);
        }
        else {
            // bugfix/COMSLI-203-six-select-value-is-not-updated-if-the-slot-is-changed
            return (_b = item.textContent) !== null && _b !== void 0 ? _b : '';
        }
    }
    getItems() {
        if (this.options !== null && this.menu != null && this.menu.shadowRoot != null) {
            return [...this.menu.shadowRoot.querySelectorAll('six-menu-item')];
        }
        return [...this.host.querySelectorAll('six-menu-item')];
    }
    getVisibleItems() {
        const selectionContainerItems = this.getSelectionContainerItems();
        const mainItems = this.getItems();
        return [...selectionContainerItems, ...mainItems].filter((i) => i.style.display !== 'none');
    }
    getSelectionContainerItems() {
        var _a;
        return [...(((_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelectorAll('six-menu-item')) || [])];
    }
    async clearValues() {
        this.value = this.multiple ? [] : '';
        this.selectionContainerItems = [];
        await this.syncItemsFromValue();
    }
    selectAll() {
        const visibleItems = this.getVisibleItems();
        const hasDeselectedOptions = this.hasDeselectedOptions();
        visibleItems.filter((option) => !option.disabled).forEach((option) => (option.checked = hasDeselectedOptions));
        const checkedItems = visibleItems.filter((option) => option.checked).map((option) => option.value);
        this.value = hasDeselectedOptions ? checkedItems : [];
        this.sixChange.emit({ value: this.value, isSelected: true });
    }
    /**
     * Sets the checked state of menu items and renders the displayed values.
     */
    async syncItemsFromValue() {
        const selectionContainerItems = this.getSelectionContainerItems();
        const mainItems = this.getItems();
        const value = convertToValidValue(this.value, this.multiple);
        selectionContainerItems.forEach((item) => {
            item.checkType = this.multiple ? 'checkbox' : 'check';
            if (Array.isArray(value)) {
                item.checked = value.some((val) => val === item.value);
            }
            else {
                item.checked = value === item.value;
            }
        });
        mainItems.forEach((item) => {
            item.checkType = this.multiple ? 'checkbox' : 'check';
            if (Array.isArray(value)) {
                item.checked = value.some((val) => val === item.value);
            }
            else {
                item.checked = value === item.value;
            }
        });
        const checkedItems = getCheckedItems(convertToValidArrayValue(this.value), mainItems);
        this.displayedValues = checkedItems.map((i) => this.getItemLabel(i));
        if (this.autocomplete && this.autocompleteInput != null && !this.hasFocus) {
            const selectedLabel = this.displayedValues.join(', ');
            this.autocompleteInput.value = selectedLabel;
        }
        requestAnimationFrame(() => {
            this.updateDisplayedValues();
        });
    }
    syncValueFromItems() {
        const items = this.getItems();
        const checkedValues = items.filter((item) => item.checked).map((item) => item.value);
        if (this.multiple) {
            this.value = checkedValues;
        }
        else {
            this.value = checkedValues.length > 0 ? checkedValues[0] : '';
        }
    }
    updateDisplayedValues() {
        var _a, _b;
        const displayValueOptions = [...((_b = (_a = this.displayValuesContainer) === null || _a === void 0 ? void 0 : _a.querySelectorAll('.display-value')) !== null && _b !== void 0 ? _b : [])];
        if (this.displayValuesContainer == null || displayValueOptions.length === 0 || this.overflowCount == null) {
            return;
        }
        // Show all options and separators to properly measure all widths.
        displayValueOptions.forEach((d) => {
            showDisplayValue(d);
            showSeparator(d);
        });
        // Measure available width. The last separator is added to the available width, because it will be hidden later on.
        const separator = displayValueOptions[displayValueOptions.length - 1].querySelector('.separator');
        if (separator == null)
            return;
        let availableWidth = getWidth(this.displayValuesContainer) + getWidth(separator);
        // Compute how many display value elements fit in the available width
        let { fitCount, overflowCount } = computeFitCount(displayValueOptions, availableWidth);
        if (overflowCount === 0) {
            // All items fit, hide overflow count and show all values.
            hideOverflowCount(this.overflowCount);
            showFittingValues(displayValueOptions, fitCount);
        }
        else {
            // Not all items fit in the available width. Recompute the available width with the overflow-count visible.
            // Increment overflow count by one to make sure the elements fit, even if the overflow count increases to the
            // next higher power of ten, e.g. from 9 to 10 or 99 to 100.
            setOverflowCount(this.overflowCount, overflowCount + 1);
            showOverflowCount(this.overflowCount);
            // Subtract the overflow count from the available width
            availableWidth = availableWidth - getWidth(this.overflowCount);
            // Compute how many display value elements fit in the new available width
            ({ fitCount, overflowCount } = computeFitCount(displayValueOptions, availableWidth));
            // Show overflow count and items that fit.
            setOverflowCount(this.overflowCount, overflowCount);
            showFittingValues(displayValueOptions, fitCount);
        }
    }
    render() {
        var _a;
        const hasSelection = this.hasSelection();
        const items = this.getItems();
        const hasMenuItems = items.length > 0;
        const hasDeselectedOptions = this.hasDeselectedOptions();
        let showClear = false;
        let showExpand = hasMenuItems;
        if (this.clearable && hasSelection) {
            showClear = true;
            showExpand = false;
        }
        return (hAsync(FormControl, { key: '3ace428a1b1a320508cb2a30998745d3eb915769', inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, errorTextId: this.errorTextId, errorText: this.errorText, errorTextCount: this.errorTextCount, hasErrorTextSlot: this.hasErrorTextSlot, size: this.size, onLabelClick: this.handleLabelClick, disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("six-dropdown", { key: '8f425f828fb2db9ab7cc2edb81b6367a70709cf1', part: "base", ref: (el) => (this.dropdown = el), hoist: this.hoist, matchTriggerWidth: true, closeOnSelect: !this.multiple, containingElement: this.host, disableHideOnEnterAndSpace: this.autocomplete, class: {
                select: true,
                'select--open': this.isOpen,
                'select--empty': ((_a = this.value) === null || _a === void 0 ? void 0 : _a.length) === 0,
                'select--focused': this.hasFocus,
                'select--clearable': this.clearable,
                'select--disabled': this.disabled,
                'select--multiple': this.multiple,
                'select--has-tags': this.multiple && hasSelection,
                'select--placeholder-visible': this.displayedValues.length === 0,
                'select--small': this.size === 'small',
                'select--medium': this.size === 'medium',
                'select--large': this.size === 'large',
                'select--pill': this.pill,
                'select--invalid': this.invalid,
            }, onKeyDown: this.handleKeyDown, "onSix-dropdown-show": this.handleMenuShow, "onSix-dropdown-hide": this.handleMenuHide, filterPlaceholder: this.filterPlaceholder, filterDebounce: this.filterDebounce, filter: this.filter, asyncFilter: this.asyncFilter, virtualScroll: this.virtualScroll }, hAsync("div", { key: 'a26c8aec4099f5d2211f5ff52a51fedca0796af6', slot: "trigger", ref: (el) => (this.box = el), id: this.inputId, class: {
                select__box: true,
                'select__box--line': this.line,
                'select__box--autocomplete': this.autocomplete,
            }, role: "combobox", "aria-labelledby": this.labelId, "aria-describedby": this.helpTextId, "aria-haspopup": "true", "aria-expanded": this.isOpen ? 'true' : 'false', tabIndex: this.disabled ? -1 : 0, onBlur: this.handleBlur, onFocus: this.handleFocus }, hAsync("div", { key: 'cd8b84274335133824eddcade815aff7ea27a238', class: "display__values", ref: (el) => (this.displayValuesContainer = el) }, this.displayedValues.length > 0 ? (hAsync("span", { class: "display__values-and-counter" }, hAsync("span", { class: "display__values-values" }, this.displayedValues.map((value) => (hAsync("span", { key: value, class: "display-value" }, value, hAsync("span", { class: { separator: true } }, ", "))))), hAsync("span", { ref: (el) => (this.overflowCount = el), class: "overflow-count" }, "+10"))) : (hAsync("span", { class: "placeholder" }, this.placeholder))), showClear && (hAsync("six-icon-button", { key: '07ae0cdd7eb509b5c1882bedd360143c1241d573', exportparts: "base:clear-button", class: "select__clear", name: "clear", size: "small", onClick: this.handleClearClick, tabindex: "-1" })), showExpand && (hAsync("span", { key: '1fe72676ba9941b0b0b62af35762a277730d1d04', part: "icon", class: "select__icon" }, hAsync("six-icon", { key: '3c8226f4a4e5bb7319f59b793705d647962afc95', size: "medium" }, "expand_more"))), hAsync("six-input", { key: 'afa6ecd6e8feb4f00a0486d8242a808581b8e05e', ref: (el) => (this.autocompleteInput = el), class: {
                select__input: true,
                'select__hidden-select': !this.autocomplete,
            }, "aria-hidden": "true", required: this.required, onFocus: this.handleFocus, clearable: this.clearable, placeholder: this.placeholder, pill: this.pill, disabled: this.disabled, size: this.size, tabIndex: -1 })), hAsync("div", { key: '3f411a1ed1b6f59c9541144c3b9407300a03a61a', class: {
                'selection-container': true,
                'selection-container--border': this.selectionContainerItems.length > 0 && items.length !== this.selectionContainerItems.length,
            } }, this.selectionContainerItems), hAsync("six-menu", { key: 'c9b52607f90d8905693ba30901456f1c40615de7', ref: (el) => (this.menu = el), part: "menu", class: {
                select__menu: true,
                'select__menu--hidden': !hasMenuItems,
            }, "onSix-menu-item-selected": this.handleMenuSelect, items: this.options, virtualScroll: this.virtualScroll, "remove-box-shadow": true, "disable-keyboard-handling": true }, hAsync("slot", { key: 'e7f555fc8f71befcf1b72af1a86946c8361efe0a', onSlotchange: this.handleSlotChange })), this.multiple && this.selectAllButton && (hAsync("div", { key: 'ccff8c2aec4773d0e9ba327cc411949eb9718197', class: "select-all", slot: "dropdown-footer" }, hAsync("six-button", { key: 'd1ac499820ec60b7d1bf14e70c260a278941b8ee', type: "link", onClick: () => this.selectAll() }, this.selectAllText == null ? selectAllDefaultText(hasDeselectedOptions) : this.selectAllText))))));
    }
    hasSelection() {
        return this.multiple ? this.value.length > 0 : this.value !== '';
    }
    hasDeselectedOptions() {
        return this.getVisibleItems().some((opt) => !opt.disabled && !opt.checked);
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "disabled": ["handleDisabledChange"],
        "helpText": ["handleLabelChange"],
        "errorText": ["handleLabelChange"],
        "label": ["handleLabelChange"],
        "multiple": ["handleMultipleChange"],
        "value": ["handleValueChange"]
    }; }
    static get style() { return SixSelectStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-select",
        "$members$": {
            "multiple": [4],
            "selectAllButton": [4, "select-all-button"],
            "selectAllText": [1, "select-all-text"],
            "maxTagsVisible": [2, "max-tags-visible"],
            "disabled": [4],
            "name": [1],
            "placeholder": [1],
            "filterPlaceholder": [1, "filter-placeholder"],
            "filterDebounce": [2, "filter-debounce"],
            "size": [1],
            "hoist": [4],
            "value": [1025],
            "pill": [4],
            "helpText": [1, "help-text"],
            "required": [4],
            "clearable": [4],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "line": [4],
            "filter": [4],
            "asyncFilter": [4, "async-filter"],
            "autocomplete": [4],
            "inputDebounce": [2, "input-debounce"],
            "options": [16],
            "virtualScroll": [4, "virtual-scroll"],
            "hasFocus": [32],
            "hasHelpTextSlot": [32],
            "hasLabelSlot": [32],
            "hasErrorTextSlot": [32],
            "isOpen": [32],
            "displayedValues": [32],
            "selectionContainerItems": [32],
            "setFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["invalid", "invalid"]]
    }; }
}
function getCheckedItems(value, items) {
    return items.filter((item) => value.includes(item.value));
}
function getWidth(element) {
    return element.getBoundingClientRect().width;
}
function computeFitCount(options, availableWidth) {
    let accumulatedWidth = 0;
    let fitCount = 0;
    for (let i = 0; i < options.length; i++) {
        const displayOption = options[i];
        const width = getWidth(displayOption);
        if (i === 0 && width > availableWidth) {
            fitCount = 1;
            break;
        }
        accumulatedWidth += width;
        if (accumulatedWidth > availableWidth) {
            break;
        }
        else {
            fitCount += 1;
        }
    }
    const overflowCount = options.length - fitCount;
    return { fitCount, overflowCount };
}
function showFittingValues(displayValueOptions, fitCount) {
    if (displayValueOptions.length > 0) {
        // show items that fit
        displayValueOptions.slice(0, fitCount).forEach((displayValue, index, list) => {
            showDisplayValue(displayValue);
            const isLast = index === list.length - 1;
            if (isLast) {
                hideSeparator(displayValue);
            }
            else {
                showSeparator(displayValue);
            }
        });
        // hide the rest
        displayValueOptions.slice(fitCount).forEach((displayValue) => {
            hideDisplayValue(displayValue);
            showSeparator(displayValue);
        });
    }
}
function hideSeparator(displayValueOption) {
    var _a;
    (_a = displayValueOption.querySelector('.separator')) === null || _a === void 0 ? void 0 : _a.classList.add('separator--hidden');
}
function showSeparator(displayValueOption) {
    var _a;
    (_a = displayValueOption.querySelector('.separator')) === null || _a === void 0 ? void 0 : _a.classList.remove('separator--hidden');
}
function showDisplayValue(displayValueOption) {
    displayValueOption.classList.remove('display-value--hidden');
}
function hideDisplayValue(displayValueOption) {
    displayValueOption.classList.add('display-value--hidden');
}
function setOverflowCount(overflowCount, count) {
    overflowCount.textContent = `+${count}`;
}
function showOverflowCount(overflowCount) {
    overflowCount.classList.remove('overflow-count-hidden');
}
function hideOverflowCount(overflowCount) {
    overflowCount.classList.add('overflow-count-hidden');
}
function selectAllDefaultText(hasDeselectedOptions) {
    const lang = getLanguage();
    switch (lang) {
        case 'de':
            return hasDeselectedOptions ? 'Alle auswählen' : 'Alle abwählen';
        case 'fr':
            return hasDeselectedOptions ? 'Tout sélectionner' : 'Tout désélectionner';
        case 'it':
            return hasDeselectedOptions ? 'Seleziona tutto' : 'Deseleziona tutto';
        case 'en':
            return hasDeselectedOptions ? 'Select all' : 'Deselect all';
        case 'es':
            return hasDeselectedOptions ? 'Seleccionar todo' : 'Deseleccionar todo';
    }
}

const sixSidebarCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block;height:100%}.sidebar__container{height:100%;overflow:auto}.sidebar__container.sidebar--open{border-right:1px solid var(--six-color-web-rock-300)}.sidebar__container:not(.sidebar--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.sidebar--left{color:var(--six-sidebar-color);background-color:var(--six-sidebar-background-color);transition:var(--six-transition-medium) margin-left;background-size:300vw 70%;background-position:bottom;background-repeat:no-repeat}.sidebar--right{transition:var(--six-transition-medium) margin-right}.sidebar--open.sidebar--left{margin-right:2px}.sidebar--open.sidebar--right{margin-left:2px}";
var SixSidebarStyle0 = sixSidebarCss;

const isSidebarItemGroup = (node) => { var _a; return ((_a = node === null || node === void 0 ? void 0 : node.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'six-sidebar-item-group'; };
/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the nested side bar [group] items.
 */
class SixSidebar {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-sidebar-show", 7);
        this.sixAfterShow = createEvent(this, "six-sidebar-after-show", 7);
        this.sixHide = createEvent(this, "six-sidebar-hide", 7);
        this.sixAfterHide = createEvent(this, "six-sidebar-after-hide", 7);
        this.sixInitialFocus = createEvent(this, "six-sidebar-initial-focus", 7);
        this.willShow = false;
        this.willHide = false;
        this.handleTransitionEnd = (event) => {
            const target = event.target;
            // Ensure we only emit one event when the target element is no longer visible
            if (event.type === 'transitionend' && target.classList.contains('sidebar__container')) {
                this.resetTransitionVariables();
            }
        };
        this.closeSiblingDetailsOnShow = (event) => {
            const clickedMenuItem = event.target;
            if (this.sidebar != null) {
                scrollIntoView(clickedMenuItem, this.sidebar);
            }
            const closeAllSiblingsBySiblingProperty = (getSibling) => {
                var _a;
                let node = clickedMenuItem;
                while (getSibling(node) != null) {
                    node = getSibling(node);
                    if (isSidebarItemGroup(node)) {
                        const detailsElement = (_a = node === null || node === void 0 ? void 0 : node.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('six-details');
                        if (detailsElement != null) {
                            detailsElement.open = false;
                        }
                    }
                }
            };
            // close all previous siblings
            closeAllSiblingsBySiblingProperty((node) => node === null || node === void 0 ? void 0 : node.previousElementSibling);
            // close all further siblings
            closeAllSiblingsBySiblingProperty((node) => node === null || node === void 0 ? void 0 : node.nextElementSibling);
        };
        this.isVisible = false;
        this.position = 'left';
        this.open = false;
        this.width = '16rem';
        this.toggled = false;
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
    }
    componentWillLoad() {
        // Show on init if open
        if (this.open) {
            void this.show();
            // if the sidebar is open by default we need to manually reset the
            // transition variables since there will be no transition event
            this.resetTransitionVariables();
        }
    }
    componentDidRender() {
        this.setupTogglableMenuItems();
    }
    disconnectedCallback() {
        var _a;
        (_a = this.sidebar) === null || _a === void 0 ? void 0 : _a.removeEventListener('six-details-show', this.closeSiblingDetailsOnShow);
    }
    setupTogglableMenuItems() {
        if (!this.toggled || this.sidebar == null)
            return;
        this.markAllMenuItemsAsSelectableEmpty();
        this.sidebar.addEventListener('six-details-show', this.closeSiblingDetailsOnShow);
    }
    markAllMenuItemsAsSelectableEmpty() {
        var _a;
        // when you have a toggled menu you also want to close other menu items when you click on an item without children
        // nice benefit this item will then also be highlighted
        const slot = (_a = this.sidebar) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
        const nodes = (slot === null || slot === void 0 ? void 0 : slot.assignedElements()) || [];
        // since we don't just want to make the top level empty menuItems selectable in toggled mode,
        // but also nested items we need to traverse the whole menu item tree
        const menuItems = [];
        while (nodes.length > 0) {
            const node = nodes.pop();
            if ((node === null || node === void 0 ? void 0 : node.shadowRoot) == null) {
                continue;
            }
            // collect six-details in the current shadowDOM
            const menuItemsForCurrentNode = node.shadowRoot.querySelectorAll('six-details');
            menuItems.push(...menuItemsForCurrentNode);
            // collect all six-sidebar-item-group children of the current node to afterwards check their shadowDOM too
            const newItemGroups = Array.from(node.children).filter(isSidebarItemGroup);
            nodes.push(...newItemGroups);
        }
        menuItems.forEach((details) => (details.selectableEmpty = true));
    }
    /** Toggles whether the sidebar should be shown or hidden */
    async toggle() {
        if (this.willShow || this.willHide) {
            return;
        }
        if (this.open) {
            await this.hide();
        }
        else {
            await this.show();
        }
    }
    /** Shows the sidebar */
    async show() {
        if (this.willShow) {
            return;
        }
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.willShow = true;
        this.isVisible = true;
        this.open = true;
    }
    /** Hides the sidebar */
    async hide() {
        if (this.willHide) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        this.willHide = true;
        this.open = false;
    }
    /** Allows to select a menu item programmatically by index */
    async selectItemByIndex(index) {
        if (this.sidebar == null)
            return;
        const slot = this.sidebar.querySelector('slot');
        const menuItemsOnRootLevel = ((slot === null || slot === void 0 ? void 0 : slot.assignedElements()) || []).flatMap((el) => {
            var _a;
            const detailsElement = (_a = el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('six-details');
            if (detailsElement == null) {
                return [];
            }
            return [detailsElement];
        });
        if (index < 0 || index > menuItemsOnRootLevel.length - 1) {
            console.error(`Tried to access sidebar menu item by index, but provided index out of range. Provided index: ${index}`);
            return;
        }
        await menuItemsOnRootLevel[index].show();
    }
    /** Allows to select a menu item programmatically by name */
    async selectItemByName(value) {
        var _a, _b, _c;
        const slot = (_a = this.sidebar) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
        const sidebarItemGroups = slot === null || slot === void 0 ? void 0 : slot.assignedElements();
        if (sidebarItemGroups == null) {
            return;
        }
        const indexOfSelectedElement = sidebarItemGroups.findIndex((el) => (el === null || el === void 0 ? void 0 : el.name) === value);
        const selectedItem = (_c = (_b = sidebarItemGroups.at(indexOfSelectedElement)) === null || _b === void 0 ? void 0 : _b.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('six-details');
        await (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.show());
    }
    resetTransitionVariables() {
        this.isVisible = this.open;
        this.willShow = false;
        this.willHide = false;
        this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();
    }
    render() {
        return (hAsync("host", { key: '741b0e635fe8e597e85b219387b9ed1a65c249bb', class: "six-sidebar" }, hAsync("div", { key: 'ce801c660ffb1efd19c484d1d5d67782e91dd505', class: {
                sidebar__container: true,
                'sidebar--visible': this.isVisible,
                'sidebar--open': this.open,
                'sidebar--left': this.position === 'left',
                'sidebar--right': this.position === 'right',
            }, style: {
                width: this.width,
                [`margin-${this.position}`]: this.open ? '0' : `calc(1rem - ${this.width})`,
            }, ref: (el) => (this.sidebar = el), "aria-hidden": this.open ? 'false' : 'true', onTransitionEnd: this.handleTransitionEnd }, hAsync("slot", { key: 'c0a61942e1021afa89ab7d43a33bdfd60fb41df7' }))));
    }
    static get watchers() { return {
        "open": ["handleOpenChange"]
    }; }
    static get style() { return SixSidebarStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-sidebar",
        "$members$": {
            "position": [1],
            "open": [1540],
            "width": [1],
            "toggled": [4],
            "isVisible": [32],
            "toggle": [64],
            "show": [64],
            "hide": [64],
            "selectItemByIndex": [64],
            "selectItemByName": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"]]
    }; }
}

const sixSidebarItemCss = ":host{display:block}a{text-decoration:none;display:block}.sidebar-item{padding:8px 8px 16px 16px;font-size:0.9rem;color:var(--six-sidebar-color);cursor:pointer;font-family:var(--six-font-family)}.sidebar-item:hover:not(.sidebar-item--disabled){color:var(--six-color-web-rock-600)}.sidebar-item.sidebar-item--disabled{outline:none;color:var(--six-input-color-disabled);cursor:not-allowed}.sidebar-item.sidebar-item--selected{font-weight:var(--six-font-weight-bold)}";
var SixSidebarItemStyle0 = sixSidebarItemCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the nested displayed text of the item.
 */
class SixSidebarItem {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.value = '';
        this.selected = false;
        this.disabled = false;
        this.href = undefined;
    }
    render() {
        const Tag = this.href != null ? 'a' : 'div';
        return (hAsync(Tag, { key: '5b21624400000b3cfcb706f2007fbfa0a968cdca', class: {
                'sidebar-item': true,
                'sidebar-item--selected': this.selected,
                'sidebar-item--disabled': this.disabled,
            }, role: "menuitem", href: this.href, "aria-selected": this.selected ? 'true' : 'false', "aria-disabled": this.disabled ? 'true' : 'false' }, hAsync("slot", { key: 'c09f85f1ae5bc09c0da42fde4d96fcbd748670ec' })));
    }
    static get style() { return SixSidebarItemStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-sidebar-item",
        "$members$": {
            "value": [513],
            "selected": [516],
            "disabled": [516],
            "href": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["value", "value"], ["selected", "selected"], ["disabled", "disabled"], ["href", "href"]]
    }; }
}

const sixSidebarItemGroupCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.six-sidebar-item-group{--horizontal-padding:var(--six-spacing-x-large)}.six-sidebar-item-group--childless::part(content){padding:0 !important}.six-sidebar-item-group--subgroup::part(header){background-color:transparent !important}.six-sidebar-item-group__header-icon{margin-left:16px;transform:translate(0px, -3px)}.six-sidebar-details__header{display:flex;overflow-wrap:anywhere}.six-sidebar-details__header-icon{margin-right:1em}.six-sidebar-details__link{text-decoration:none;display:block;color:inherit;width:100%}";
var SixSidebarItemGroupStyle0 = sixSidebarItemGroupCss;

/**
 * @since 1.0
 * @status stable
 *
 * @slot - Used to define the nested sidebar [group] items.
 */
class SixSidebarItemGroup {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.provideSlot = (name) => {
            if (this.summaryIconHasContent) {
                return (hAsync("div", { slot: name }, hAsync("slot", { name: name })));
            }
            return (hAsync("slot", { name: name, onSlotchange: () => {
                    var _a;
                    const slot = (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(`slot[name="${name}"]`);
                    if (slot != null) {
                        this.summaryIconHasContent = slot.assignedNodes().length > 0;
                    }
                } }));
        };
        this.hasItems = false;
        this.name = '';
        this.icon = '';
        this.value = '';
        this.open = false;
        this.summaryIcon = undefined;
        this.summaryIconHasContent = false;
        this.href = undefined;
    }
    connectedCallback() {
        this.handleSlotChange = this.handleSlotChange.bind(this);
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    handleSlotChange() {
        this.hasItems = hasSlot(this.host);
    }
    isSubgroup() {
        var _a;
        return ((_a = this.host.parentElement) === null || _a === void 0 ? void 0 : _a.closest('six-sidebar-item-group')) != null;
    }
    renderAsHref() {
        return this.href != null && !this.hasItems;
    }
    render() {
        const element = (hAsync("six-details", { class: {
                'six-sidebar-item-group': true,
                'six-sidebar-item-group--childless': !this.hasItems,
                'six-sidebar-item-group--subgroup': this.isSubgroup(),
            }, inline: true, open: this.open, "summary-icon": this.summaryIcon, hasContent: this.hasItems }, hAsync("div", { slot: "summary" }, hAsync("div", { class: "six-sidebar-details__header" }, this.icon && hAsync("six-icon", { class: "six-sidebar-details__header-icon" }, this.icon), this.name)), this.provideSlot('summary-icon'), hAsync("slot", null)));
        if (this.renderAsHref()) {
            return (hAsync("a", { class: "six-sidebar-details__link", href: this.href }, element));
        }
        else {
            return element;
        }
    }
    get host() { return getElement(this); }
    static get style() { return SixSidebarItemGroupStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-sidebar-item-group",
        "$members$": {
            "name": [1],
            "icon": [1],
            "value": [513],
            "open": [516],
            "summaryIcon": [1, "summary-icon"],
            "href": [513],
            "hasItems": [32],
            "summaryIconHasContent": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["value", "value"], ["open", "open"], ["href", "href"]]
    }; }
}

const sixSpinnerCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--track-color:var(--six-progress-track-color);--indicator-color:var(--six-progress-indicator-color);--stroke-width:2px;display:inline-flex}.spinner{display:inline-block;width:1em;height:1em;border-radius:50%;border:solid var(--stroke-width) var(--track-color);border-top-color:var(--indicator-color);border-right-color:var(--indicator-color);animation:1s linear infinite spin}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.six-spinner{width:auto;height:auto;position:relative}.six-spinner .six-spinner__container{margin:0;transform:translateX(0)}.six-spinner .six-spinner__container svg{transform:translateX(0)}.six-spinner__container{position:relative;margin:0 auto;top:calc(50% - 20px);z-index:1}.six-spinner__container,.six-spinner__container svg{width:40px;height:40px;display:block;transform:translateX(40px)}.six-spinner path{stroke-dashoffset:70px;stroke-dasharray:70, 444;-webkit-animation:six-spinner 2s cubic-bezier(0.56, 0.39, 0.51, 0.96) infinite;animation:six-spinner 2s cubic-bezier(0.56, 0.39, 0.51, 0.96) infinite}@-webkit-keyframes six-spinner{to{stroke-dashoffset:-444}}@keyframes six-spinner{to{stroke-dashoffset:-444}}";
var SixSpinnerStyle0 = sixSpinnerCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @part base - The component's base wrapper.
 * @part svg - The spinner icon
 */
class SixSpinner {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.six = false;
    }
    renderSIXLogo() {
        return (hAsync("span", { class: "six-spinner", "aria-busy": "true", "aria-live": "polite" }, hAsync("div", { class: "six-spinner__container" }, hAsync("svg", { viewBox: "0 0 40 40", part: "svg" }, hAsync("path", { fill: "none", stroke: "#de3919", "stroke-width": "5", "stroke-linecap": "round", d: "M 35 5 V 35 H 5 T 5 5 H 35 V 35 H 5 V 5 H 35 V 35 H -34 V 30 H 7 A 9 8 0 0 0 14 27 L 27 14 A 8 6 0 0 1 33 12 H 42" })))));
    }
    renderSimple() {
        return hAsync("span", { part: "base", class: "spinner", "aria-busy": "true", "aria-live": "polite" });
    }
    render() {
        return this.six ? this.renderSIXLogo() : this.renderSimple();
    }
    static get style() { return SixSpinnerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-spinner",
        "$members$": {
            "six": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixStageIndicatorCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:grid}.center-content{display:grid;align-self:center;justify-self:center;grid-gap:5px;grid-auto-flow:column}.align-item{margin:auto}.indicator,.indicator--acceptance,.indicator--etu,.indicator--dev,.indicator--itu{font-family:var(--six-font-family);font-size:14px;font-weight:var(--six-font-weight-bold);display:grid;align-content:center;width:100%;height:24px}.indicator--itu{background-color:var(--six-color-success-600);color:var(--six-color-web-rock-900)}.indicator--dev{background-color:var(--six-color-web-rock-900);color:var(--six-color-white)}.indicator--etu{background-color:var(--six-color-action-600);color:var(--six-color-white)}.indicator--acceptance{background-color:var(--six-color-warning-800);color:var(--six-color-web-rock-900)}";
var SixStageIndicatorStyle0 = sixStageIndicatorCss;

class SixStageIndicator {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.stage = null;
    }
    render() {
        return this.stage == null || this.stage == 'PROD' ? null : (hAsync("div", { class: `indicator--${this.stage.toLowerCase()}` }, hAsync("div", { class: "center-content" }, hAsync("six-icon", { class: "align-item", size: "small" }, "error_outline"), hAsync("span", { class: 'align-item' }, hAsync("slot", null)))));
    }
    static get style() { return SixStageIndicatorStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-stage-indicator",
        "$members$": {
            "stage": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixSwitchCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{--height:var(--six-selection-control-toggle-size);--thumb-size:calc(var(--six-selection-control-toggle-size) - 4px);--width:calc(var(--height) * 2);display:inline-block}.switch{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.switch__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--width);height:var(--height);background-color:var(--six-selection-control-color-disabled);border-radius:var(--height);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color}.switch__control .switch__thumb{width:var(--thumb-size);height:var(--thumb-size);background-color:var(--six-input-background-color);border-radius:50%;transform:translateX(calc(var(--width) / -2 + var(--thumb-size) / 2 - (var(--thumb-size) - var(--height)) / 2));transition:var(--six-transition-fast) transform ease, var(--six-transition-fast) background-color, var(--six-transition-fast) border-color, var(--six-transition-fast) box-shadow}.switch__control input[type=checkbox]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none}.switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover{background-color:var(--six-input-border-color-hover)}.switch--checked .switch__control{background-color:var(--six-selection-control-color)}.switch--checked .switch__control .switch__thumb{background-color:var(--six-color-white);transform:translateX(calc(var(--width) / 2 - var(--thumb-size) / 2 + (var(--thumb-size) - var(--height)) / 2))}.switch.switch--checked:not(.switch--disabled) .switch__control:hover{background-color:var(--six-input-border-color-focus)}.switch--disabled{cursor:not-allowed;color:var(--six-selection-control-color-disabled)}.switch--disabled .switch__control{background-color:var(--six-selection-control-color-disabled)}.switch--disabled.switch--checked .switch__control{background-color:var(--six-selection-control-color-disabled)}.switch__label{line-height:var(--height);margin-left:0.5em;user-select:none}";
var SixSwitchStyle0 = sixSwitchCss;

let id$4 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The switch's label.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part control - The switch control.
 * @part thumb - The switch position indicator.
 * @part label - The switch label.
 */
class SixSwitch {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixBlur = createEvent(this, "six-switch-blur", 7);
        this.sixChange = createEvent(this, "six-switch-change", 7);
        this.sixFocus = createEvent(this, "six-switch-focus", 7);
        this.switchId = `switch-${++id$4}`;
        this.labelId = `switch-label-${id$4}`;
        this.errorTextId = `input-error-text-${id$4}`;
        this.eventListeners = new EventListeners();
        this.handleSlotChange = () => {
            this.hasErrorTextSlot = hasSlot(this.host, 'error-text');
        };
        this.handleClick = () => {
            if (this.inputElement != null) {
                this.checked = this.inputElement.checked;
                this.sixChange.emit(this.checked);
            }
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit(this.checked);
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleKeyDown = (event) => {
            if (event.key === 'ArrowLeft') {
                event.preventDefault();
                this.checked = false;
                this.sixChange.emit(this.checked);
            }
            if (event.key === 'ArrowRight') {
                event.preventDefault();
                this.checked = true;
                this.sixChange.emit(this.checked);
            }
        };
        this.handleMouseDown = (event) => {
            var _a;
            // Prevent clicks on the label from briefly blurring the input
            event.preventDefault();
            (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.focus();
        };
        this.hasFocus = false;
        this.hasErrorTextSlot = false;
        this.name = '';
        this.value = 'on';
        this.disabled = false;
        this.required = false;
        this.checked = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    handleCheckedChange() {
        if (this.inputElement != null) {
            this.inputElement.checked = this.checked;
            this.checked = this.inputElement.checked;
        }
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.forward('six-switch-change', 'change', this.host);
        this.eventListeners.forward('six-switch-blur', 'blur', this.host);
        this.eventListeners.forward('six-switch-focus', 'focus', this.host);
    }
    disconnectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    /** Sets focus on the switch. */
    async setFocus(options) {
        var _a;
        (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the switch. */
    async removeFocus() {
        var _a;
        (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.blur();
    }
    render() {
        return (hAsync(FormControl, { key: '708669831d535933b60bae008e01028cf6487552', inputId: this.switchId, label: this.label, labelId: this.labelId, hasLabelSlot: false, errorTextId: this.errorTextId, errorText: this.errorText, errorTextCount: this.errorTextCount, hasErrorTextSlot: this.hasErrorTextSlot, size: "medium", disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("label", { key: '7010a8da8e6519daca95c0a36449fa78c45a5bcf', part: "base", htmlFor: this.switchId, class: {
                switch: true,
                'switch--checked': this.checked,
                'switch--disabled': this.disabled,
                'switch--focused': this.hasFocus,
            }, onMouseDown: this.handleMouseDown }, hAsync("span", { key: '07a2c0d37b26de3f0a39294730e9a9a549637387', part: "control", class: "switch__control" }, hAsync("span", { key: 'c8b40dd491dac73d77688925f0ae6b87f0ee9294', part: "thumb", class: "switch__thumb" }), hAsync("input", { key: 'fa58350d10cf12a8ab85f07dc9ba5afe3a6f5607', ref: (el) => (this.inputElement = el), id: this.switchId, type: "checkbox", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, required: this.required, role: "switch", "aria-checked": this.checked ? 'true' : 'false', "aria-labelledby": this.labelId, onClick: this.handleClick, onBlur: this.handleBlur, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown })), hAsync("span", { key: 'bba9135c87024334a0d1f2bca80dd1533e2d13f5', part: "label", id: this.labelId, class: "switch__label" }, hAsync("slot", { key: '23020b67fde777044748360cb6eea34bfc821150' })))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "checked": ["handleCheckedChange"],
        "errorText": ["handleLabelChange"],
        "label": ["handleLabelChange"]
    }; }
    static get style() { return SixSwitchStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-switch",
        "$members$": {
            "name": [1],
            "value": [1],
            "disabled": [4],
            "required": [4],
            "checked": [1540],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "hasFocus": [32],
            "hasErrorTextSlot": [32],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["checked", "checked"], ["invalid", "invalid"]]
    }; }
}

const sixTabCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:flex}.tab{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-semibold);color:var(--six-tab-color);padding:var(--six-spacing-medium) var(--six-spacing-large);white-space:nowrap;user-select:none;cursor:pointer;width:100%}.tab:focus{outline:none}.tab:focus-visible{outline:var(--six-focus-ring);outline-offset:calc(-1 * var(--six-focus-ring-width) - var(--six-focus-ring-offset))}.tab.tab--active:not(.tab--disabled){color:var(--six-tab-color-active);font-weight:var(--six-font-weight-bold)}.tab.tab--closable{padding-right:var(--six-spacing-small)}.tab.tab--disabled{color:var(--six-tab-color-disabled);cursor:not-allowed}.tab:hover:not(.tab--disabled){color:var(--six-tab-color-hover)}.tab__close-button{font-size:var(--six-font-size-large);margin-left:var(--six-spacing-xx-small)}.tab__close-button::part(base){padding:var(--six-spacing-xxx-small)}.tab__indicator{position:absolute}.tab__indicator.tab__indicator--active{background-color:var(--six-tab-border-color-active)}.tab--top{margin-bottom:var(--six-spacing-xxx-small)}.tab__indicator--top{width:100%;bottom:0;height:var(--six-tab-border-width)}.tab--bottom{margin-top:var(--six-spacing-xxx-small)}.tab__indicator--bottom{width:100%;top:0;height:var(--six-tab-border-width)}.tab--left{margin-right:var(--six-spacing-xxx-small)}.tab__indicator--left{height:100%;right:0;top:0;width:var(--six-tab-border-width)}.tab--right{margin-left:var(--six-spacing-xxx-small)}.tab__indicator--right{height:100%;left:0;top:0;width:var(--six-tab-border-width)}";
var SixTabStyle0 = sixTabCss;

let id$3 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The tab's label.
 *
 * @part base - The component's base wrapper.
 * @part close-button - The close button, which is the icon button's base wrapper.
 */
class SixTab {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixClose = createEvent(this, "six-tab-close", 7);
        this.componentId = `tab-${++id$3}`;
        this.panel = '';
        this.active = false;
        this.closable = false;
        this.disabled = false;
    }
    connectedCallback() {
        this.handleCloseClick = this.handleCloseClick.bind(this);
    }
    /** Sets focus to the tab. */
    async setFocus(options) {
        var _a;
        (_a = this.tab) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus from the tab. */
    async removeFocus() {
        var _a;
        (_a = this.tab) === null || _a === void 0 ? void 0 : _a.blur();
    }
    handleCloseClick() {
        this.sixClose.emit();
    }
    render() {
        var _a;
        const tabGroup = this.host.closest('six-tab-group');
        const placement = (_a = tabGroup === null || tabGroup === void 0 ? void 0 : tabGroup.placement) !== null && _a !== void 0 ? _a : 'top';
        return (
        // If the user didn't provide an ID, we'll set one, so we can link tabs and tab panels with aria labels
        hAsync(Host, { key: '25ce2944271c1097ccbe98f99d8a8f57168c7f82', id: this.host.id || this.componentId }, hAsync("div", { key: '6c06dc5031afe797aacc0ccff02b4035faf2644c', part: "base", ref: (el) => (this.tab = el), class: {
                tab: true,
                // Placements
                'tab--top': placement === 'top',
                'tab--bottom': placement === 'bottom',
                'tab--left': placement === 'left',
                'tab--right': placement === 'right',
                // States
                'tab--active': this.active,
                'tab--closable': this.closable,
                'tab--disabled': this.disabled,
            }, role: "tab", "aria-disabled": this.disabled ? 'true' : 'false', "aria-selected": this.active ? 'true' : 'false', tabindex: this.disabled || !this.active ? '-1' : '0' }, hAsync("slot", { key: '27450f02563eb44b37afee70c69b155292647f17' }), this.closable && (hAsync("six-icon-button", { key: 'cc7bd1d853ca3fb281160321837bf286754a640a', name: "close", size: "xSmall", exportparts: "base:close-button", class: "tab__close-button", onClick: this.handleCloseClick, tabIndex: -1, "aria-hidden": "true" }))), hAsync("div", { key: '21f68095fae985f7f20fbadb06555c6b310fc127', part: this.active ? 'active-tab-indicator' : '', class: {
                tab__indicator: true,
                'tab__indicator--active': this.active,
                // Placements
                'tab__indicator--top': placement === 'top',
                'tab__indicator--bottom': placement === 'bottom',
                'tab__indicator--left': placement === 'left',
                'tab__indicator--right': placement === 'right',
            } })));
    }
    get host() { return getElement(this); }
    static get style() { return SixTabStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tab",
        "$members$": {
            "panel": [513],
            "active": [516],
            "closable": [4],
            "disabled": [516],
            "setFocus": [64],
            "removeFocus": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["panel", "panel"], ["active", "active"], ["disabled", "disabled"]]
    }; }
}

/**
 * Animates a given `element` from the position and dimension of `fromElement` to
 * its current position and dimension. Can be useful to implement the FLIP animation technique.
 *
 * @see {@link https://css-tricks.com/animating-layouts-with-the-flip-technique/} for details on the FLIP technique.
 *
 * @param {Element} element - The element to animate.
 * @param {Element} fromElement - The element representing the initial position and dimensions.
 * @param {KeyframeAnimationOptions} [options={ duration: 150, easing: 'ease', fill: 'both' }] - Optional animation parameters.
 *
 */
function flipAnimate(element, fromElement, options = {
    duration: 150,
    easing: 'ease',
    fill: 'both',
}) {
    const dimensionsTo = fromElement.getBoundingClientRect();
    const dimensionsFrom = element.getBoundingClientRect();
    const deltaX = dimensionsTo.left - dimensionsFrom.left;
    const deltaY = dimensionsTo.top - dimensionsFrom.top;
    const deltaW = dimensionsTo.width / dimensionsFrom.width;
    const deltaH = dimensionsTo.height / dimensionsFrom.height;
    element.animate([
        {
            transformOrigin: 'top left',
            transform: `translate(${deltaX}px, ${deltaY}px) scale(${deltaW}, ${deltaH})`,
        },
        {
            transformOrigin: 'top left',
            transform: 'none',
        },
    ], options);
}

const sixTabGroupCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block}.tab-group{display:flex;border:solid 1px transparent;border-radius:0}.tab-group .tab-group__tabs{display:flex;position:relative}.tab-group--has-scroll-controls .tab-group__nav-container{position:relative;padding:0 var(--six-spacing-x-large)}.tab-group__scroll-button{display:flex;align-items:center;justify-content:center;position:absolute;top:0;bottom:0;width:var(--six-spacing-x-large)}.tab-group__scroll-button--left{left:0}.tab-group__scroll-button--right{right:0}.tab-group--top{flex-direction:column}.tab-group--top .tab-group__nav-container{order:1}.tab-group--top .tab-group__nav{display:flex;overflow-x:auto;scrollbar-width:none;-ms-overflow-style:none}.tab-group--top .tab-group__nav::-webkit-scrollbar{width:0;height:0}.tab-group--top .tab-group__tabs{flex:1 1 auto;position:relative;flex-direction:row}.tab-group--top .tab-group__body{order:2}.tab-group--bottom{flex-direction:column}.tab-group--bottom .tab-group__nav-container{order:2}.tab-group--bottom .tab-group__nav{display:flex;overflow-x:auto;scrollbar-width:none;-ms-overflow-style:none}.tab-group--bottom .tab-group__nav::-webkit-scrollbar{width:0;height:0}.tab-group--bottom .tab-group__tabs{flex:1 1 auto;position:relative;flex-direction:row}.tab-group--bottom .tab-group__body{order:1}.tab-group--left{flex-direction:row}.tab-group--left .tab-group__nav-container{order:1}.tab-group--left .tab-group__tabs{flex:0 0 auto;flex-direction:column}.tab-group--left .tab-group__body{flex:1 1 auto;order:2}.tab-group--right{flex-direction:row}.tab-group--right .tab-group__nav-container{order:2}.tab-group--right .tab-group__tabs{flex:0 0 auto;flex-direction:column}.tab-group--right .tab-group__body{flex:1 1 auto;order:1}";
var SixTabGroupStyle0 = sixTabGroupCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot nav - Used for grouping tabs in the tab group.
 * @slot - Used for grouping tab panels in the tab group.
 *
 * @part base - The component's base wrapper.
 * @part nav - The tab group navigation container.
 * @part tabs - The container that wraps the slotted tabs.
 * @part active-tab-indicator - An element that displays the currently selected tab. This is a child of the tab's container.
 * @part body - The tab group body where tab panels are slotted in.
 * @part scroll-button - The previous and next scroll buttons that appear when tabs are scrollable.
 */
class SixTabGroup {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixTabShow = createEvent(this, "six-tab-show", 7);
        this.sixTabHide = createEvent(this, "six-tab-hide", 7);
        this.handleClick = (event) => {
            const target = event.target;
            const tab = target.closest('six-tab');
            const tabGroup = tab === null || tab === void 0 ? void 0 : tab.closest('six-tab-group');
            // Ensure the target tab is in this tab group
            if (tabGroup !== this.host) {
                return false;
            }
            if (tab != null) {
                this.setActiveTab(tab);
            }
        };
        this.handleKeyDown = (event) => {
            if (this.nav == null)
                return;
            const target = event.target;
            const tab = target.closest('six-tab');
            const tabGroup = tab === null || tab === void 0 ? void 0 : tab.closest('six-tab-group');
            // Ensure the target tab is in this tab group
            if (tabGroup !== this.host) {
                return false;
            }
            // Move focus left or right
            if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {
                const activeEl = document.activeElement;
                if (activeEl && activeEl.tagName.toLowerCase() === 'six-tab') {
                    const tabs = this.getAllTabs();
                    let index = tabs.indexOf(activeEl);
                    if (event.key === 'Home') {
                        index = 0;
                    }
                    else if (event.key === 'End') {
                        index = tabs.length - 1;
                    }
                    else if (event.key === 'ArrowLeft') {
                        index = Math.max(0, index - 1);
                    }
                    else if (event.key === 'ArrowRight') {
                        index = Math.min(tabs.length - 1, index + 1);
                    }
                    tabs[index].setFocus({ preventScroll: true });
                    this.setActiveTab(tabs[index]);
                    if (['top', 'bottom'].includes(this.placement)) {
                        scrollIntoView(tabs[index], this.nav, 'horizontal');
                    }
                    event.preventDefault();
                }
            }
        };
        this.handleScrollLeft = () => {
            if (this.nav == null)
                return;
            this.nav.scroll({
                left: this.nav.scrollLeft - this.nav.clientWidth,
                behavior: 'smooth',
            });
        };
        this.handleScrollRight = () => {
            if (this.nav == null)
                return;
            this.nav.scroll({
                left: this.nav.scrollLeft + this.nav.clientWidth,
                behavior: 'smooth',
            });
        };
        this.hasLeftControl = false;
        this.hasRightControl = false;
        this.placement = 'top';
        this.noScrollControls = false;
    }
    handleNoScrollControlsChange() {
        this.updateScrollControls();
    }
    componentDidLoad() {
        if (this.tabGroup == null || this.nav == null)
            return;
        // Set initial tab state when the tabs first become visible
        const observer = new IntersectionObserver((entries, observer) => {
            if (entries[0].intersectionRatio > 0) {
                this.setAriaLabels();
                this.setActiveTab(this.getActiveTab() || this.getAllTabs()[0], false);
                observer.unobserve(entries[0].target);
            }
        });
        observer.observe(this.host);
        this.resizeObserver = new ResizeObserver(() => this.updateScrollControls());
        this.resizeObserver.observe(this.nav);
        requestAnimationFrame(() => this.updateScrollControls());
        this.nav.addEventListener('scroll', () => {
            if (this.nav == null) {
                return;
            }
            this.hasRightControl = this.calculateRightControlVisibility();
            this.hasLeftControl = this.calculateLeftControlVisibility();
        });
        // Update aria labels if the DOM changes
        this.mutationObserver = new MutationObserver((mutations) => {
            if (mutations.some((mutation) => {
                var _a;
                return !['aria-labelledby', 'aria-controls'].includes((_a = mutation.attributeName) !== null && _a !== void 0 ? _a : '');
            })) {
                setTimeout(() => this.setAriaLabels());
            }
        });
        this.mutationObserver.observe(this.host, { attributes: true, childList: true, subtree: true });
    }
    disconnectedCallback() {
        if (this.mutationObserver == null || this.tabGroup == null || this.nav == null || this.resizeObserver == null) {
            return;
        }
        this.mutationObserver.disconnect();
        this.resizeObserver.unobserve(this.nav);
    }
    /** Shows the specified tab panel. */
    async show(panel) {
        const tabs = this.getAllTabs();
        const tab = tabs.find((el) => el.panel === panel);
        if (tab != null) {
            this.setActiveTab(tab);
        }
    }
    getAllTabs(includeDisabled = false) {
        var _a;
        const slot = (_a = this.tabs) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
        if (slot == null)
            return [];
        return [...slot.assignedElements()].filter((el) => {
            return includeDisabled
                ? el.tagName.toLowerCase() === 'six-tab'
                : el.tagName.toLowerCase() === 'six-tab' && !el.disabled;
        });
    }
    getAllPanels() {
        var _a;
        const slot = (_a = this.body) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
        if (slot == null)
            return [];
        return [...slot.assignedElements()].filter((el) => el.tagName.toLowerCase() === 'six-tab-panel');
    }
    getActiveTab() {
        return this.getAllTabs().find((el) => el.active);
    }
    calculateRightControlVisibility() {
        var _a, _b, _c;
        if (this.nav == null) {
            return false;
        }
        return Math.abs((_a = this.nav) === null || _a === void 0 ? void 0 : _a.scrollLeft) + ((_b = this.nav) === null || _b === void 0 ? void 0 : _b.clientWidth) < ((_c = this.nav) === null || _c === void 0 ? void 0 : _c.scrollWidth) - 1;
    }
    calculateLeftControlVisibility() {
        var _a;
        if (this.nav == null) {
            return false;
        }
        return Math.abs((_a = this.nav) === null || _a === void 0 ? void 0 : _a.scrollLeft) > 0;
    }
    updateScrollControls() {
        if (this.nav == null)
            return;
        this.hasRightControl = this.noScrollControls
            ? false
            : ['top', 'bottom'].includes(this.placement) && this.calculateRightControlVisibility();
        this.hasLeftControl = this.noScrollControls
            ? false
            : ['top', 'bottom'].includes(this.placement) && this.calculateLeftControlVisibility();
    }
    setActiveTab(tab, emitEvents = true) {
        var _a, _b, _c;
        if (this.nav == null)
            return;
        const newIndicator = (_a = tab === null || tab === void 0 ? void 0 : tab.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.tab__indicator');
        const oldIndicator = (_c = (_b = this.getActiveTab()) === null || _b === void 0 ? void 0 : _b.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('.tab__indicator');
        if (oldIndicator != null && newIndicator != null) {
            flipAnimate(newIndicator, oldIndicator);
        }
        if (tab !== this.activeTab && !tab.disabled) {
            const previousTab = this.activeTab;
            this.activeTab = tab;
            // Sync tabs and panels
            this.getAllTabs().map((el) => (el.active = el === this.activeTab));
            this.getAllPanels().map((el) => { var _a; return (el.active = el.name === ((_a = this.activeTab) === null || _a === void 0 ? void 0 : _a.panel)); });
            if (['top', 'bottom'].includes(this.placement)) {
                scrollIntoView(this.activeTab, this.nav, 'horizontal');
            }
            // Emit events
            if (emitEvents) {
                if (previousTab != null) {
                    this.sixTabHide.emit({ name: previousTab.panel });
                }
                this.sixTabShow.emit({ name: this.activeTab.panel });
            }
        }
    }
    setAriaLabels() {
        const tabs = this.getAllTabs();
        const panels = this.getAllPanels();
        // Link each tab with its corresponding panel
        tabs.map((tab) => {
            var _a, _b;
            const panel = panels.find((el) => el.name === tab.panel);
            if (panel != null) {
                tab.setAttribute('aria-controls', (_a = panel.getAttribute('id')) !== null && _a !== void 0 ? _a : '');
                panel.setAttribute('aria-labelledby', (_b = tab.getAttribute('id')) !== null && _b !== void 0 ? _b : '');
            }
        });
    }
    render() {
        return (hAsync("div", { key: '60f54ff4d4cd4131cd1b34a7930f26f5881cdb29', part: "base", ref: (el) => (this.tabGroup = el), class: {
                'tab-group': true,
                // Placements
                'tab-group--top': this.placement === 'top',
                'tab-group--bottom': this.placement === 'bottom',
                'tab-group--left': this.placement === 'left',
                'tab-group--right': this.placement === 'right',
                'tab-group--has-scroll-controls': this.hasRightControl || this.hasLeftControl,
            }, onClick: this.handleClick, onKeyDown: this.handleKeyDown }, hAsync("div", { key: '54a95d4a91ba3353eaa0f628353073d206e45c89', class: "tab-group__nav-container" }, this.hasLeftControl && (hAsync("six-icon-button", { key: '6f7d4640cf7c39b33c47d811c32ecc15b94d965d', class: "tab-group__scroll-button tab-group__scroll-button--left", exportparts: "base:scroll-button", name: "chevron_left", onClick: this.handleScrollLeft })), hAsync("div", { ref: (el) => (this.nav = el), key: "nav", part: "nav", class: "tab-group__nav" }, hAsync("div", { key: '4c16b3f6ea9f11a7cfe213cae93906d5697db55b', ref: (el) => (this.tabs = el), part: "tabs", class: "tab-group__tabs", role: "tablist" }, hAsync("slot", { key: '820aa64c25c995209aa55602a35ab4c73a0fe02c', name: "nav" }))), this.hasRightControl && (hAsync("six-icon-button", { key: '5941d65f3065f283067092dd248a03be48c56fba', class: "tab-group__scroll-button tab-group__scroll-button--right", exportparts: "base:scroll-button", name: "chevron_right", onClick: this.handleScrollRight }))), hAsync("div", { key: '74eaa776c877ae1f0dea669655f35f09c336fe5b', ref: (el) => (this.body = el), part: "body", class: "tab-group__body" }, hAsync("slot", { key: '8c12c1d7312e6013fbc4e68f65beb28f43f1ffec' }))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "noScrollControls": ["handleNoScrollControlsChange"]
    }; }
    static get style() { return SixTabGroupStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tab-group",
        "$members$": {
            "placement": [1],
            "noScrollControls": [4, "no-scroll-controls"],
            "hasLeftControl": [32],
            "hasRightControl": [32],
            "show": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sixTabPanelCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block;font-family:var(--six-font-family)}.tab-panel{border:solid 1px transparent;padding:20px 20px}";
var SixTabPanelStyle0 = sixTabPanelCss;

let id$2 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The tab panel's content.
 *
 * @part base - The component's base wrapper.
 */
class SixTabPanel {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.componentId = `tab-panel-${++id$2}`;
        this.name = '';
        this.active = false;
    }
    render() {
        return (
        // If the user didn't provide an ID, we'll set one, so we can link tabs and tab panels with aria labels
        hAsync(Host, { key: 'fc3d3db3be1c5b3ad6b9f016c457a125bfaa2562', id: this.host.id || this.componentId, style: { display: this.active ? 'block' : 'none' } }, hAsync("div", { key: 'b0b17b2d02f91a540612108a386db0bb92bd069e', part: "base", class: "tab-panel", role: "tabpanel", "aria-selected": this.active ? 'true' : 'false', "aria-hidden": this.active ? 'false' : 'true' }, hAsync("slot", { key: '29dfde6d87307b7ea582df86faad4504aa94e2f6' }))));
    }
    get host() { return getElement(this); }
    static get style() { return SixTabPanelStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tab-panel",
        "$members$": {
            "name": [1],
            "active": [516]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["active", "active"]]
    }; }
}

const sixTagCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block;overflow:hidden}.tag{display:flex;align-items:center;border:solid 1px;font-family:var(--six-font-family);line-height:1;white-space:nowrap;user-select:none;cursor:default}.tag__content{text-overflow:ellipsis;overflow:hidden}.tag__clear::part(base){color:inherit;padding:0}.tag--info{color:var(--six-color-white);background-color:var(--six-color-web-rock-900);border-color:var(--six-color-web-rock-900)}.tag--success{color:var(--six-color-web-rock-900);border-color:var(--six-color-success-500);background-color:var(--six-color-success-500)}.tag--primary{color:var(--six-color-web-rock-900);border-color:var(--six-color-clay-50);background-color:var(--six-color-clay-50)}.tag--warning{color:var(--six-color-web-rock-900);border-color:var(--six-color-warning-700);background-color:var(--six-color-warning-700)}.tag--danger{color:var(--six-color-white);border-color:var(--six-color-danger-800);background-color:var(--six-color-danger-800)}.tag--action{color:var(--six-color-white);border-color:var(--six-color-action-500);background-color:var(--six-color-action-500)}.tag--small{font-size:var(--six-button-font-size-small);height:calc(var(--six-height-small) * 0.8);line-height:calc(var(--six-height-small) - var(--six-border-width) * 2);border-radius:var(--six-input-border-radius-small);padding:0 var(--six-spacing-x-small)}.tag--small .tag__clear{margin-left:var(--six-spacing-xx-small);margin-right:calc(-1 * var(--six-spacing-xxx-small))}.tag--medium{font-size:var(--six-button-font-size-medium);height:calc(var(--six-height-medium) * 0.8);line-height:calc(var(--six-height-medium) - var(--six-border-width) * 2);border-radius:var(--six-input-border-radius-medium);padding:0 var(--six-spacing-small)}.tag--medium .tag__clear{margin-left:var(--six-spacing-xx-small);margin-right:calc(-1 * var(--six-spacing-xx-small))}.tag--large{font-size:var(--six-button-font-size-large);height:calc(var(--six-height-large) * 0.8);line-height:calc(var(--six-height-large) - var(--six-border-width) * 2);border-radius:var(--six-input-border-radius-large);padding:0 var(--six-spacing-medium)}.tag--large .tag__clear{margin-left:var(--six-spacing-xx-small);margin-right:calc(-1 * var(--six-spacing-x-small))}.tag--pill{border-radius:var(--six-border-radius-pill)}";
var SixTagStyle0 = sixTagCss;

/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The tag's content.
 *
 * @part base - The component's base wrapper.
 * @part content - The tag content.
 * @part clear-button - The clear button.
 */
class SixTag {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixClear = createEvent(this, "six-tag-clear", 7);
        this.resizeObserver = new ResizeObserver(debounce$1(() => this.updateTooltip()));
        this.updateTooltip = () => {
            if (this.tooltipElement != null && this.contentSlotElement != null && this.contentElement != null) {
                this.tooltipElement.content = getTextContent(this.contentSlotElement);
                this.tooltipElement.disabled = !(this.contentElement.offsetWidth < this.contentElement.scrollWidth);
            }
        };
        this.handleClearClick = () => {
            this.sixClear.emit();
        };
        this.type = 'primary';
        this.size = 'medium';
        this.pill = false;
        this.clearable = false;
    }
    connectedCallback() {
        if (this.contentElement != null) {
            this.resizeObserver.observe(this.contentElement);
        }
    }
    componentDidLoad() {
        if (this.contentElement != null) {
            this.resizeObserver.observe(this.contentElement);
        }
    }
    disconnectedCallback() {
        this.resizeObserver.disconnect();
    }
    render() {
        return (hAsync("span", { key: '480e8d5bed91865a31471b7f0e0eb433e9026ff7', part: "base", class: {
                tag: true,
                // Types
                'tag--primary': this.type === 'primary',
                'tag--success': this.type === 'success',
                'tag--info': this.type === 'info',
                'tag--warning': this.type === 'warning',
                'tag--danger': this.type === 'danger',
                'tag--action': this.type === 'action',
                'tag--text': this.type === 'text',
                // Sizes
                'tag--small': this.size === 'small',
                'tag--medium': this.size === 'medium',
                'tag--large': this.size === 'large',
                // Modifers
                'tag--pill': this.pill,
                'tag--clear': this.clearable,
            } }, hAsync("six-tooltip", { key: '3af188748afc314713bb9e879a7f40df95acdf52', ref: (el) => (this.tooltipElement = el) }, hAsync("span", { key: 'defb96f6d751d5f7e604205d4c5cf7eed11ca303', ref: (el) => (this.contentElement = el), part: "content", class: "tag__content" }, hAsync("slot", { key: 'c68ec76249d3698b2d943053a773992169af7722', ref: (el) => (this.contentSlotElement = el) }))), this.clearable && (hAsync("six-icon-button", { key: '1649c4712fa0135dc8a77fae5c5dfed6cf046ebd', exportparts: "base:clear-button", size: "xSmall", name: "clear", class: "tag__clear", onClick: this.handleClearClick }))));
    }
    static get style() { return SixTagStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tag",
        "$members$": {
            "type": [513],
            "size": [513],
            "pill": [516],
            "clearable": [516]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["type", "type"], ["size", "size"], ["pill", "pill"], ["clearable", "clearable"]]
    }; }
}

const sixTextareaCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none;text-align:left}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\"*\";transform:scale(1.1);margin-left:var(--six-spacing-xxx-small);position:absolute}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{--height:100%;display:block}.textarea{display:flex;align-items:center;position:relative;width:100%;font-family:var(--six-font-family);font-weight:var(--six-input-font-weight);line-height:var(--six-line-height-normal);letter-spacing:var(--six-input-letter-spacing);background-color:var(--six-input-background-color);border:solid var(--six-border-width) var(--six-input-border-color);vertical-align:middle;transition:var(--six-transition-fast) color, var(--six-transition-fast) border, var(--six-transition-fast) box-shadow;cursor:text}.textarea:hover:not(.textarea--disabled){background-color:var(--six-input-background-color-hover);border-color:var(--six-input-border-color-hover)}.textarea:hover:not(.textarea--disabled) .textarea__control{color:var(--six-input-color-hover)}.textarea.textarea--focused:not(.textarea--disabled){background-color:var(--six-input-background-color-focus);box-shadow:var(--six-input-focus-shadow);border-color:var(--six-input-border-color-focus);color:var(--six-input-color-focus)}.textarea.textarea--focused:not(.textarea--disabled) .textarea__control{color:var(--six-input-color-focus)}.textarea.textarea--disabled{background-color:var(--six-input-background-color-disabled);border-color:var(--six-input-border-color-disabled);cursor:not-allowed}.textarea.textarea--disabled .textarea__control{color:var(--six-input-color-disabled)}.textarea.textarea--disabled .textarea__control::placeholder{color:var(--six-input-placeholder-color-disabled)}.textarea__control{flex:1 1 auto;height:calc(var(--height) - 2 * var(--six-border-width));font-family:inherit;font-size:inherit;font-weight:inherit;line-height:1.4;color:var(--sl-input-color);border:none;background:none;box-shadow:none;cursor:inherit;-webkit-appearance:none}.textarea__control::-webkit-search-decoration,.textarea__control::-webkit-search-cancel-button,.textarea__control::-webkit-search-results-button,.textarea__control::-webkit-search-results-decoration{-webkit-appearance:none}.textarea__control::placeholder{color:var(--six-input-placeholder-color);user-select:none}.textarea__control:focus{outline:none}.textarea--invalid:not(.textarea--disabled):not(.textarea--focused){border-color:var(--six-input-border-color-danger)}.textarea--small{border-radius:var(--six-input-border-radius-small);font-size:var(--six-input-font-size-small)}.textarea--small .textarea__control{padding:0.5em var(--six-input-spacing-small)}.textarea--medium{border-radius:var(--six-input-border-radius-medium);font-size:var(--six-input-font-size-medium)}.textarea--medium .textarea__control{padding:0.5em var(--six-input-spacing-medium)}.textarea--large{border-radius:var(--six-input-border-radius-large);font-size:var(--six-input-font-size-large)}.textarea--large .textarea__control{padding:0.5em var(--six-input-spacing-large)}.textarea--resize-none .textarea__control{resize:none}.textarea--resize-vertical .textarea__control{resize:vertical}.textarea--resize-auto .textarea__control{height:auto;resize:none}";
var SixTextareaStyle0 = sixTextareaCss;

let id$1 = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot label - The textarea's label. Alternatively, you can use the label prop.
 * @slot help-text - Help text that describes how to use the input.
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part base - The component's base wrapper.
 * @part form-control - The form control that wraps the label, textarea, and help text.
 * @part label - The textarea label.
 * @part textarea - The textarea control.
 * @part help-text - The textarea help text.
 */
class SixTextarea {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-textarea-change", 7);
        this.sixInput = createEvent(this, "six-textarea-input", 7);
        this.sixFocus = createEvent(this, "six-textarea-focus", 7);
        this.sixBlur = createEvent(this, "six-textarea-blur", 7);
        this.inputId = `textarea-${++id$1}`;
        this.labelId = `textarea-label-${id$1}`;
        this.helpTextId = `textarea-help-text-${id$1}`;
        this.errorTextId = `input-error-text-${id$1}`;
        this.eventListeners = new EventListeners();
        this.resizeObserver = new ResizeObserver(() => this.setTextareaHeight());
        this.handleChange = () => {
            if (this.nativeTextarea != null) {
                this.value = this.nativeTextarea.value;
                this.sixChange.emit();
            }
        };
        this.handleInput = () => {
            if (this.nativeTextarea != null) {
                this.value = this.nativeTextarea.value;
                this.setTextareaHeight();
                this.sixInput.emit();
            }
        };
        this.handleBlur = () => {
            this.hasFocus = false;
            this.sixBlur.emit();
        };
        this.handleFocus = () => {
            this.hasFocus = true;
            this.sixFocus.emit();
        };
        this.handleSlotChange = () => {
            this.hasLabelSlot = hasSlot(this.host, 'label');
            this.hasHelpTextSlot = hasSlot(this.host, 'help-text');
            this.hasErrorTextSlot = hasSlot(this.host, 'error-text');
        };
        this.hasFocus = false;
        this.hasHelpTextSlot = false;
        this.hasLabelSlot = false;
        this.hasErrorTextSlot = false;
        this.size = 'medium';
        this.name = '';
        this.value = '';
        this.helpText = '';
        this.placeholder = undefined;
        this.rows = 4;
        this.resize = 'vertical';
        this.disabled = false;
        this.readonly = false;
        this.minlength = undefined;
        this.maxlength = undefined;
        this.required = false;
        this.label = '';
        this.errorText = '';
        this.errorTextCount = undefined;
        this.invalid = false;
        this.autocapitalize = 'off';
        this.autocorrect = 'off';
        this.autocomplete = 'off';
        this.autofocus = false;
        this.spellcheck = false;
        this.inputmode = undefined;
    }
    handleLabelChange() {
        this.handleSlotChange();
    }
    handleRowsChange() {
        this.setTextareaHeight();
    }
    handleValueChange() {
        this.value = this.getValue();
        if (this.nativeTextarea != null) {
            if (this.nativeTextarea.value !== this.value) {
                this.nativeTextarea.value = this.value;
            }
        }
    }
    connectedCallback() {
        var _a;
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.forward('six-textarea-input', 'input', this.host);
        this.eventListeners.forward('six-textarea-change', 'change', this.host);
        this.eventListeners.forward('six-textarea-focus', 'focus', this.host);
        this.eventListeners.forward('six-textarea-blur', 'blur', this.host);
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    componentDidLoad() {
        this.setTextareaHeight();
        if (this.nativeTextarea != null) {
            this.resizeObserver.observe(this.nativeTextarea);
        }
    }
    disconnectedCallback() {
        var _a;
        if (this.nativeTextarea != null) {
            this.resizeObserver.unobserve(this.nativeTextarea);
        }
        (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.removeEventListener('slotchange', this.handleSlotChange);
        this.eventListeners.removeAll();
    }
    /** Sets focus on the textarea. */
    async setFocus(options) {
        var _a;
        (_a = this.nativeTextarea) === null || _a === void 0 ? void 0 : _a.focus(options);
    }
    /** Removes focus fromt the textarea. */
    async removeFocus() {
        var _a;
        (_a = this.nativeTextarea) === null || _a === void 0 ? void 0 : _a.blur();
    }
    /** Selects all the text in the input. */
    async select() {
        var _a;
        return (_a = this.nativeTextarea) === null || _a === void 0 ? void 0 : _a.select();
    }
    /** Sets the start and end positions of the text selection (0-based). */
    async setSelectionRange(selectionStart, selectionEnd, selectionDirection = 'none') {
        var _a;
        return (_a = this.nativeTextarea) === null || _a === void 0 ? void 0 : _a.setSelectionRange(selectionStart, selectionEnd, selectionDirection);
    }
    /** Replaces a range of text with a new string. */
    async setRangeText(replacement, start, end, selectMode = 'preserve') {
        if (this.nativeTextarea == null)
            return;
        this.nativeTextarea.setRangeText(replacement, start, end, selectMode);
        if (this.getValue() !== this.nativeTextarea.value) {
            this.value = this.nativeTextarea.value;
            this.setTextareaHeight();
            this.sixChange.emit();
            this.sixInput.emit();
        }
    }
    setTextareaHeight() {
        if (this.nativeTextarea == null)
            return;
        if (this.resize === 'auto') {
            this.nativeTextarea.style.height = 'auto';
            this.nativeTextarea.style.height = this.nativeTextarea.scrollHeight + 'px';
        }
        else {
            this.nativeTextarea.style.height = undefined;
        }
    }
    getValue() {
        var _a;
        return ((_a = this.value) !== null && _a !== void 0 ? _a : '').toString();
    }
    render() {
        return (hAsync(FormControl, { key: '00028d12eac65d362517b2c6e094329d8c069f43', inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, errorTextId: this.errorTextId, errorText: this.errorText, errorTextCount: this.errorTextCount, hasErrorTextSlot: this.hasErrorTextSlot, size: this.size, disabled: this.disabled, required: this.required, displayError: this.invalid }, hAsync("div", { key: 'edc65e69870856efdc9b40ffc67918262348879f', part: "base", class: {
                textarea: true,
                // Sizes
                'textarea--small': this.size === 'small',
                'textarea--medium': this.size === 'medium',
                'textarea--large': this.size === 'large',
                // States
                'textarea--disabled': this.disabled,
                'textarea--focused': this.hasFocus,
                'textarea--empty': this.getValue().length === 0,
                'textarea--invalid': this.invalid,
                // Modifiers
                'textarea--resize-none': this.resize === 'none',
                'textarea--resize-vertical': this.resize === 'vertical',
                'textarea--resize-auto': this.resize === 'auto',
            } }, hAsync("textarea", { key: '45ae6befea1819b076625029c4549e00d683fd5c', part: "textarea", ref: (el) => (this.nativeTextarea = el), id: this.inputId, class: "textarea__control", name: this.name, placeholder: this.placeholder, disabled: this.disabled, readOnly: this.readonly, rows: this.rows, minLength: this.minlength, maxLength: this.maxlength, value: this.getValue(), autoCapitalize: this.autocapitalize, autoCorrect: this.autocorrect, autoFocus: this.autofocus, spellcheck: this.spellcheck, required: this.required, inputMode: this.inputmode, "aria-labelledby": this.labelId, onChange: this.handleChange, onInput: this.handleInput, onFocus: this.handleFocus, onBlur: this.handleBlur }))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "helpText": ["handleLabelChange"],
        "errorText": ["handleLabelChange"],
        "label": ["handleLabelChange"],
        "rows": ["handleRowsChange"],
        "value": ["handleValueChange"]
    }; }
    static get style() { return SixTextareaStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-textarea",
        "$members$": {
            "size": [513],
            "name": [513],
            "value": [1537],
            "helpText": [1, "help-text"],
            "placeholder": [1],
            "rows": [2],
            "resize": [1],
            "disabled": [516],
            "readonly": [516],
            "minlength": [514],
            "maxlength": [514],
            "required": [4],
            "label": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "invalid": [516],
            "autocapitalize": [1],
            "autocorrect": [1],
            "autocomplete": [1],
            "autofocus": [4],
            "spellcheck": [4],
            "inputmode": [1],
            "hasFocus": [32],
            "hasHelpTextSlot": [32],
            "hasLabelSlot": [32],
            "hasErrorTextSlot": [32],
            "setFocus": [64],
            "removeFocus": [64],
            "select": [64],
            "setSelectionRange": [64],
            "setRangeText": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["size", "size"], ["name", "name"], ["value", "value"], ["disabled", "disabled"], ["readonly", "readonly"], ["minlength", "minlength"], ["maxlength", "maxlength"], ["invalid", "invalid"]]
    }; }
}

const sixTileCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:inline-block}.tile{min-height:var(--tile-size);width:var(--tile-size);background-color:var(--six-color-clay-50);display:inline-grid;grid-template-columns:100%;grid-template-areas:\"header\" \"middle\" \"footer\"}.tile--small{--tile-size:80px;--tile-padding-size:var(--six-spacing-medium)}.tile--medium{--tile-size:120px;--tile-padding-size:var(--six-spacing-large)}.tile--large{--tile-size:160px;--tile-padding-size:var(--six-spacing-x-large)}.tile:not(.tile--visible){visibility:hidden}.tile--elevated{border:0;box-shadow:var(--six-shadow-medium)}.tile__header{grid-area:header;height:5%;justify-self:right;display:flex;justify-content:right;opacity:0;transition:var(--six-transition-fast) opacity}.tile:hover>.tile__header{opacity:1}.tile__header--hidden{visibility:hidden}.tile__header six-icon-button{margin-top:-6px;margin-right:-6px;margin-bottom:-16px}.tile__body,.tile__body--large,.tile__body--medium,.tile__body--small{grid-area:middle;display:grid;place-items:center;cursor:pointer;padding-left:var(--tile-padding-size);padding-right:var(--tile-padding-size)}.tile__body six-icon::part(base),.tile__body--large six-icon::part(base),.tile__body--medium six-icon::part(base),.tile__body--small six-icon::part(base){padding:0}.tile__body--small{--tile-padding-size:var(--six-spacing-medium)}.tile__body--medium{--tile-padding-size:var(--six-spacing-large)}.tile__body--large{--tile-padding-size:var(--six-spacing-x-large)}.tile__footer,.tile__footer--large,.tile__footer--medium,.tile__footer--small{grid-area:footer;display:flex;justify-content:center;cursor:pointer;font-weight:var(--six-font-weight-normal);color:var(--six-color-web-rock-900)}.tile__footer--small{font-size:var(--six-font-size-xxx-small)}.tile__footer--medium{font-size:var(--six-font-size-xx-small)}.tile__footer--large{font-size:var(--six-font-size-small)}.tile__footer .label__footer,.tile__footer--small .label__footer,.tile__footer--medium .label__footer,.tile__footer--large .label__footer{overflow:hidden;text-overflow:ellipsis;width:calc(var(--tile-size) - 2em);text-align:center}";
var SixTileStyle0 = sixTileCss;

/**
 * @since 1.0
 * @status stable
 */
class SixTile {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixTileClose = createEvent(this, "six-tile-closed", 7);
        this.sixTileSelected = createEvent(this, "six-tile-selected", 7);
        this.handleSlotChange = () => {
            this.hasIconSlot = hasSlot(this.host, 'icon');
            this.hasLabelSlot = hasSlot(this.host, 'label');
            if (this.hasIconSlot) {
                const slot = getSlot(this.host, 'icon');
                slot === null || slot === void 0 ? void 0 : slot.addEventListener('click', this.handleClickEvent);
            }
            if (this.hasLabelSlot) {
                const slot = getSlot(this.host, 'label');
                slot === null || slot === void 0 ? void 0 : slot.addEventListener('click', this.handleClickEvent);
            }
        };
        this.handleCloseClickEvent = () => {
            this.visible = false;
            this.sixTileClose.emit();
        };
        this.handleClickEvent = () => {
            this.sixTileSelected.emit();
        };
        this.label = '';
        this.iconName = undefined;
        this.closeable = true;
        this.elevated = false;
        this.disableTooltip = true;
        this.disabled = false;
        this.size = 'medium';
        this.visible = true;
        this.hasIconSlot = false;
        this.hasLabelSlot = false;
    }
    /** Hides the tile */
    async hide() {
        this.visible = false;
    }
    /** Shows the tile */
    async show() {
        this.visible = true;
    }
    componentWillLoad() {
        this.handleSlotChange();
    }
    render() {
        return (hAsync("six-tooltip", { key: '79d848913c540512b81fe66755c9da076fb9b226', disabled: this.disableTooltip || this.label === '', content: this.label }, hAsync("div", { key: 'f548dacf54c2c72979b1e709e785d432e462d0f3', part: "base", class: {
                tile: true,
                'tile--visible': this.visible,
                'tile--small': this.size === 'small',
                'tile--medium': this.size === 'medium',
                'tile--large': this.size === 'large',
                'tile--elevated': this.elevated,
            } }, hAsync("div", { key: 'b568c12be9fa62e9465e52294aa51c03fade0ae2', part: "header", class: "tile__header" }, hAsync("six-icon-button", { key: '5fd04515c4941997d9a6b919bbd1c95a8ed66438', class: {
                'tile__header--hidden': !this.closeable,
            }, name: "close", size: closeIconSize(this.size), onClick: this.handleCloseClickEvent })), hAsync("div", { key: 'f3ec21cbf34d4af5bec6ba5a198e6de0a05778cb', part: "body", class: "tile__body" }, this.iconName && (hAsync("six-icon", { key: '7e73683d85265a75fbe8e3de6a8d6a02b5463430', onClick: this.handleClickEvent, size: iconSize(this.size) }, this.iconName)), this.hasIconSlot && hAsync("slot", { key: '93526f1c218f38e8e1d03ba9dfb5743f8d025f25', name: "icon" })), hAsync("div", { key: 'b27888fa0273cfc31972473a96c5f96ca8d1ab6b', part: "footer", class: {
                'tile__footer--small': this.size === 'small',
                'tile__footer--medium': this.size === 'medium',
                'tile__footer--large': this.size === 'large',
            } }, this.label && (hAsync("div", { key: '2104c0ed3f5dafcdba7e68884a3c077889f8d939', class: {
                '.label__footer': true,
            }, onClick: this.handleClickEvent }, this.label)), this.hasLabelSlot && hAsync("slot", { key: '79df8d3d558862bf4e8e7cf361a72b7c583663d9', name: "label" })))));
    }
    get host() { return getElement(this); }
    static get style() { return SixTileStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tile",
        "$members$": {
            "label": [1],
            "iconName": [1, "icon-name"],
            "closeable": [4],
            "elevated": [4],
            "disableTooltip": [4, "disable-tooltip"],
            "disabled": [516],
            "size": [513],
            "visible": [32],
            "hasIconSlot": [32],
            "hasLabelSlot": [32],
            "hide": [64],
            "show": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["disabled", "disabled"], ["size", "size"]]
    }; }
}
const closeIconSize = (size) => {
    return {
        small: 'xxSmall',
        medium: 'medium',
        large: 'medium',
    }[size];
};
const iconSize = (size) => {
    return {
        small: 'xLarge',
        medium: 'xxLarge',
        large: 'xxxLarge',
    }[size];
};

const getCurrentTimeIn24Hours = () => {
    const now = new Date();
    return {
        hours: now.getHours(),
        minutes: now.getMinutes(),
        seconds: now.getSeconds(),
        milliseconds: now.getMilliseconds(),
        has24Hours: true,
    };
};
const HOURS_IN_12_HOUR_CLOCK_FORMAT = 12;
const getHoursIn12HourFormat = (hours) => hours > HOURS_IN_12_HOUR_CLOCK_FORMAT ? hours - HOURS_IN_12_HOUR_CLOCK_FORMAT : hours;
const getCurrentTimeIn12Hours = () => {
    const now = new Date();
    const hours = now.getHours();
    return {
        hours: getHoursIn12HourFormat(hours),
        minutes: now.getMinutes(),
        seconds: now.getSeconds(),
        milliseconds: now.getMilliseconds(),
        has24Hours: false,
        period: hours >= HOURS_IN_12_HOUR_CLOCK_FORMAT ? 'PM' : 'AM',
    };
};
const getCurrentTime = (has24Hours = true) => {
    return has24Hours ? getCurrentTimeIn24Hours() : getCurrentTimeIn12Hours();
};
const isValidTimeString = (timeStr, format) => {
    const timeStringParts = timeStr.split(':');
    const timeFormatParts = format.split(':');
    return timeStringParts.length === timeFormatParts.length;
};
const parseTimeString = (timeStr, format) => {
    const timeParts = timeStr.split(':');
    const formatParts = format.split(':');
    if (!isValidTimeString(timeStr, format)) {
        console.error(`Timestring did not match expected format.\nExpected format: ${format}\nReceived timestring: ${timeStr}`);
    }
    const time = {};
    timeParts.forEach((timeStringPart, i) => {
        const formatStringPart = formatParts[i];
        switch (formatStringPart) {
            case 'HH':
                time.hours = Number(timeStringPart);
                time.has24Hours = true;
                break;
            case 'hh':
                time.hours = Number(timeStringPart);
                time.has24Hours = false;
                break;
            case 'mm':
                time.minutes = Number(timeStringPart);
                break;
            case 'ss':
                time.seconds = Number(timeStringPart);
                break;
            case 'ms':
                time.milliseconds = Number(timeStringPart);
                break;
            case 'aa':
                time.period = timeStringPart.toUpperCase() === 'PM' ? 'PM' : 'AM';
        }
    });
    return time;
};
const createTimeString = (time, format) => {
    if (time == null) {
        return '';
    }
    const formatParts = format.split(':');
    return formatParts
        .map((timeFormatPart) => {
        switch (timeFormatPart) {
            case 'HH':
            case 'hh':
                return String(time.hours).padStart(2, '0');
            case 'mm':
                return String(time.minutes).padStart(2, '0');
            case 'ss':
                return String(time.seconds).padStart(2, '0');
            case 'ms':
                return String(time.milliseconds).padStart(3, '0');
            case 'aa':
                return String(time.period);
        }
    })
        .join(':');
};

const sixTimepickerCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{display:block;font-family:var(--six-font-family)}.timepicker_clear{display:inline-flex;align-items:center;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;padding:0;transition:var(--six-transition-fast) color;cursor:pointer}.timepicker_clear:hover{color:var(--six-input-icon-color-hover)}.timepicker_clear:focus{outline:none}.timepicker_clear--right{right:0;position:absolute}.timepicker_clear--left{right:35px;position:absolute}.timepicker__container{position:relative}.timepicker__popup{display:flex;justify-content:center;min-width:min-content;min-height:145px;background-color:white;padding:0.5em 0.5em 1.5em;box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);user-select:none;position:absolute;z-index:var(--six-z-index-dropdown);right:0;left:0}.timepicker__popup--is-up{bottom:100%}.timepicker__popup--is-inline{position:initial;box-shadow:none;border:1px solid var(--six-color-web-rock-400)}.timepicker__separator{display:flex;align-items:center}.timepicker__item--wide{padding-left:0.5rem;padding-right:0.5rem}.input--empty .timepicker_clear{visibility:hidden}.input--hide{display:none}.prefix{cursor:pointer}.prefix--right{right:0;display:inline-flex;position:absolute;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;margin-right:var(--six-input-spacing-medium);transition:var(--six-transition-fast) color}";
var SixTimepickerStyle0 = sixTimepickerCss;

const MIN_POPUP_HEIGHT = 145;
/**
 * @since 2.0.0
 * @status experimental
 *
 * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.
 *
 * @part input - The input field
 * @part container - The container of whole component
 * @part popup - The popup of the timepicker component
 *
 */
class SixTimepicker {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixChange = createEvent(this, "six-timepicker-change", 7);
        this.sixChangeDebounced = createEvent(this, "six-timepicker-change-debounced", 7);
        this.sixClear = createEvent(this, "six-timepicker-clear", 7);
        this.eventListeners = new EventListeners();
        this.handlePickerChange = (event, property) => {
            // stop propagation, since the timepicker should not expose the events of the underlying item-picker
            event.stopPropagation();
            if (this.popupValue == null) {
                return;
            }
            // update the internal state
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            this.popupValue[property] = event.detail;
            const timeString = createTimeString(this.popupValue, this.format);
            // update the input value
            this.value = timeString;
            // emit change event
            this.sixChange.emit({
                changedProperty: property,
                value: this.popupValue,
                valueAsString: timeString,
            });
        };
        this.handleDocumentMouseDown = (event) => {
            // Close when clicking outside the containing element
            const path = event.composedPath();
            if (!path.includes(this.host)) {
                this.closePopup();
                return;
            }
        };
        this.handleClearClick = (event) => {
            event.stopPropagation();
            this.value = '';
            this.sixClear.emit();
            this.sixChange.emit({
                value: {},
                valueAsString: '',
            });
        };
        this.format = 'HH:mm:ss';
        this.separator = ':';
        this.value = '';
        this.open = false;
        this.inline = false;
        this.readonly = false;
        this.disabled = false;
        this.placement = undefined;
        this.size = 'medium';
        this.required = false;
        this.placeholder = undefined;
        this.errorText = '';
        this.errorTextCount = undefined;
        this.label = '';
        this.invalid = false;
        this.name = '';
        this.clearable = false;
        this.iconPosition = 'left';
        this.hoist = false;
        this.timeout = DEFAULT_DEBOUNCE_FAST;
        this.interval = DEFAULT_DEBOUNCE_INSANELY_FAST;
        this.defaultTime = undefined;
        this.debounce = DEFAULT_DEBOUNCE_FAST;
        this.isPopupContentUp = false;
        this.isDropDownContentUp = false;
        this.popupValue = {};
    }
    async resizeHandler() {
        this.calcIsPopupContentUp();
        this.moveOpenHoistedPopup();
    }
    async scrollHandler() {
        this.calcIsPopupContentUp();
        this.moveOpenHoistedPopup();
    }
    /**
     * Update the native input element when the value changes
     */
    valueChanged() {
        this.updateValue();
    }
    /** Sets focus on the datepickers input. */
    async setFocus(options) {
        var _a;
        (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setFocus(options);
    }
    connectedCallback() {
        this.eventListeners.forward('six-timepicker-change', 'change', this.host);
    }
    componentWillLoad() {
        this.updateValue();
        if (this.inline) {
            this.open = true;
        }
        if (this.open) {
            this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);
        }
    }
    componentDidLoad() {
        if (this.inputElement == null)
            return;
        const inputElement = this.inputElement;
        // emit debounced change event
        this.eventListeners.add(this.host, 'six-timepicker-change', debounce$1((event) => this.sixChangeDebounced.emit(event.detail), this.debounce));
        // update value and popup value based on input-element value
        this.eventListeners.add(inputElement, 'six-input-input', debounce$1((event) => {
            event.stopPropagation();
            // emit empty event if time string is invalid
            if (!isValidTimeString(inputElement.value, this.format)) {
                this.value = inputElement.value;
                this.sixChange.emit({
                    value: {},
                    valueAsString: '',
                });
                return;
            }
            // update value and popup value, and emit the new value
            this.value = inputElement.value;
            this.popupValue = parseTimeString(inputElement.value, this.format);
            this.sixChange.emit({
                value: this.popupValue,
                valueAsString: createTimeString(this.popupValue, this.format),
            });
        }, this.debounce));
    }
    componentDidRender() {
        adjustPopupForHoisting(this.hoist, this.popup, this.inputElement, this.wrapper, MIN_POPUP_HEIGHT, (isUp) => (this.isDropDownContentUp = isUp));
    }
    disconnectedCallback() {
        this.eventListeners.removeAll();
    }
    updateValue() {
        // normalize value
        if (typeof this.value !== 'string' || !isValidTimeString(this.value, this.format)) {
            this.value = '';
        }
        // update popup value
        if (this.value === '') {
            if (this.defaultTime == null) {
                this.popupValue = getCurrentTime(this.is24HourClock());
            }
            else {
                this.popupValue = parseTimeString(this.defaultTime, this.format);
            }
        }
        else {
            this.popupValue = parseTimeString(this.value, this.format);
        }
    }
    calcIsPopupContentUp() {
        if (this.inputElement == null || this.wrapper == null) {
            return;
        }
        const inputBoundingRect = this.inputElement.getBoundingClientRect();
        const wrapperBoundingRect = this.wrapper.getBoundingClientRect();
        const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);
        const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;
        this.isPopupContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;
    }
    moveOpenHoistedPopup() {
        movePopup(this.hoist, this.open, this.popup, this.inputElement, this.wrapper, MIN_POPUP_HEIGHT);
    }
    getSixTimeUnitPicker(params) {
        return (hAsync("six-item-picker", { class: params.class, timeout: this.timeout, interval: this.interval, padded: true, min: params.min, max: params.max,
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            value: this.popupValue[params.propertyName], items: params.items, type: params.type || ItemPickerType.NUMBER, "padding-length": params.paddingLength, "onSix-item-picker-change": (event) => this.handlePickerChange(event, params.propertyName) }));
    }
    getHour24Picker() {
        if (!this.is24HourClock()) {
            return;
        }
        return this.getSixTimeUnitPicker({ min: 0, max: 23, propertyName: 'hours' });
    }
    is24HourClock() {
        return this.format.includes('HH');
    }
    getHour12Picker() {
        if (!this.is12HourClock()) {
            return;
        }
        return this.getSixTimeUnitPicker({ min: 0, max: 11, propertyName: 'hours' });
    }
    is12HourClock() {
        return this.format.includes('hh');
    }
    getAmPmPicker() {
        if (!this.is12HourClock()) {
            return;
        }
        const items = ['AM', 'PM'];
        return this.getSixTimeUnitPicker({
            items,
            type: ItemPickerType.CUSTOM,
            propertyName: 'period',
        });
    }
    getMinutePicker() {
        if (!this.format.includes('mm')) {
            return;
        }
        return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: 'minutes' });
    }
    getSecondsPicker() {
        if (!this.format.includes('ss')) {
            return;
        }
        return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: 'seconds' });
    }
    getMillisecondsPicker() {
        if (!this.format.includes('ms')) {
            return;
        }
        return this.getSixTimeUnitPicker({
            min: 0,
            max: 999,
            class: 'timepicker__item--wide',
            paddingLength: 3,
            propertyName: 'milliseconds',
        });
    }
    getSeparator() {
        return (hAsync("div", { class: "timepicker__separator" }, hAsync("span", null, this.separator)));
    }
    getContent() {
        const elementsInOrder = [
            this.getHour24Picker(),
            this.getHour12Picker(),
            this.getMinutePicker(),
            this.getSecondsPicker(),
            this.getMillisecondsPicker(),
        ];
        const visibleElements = elementsInOrder.filter((el) => el !== undefined);
        return visibleElements.map((el, idx) => {
            if (idx === visibleElements.length - 1) {
                return [el];
            }
            return [el, this.getSeparator()];
        });
    }
    openPopup() {
        if (!this.open && !this.disabled) {
            this.open = true;
            this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);
        }
    }
    closePopup() {
        if (this.inline) {
            return;
        }
        this.open = false;
        this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);
    }
    renderClearable() {
        return (this.clearable && (hAsync("button", { slot: "suffix", class: {
                timepicker_clear: true,
                'timepicker_clear--right': this.iconPosition === 'left',
                'timepicker_clear--left': this.iconPosition === 'right',
            }, type: "button", onClick: this.handleClearClick, tabindex: "-1" }, hAsync("six-icon", { size: "small" }, "clear"))));
    }
    renderCustomIcon() {
        const icon = hasSlot(this.host, 'custom-icon') ? (hAsync("slot", { name: "custom-icon" })) : (hAsync("six-icon", { size: this.size === 'large' ? 'medium' : this.size }, "watch_later"));
        return (hAsync("span", { slot: "prefix", part: "icon", class: {
                prefix: true,
                'prefix--right': this.iconPosition === 'right',
            } }, icon));
    }
    render() {
        return (hAsync("div", { key: '58240c7c32227225d1811fa59e9cf336aad03a4d', part: "container", ref: (el) => (this.wrapper = el), class: "timepicker__container" }, hAsync("six-input", { key: '1b6e9b28d997b67a933d055fa3e73e3c0751aa53', ref: (el) => (this.inputElement = el), part: "input", onClick: () => this.openPopup(), value: this.value, placeholder: this.placeholder, readonly: this.readonly, disabled: this.disabled, errorTextCount: this.errorTextCount, errorText: this.errorText, invalid: this.invalid, size: this.size, name: this.name, label: this.label, required: this.required, class: {
                'input--empty': this.value === '',
                'input--hide': this.inline,
            } }, this.renderCustomIcon(), this.renderClearable(), hasSlot(this.host, 'label') ? (hAsync("span", { slot: "label" }, hAsync("slot", { name: "label" }))) : null, hasSlot(this.host, 'error-text') ? (hAsync("span", { slot: "error-text" }, hAsync("slot", { name: "error-text" }))) : null), this.open && (hAsync("div", { key: 'b762116d0af1bc11d7f2cbb255b071e8fe3b52cf', ref: (el) => (this.popup = el), part: "popup", class: {
                timepicker__popup: true,
                'timepicker__popup--is-up': this.placement == null ? this.placement === 'top' : this.isPopupContentUp,
                'timepicker__popup--is-inline': this.inline,
            } }, ...this.getContent(), this.getAmPmPicker()))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "value": ["valueChanged"]
    }; }
    static get style() { return SixTimepickerStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-timepicker",
        "$members$": {
            "format": [1],
            "separator": [1],
            "value": [1025],
            "open": [1540],
            "inline": [516],
            "readonly": [4],
            "disabled": [4],
            "placement": [1],
            "size": [1],
            "required": [4],
            "placeholder": [1],
            "errorText": [1, "error-text"],
            "errorTextCount": [2, "error-text-count"],
            "label": [1],
            "invalid": [516],
            "name": [513],
            "clearable": [4],
            "iconPosition": [1, "icon-position"],
            "hoist": [4],
            "timeout": [2],
            "interval": [2],
            "defaultTime": [1, "default-time"],
            "debounce": [2],
            "isPopupContentUp": [32],
            "isDropDownContentUp": [32],
            "popupValue": [32],
            "setFocus": [64]
        },
        "$listeners$": [[9, "resize", "resizeHandler"], [9, "scroll", "scrollHandler"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"], ["inline", "inline"], ["invalid", "invalid"], ["name", "name"]]
    }; }
}

const sixTooltipCss = ":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:border-box}:host{--max-width:20rem;--hide-delay:0s;--hide-duration:0.125s;--hide-timing-function:ease;--show-delay:0.125s;--show-duration:0.125s;--show-timing-function:ease;display:contents}.tooltip-positioner{position:fixed;z-index:var(--six-z-index-tooltip);pointer-events:none}.tooltip{max-width:var(--max-width);border-radius:var(--six-border-radius-medium);background-color:var(--six-tooltip-background-color);font-family:var(--six-font-family);font-size:var(--six-tooltip-font-size);font-weight:var(--six-tooltip-font-weight);line-height:var(--six-tooltip-line-height);color:var(--six-tooltip-color);opacity:0;padding:var(--six-spacing-xxx-small) var(--six-spacing-x-small);transform:scale(0.8);transform-origin:bottom;transition-property:opacity, transform;transition-delay:var(--hide-delay);transition-duration:var(--hide-duration);transition-timing-function:var(--hide-timing-function)}.tooltip::after{content:\"\";position:absolute;width:0;height:0}.tooltip-positioner[data-popper-placement^=top] .tooltip{transform-origin:bottom}.tooltip-positioner[data-popper-placement^=bottom] .tooltip{transform-origin:top}.tooltip-positioner[data-popper-placement^=left] .tooltip{transform-origin:right}.tooltip-positioner[data-popper-placement^=right] .tooltip{transform-origin:left}.tooltip-positioner.popover-visible .tooltip{opacity:1;transform:none;transition-delay:var(--show-delay);transition-duration:var(--show-duration);transition-timing-function:var(--show-timing-function)}.tooltip-positioner[data-popper-placement^=bottom] .tooltip::after{bottom:100%;left:calc(50% - var(--six-tooltip-arrow-size));border-bottom:var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);border-left:var(--six-tooltip-arrow-size) solid transparent;border-right:var(--six-tooltip-arrow-size) solid transparent}.tooltip-positioner[data-popper-placement=bottom-start] .tooltip::after{left:var(--six-tooltip-arrow-start-end-offset)}.tooltip-positioner[data-popper-placement=bottom-end] .tooltip::after{right:var(--six-tooltip-arrow-start-end-offset);left:auto}.tooltip-positioner[data-popper-placement^=top] .tooltip::after{top:100%;left:calc(50% - var(--six-tooltip-arrow-size));border-top:var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);border-left:var(--six-tooltip-arrow-size) solid transparent;border-right:var(--six-tooltip-arrow-size) solid transparent}.tooltip-positioner[data-popper-placement=top-start] .tooltip::after{left:var(--six-tooltip-arrow-start-end-offset)}.tooltip-positioner[data-popper-placement=top-end] .tooltip::after{right:var(--six-tooltip-arrow-start-end-offset);left:auto}.tooltip-positioner[data-popper-placement^=left] .tooltip::after{top:calc(50% - var(--six-tooltip-arrow-size));left:100%;border-left:var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);border-top:var(--six-tooltip-arrow-size) solid transparent;border-bottom:var(--six-tooltip-arrow-size) solid transparent}.tooltip-positioner[data-popper-placement=left-start] .tooltip::after{top:var(--six-tooltip-arrow-start-end-offset)}.tooltip-positioner[data-popper-placement=left-end] .tooltip::after{top:auto;bottom:var(--six-tooltip-arrow-start-end-offset)}.tooltip-positioner[data-popper-placement^=right] .tooltip::after{top:calc(50% - var(--six-tooltip-arrow-size));right:100%;border-right:var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);border-top:var(--six-tooltip-arrow-size) solid transparent;border-bottom:var(--six-tooltip-arrow-size) solid transparent}.tooltip-positioner[data-popper-placement=right-start] .tooltip::after{top:var(--six-tooltip-arrow-start-end-offset)}.tooltip-positioner[data-popper-placement=right-end] .tooltip::after{top:auto;bottom:var(--six-tooltip-arrow-start-end-offset)}";
var SixTooltipStyle0 = sixTooltipCss;

let id = 0;
/**
 * @since 1.0
 * @status stable
 *
 * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.
 *
 * @slot - The tooltip's target element. Only the first element will be used as the target.
 * @slot content - The tooltip's content. Alternatively, you can use the content prop.
 *
 * @part base - The component's base wrapper.
 */
class SixTooltip {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sixShow = createEvent(this, "six-tooltip-show", 7);
        this.sixAfterShow = createEvent(this, "six-tooltip-after-show", 7);
        this.sixHide = createEvent(this, "six-tooltip-hide", 7);
        this.sixAfterHide = createEvent(this, "six-tooltip-after-hide", 7);
        this.componentId = `tooltip-${++id}`;
        this.isVisible = false;
        this.handleBlur = () => {
            if (this.hasTrigger('focus')) {
                this.hide();
            }
        };
        this.handleClick = () => {
            if (this.hasTrigger('click')) {
                this.open ? this.hide() : this.show();
            }
        };
        this.handleFocus = () => {
            if (this.hasTrigger('focus')) {
                this.show();
            }
        };
        this.handleKeyDown = (event) => {
            // Pressing escape when the target element has focus should dismiss the tooltip
            if (this.open && event.key === 'Escape') {
                event.stopPropagation();
                this.hide();
            }
        };
        this.handleMouseOver = () => {
            if (this.hasTrigger('hover')) {
                this.show();
            }
        };
        this.handleMouseOut = () => {
            if (this.hasTrigger('hover')) {
                this.hide();
            }
        };
        this.handleSlotChange = () => {
            const oldTarget = this.target;
            const newTarget = this.getTarget();
            if (newTarget !== oldTarget) {
                if (oldTarget != null) {
                    oldTarget.removeAttribute('aria-describedby');
                }
                newTarget.setAttribute('aria-describedby', this.componentId);
            }
        };
        this.content = '';
        this.placement = 'top';
        this.disabled = false;
        this.distance = 10;
        this.open = false;
        this.skidding = 0;
        this.trigger = 'hover focus';
    }
    handleOpenChange() {
        this.open ? this.show() : this.hide();
    }
    componentDidLoad() {
        if (this.tooltipPositioner == null)
            return;
        this.target = this.getTarget();
        this.popover = new Popover(this.target, this.tooltipPositioner, { strategy: 'fixed' });
        this.syncOptions();
        this.host.addEventListener('blur', this.handleBlur, true);
        this.host.addEventListener('click', this.handleClick, true);
        this.host.addEventListener('focus', this.handleFocus, true);
        // Show on init if open
        this.tooltipPositioner.hidden = !this.open;
        if (this.open) {
            this.show();
        }
    }
    componentDidUpdate() {
        this.syncOptions();
    }
    disconnectedCallback() {
        if (this.popover != null) {
            this.popover.destroy();
        }
        this.host.removeEventListener('blur', this.handleBlur, true);
        this.host.removeEventListener('click', this.handleClick, true);
        this.host.removeEventListener('focus', this.handleFocus, true);
    }
    /** Shows the tooltip. */
    async show() {
        var _a;
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (this.isVisible || this.disabled) {
            return;
        }
        const sixShow = this.sixShow.emit();
        if (sixShow.defaultPrevented) {
            this.open = false;
            return;
        }
        this.isVisible = true;
        this.open = true;
        (_a = this.popover) === null || _a === void 0 ? void 0 : _a.show();
    }
    /** Shows the tooltip. */
    async hide() {
        var _a;
        // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher
        if (!this.isVisible || this.disabled) {
            return;
        }
        const sixHide = this.sixHide.emit();
        if (sixHide.defaultPrevented) {
            this.open = true;
            return;
        }
        this.isVisible = false;
        this.open = false;
        (_a = this.popover) === null || _a === void 0 ? void 0 : _a.hide();
    }
    getTarget() {
        // Get the first child that isn't a <style> or content slot
        const target = [...this.host.children].find((el) => el.tagName.toLowerCase() !== 'style' && el.getAttribute('slot') !== 'content');
        if (target == null) {
            throw new Error('Invalid tooltip target: no child element was found.');
        }
        return target;
    }
    hasTrigger(triggerType) {
        const triggers = this.trigger.split(' ');
        return triggers.includes(triggerType);
    }
    syncOptions() {
        if (this.popover == null)
            return;
        this.popover.setOptions({
            placement: this.placement,
            distance: this.distance,
            skidding: this.skidding,
            transitionElement: this.tooltip,
            onAfterHide: () => this.sixAfterHide.emit(),
            onAfterShow: () => this.sixAfterShow.emit(),
        });
    }
    render() {
        return (hAsync(Host, { key: '0c037af1caf49be12bd9bd41273ad0d00a72dc6c', onKeyDown: this.handleKeyDown, onMouseOver: this.handleMouseOver, onMouseOut: this.handleMouseOut }, hAsync("slot", { key: 'd991ca7e7d3caddaf7bd274a400593c70d3b7376', onSlotchange: this.handleSlotChange }), hAsync("div", { key: '44976c3096d310cb2e0633c3fb44afbdace674ac', ref: (el) => (this.tooltipPositioner = el), class: "tooltip-positioner" }, hAsync("div", { key: '2bf5dab127dfe9d28dacae6a821304279c925744', part: "base", ref: (el) => (this.tooltip = el), id: this.componentId, class: {
                tooltip: true,
                'tooltip--open': this.open,
            }, role: "tooltip", "aria-hidden": this.open ? 'false' : 'true' }, hAsync("slot", { key: '347387df00ef711d31bbff96798474edea3f030e', name: "content" }, this.content)))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "open": ["handleOpenChange"]
    }; }
    static get style() { return SixTooltipStyle0; }
    static get cmpMeta() { return {
        "$flags$": 9,
        "$tagName$": "six-tooltip",
        "$members$": {
            "content": [1],
            "placement": [1],
            "disabled": [4],
            "distance": [2],
            "open": [1540],
            "skidding": [2],
            "trigger": [1],
            "show": [64],
            "hide": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["open", "open"]]
    }; }
}

registerComponents([
  SixAlert,
  SixAvatar,
  SixBadge,
  SixButton,
  SixCard,
  SixCheckbox,
  SixDatepicker,
  SixDetails,
  SixDialog,
  SixDrawer,
  SixDropdown,
  SixError,
  SixErrorPage,
  SixFileList,
  SixFileListItem,
  SixFileUpload,
  SixFooter,
  SixGroupLabel,
  SixHeader,
  SixIcon,
  SixIconButton,
  SixInput,
  SixItemPicker,
  SixLanguageSwitcher,
  SixLayoutGrid,
  SixMainContainer,
  SixMenu,
  SixMenuDivider,
  SixMenuItem,
  SixMenuLabel,
  SixPicto,
  SixProgressBar,
  SixProgressRing,
  SixRadio,
  SixRange,
  SixRoot,
  SixSearchField,
  SixSelect,
  SixSidebar,
  SixSidebarItem,
  SixSidebarItemGroup,
  SixSpinner,
  SixStageIndicator,
  SixSwitch,
  SixTab,
  SixTabGroup,
  SixTabPanel,
  SixTag,
  SixTextarea,
  SixTile,
  SixTimepicker,
  SixTooltip,
]);

exports.hydrateApp = hydrateApp;


    /*hydrateAppClosure end*/
    hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);
  }

  hydrateAppClosure($stencilWindow);
}

// src/app-data/index.ts
var BUILD = {
  allRenderFn: false,
  cmpDidLoad: true,
  cmpDidUnload: false,
  cmpDidUpdate: true,
  cmpDidRender: true,
  cmpWillLoad: true,
  cmpWillUpdate: true,
  cmpWillRender: true,
  connectedCallback: true,
  disconnectedCallback: true,
  element: true,
  event: true,
  hasRenderFn: true,
  lifecycle: true,
  hostListener: true,
  hostListenerTargetWindow: true,
  hostListenerTargetDocument: true,
  hostListenerTargetBody: true,
  hostListenerTargetParent: false,
  hostListenerTarget: true,
  member: true,
  method: true,
  mode: true,
  observeAttribute: true,
  prop: true,
  propMutable: true,
  reflect: true,
  scoped: true,
  shadowDom: true,
  slot: true,
  cssAnnotations: true,
  state: true,
  style: true,
  formAssociated: false,
  svg: true,
  updatable: true,
  vdomAttribute: true,
  vdomXlink: true,
  vdomClass: true,
  vdomFunctional: true,
  vdomKey: true,
  vdomListener: true,
  vdomRef: true,
  vdomPropOrAttr: true,
  vdomRender: true,
  vdomStyle: true,
  vdomText: true,
  watchCallback: true,
  taskQueue: true,
  hotModuleReplacement: false,
  isDebug: false,
  isDev: false,
  isTesting: false,
  hydrateServerSide: false,
  hydrateClientSide: false,
  lifecycleDOMEvents: false,
  lazyLoad: false,
  profile: false,
  slotRelocation: true,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  appendChildSlotFix: false,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  cloneNodeFix: false,
  hydratedAttribute: false,
  hydratedClass: true,
  // TODO(STENCIL-1305): remove this option
  scriptDataOpts: false,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  scopedSlotTextContentFix: false,
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  shadowDomShim: false,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  slotChildNodesFix: false,
  invisiblePrehydration: true,
  propBoolean: true,
  propNumber: true,
  propString: true,
  constructableCSS: true,
  cmpShouldUpdate: true,
  devTools: false,
  shadowDelegatesFocus: true,
  initializeNextTick: false,
  asyncLoading: true,
  asyncQueue: false,
  transformTagName: false,
  attachStyles: true,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  experimentalSlotFixes: false
};
var Env = {};
var NAMESPACE = (
  /* default */
  "app"
);

/*
 Stencil Hydrate Runner v4.22.0 | MIT Licensed | https://stenciljs.com
 */
var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// src/runtime/runtime-constants.ts
var CONTENT_REF_ID = "r";
var ORG_LOCATION_ID = "o";
var SLOT_NODE_ID = "s";
var TEXT_NODE_ID = "t";
var HYDRATE_ID = "s-id";
var XLINK_NS = "http://www.w3.org/1999/xlink";

// src/mock-doc/attribute.ts
var attrHandler = {
  get(obj, prop) {
    if (prop in obj) {
      return obj[prop];
    }
    if (typeof prop !== "symbol" && !isNaN(prop)) {
      return obj.__items[prop];
    }
    return void 0;
  }
};
var createAttributeProxy = (caseInsensitive) => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);
var MockAttributeMap = class {
  constructor(caseInsensitive = false) {
    this.caseInsensitive = caseInsensitive;
    this.__items = [];
  }
  get length() {
    return this.__items.length;
  }
  item(index) {
    return this.__items[index] || null;
  }
  setNamedItem(attr) {
    attr.namespaceURI = null;
    this.setNamedItemNS(attr);
  }
  setNamedItemNS(attr) {
    if (attr != null && attr.value != null) {
      attr.value = String(attr.value);
    }
    const existingAttr = this.__items.find((a) => a.name === attr.name && a.namespaceURI === attr.namespaceURI);
    if (existingAttr != null) {
      existingAttr.value = attr.value;
    } else {
      this.__items.push(attr);
    }
  }
  getNamedItem(attrName) {
    if (this.caseInsensitive) {
      attrName = attrName.toLowerCase();
    }
    return this.getNamedItemNS(null, attrName);
  }
  getNamedItemNS(namespaceURI, attrName) {
    namespaceURI = getNamespaceURI(namespaceURI);
    return this.__items.find((attr) => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null;
  }
  removeNamedItem(attr) {
    this.removeNamedItemNS(attr);
  }
  removeNamedItemNS(attr) {
    for (let i = 0, ii = this.__items.length; i < ii; i++) {
      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {
        this.__items.splice(i, 1);
        break;
      }
    }
  }
  [Symbol.iterator]() {
    let i = 0;
    return {
      next: () => ({
        done: i === this.length,
        value: this.item(i++)
      })
    };
  }
  get [Symbol.toStringTag]() {
    return "MockAttributeMap";
  }
};
function getNamespaceURI(namespaceURI) {
  return namespaceURI === XLINK_NS ? null : namespaceURI;
}
function cloneAttributes(srcAttrs, sortByName = false) {
  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);
  if (srcAttrs != null) {
    const attrLen = srcAttrs.length;
    if (sortByName && attrLen > 1) {
      const sortedAttrs = [];
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        sortedAttrs.push(dstAttr);
      }
      sortedAttrs.sort(sortAttributes).forEach((attr) => {
        dstAttrs.setNamedItemNS(attr);
      });
    } else {
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        dstAttrs.setNamedItemNS(dstAttr);
      }
    }
  }
  return dstAttrs;
}
function sortAttributes(a, b) {
  if (a.name < b.name) return -1;
  if (a.name > b.name) return 1;
  return 0;
}
var MockAttr = class {
  constructor(attrName, attrValue, namespaceURI = null) {
    this._name = attrName;
    this._value = String(attrValue);
    this._namespaceURI = namespaceURI;
  }
  get name() {
    return this._name;
  }
  set name(value) {
    this._name = value;
  }
  get value() {
    return this._value;
  }
  set value(value) {
    this._value = String(value);
  }
  get nodeName() {
    return this._name;
  }
  set nodeName(value) {
    this._name = value;
  }
  get nodeValue() {
    return this._value;
  }
  set nodeValue(value) {
    this._value = String(value);
  }
  get namespaceURI() {
    return this._namespaceURI;
  }
  set namespaceURI(namespaceURI) {
    this._namespaceURI = namespaceURI;
  }
};

// src/mock-doc/class-list.ts
var MockClassList = class {
  constructor(elm) {
    this.elm = elm;
  }
  add(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      if (clsNames.includes(className) === false) {
        clsNames.push(className);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, "class", clsNames.join(" "));
    }
  }
  remove(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      const index = clsNames.indexOf(className);
      if (index > -1) {
        clsNames.splice(index, 1);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, "class", clsNames.filter((c) => c.length > 0).join(" "));
    }
  }
  contains(className) {
    className = String(className);
    return getItems(this.elm).includes(className);
  }
  toggle(className) {
    className = String(className);
    if (this.contains(className) === true) {
      this.remove(className);
    } else {
      this.add(className);
    }
  }
  get length() {
    return getItems(this.elm).length;
  }
  item(index) {
    return getItems(this.elm)[index];
  }
  toString() {
    return getItems(this.elm).join(" ");
  }
};
function validateClass(className) {
  if (className === "") {
    throw new Error("The token provided must not be empty.");
  }
  if (/\s/.test(className)) {
    throw new Error(
      `The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`
    );
  }
}
function getItems(elm) {
  const className = elm.getAttribute("class");
  if (typeof className === "string" && className.length > 0) {
    return className.trim().split(" ").filter((c) => c.length > 0);
  }
  return [];
}

// src/mock-doc/css-style-declaration.ts
var MockCSSStyleDeclaration = class {
  constructor() {
    this._styles = /* @__PURE__ */ new Map();
  }
  setProperty(prop, value) {
    prop = jsCaseToCssCase(prop);
    if (value == null || value === "") {
      this._styles.delete(prop);
    } else {
      this._styles.set(prop, String(value));
    }
  }
  getPropertyValue(prop) {
    prop = jsCaseToCssCase(prop);
    return String(this._styles.get(prop) || "");
  }
  removeProperty(prop) {
    prop = jsCaseToCssCase(prop);
    this._styles.delete(prop);
  }
  get length() {
    return this._styles.size;
  }
  get cssText() {
    const cssText = [];
    this._styles.forEach((value, prop) => {
      cssText.push(`${prop}: ${value};`);
    });
    return cssText.join(" ").trim();
  }
  set cssText(cssText) {
    if (cssText == null || cssText === "") {
      this._styles.clear();
      return;
    }
    cssText.split(";").forEach((rule) => {
      rule = rule.trim();
      if (rule.length > 0) {
        const splt = rule.split(":");
        if (splt.length > 1) {
          const prop = splt[0].trim();
          const value = splt.slice(1).join(":").trim();
          if (prop !== "" && value !== "") {
            this._styles.set(jsCaseToCssCase(prop), value);
          }
        }
      }
    });
  }
};
function createCSSStyleDeclaration() {
  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);
}
var cssProxyHandler = {
  get(cssStyle, prop) {
    if (prop in cssStyle) {
      return cssStyle[prop];
    }
    prop = cssCaseToJsCase(prop);
    return cssStyle.getPropertyValue(prop);
  },
  set(cssStyle, prop, value) {
    if (prop in cssStyle) {
      cssStyle[prop] = value;
    } else {
      cssStyle.setProperty(prop, value);
    }
    return true;
  }
};
function cssCaseToJsCase(str) {
  if (str.length > 1 && str.includes("-") === true) {
    str = str.toLowerCase().split("-").map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1)).join("");
    str = str.slice(0, 1).toLowerCase() + str.slice(1);
  }
  return str;
}
function jsCaseToCssCase(str) {
  if (str.length > 1 && str.includes("-") === false && /[A-Z]/.test(str) === true) {
    str = str.replace(/([A-Z])/g, (g) => " " + g[0]).trim().replace(/ /g, "-").toLowerCase();
  }
  return str;
}

// src/mock-doc/custom-element-registry.ts
var MockCustomElementRegistry = class {
  constructor(win2) {
    this.win = win2;
  }
  define(tagName, cstr, options) {
    if (tagName.toLowerCase() !== tagName) {
      throw new Error(
        `Failed to execute 'define' on 'CustomElementRegistry': "${tagName}" is not a valid custom element name`
      );
    }
    if (this.__registry == null) {
      this.__registry = /* @__PURE__ */ new Map();
    }
    this.__registry.set(tagName, { cstr, options });
    if (this.__whenDefined != null) {
      const whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns != null) {
        whenDefinedResolveFns.forEach((whenDefinedResolveFn) => {
          whenDefinedResolveFn();
        });
        whenDefinedResolveFns.length = 0;
        this.__whenDefined.delete(tagName);
      }
    }
    const doc2 = this.win.document;
    if (doc2 != null) {
      const hosts = doc2.querySelectorAll(tagName);
      hosts.forEach((host) => {
        if (upgradedElements.has(host) === false) {
          tempDisableCallbacks.add(doc2);
          const upgradedCmp = createCustomElement(this, doc2, tagName);
          for (let i = 0; i < host.childNodes.length; i++) {
            const childNode = host.childNodes[i];
            childNode.remove();
            upgradedCmp.appendChild(childNode);
          }
          tempDisableCallbacks.delete(doc2);
          if (proxyElements.has(host)) {
            proxyElements.set(host, upgradedCmp);
          }
        }
        fireConnectedCallback(host);
      });
    }
  }
  get(tagName) {
    if (this.__registry != null) {
      const def = this.__registry.get(tagName.toLowerCase());
      if (def != null) {
        return def.cstr;
      }
    }
    return void 0;
  }
  getName(cstr) {
    for (const [tagName, def] of this.__registry.entries()) {
      if (def.cstr === cstr) {
        return tagName;
      }
    }
    return void 0;
  }
  upgrade(_rootNode) {
  }
  clear() {
    if (this.__registry != null) {
      this.__registry.clear();
    }
    if (this.__whenDefined != null) {
      this.__whenDefined.clear();
    }
  }
  whenDefined(tagName) {
    tagName = tagName.toLowerCase();
    if (this.__registry != null && this.__registry.has(tagName) === true) {
      return Promise.resolve(this.__registry.get(tagName).cstr);
    }
    return new Promise((resolve) => {
      if (this.__whenDefined == null) {
        this.__whenDefined = /* @__PURE__ */ new Map();
      }
      let whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns == null) {
        whenDefinedResolveFns = [];
        this.__whenDefined.set(tagName, whenDefinedResolveFns);
      }
      whenDefinedResolveFns.push(resolve);
    });
  }
};
function createCustomElement(customElements2, ownerDocument, tagName) {
  const Cstr = customElements2.get(tagName);
  if (Cstr != null) {
    const cmp = new Cstr(ownerDocument);
    cmp.nodeName = tagName.toUpperCase();
    upgradedElements.add(cmp);
    return cmp;
  }
  const host = new Proxy(
    {},
    {
      get(obj, prop) {
        const elm2 = proxyElements.get(host);
        if (elm2 != null) {
          return elm2[prop];
        }
        return obj[prop];
      },
      set(obj, prop, val) {
        const elm2 = proxyElements.get(host);
        if (elm2 != null) {
          elm2[prop] = val;
        } else {
          obj[prop] = val;
        }
        return true;
      },
      has(obj, prop) {
        const elm2 = proxyElements.get(host);
        if (prop in elm2) {
          return true;
        }
        if (prop in obj) {
          return true;
        }
        return false;
      }
    }
  );
  const elm = new MockHTMLElement(ownerDocument, tagName);
  proxyElements.set(host, elm);
  return host;
}
var proxyElements = /* @__PURE__ */ new WeakMap();
var upgradedElements = /* @__PURE__ */ new WeakSet();
function connectNode(ownerDocument, node) {
  node.ownerDocument = ownerDocument;
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (ownerDocument != null && node.nodeName.includes("-")) {
      const win2 = ownerDocument.defaultView;
      if (win2 != null && typeof node.connectedCallback === "function" && node.isConnected) {
        fireConnectedCallback(node);
      }
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null) {
        shadowRoot.childNodes.forEach((childNode) => {
          connectNode(ownerDocument, childNode);
        });
      }
    }
    node.childNodes.forEach((childNode) => {
      connectNode(ownerDocument, childNode);
    });
  } else {
    node.childNodes.forEach((childNode) => {
      childNode.ownerDocument = ownerDocument;
    });
  }
}
function fireConnectedCallback(node) {
  if (typeof node.connectedCallback === "function") {
    if (tempDisableCallbacks.has(node.ownerDocument) === false) {
      try {
        node.connectedCallback();
      } catch (e) {
        console.error(e);
      }
    }
  }
}
function disconnectNode(node) {
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (node.nodeName.includes("-") === true && typeof node.disconnectedCallback === "function") {
      if (tempDisableCallbacks.has(node.ownerDocument) === false) {
        try {
          node.disconnectedCallback();
        } catch (e) {
          console.error(e);
        }
      }
    }
    node.childNodes.forEach(disconnectNode);
  }
}
function attributeChanged(node, attrName, oldValue, newValue) {
  attrName = attrName.toLowerCase();
  const observedAttributes = node.constructor.observedAttributes;
  if (Array.isArray(observedAttributes) === true && observedAttributes.some((obs) => obs.toLowerCase() === attrName) === true) {
    try {
      node.attributeChangedCallback(attrName, oldValue, newValue);
    } catch (e) {
      console.error(e);
    }
  }
}
function checkAttributeChanged(node) {
  return node.nodeName.includes("-") === true && typeof node.attributeChangedCallback === "function";
}
var tempDisableCallbacks = /* @__PURE__ */ new Set();

// src/mock-doc/dataset.ts
function dataset(elm) {
  const ds = {};
  const attributes = elm.attributes;
  const attrLen = attributes.length;
  for (let i = 0; i < attrLen; i++) {
    const attr = attributes.item(i);
    const nodeName = attr.nodeName;
    if (nodeName.startsWith("data-")) {
      ds[dashToPascalCase(nodeName)] = attr.nodeValue;
    }
  }
  return new Proxy(ds, {
    get(_obj, camelCaseProp) {
      return ds[camelCaseProp];
    },
    set(_obj, camelCaseProp, value) {
      const dataAttr = toDataAttribute(camelCaseProp);
      elm.setAttribute(dataAttr, value);
      return true;
    }
  });
}
function toDataAttribute(str) {
  return "data-" + String(str).replace(/([A-Z0-9])/g, (g) => " " + g[0]).trim().replace(/ /g, "-").toLowerCase();
}
function dashToPascalCase(str) {
  str = String(str).slice(5);
  return str.split("-").map((segment, index) => {
    if (index === 0) {
      return segment.charAt(0).toLowerCase() + segment.slice(1);
    }
    return segment.charAt(0).toUpperCase() + segment.slice(1);
  }).join("");
}

// src/mock-doc/event.ts
var MockEvent = class {
  constructor(type, eventInitDict) {
    this.bubbles = false;
    this.cancelBubble = false;
    this.cancelable = false;
    this.composed = false;
    this.currentTarget = null;
    this.defaultPrevented = false;
    this.srcElement = null;
    this.target = null;
    if (typeof type !== "string") {
      throw new Error(`Event type required`);
    }
    this.type = type;
    this.timeStamp = Date.now();
    if (eventInitDict != null) {
      Object.assign(this, eventInitDict);
    }
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
  stopImmediatePropagation() {
    this.cancelBubble = true;
  }
  /**
   * @ref https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath
   * @returns a composed path of the event
   */
  composedPath() {
    const composedPath = [];
    let currentElement = this.target;
    while (currentElement) {
      composedPath.push(currentElement);
      if (!currentElement.parentElement && currentElement.nodeName === "#document" /* DOCUMENT_NODE */) {
        composedPath.push(currentElement.defaultView);
        break;
      }
      if (currentElement.parentElement == null && currentElement.tagName === "HTML") {
        currentElement = currentElement.ownerDocument;
      } else {
        currentElement = currentElement.parentElement;
      }
    }
    return composedPath;
  }
};
var MockCustomEvent = class extends MockEvent {
  constructor(type, customEventInitDic) {
    super(type);
    this.detail = null;
    if (customEventInitDic != null) {
      Object.assign(this, customEventInitDic);
    }
  }
};
var MockKeyboardEvent = class extends MockEvent {
  constructor(type, keyboardEventInitDic) {
    super(type);
    this.code = "";
    this.key = "";
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.location = 0;
    this.repeat = false;
    if (keyboardEventInitDic != null) {
      Object.assign(this, keyboardEventInitDic);
    }
  }
};
var MockMouseEvent = class extends MockEvent {
  constructor(type, mouseEventInitDic) {
    super(type);
    this.screenX = 0;
    this.screenY = 0;
    this.clientX = 0;
    this.clientY = 0;
    this.ctrlKey = false;
    this.shiftKey = false;
    this.altKey = false;
    this.metaKey = false;
    this.button = 0;
    this.buttons = 0;
    this.relatedTarget = null;
    if (mouseEventInitDic != null) {
      Object.assign(this, mouseEventInitDic);
    }
  }
};
var MockUIEvent = class extends MockEvent {
  constructor(type, uiEventInitDic) {
    super(type);
    this.detail = null;
    this.view = null;
    if (uiEventInitDic != null) {
      Object.assign(this, uiEventInitDic);
    }
  }
};
var MockFocusEvent = class extends MockUIEvent {
  constructor(type, focusEventInitDic) {
    super(type);
    this.relatedTarget = null;
    if (focusEventInitDic != null) {
      Object.assign(this, focusEventInitDic);
    }
  }
};
var MockEventListener = class {
  constructor(type, handler) {
    this.type = type;
    this.handler = handler;
  }
};
function addEventListener(elm, type, handler) {
  const target = elm;
  if (target.__listeners == null) {
    target.__listeners = [];
  }
  target.__listeners.push(new MockEventListener(type, handler));
}
function removeEventListener(elm, type, handler) {
  const target = elm;
  if (target != null && Array.isArray(target.__listeners) === true) {
    const elmListener = target.__listeners.find((e) => e.type === type && e.handler === handler);
    if (elmListener != null) {
      const index = target.__listeners.indexOf(elmListener);
      target.__listeners.splice(index, 1);
    }
  }
}
function resetEventListeners(target) {
  if (target != null && target.__listeners != null) {
    target.__listeners = null;
  }
}
function triggerEventListener(elm, ev) {
  if (elm == null || ev.cancelBubble === true) {
    return;
  }
  const target = elm;
  ev.currentTarget = elm;
  if (Array.isArray(target.__listeners) === true) {
    const listeners = target.__listeners.filter((e) => e.type === ev.type);
    listeners.forEach((listener) => {
      try {
        listener.handler.call(target, ev);
      } catch (err2) {
        console.error(err2);
      }
    });
  }
  if (ev.bubbles === false) {
    return;
  }
  if (elm.nodeName === "#document" /* DOCUMENT_NODE */) {
    triggerEventListener(elm.defaultView, ev);
  } else if (elm.parentElement == null && elm.tagName === "HTML") {
    triggerEventListener(elm.ownerDocument, ev);
  } else {
    triggerEventListener(elm.parentElement, ev);
  }
}
function dispatchEvent(currentTarget, ev) {
  ev.target = currentTarget;
  triggerEventListener(currentTarget, ev);
  return true;
}

// node_modules/parse5/dist/common/unicode.js
var UNDEFINED_CODE_POINTS = /* @__PURE__ */ new Set([
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
]);
var REPLACEMENT_CHARACTER = "\uFFFD";
var CODE_POINTS;
(function(CODE_POINTS2) {
  CODE_POINTS2[CODE_POINTS2["EOF"] = -1] = "EOF";
  CODE_POINTS2[CODE_POINTS2["NULL"] = 0] = "NULL";
  CODE_POINTS2[CODE_POINTS2["TABULATION"] = 9] = "TABULATION";
  CODE_POINTS2[CODE_POINTS2["CARRIAGE_RETURN"] = 13] = "CARRIAGE_RETURN";
  CODE_POINTS2[CODE_POINTS2["LINE_FEED"] = 10] = "LINE_FEED";
  CODE_POINTS2[CODE_POINTS2["FORM_FEED"] = 12] = "FORM_FEED";
  CODE_POINTS2[CODE_POINTS2["SPACE"] = 32] = "SPACE";
  CODE_POINTS2[CODE_POINTS2["EXCLAMATION_MARK"] = 33] = "EXCLAMATION_MARK";
  CODE_POINTS2[CODE_POINTS2["QUOTATION_MARK"] = 34] = "QUOTATION_MARK";
  CODE_POINTS2[CODE_POINTS2["NUMBER_SIGN"] = 35] = "NUMBER_SIGN";
  CODE_POINTS2[CODE_POINTS2["AMPERSAND"] = 38] = "AMPERSAND";
  CODE_POINTS2[CODE_POINTS2["APOSTROPHE"] = 39] = "APOSTROPHE";
  CODE_POINTS2[CODE_POINTS2["HYPHEN_MINUS"] = 45] = "HYPHEN_MINUS";
  CODE_POINTS2[CODE_POINTS2["SOLIDUS"] = 47] = "SOLIDUS";
  CODE_POINTS2[CODE_POINTS2["DIGIT_0"] = 48] = "DIGIT_0";
  CODE_POINTS2[CODE_POINTS2["DIGIT_9"] = 57] = "DIGIT_9";
  CODE_POINTS2[CODE_POINTS2["SEMICOLON"] = 59] = "SEMICOLON";
  CODE_POINTS2[CODE_POINTS2["LESS_THAN_SIGN"] = 60] = "LESS_THAN_SIGN";
  CODE_POINTS2[CODE_POINTS2["EQUALS_SIGN"] = 61] = "EQUALS_SIGN";
  CODE_POINTS2[CODE_POINTS2["GREATER_THAN_SIGN"] = 62] = "GREATER_THAN_SIGN";
  CODE_POINTS2[CODE_POINTS2["QUESTION_MARK"] = 63] = "QUESTION_MARK";
  CODE_POINTS2[CODE_POINTS2["LATIN_CAPITAL_A"] = 65] = "LATIN_CAPITAL_A";
  CODE_POINTS2[CODE_POINTS2["LATIN_CAPITAL_F"] = 70] = "LATIN_CAPITAL_F";
  CODE_POINTS2[CODE_POINTS2["LATIN_CAPITAL_X"] = 88] = "LATIN_CAPITAL_X";
  CODE_POINTS2[CODE_POINTS2["LATIN_CAPITAL_Z"] = 90] = "LATIN_CAPITAL_Z";
  CODE_POINTS2[CODE_POINTS2["RIGHT_SQUARE_BRACKET"] = 93] = "RIGHT_SQUARE_BRACKET";
  CODE_POINTS2[CODE_POINTS2["GRAVE_ACCENT"] = 96] = "GRAVE_ACCENT";
  CODE_POINTS2[CODE_POINTS2["LATIN_SMALL_A"] = 97] = "LATIN_SMALL_A";
  CODE_POINTS2[CODE_POINTS2["LATIN_SMALL_F"] = 102] = "LATIN_SMALL_F";
  CODE_POINTS2[CODE_POINTS2["LATIN_SMALL_X"] = 120] = "LATIN_SMALL_X";
  CODE_POINTS2[CODE_POINTS2["LATIN_SMALL_Z"] = 122] = "LATIN_SMALL_Z";
  CODE_POINTS2[CODE_POINTS2["REPLACEMENT_CHARACTER"] = 65533] = "REPLACEMENT_CHARACTER";
})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));
var SEQUENCES = {
  DASH_DASH: "--",
  CDATA_START: "[CDATA[",
  DOCTYPE: "doctype",
  SCRIPT: "script",
  PUBLIC: "public",
  SYSTEM: "system"
};
function isSurrogate(cp) {
  return cp >= 55296 && cp <= 57343;
}
function isSurrogatePair(cp) {
  return cp >= 56320 && cp <= 57343;
}
function getSurrogatePairCodePoint(cp1, cp2) {
  return (cp1 - 55296) * 1024 + 9216 + cp2;
}
function isControlCodePoint(cp) {
  return cp !== 32 && cp !== 10 && cp !== 13 && cp !== 9 && cp !== 12 && cp >= 1 && cp <= 31 || cp >= 127 && cp <= 159;
}
function isUndefinedCodePoint(cp) {
  return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);
}

// node_modules/parse5/dist/common/error-codes.js
var ERR;
(function(ERR2) {
  ERR2["controlCharacterInInputStream"] = "control-character-in-input-stream";
  ERR2["noncharacterInInputStream"] = "noncharacter-in-input-stream";
  ERR2["surrogateInInputStream"] = "surrogate-in-input-stream";
  ERR2["nonVoidHtmlElementStartTagWithTrailingSolidus"] = "non-void-html-element-start-tag-with-trailing-solidus";
  ERR2["endTagWithAttributes"] = "end-tag-with-attributes";
  ERR2["endTagWithTrailingSolidus"] = "end-tag-with-trailing-solidus";
  ERR2["unexpectedSolidusInTag"] = "unexpected-solidus-in-tag";
  ERR2["unexpectedNullCharacter"] = "unexpected-null-character";
  ERR2["unexpectedQuestionMarkInsteadOfTagName"] = "unexpected-question-mark-instead-of-tag-name";
  ERR2["invalidFirstCharacterOfTagName"] = "invalid-first-character-of-tag-name";
  ERR2["unexpectedEqualsSignBeforeAttributeName"] = "unexpected-equals-sign-before-attribute-name";
  ERR2["missingEndTagName"] = "missing-end-tag-name";
  ERR2["unexpectedCharacterInAttributeName"] = "unexpected-character-in-attribute-name";
  ERR2["unknownNamedCharacterReference"] = "unknown-named-character-reference";
  ERR2["missingSemicolonAfterCharacterReference"] = "missing-semicolon-after-character-reference";
  ERR2["unexpectedCharacterAfterDoctypeSystemIdentifier"] = "unexpected-character-after-doctype-system-identifier";
  ERR2["unexpectedCharacterInUnquotedAttributeValue"] = "unexpected-character-in-unquoted-attribute-value";
  ERR2["eofBeforeTagName"] = "eof-before-tag-name";
  ERR2["eofInTag"] = "eof-in-tag";
  ERR2["missingAttributeValue"] = "missing-attribute-value";
  ERR2["missingWhitespaceBetweenAttributes"] = "missing-whitespace-between-attributes";
  ERR2["missingWhitespaceAfterDoctypePublicKeyword"] = "missing-whitespace-after-doctype-public-keyword";
  ERR2["missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers"] = "missing-whitespace-between-doctype-public-and-system-identifiers";
  ERR2["missingWhitespaceAfterDoctypeSystemKeyword"] = "missing-whitespace-after-doctype-system-keyword";
  ERR2["missingQuoteBeforeDoctypePublicIdentifier"] = "missing-quote-before-doctype-public-identifier";
  ERR2["missingQuoteBeforeDoctypeSystemIdentifier"] = "missing-quote-before-doctype-system-identifier";
  ERR2["missingDoctypePublicIdentifier"] = "missing-doctype-public-identifier";
  ERR2["missingDoctypeSystemIdentifier"] = "missing-doctype-system-identifier";
  ERR2["abruptDoctypePublicIdentifier"] = "abrupt-doctype-public-identifier";
  ERR2["abruptDoctypeSystemIdentifier"] = "abrupt-doctype-system-identifier";
  ERR2["cdataInHtmlContent"] = "cdata-in-html-content";
  ERR2["incorrectlyOpenedComment"] = "incorrectly-opened-comment";
  ERR2["eofInScriptHtmlCommentLikeText"] = "eof-in-script-html-comment-like-text";
  ERR2["eofInDoctype"] = "eof-in-doctype";
  ERR2["nestedComment"] = "nested-comment";
  ERR2["abruptClosingOfEmptyComment"] = "abrupt-closing-of-empty-comment";
  ERR2["eofInComment"] = "eof-in-comment";
  ERR2["incorrectlyClosedComment"] = "incorrectly-closed-comment";
  ERR2["eofInCdata"] = "eof-in-cdata";
  ERR2["absenceOfDigitsInNumericCharacterReference"] = "absence-of-digits-in-numeric-character-reference";
  ERR2["nullCharacterReference"] = "null-character-reference";
  ERR2["surrogateCharacterReference"] = "surrogate-character-reference";
  ERR2["characterReferenceOutsideUnicodeRange"] = "character-reference-outside-unicode-range";
  ERR2["controlCharacterReference"] = "control-character-reference";
  ERR2["noncharacterCharacterReference"] = "noncharacter-character-reference";
  ERR2["missingWhitespaceBeforeDoctypeName"] = "missing-whitespace-before-doctype-name";
  ERR2["missingDoctypeName"] = "missing-doctype-name";
  ERR2["invalidCharacterSequenceAfterDoctypeName"] = "invalid-character-sequence-after-doctype-name";
  ERR2["duplicateAttribute"] = "duplicate-attribute";
  ERR2["nonConformingDoctype"] = "non-conforming-doctype";
  ERR2["missingDoctype"] = "missing-doctype";
  ERR2["misplacedDoctype"] = "misplaced-doctype";
  ERR2["endTagWithoutMatchingOpenElement"] = "end-tag-without-matching-open-element";
  ERR2["closingOfElementWithOpenChildElements"] = "closing-of-element-with-open-child-elements";
  ERR2["disallowedContentInNoscriptInHead"] = "disallowed-content-in-noscript-in-head";
  ERR2["openElementsLeftAfterEof"] = "open-elements-left-after-eof";
  ERR2["abandonedHeadElementChild"] = "abandoned-head-element-child";
  ERR2["misplacedStartTagForHeadElement"] = "misplaced-start-tag-for-head-element";
  ERR2["nestedNoscriptInHead"] = "nested-noscript-in-head";
  ERR2["eofInElementThatCanContainOnlyText"] = "eof-in-element-that-can-contain-only-text";
})(ERR = ERR || (ERR = {}));

// node_modules/parse5/dist/tokenizer/preprocessor.js
var DEFAULT_BUFFER_WATERLINE = 1 << 16;
var Preprocessor = class {
  constructor(handler) {
    this.handler = handler;
    this.html = "";
    this.pos = -1;
    this.lastGapPos = -2;
    this.gapStack = [];
    this.skipNextNewLine = false;
    this.lastChunkWritten = false;
    this.endOfChunkHit = false;
    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
    this.isEol = false;
    this.lineStartPos = 0;
    this.droppedBufferSize = 0;
    this.line = 1;
    this.lastErrOffset = -1;
  }
  /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */
  get col() {
    return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);
  }
  get offset() {
    return this.droppedBufferSize + this.pos;
  }
  getError(code) {
    const { line, col, offset } = this;
    return {
      code,
      startLine: line,
      endLine: line,
      startCol: col,
      endCol: col,
      startOffset: offset,
      endOffset: offset
    };
  }
  _err(code) {
    if (this.handler.onParseError && this.lastErrOffset !== this.offset) {
      this.lastErrOffset = this.offset;
      this.handler.onParseError(this.getError(code));
    }
  }
  _addGap() {
    this.gapStack.push(this.lastGapPos);
    this.lastGapPos = this.pos;
  }
  _processSurrogate(cp) {
    if (this.pos !== this.html.length - 1) {
      const nextCp = this.html.charCodeAt(this.pos + 1);
      if (isSurrogatePair(nextCp)) {
        this.pos++;
        this._addGap();
        return getSurrogatePairCodePoint(cp, nextCp);
      }
    } else if (!this.lastChunkWritten) {
      this.endOfChunkHit = true;
      return CODE_POINTS.EOF;
    }
    this._err(ERR.surrogateInInputStream);
    return cp;
  }
  willDropParsedChunk() {
    return this.pos > this.bufferWaterline;
  }
  dropParsedChunk() {
    if (this.willDropParsedChunk()) {
      this.html = this.html.substring(this.pos);
      this.lineStartPos -= this.pos;
      this.droppedBufferSize += this.pos;
      this.pos = 0;
      this.lastGapPos = -2;
      this.gapStack.length = 0;
    }
  }
  write(chunk, isLastChunk) {
    if (this.html.length > 0) {
      this.html += chunk;
    } else {
      this.html = chunk;
    }
    this.endOfChunkHit = false;
    this.lastChunkWritten = isLastChunk;
  }
  insertHtmlAtCurrentPos(chunk) {
    this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);
    this.endOfChunkHit = false;
  }
  startsWith(pattern, caseSensitive) {
    if (this.pos + pattern.length > this.html.length) {
      this.endOfChunkHit = !this.lastChunkWritten;
      return false;
    }
    if (caseSensitive) {
      return this.html.startsWith(pattern, this.pos);
    }
    for (let i = 0; i < pattern.length; i++) {
      const cp = this.html.charCodeAt(this.pos + i) | 32;
      if (cp !== pattern.charCodeAt(i)) {
        return false;
      }
    }
    return true;
  }
  peek(offset) {
    const pos = this.pos + offset;
    if (pos >= this.html.length) {
      this.endOfChunkHit = !this.lastChunkWritten;
      return CODE_POINTS.EOF;
    }
    const code = this.html.charCodeAt(pos);
    return code === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code;
  }
  advance() {
    this.pos++;
    if (this.isEol) {
      this.isEol = false;
      this.line++;
      this.lineStartPos = this.pos;
    }
    if (this.pos >= this.html.length) {
      this.endOfChunkHit = !this.lastChunkWritten;
      return CODE_POINTS.EOF;
    }
    let cp = this.html.charCodeAt(this.pos);
    if (cp === CODE_POINTS.CARRIAGE_RETURN) {
      this.isEol = true;
      this.skipNextNewLine = true;
      return CODE_POINTS.LINE_FEED;
    }
    if (cp === CODE_POINTS.LINE_FEED) {
      this.isEol = true;
      if (this.skipNextNewLine) {
        this.line--;
        this.skipNextNewLine = false;
        this._addGap();
        return this.advance();
      }
    }
    this.skipNextNewLine = false;
    if (isSurrogate(cp)) {
      cp = this._processSurrogate(cp);
    }
    const isCommonValidRange = this.handler.onParseError === null || cp > 31 && cp < 127 || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.CARRIAGE_RETURN || cp > 159 && cp < 64976;
    if (!isCommonValidRange) {
      this._checkForProblematicCharacters(cp);
    }
    return cp;
  }
  _checkForProblematicCharacters(cp) {
    if (isControlCodePoint(cp)) {
      this._err(ERR.controlCharacterInInputStream);
    } else if (isUndefinedCodePoint(cp)) {
      this._err(ERR.noncharacterInInputStream);
    }
  }
  retreat(count) {
    this.pos -= count;
    while (this.pos < this.lastGapPos) {
      this.lastGapPos = this.gapStack.pop();
      this.pos--;
    }
    this.isEol = false;
  }
};

// node_modules/parse5/dist/common/token.js
var token_exports = {};
__export(token_exports, {
  TokenType: () => TokenType,
  getTokenAttr: () => getTokenAttr
});
var TokenType;
(function(TokenType2) {
  TokenType2[TokenType2["CHARACTER"] = 0] = "CHARACTER";
  TokenType2[TokenType2["NULL_CHARACTER"] = 1] = "NULL_CHARACTER";
  TokenType2[TokenType2["WHITESPACE_CHARACTER"] = 2] = "WHITESPACE_CHARACTER";
  TokenType2[TokenType2["START_TAG"] = 3] = "START_TAG";
  TokenType2[TokenType2["END_TAG"] = 4] = "END_TAG";
  TokenType2[TokenType2["COMMENT"] = 5] = "COMMENT";
  TokenType2[TokenType2["DOCTYPE"] = 6] = "DOCTYPE";
  TokenType2[TokenType2["EOF"] = 7] = "EOF";
  TokenType2[TokenType2["HIBERNATION"] = 8] = "HIBERNATION";
})(TokenType = TokenType || (TokenType = {}));
function getTokenAttr(token, attrName) {
  for (let i = token.attrs.length - 1; i >= 0; i--) {
    if (token.attrs[i].name === attrName) {
      return token.attrs[i].value;
    }
  }
  return null;
}

// node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default = new Uint16Array(
  // prettier-ignore
  '\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\u{1D504}rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\u{1D538}plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\u{1D49C}ign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\u{1D505}pf;\uC000\u{1D539}eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\u{1D49E}p\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\u{1D507}\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\u{1D53B}\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\u{1D49F}rok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\u{1D508}rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\u{1D53C}silon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\u{1D509}lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\u{1D53D}All;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\u{1D50A};\u62D9pf;\uC000\u{1D53E}eater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\u{1D4A2};\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\u{1D540}a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\u{1D50D}pf;\uC000\u{1D541}\u01E3\u07C7\0\u07CCr;\uC000\u{1D4A5}rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\u{1D50E}pf;\uC000\u{1D542}cr;\uC000\u{1D4A6}\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\u{1D50F}\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\u{1D543}er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\u{1D510}nusPlus;\u6213pf;\uC000\u{1D544}c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\u{1D511}\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\u{1D4A9}ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\u{1D512}rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\u{1D546}enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\u{1D4AA}ash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\u{1D513}i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\u{1D4AB};\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B"\u4022r;\uC000\u{1D514}pf;\u611Acr;\uC000\u{1D4AC}\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\u{1D516}ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\u{1D54A}\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\u{1D4AE}ar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\u{1D517}\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\u{1D54B}ipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\u{1D4AF}rok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\u{1D518}rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\u{1D54C}\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\u{1D4B0}ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\u{1D519}pf;\uC000\u{1D54D}cr;\uC000\u{1D4B1}dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\u{1D51A}pf;\uC000\u{1D54E}cr;\uC000\u{1D4B2}\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\u{1D51B};\u439Epf;\uC000\u{1D54F}cr;\uC000\u{1D4B3}\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\u{1D51C}pf;\uC000\u{1D550}cr;\uC000\u{1D4B4}ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\u{1D4B5}\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\u{1D51E}rave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\u{1D552}\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\u{1D4B6};\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\u{1D51F}g\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\u{1D553}\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\u{1D4B7}mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\u{1D520}\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\u{1D554}o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\u{1D4B8}\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\u{1D521}ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\u{1D555}\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\u{1D4B9};\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\u{1D522}\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\u{1D556}\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\u{1D523}lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\u{1D557}\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\u{1D4BB}\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\u{1D524}\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\u{1D558}\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\u{1D525}s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\u{1D559}bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\u{1D4BD}as\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\u{1D526}rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\u{1D55A}a;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\u{1D4BE}n\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\u{1D527}ath;\u4237pf;\uC000\u{1D55B}\u01E3\u23EC\0\u23F1r;\uC000\u{1D4BF}rcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\u{1D528}reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\u{1D55C}cr;\uC000\u{1D4C0}\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\u{1D529}\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\u{1D55D}us;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\u{1D4C1}m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\u{1D52A}o;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\u{1D55E}\u0100ct\u28F8\u28FDr;\uC000\u{1D4C2}pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\u{1D52B}\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\u{1D55F}\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\u{1D4C3}ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\u{1D52C}\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\u{1D560}\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\u{1D52D}\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\u{1D561}nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\u{1D4C5};\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\u{1D52E}pf;\uC000\u{1D562}rime;\u6057cr;\uC000\u{1D4C6}\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\u{1D52F}\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\u{1D563}us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\u{1D4C7}\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\u{1D530}\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\u{1D564}a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\u{1D4C8}tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\u{1D531}\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\u{1D565}rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\u{1D4C9};\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\u{1D532}rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\u{1D566}\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\u{1D4CA}\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\u{1D533}tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\u{1D567}ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\u{1D4CB}\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\u{1D534}pf;\uC000\u{1D568}\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\u{1D4CC}\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\u{1D535}\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\u{1D569}im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\u{1D4CD}\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\u{1D536}cy;\u4457pf;\uC000\u{1D56A}cr;\uC000\u{1D4CE}\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\u{1D537}cy;\u4436grarr;\u61DDpf;\uC000\u{1D56B}cr;\uC000\u{1D4CF}\u0100jn\u3B85\u3B87;\u600Dj;\u600C'.split("").map((c) => c.charCodeAt(0))
);

// node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default = new Uint16Array(
  // prettier-ignore
  "\u0200aglq	\x1B\u026D\0\0p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map((c) => c.charCodeAt(0))
);

// node_modules/entities/lib/esm/decode_codepoint.js
var _a;
var decodeMap = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]);
var fromCodePoint = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
  (_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {
    let output = "";
    if (codePoint > 65535) {
      codePoint -= 65536;
      output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
      codePoint = 56320 | codePoint & 1023;
    }
    output += String.fromCharCode(codePoint);
    return output;
  }
);
function replaceCodePoint(codePoint) {
  var _a2;
  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
    return 65533;
  }
  return (_a2 = decodeMap.get(codePoint)) !== null && _a2 !== void 0 ? _a2 : codePoint;
}

// node_modules/entities/lib/esm/decode.js
var CharCodes;
(function(CharCodes2) {
  CharCodes2[CharCodes2["NUM"] = 35] = "NUM";
  CharCodes2[CharCodes2["SEMI"] = 59] = "SEMI";
  CharCodes2[CharCodes2["EQUALS"] = 61] = "EQUALS";
  CharCodes2[CharCodes2["ZERO"] = 48] = "ZERO";
  CharCodes2[CharCodes2["NINE"] = 57] = "NINE";
  CharCodes2[CharCodes2["LOWER_A"] = 97] = "LOWER_A";
  CharCodes2[CharCodes2["LOWER_F"] = 102] = "LOWER_F";
  CharCodes2[CharCodes2["LOWER_X"] = 120] = "LOWER_X";
  CharCodes2[CharCodes2["LOWER_Z"] = 122] = "LOWER_Z";
  CharCodes2[CharCodes2["UPPER_A"] = 65] = "UPPER_A";
  CharCodes2[CharCodes2["UPPER_F"] = 70] = "UPPER_F";
  CharCodes2[CharCodes2["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
var TO_LOWER_BIT = 32;
var BinTrieFlags;
(function(BinTrieFlags2) {
  BinTrieFlags2[BinTrieFlags2["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
  BinTrieFlags2[BinTrieFlags2["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
  BinTrieFlags2[BinTrieFlags2["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags || (BinTrieFlags = {}));
function isNumber(code) {
  return code >= CharCodes.ZERO && code <= CharCodes.NINE;
}
function isHexadecimalCharacter(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;
}
function isAsciiAlphaNumeric(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);
}
function isEntityInAttributeInvalidEnd(code) {
  return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);
}
var EntityDecoderState;
(function(EntityDecoderState2) {
  EntityDecoderState2[EntityDecoderState2["EntityStart"] = 0] = "EntityStart";
  EntityDecoderState2[EntityDecoderState2["NumericStart"] = 1] = "NumericStart";
  EntityDecoderState2[EntityDecoderState2["NumericDecimal"] = 2] = "NumericDecimal";
  EntityDecoderState2[EntityDecoderState2["NumericHex"] = 3] = "NumericHex";
  EntityDecoderState2[EntityDecoderState2["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));
var DecodingMode;
(function(DecodingMode2) {
  DecodingMode2[DecodingMode2["Legacy"] = 0] = "Legacy";
  DecodingMode2[DecodingMode2["Strict"] = 1] = "Strict";
  DecodingMode2[DecodingMode2["Attribute"] = 2] = "Attribute";
})(DecodingMode || (DecodingMode = {}));
var EntityDecoder = class {
  constructor(decodeTree, emitCodePoint, errors) {
    this.decodeTree = decodeTree;
    this.emitCodePoint = emitCodePoint;
    this.errors = errors;
    this.state = EntityDecoderState.EntityStart;
    this.consumed = 1;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.decodeMode = DecodingMode.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(decodeMode) {
    this.decodeMode = decodeMode;
    this.state = EntityDecoderState.EntityStart;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(str, offset) {
    switch (this.state) {
      case EntityDecoderState.EntityStart: {
        if (str.charCodeAt(offset) === CharCodes.NUM) {
          this.state = EntityDecoderState.NumericStart;
          this.consumed += 1;
          return this.stateNumericStart(str, offset + 1);
        }
        this.state = EntityDecoderState.NamedEntity;
        return this.stateNamedEntity(str, offset);
      }
      case EntityDecoderState.NumericStart: {
        return this.stateNumericStart(str, offset);
      }
      case EntityDecoderState.NumericDecimal: {
        return this.stateNumericDecimal(str, offset);
      }
      case EntityDecoderState.NumericHex: {
        return this.stateNumericHex(str, offset);
      }
      case EntityDecoderState.NamedEntity: {
        return this.stateNamedEntity(str, offset);
      }
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(str, offset) {
    if (offset >= str.length) {
      return -1;
    }
    if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
      this.state = EntityDecoderState.NumericHex;
      this.consumed += 1;
      return this.stateNumericHex(str, offset + 1);
    }
    this.state = EntityDecoderState.NumericDecimal;
    return this.stateNumericDecimal(str, offset);
  }
  addToNumericResult(str, start, end, base) {
    if (start !== end) {
      const digitCount = end - start;
      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);
      this.consumed += digitCount;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(str, offset) {
    const startIdx = offset;
    while (offset < str.length) {
      const char = str.charCodeAt(offset);
      if (isNumber(char) || isHexadecimalCharacter(char)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 16);
        return this.emitNumericEntity(char, 3);
      }
    }
    this.addToNumericResult(str, startIdx, offset, 16);
    return -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(str, offset) {
    const startIdx = offset;
    while (offset < str.length) {
      const char = str.charCodeAt(offset);
      if (isNumber(char)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 10);
        return this.emitNumericEntity(char, 2);
      }
    }
    this.addToNumericResult(str, startIdx, offset, 10);
    return -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(lastCp, expectedLength) {
    var _a2;
    if (this.consumed <= expectedLength) {
      (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);
      return 0;
    }
    if (lastCp === CharCodes.SEMI) {
      this.consumed += 1;
    } else if (this.decodeMode === DecodingMode.Strict) {
      return 0;
    }
    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);
    if (this.errors) {
      if (lastCp !== CharCodes.SEMI) {
        this.errors.missingSemicolonAfterCharacterReference();
      }
      this.errors.validateNumericCharacterReference(this.result);
    }
    return this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(str, offset) {
    const { decodeTree } = this;
    let current = decodeTree[this.treeIndex];
    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
    for (; offset < str.length; offset++, this.excess++) {
      const char = str.charCodeAt(offset);
      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);
      if (this.treeIndex < 0) {
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,
        (valueLength === 0 || // And there should be no invalid characters.
        isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();
      }
      current = decodeTree[this.treeIndex];
      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
      if (valueLength !== 0) {
        if (char === CharCodes.SEMI) {
          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
        }
        if (this.decodeMode !== DecodingMode.Strict) {
          this.result = this.treeIndex;
          this.consumed += this.excess;
          this.excess = 0;
        }
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var _a2;
    const { result, decodeTree } = this;
    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
    this.emitNamedEntityData(result, valueLength, this.consumed);
    (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.missingSemicolonAfterCharacterReference();
    return this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(result, valueLength, consumed) {
    const { decodeTree } = this;
    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);
    if (valueLength === 3) {
      this.emitCodePoint(decodeTree[result + 2], consumed);
    }
    return consumed;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var _a2;
    switch (this.state) {
      case EntityDecoderState.NamedEntity: {
        return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      }
      case EntityDecoderState.NumericDecimal: {
        return this.emitNumericEntity(0, 2);
      }
      case EntityDecoderState.NumericHex: {
        return this.emitNumericEntity(0, 3);
      }
      case EntityDecoderState.NumericStart: {
        (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);
        return 0;
      }
      case EntityDecoderState.EntityStart: {
        return 0;
      }
    }
  }
};
function getDecoder(decodeTree) {
  let ret = "";
  const decoder = new EntityDecoder(decodeTree, (str) => ret += fromCodePoint(str));
  return function decodeWithTrie(str, decodeMode) {
    let lastIndex = 0;
    let offset = 0;
    while ((offset = str.indexOf("&", offset)) >= 0) {
      ret += str.slice(lastIndex, offset);
      decoder.startEntity(decodeMode);
      const len = decoder.write(
        str,
        // Skip the "&"
        offset + 1
      );
      if (len < 0) {
        lastIndex = offset + decoder.end();
        break;
      }
      lastIndex = offset + len;
      offset = len === 0 ? lastIndex + 1 : lastIndex;
    }
    const result = ret + str.slice(lastIndex);
    ret = "";
    return result;
  };
}
function determineBranch(decodeTree, current, nodeIdx, char) {
  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;
  if (branchCount === 0) {
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  }
  if (jumpOffset) {
    const value = char - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  }
  let lo = nodeIdx;
  let hi = lo + branchCount - 1;
  while (lo <= hi) {
    const mid = lo + hi >>> 1;
    const midVal = decodeTree[mid];
    if (midVal < char) {
      lo = mid + 1;
    } else if (midVal > char) {
      hi = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }
  return -1;
}
var htmlDecoder = getDecoder(decode_data_html_default);
var xmlDecoder = getDecoder(decode_data_xml_default);

// node_modules/parse5/dist/common/html.js
var html_exports = {};
__export(html_exports, {
  ATTRS: () => ATTRS,
  DOCUMENT_MODE: () => DOCUMENT_MODE,
  NS: () => NS,
  SPECIAL_ELEMENTS: () => SPECIAL_ELEMENTS,
  TAG_ID: () => TAG_ID,
  TAG_NAMES: () => TAG_NAMES,
  getTagID: () => getTagID,
  hasUnescapedText: () => hasUnescapedText,
  isNumberedHeader: () => isNumberedHeader
});
var NS;
(function(NS2) {
  NS2["HTML"] = "http://www.w3.org/1999/xhtml";
  NS2["MATHML"] = "http://www.w3.org/1998/Math/MathML";
  NS2["SVG"] = "http://www.w3.org/2000/svg";
  NS2["XLINK"] = "http://www.w3.org/1999/xlink";
  NS2["XML"] = "http://www.w3.org/XML/1998/namespace";
  NS2["XMLNS"] = "http://www.w3.org/2000/xmlns/";
})(NS = NS || (NS = {}));
var ATTRS;
(function(ATTRS2) {
  ATTRS2["TYPE"] = "type";
  ATTRS2["ACTION"] = "action";
  ATTRS2["ENCODING"] = "encoding";
  ATTRS2["PROMPT"] = "prompt";
  ATTRS2["NAME"] = "name";
  ATTRS2["COLOR"] = "color";
  ATTRS2["FACE"] = "face";
  ATTRS2["SIZE"] = "size";
})(ATTRS = ATTRS || (ATTRS = {}));
var DOCUMENT_MODE;
(function(DOCUMENT_MODE2) {
  DOCUMENT_MODE2["NO_QUIRKS"] = "no-quirks";
  DOCUMENT_MODE2["QUIRKS"] = "quirks";
  DOCUMENT_MODE2["LIMITED_QUIRKS"] = "limited-quirks";
})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));
var TAG_NAMES;
(function(TAG_NAMES2) {
  TAG_NAMES2["A"] = "a";
  TAG_NAMES2["ADDRESS"] = "address";
  TAG_NAMES2["ANNOTATION_XML"] = "annotation-xml";
  TAG_NAMES2["APPLET"] = "applet";
  TAG_NAMES2["AREA"] = "area";
  TAG_NAMES2["ARTICLE"] = "article";
  TAG_NAMES2["ASIDE"] = "aside";
  TAG_NAMES2["B"] = "b";
  TAG_NAMES2["BASE"] = "base";
  TAG_NAMES2["BASEFONT"] = "basefont";
  TAG_NAMES2["BGSOUND"] = "bgsound";
  TAG_NAMES2["BIG"] = "big";
  TAG_NAMES2["BLOCKQUOTE"] = "blockquote";
  TAG_NAMES2["BODY"] = "body";
  TAG_NAMES2["BR"] = "br";
  TAG_NAMES2["BUTTON"] = "button";
  TAG_NAMES2["CAPTION"] = "caption";
  TAG_NAMES2["CENTER"] = "center";
  TAG_NAMES2["CODE"] = "code";
  TAG_NAMES2["COL"] = "col";
  TAG_NAMES2["COLGROUP"] = "colgroup";
  TAG_NAMES2["DD"] = "dd";
  TAG_NAMES2["DESC"] = "desc";
  TAG_NAMES2["DETAILS"] = "details";
  TAG_NAMES2["DIALOG"] = "dialog";
  TAG_NAMES2["DIR"] = "dir";
  TAG_NAMES2["DIV"] = "div";
  TAG_NAMES2["DL"] = "dl";
  TAG_NAMES2["DT"] = "dt";
  TAG_NAMES2["EM"] = "em";
  TAG_NAMES2["EMBED"] = "embed";
  TAG_NAMES2["FIELDSET"] = "fieldset";
  TAG_NAMES2["FIGCAPTION"] = "figcaption";
  TAG_NAMES2["FIGURE"] = "figure";
  TAG_NAMES2["FONT"] = "font";
  TAG_NAMES2["FOOTER"] = "footer";
  TAG_NAMES2["FOREIGN_OBJECT"] = "foreignObject";
  TAG_NAMES2["FORM"] = "form";
  TAG_NAMES2["FRAME"] = "frame";
  TAG_NAMES2["FRAMESET"] = "frameset";
  TAG_NAMES2["H1"] = "h1";
  TAG_NAMES2["H2"] = "h2";
  TAG_NAMES2["H3"] = "h3";
  TAG_NAMES2["H4"] = "h4";
  TAG_NAMES2["H5"] = "h5";
  TAG_NAMES2["H6"] = "h6";
  TAG_NAMES2["HEAD"] = "head";
  TAG_NAMES2["HEADER"] = "header";
  TAG_NAMES2["HGROUP"] = "hgroup";
  TAG_NAMES2["HR"] = "hr";
  TAG_NAMES2["HTML"] = "html";
  TAG_NAMES2["I"] = "i";
  TAG_NAMES2["IMG"] = "img";
  TAG_NAMES2["IMAGE"] = "image";
  TAG_NAMES2["INPUT"] = "input";
  TAG_NAMES2["IFRAME"] = "iframe";
  TAG_NAMES2["KEYGEN"] = "keygen";
  TAG_NAMES2["LABEL"] = "label";
  TAG_NAMES2["LI"] = "li";
  TAG_NAMES2["LINK"] = "link";
  TAG_NAMES2["LISTING"] = "listing";
  TAG_NAMES2["MAIN"] = "main";
  TAG_NAMES2["MALIGNMARK"] = "malignmark";
  TAG_NAMES2["MARQUEE"] = "marquee";
  TAG_NAMES2["MATH"] = "math";
  TAG_NAMES2["MENU"] = "menu";
  TAG_NAMES2["META"] = "meta";
  TAG_NAMES2["MGLYPH"] = "mglyph";
  TAG_NAMES2["MI"] = "mi";
  TAG_NAMES2["MO"] = "mo";
  TAG_NAMES2["MN"] = "mn";
  TAG_NAMES2["MS"] = "ms";
  TAG_NAMES2["MTEXT"] = "mtext";
  TAG_NAMES2["NAV"] = "nav";
  TAG_NAMES2["NOBR"] = "nobr";
  TAG_NAMES2["NOFRAMES"] = "noframes";
  TAG_NAMES2["NOEMBED"] = "noembed";
  TAG_NAMES2["NOSCRIPT"] = "noscript";
  TAG_NAMES2["OBJECT"] = "object";
  TAG_NAMES2["OL"] = "ol";
  TAG_NAMES2["OPTGROUP"] = "optgroup";
  TAG_NAMES2["OPTION"] = "option";
  TAG_NAMES2["P"] = "p";
  TAG_NAMES2["PARAM"] = "param";
  TAG_NAMES2["PLAINTEXT"] = "plaintext";
  TAG_NAMES2["PRE"] = "pre";
  TAG_NAMES2["RB"] = "rb";
  TAG_NAMES2["RP"] = "rp";
  TAG_NAMES2["RT"] = "rt";
  TAG_NAMES2["RTC"] = "rtc";
  TAG_NAMES2["RUBY"] = "ruby";
  TAG_NAMES2["S"] = "s";
  TAG_NAMES2["SCRIPT"] = "script";
  TAG_NAMES2["SECTION"] = "section";
  TAG_NAMES2["SELECT"] = "select";
  TAG_NAMES2["SOURCE"] = "source";
  TAG_NAMES2["SMALL"] = "small";
  TAG_NAMES2["SPAN"] = "span";
  TAG_NAMES2["STRIKE"] = "strike";
  TAG_NAMES2["STRONG"] = "strong";
  TAG_NAMES2["STYLE"] = "style";
  TAG_NAMES2["SUB"] = "sub";
  TAG_NAMES2["SUMMARY"] = "summary";
  TAG_NAMES2["SUP"] = "sup";
  TAG_NAMES2["TABLE"] = "table";
  TAG_NAMES2["TBODY"] = "tbody";
  TAG_NAMES2["TEMPLATE"] = "template";
  TAG_NAMES2["TEXTAREA"] = "textarea";
  TAG_NAMES2["TFOOT"] = "tfoot";
  TAG_NAMES2["TD"] = "td";
  TAG_NAMES2["TH"] = "th";
  TAG_NAMES2["THEAD"] = "thead";
  TAG_NAMES2["TITLE"] = "title";
  TAG_NAMES2["TR"] = "tr";
  TAG_NAMES2["TRACK"] = "track";
  TAG_NAMES2["TT"] = "tt";
  TAG_NAMES2["U"] = "u";
  TAG_NAMES2["UL"] = "ul";
  TAG_NAMES2["SVG"] = "svg";
  TAG_NAMES2["VAR"] = "var";
  TAG_NAMES2["WBR"] = "wbr";
  TAG_NAMES2["XMP"] = "xmp";
})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));
var TAG_ID;
(function(TAG_ID2) {
  TAG_ID2[TAG_ID2["UNKNOWN"] = 0] = "UNKNOWN";
  TAG_ID2[TAG_ID2["A"] = 1] = "A";
  TAG_ID2[TAG_ID2["ADDRESS"] = 2] = "ADDRESS";
  TAG_ID2[TAG_ID2["ANNOTATION_XML"] = 3] = "ANNOTATION_XML";
  TAG_ID2[TAG_ID2["APPLET"] = 4] = "APPLET";
  TAG_ID2[TAG_ID2["AREA"] = 5] = "AREA";
  TAG_ID2[TAG_ID2["ARTICLE"] = 6] = "ARTICLE";
  TAG_ID2[TAG_ID2["ASIDE"] = 7] = "ASIDE";
  TAG_ID2[TAG_ID2["B"] = 8] = "B";
  TAG_ID2[TAG_ID2["BASE"] = 9] = "BASE";
  TAG_ID2[TAG_ID2["BASEFONT"] = 10] = "BASEFONT";
  TAG_ID2[TAG_ID2["BGSOUND"] = 11] = "BGSOUND";
  TAG_ID2[TAG_ID2["BIG"] = 12] = "BIG";
  TAG_ID2[TAG_ID2["BLOCKQUOTE"] = 13] = "BLOCKQUOTE";
  TAG_ID2[TAG_ID2["BODY"] = 14] = "BODY";
  TAG_ID2[TAG_ID2["BR"] = 15] = "BR";
  TAG_ID2[TAG_ID2["BUTTON"] = 16] = "BUTTON";
  TAG_ID2[TAG_ID2["CAPTION"] = 17] = "CAPTION";
  TAG_ID2[TAG_ID2["CENTER"] = 18] = "CENTER";
  TAG_ID2[TAG_ID2["CODE"] = 19] = "CODE";
  TAG_ID2[TAG_ID2["COL"] = 20] = "COL";
  TAG_ID2[TAG_ID2["COLGROUP"] = 21] = "COLGROUP";
  TAG_ID2[TAG_ID2["DD"] = 22] = "DD";
  TAG_ID2[TAG_ID2["DESC"] = 23] = "DESC";
  TAG_ID2[TAG_ID2["DETAILS"] = 24] = "DETAILS";
  TAG_ID2[TAG_ID2["DIALOG"] = 25] = "DIALOG";
  TAG_ID2[TAG_ID2["DIR"] = 26] = "DIR";
  TAG_ID2[TAG_ID2["DIV"] = 27] = "DIV";
  TAG_ID2[TAG_ID2["DL"] = 28] = "DL";
  TAG_ID2[TAG_ID2["DT"] = 29] = "DT";
  TAG_ID2[TAG_ID2["EM"] = 30] = "EM";
  TAG_ID2[TAG_ID2["EMBED"] = 31] = "EMBED";
  TAG_ID2[TAG_ID2["FIELDSET"] = 32] = "FIELDSET";
  TAG_ID2[TAG_ID2["FIGCAPTION"] = 33] = "FIGCAPTION";
  TAG_ID2[TAG_ID2["FIGURE"] = 34] = "FIGURE";
  TAG_ID2[TAG_ID2["FONT"] = 35] = "FONT";
  TAG_ID2[TAG_ID2["FOOTER"] = 36] = "FOOTER";
  TAG_ID2[TAG_ID2["FOREIGN_OBJECT"] = 37] = "FOREIGN_OBJECT";
  TAG_ID2[TAG_ID2["FORM"] = 38] = "FORM";
  TAG_ID2[TAG_ID2["FRAME"] = 39] = "FRAME";
  TAG_ID2[TAG_ID2["FRAMESET"] = 40] = "FRAMESET";
  TAG_ID2[TAG_ID2["H1"] = 41] = "H1";
  TAG_ID2[TAG_ID2["H2"] = 42] = "H2";
  TAG_ID2[TAG_ID2["H3"] = 43] = "H3";
  TAG_ID2[TAG_ID2["H4"] = 44] = "H4";
  TAG_ID2[TAG_ID2["H5"] = 45] = "H5";
  TAG_ID2[TAG_ID2["H6"] = 46] = "H6";
  TAG_ID2[TAG_ID2["HEAD"] = 47] = "HEAD";
  TAG_ID2[TAG_ID2["HEADER"] = 48] = "HEADER";
  TAG_ID2[TAG_ID2["HGROUP"] = 49] = "HGROUP";
  TAG_ID2[TAG_ID2["HR"] = 50] = "HR";
  TAG_ID2[TAG_ID2["HTML"] = 51] = "HTML";
  TAG_ID2[TAG_ID2["I"] = 52] = "I";
  TAG_ID2[TAG_ID2["IMG"] = 53] = "IMG";
  TAG_ID2[TAG_ID2["IMAGE"] = 54] = "IMAGE";
  TAG_ID2[TAG_ID2["INPUT"] = 55] = "INPUT";
  TAG_ID2[TAG_ID2["IFRAME"] = 56] = "IFRAME";
  TAG_ID2[TAG_ID2["KEYGEN"] = 57] = "KEYGEN";
  TAG_ID2[TAG_ID2["LABEL"] = 58] = "LABEL";
  TAG_ID2[TAG_ID2["LI"] = 59] = "LI";
  TAG_ID2[TAG_ID2["LINK"] = 60] = "LINK";
  TAG_ID2[TAG_ID2["LISTING"] = 61] = "LISTING";
  TAG_ID2[TAG_ID2["MAIN"] = 62] = "MAIN";
  TAG_ID2[TAG_ID2["MALIGNMARK"] = 63] = "MALIGNMARK";
  TAG_ID2[TAG_ID2["MARQUEE"] = 64] = "MARQUEE";
  TAG_ID2[TAG_ID2["MATH"] = 65] = "MATH";
  TAG_ID2[TAG_ID2["MENU"] = 66] = "MENU";
  TAG_ID2[TAG_ID2["META"] = 67] = "META";
  TAG_ID2[TAG_ID2["MGLYPH"] = 68] = "MGLYPH";
  TAG_ID2[TAG_ID2["MI"] = 69] = "MI";
  TAG_ID2[TAG_ID2["MO"] = 70] = "MO";
  TAG_ID2[TAG_ID2["MN"] = 71] = "MN";
  TAG_ID2[TAG_ID2["MS"] = 72] = "MS";
  TAG_ID2[TAG_ID2["MTEXT"] = 73] = "MTEXT";
  TAG_ID2[TAG_ID2["NAV"] = 74] = "NAV";
  TAG_ID2[TAG_ID2["NOBR"] = 75] = "NOBR";
  TAG_ID2[TAG_ID2["NOFRAMES"] = 76] = "NOFRAMES";
  TAG_ID2[TAG_ID2["NOEMBED"] = 77] = "NOEMBED";
  TAG_ID2[TAG_ID2["NOSCRIPT"] = 78] = "NOSCRIPT";
  TAG_ID2[TAG_ID2["OBJECT"] = 79] = "OBJECT";
  TAG_ID2[TAG_ID2["OL"] = 80] = "OL";
  TAG_ID2[TAG_ID2["OPTGROUP"] = 81] = "OPTGROUP";
  TAG_ID2[TAG_ID2["OPTION"] = 82] = "OPTION";
  TAG_ID2[TAG_ID2["P"] = 83] = "P";
  TAG_ID2[TAG_ID2["PARAM"] = 84] = "PARAM";
  TAG_ID2[TAG_ID2["PLAINTEXT"] = 85] = "PLAINTEXT";
  TAG_ID2[TAG_ID2["PRE"] = 86] = "PRE";
  TAG_ID2[TAG_ID2["RB"] = 87] = "RB";
  TAG_ID2[TAG_ID2["RP"] = 88] = "RP";
  TAG_ID2[TAG_ID2["RT"] = 89] = "RT";
  TAG_ID2[TAG_ID2["RTC"] = 90] = "RTC";
  TAG_ID2[TAG_ID2["RUBY"] = 91] = "RUBY";
  TAG_ID2[TAG_ID2["S"] = 92] = "S";
  TAG_ID2[TAG_ID2["SCRIPT"] = 93] = "SCRIPT";
  TAG_ID2[TAG_ID2["SECTION"] = 94] = "SECTION";
  TAG_ID2[TAG_ID2["SELECT"] = 95] = "SELECT";
  TAG_ID2[TAG_ID2["SOURCE"] = 96] = "SOURCE";
  TAG_ID2[TAG_ID2["SMALL"] = 97] = "SMALL";
  TAG_ID2[TAG_ID2["SPAN"] = 98] = "SPAN";
  TAG_ID2[TAG_ID2["STRIKE"] = 99] = "STRIKE";
  TAG_ID2[TAG_ID2["STRONG"] = 100] = "STRONG";
  TAG_ID2[TAG_ID2["STYLE"] = 101] = "STYLE";
  TAG_ID2[TAG_ID2["SUB"] = 102] = "SUB";
  TAG_ID2[TAG_ID2["SUMMARY"] = 103] = "SUMMARY";
  TAG_ID2[TAG_ID2["SUP"] = 104] = "SUP";
  TAG_ID2[TAG_ID2["TABLE"] = 105] = "TABLE";
  TAG_ID2[TAG_ID2["TBODY"] = 106] = "TBODY";
  TAG_ID2[TAG_ID2["TEMPLATE"] = 107] = "TEMPLATE";
  TAG_ID2[TAG_ID2["TEXTAREA"] = 108] = "TEXTAREA";
  TAG_ID2[TAG_ID2["TFOOT"] = 109] = "TFOOT";
  TAG_ID2[TAG_ID2["TD"] = 110] = "TD";
  TAG_ID2[TAG_ID2["TH"] = 111] = "TH";
  TAG_ID2[TAG_ID2["THEAD"] = 112] = "THEAD";
  TAG_ID2[TAG_ID2["TITLE"] = 113] = "TITLE";
  TAG_ID2[TAG_ID2["TR"] = 114] = "TR";
  TAG_ID2[TAG_ID2["TRACK"] = 115] = "TRACK";
  TAG_ID2[TAG_ID2["TT"] = 116] = "TT";
  TAG_ID2[TAG_ID2["U"] = 117] = "U";
  TAG_ID2[TAG_ID2["UL"] = 118] = "UL";
  TAG_ID2[TAG_ID2["SVG"] = 119] = "SVG";
  TAG_ID2[TAG_ID2["VAR"] = 120] = "VAR";
  TAG_ID2[TAG_ID2["WBR"] = 121] = "WBR";
  TAG_ID2[TAG_ID2["XMP"] = 122] = "XMP";
})(TAG_ID = TAG_ID || (TAG_ID = {}));
var TAG_NAME_TO_ID = /* @__PURE__ */ new Map([
  [TAG_NAMES.A, TAG_ID.A],
  [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],
  [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],
  [TAG_NAMES.APPLET, TAG_ID.APPLET],
  [TAG_NAMES.AREA, TAG_ID.AREA],
  [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],
  [TAG_NAMES.ASIDE, TAG_ID.ASIDE],
  [TAG_NAMES.B, TAG_ID.B],
  [TAG_NAMES.BASE, TAG_ID.BASE],
  [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],
  [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],
  [TAG_NAMES.BIG, TAG_ID.BIG],
  [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],
  [TAG_NAMES.BODY, TAG_ID.BODY],
  [TAG_NAMES.BR, TAG_ID.BR],
  [TAG_NAMES.BUTTON, TAG_ID.BUTTON],
  [TAG_NAMES.CAPTION, TAG_ID.CAPTION],
  [TAG_NAMES.CENTER, TAG_ID.CENTER],
  [TAG_NAMES.CODE, TAG_ID.CODE],
  [TAG_NAMES.COL, TAG_ID.COL],
  [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],
  [TAG_NAMES.DD, TAG_ID.DD],
  [TAG_NAMES.DESC, TAG_ID.DESC],
  [TAG_NAMES.DETAILS, TAG_ID.DETAILS],
  [TAG_NAMES.DIALOG, TAG_ID.DIALOG],
  [TAG_NAMES.DIR, TAG_ID.DIR],
  [TAG_NAMES.DIV, TAG_ID.DIV],
  [TAG_NAMES.DL, TAG_ID.DL],
  [TAG_NAMES.DT, TAG_ID.DT],
  [TAG_NAMES.EM, TAG_ID.EM],
  [TAG_NAMES.EMBED, TAG_ID.EMBED],
  [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],
  [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],
  [TAG_NAMES.FIGURE, TAG_ID.FIGURE],
  [TAG_NAMES.FONT, TAG_ID.FONT],
  [TAG_NAMES.FOOTER, TAG_ID.FOOTER],
  [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],
  [TAG_NAMES.FORM, TAG_ID.FORM],
  [TAG_NAMES.FRAME, TAG_ID.FRAME],
  [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],
  [TAG_NAMES.H1, TAG_ID.H1],
  [TAG_NAMES.H2, TAG_ID.H2],
  [TAG_NAMES.H3, TAG_ID.H3],
  [TAG_NAMES.H4, TAG_ID.H4],
  [TAG_NAMES.H5, TAG_ID.H5],
  [TAG_NAMES.H6, TAG_ID.H6],
  [TAG_NAMES.HEAD, TAG_ID.HEAD],
  [TAG_NAMES.HEADER, TAG_ID.HEADER],
  [TAG_NAMES.HGROUP, TAG_ID.HGROUP],
  [TAG_NAMES.HR, TAG_ID.HR],
  [TAG_NAMES.HTML, TAG_ID.HTML],
  [TAG_NAMES.I, TAG_ID.I],
  [TAG_NAMES.IMG, TAG_ID.IMG],
  [TAG_NAMES.IMAGE, TAG_ID.IMAGE],
  [TAG_NAMES.INPUT, TAG_ID.INPUT],
  [TAG_NAMES.IFRAME, TAG_ID.IFRAME],
  [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],
  [TAG_NAMES.LABEL, TAG_ID.LABEL],
  [TAG_NAMES.LI, TAG_ID.LI],
  [TAG_NAMES.LINK, TAG_ID.LINK],
  [TAG_NAMES.LISTING, TAG_ID.LISTING],
  [TAG_NAMES.MAIN, TAG_ID.MAIN],
  [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],
  [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],
  [TAG_NAMES.MATH, TAG_ID.MATH],
  [TAG_NAMES.MENU, TAG_ID.MENU],
  [TAG_NAMES.META, TAG_ID.META],
  [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],
  [TAG_NAMES.MI, TAG_ID.MI],
  [TAG_NAMES.MO, TAG_ID.MO],
  [TAG_NAMES.MN, TAG_ID.MN],
  [TAG_NAMES.MS, TAG_ID.MS],
  [TAG_NAMES.MTEXT, TAG_ID.MTEXT],
  [TAG_NAMES.NAV, TAG_ID.NAV],
  [TAG_NAMES.NOBR, TAG_ID.NOBR],
  [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],
  [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],
  [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],
  [TAG_NAMES.OBJECT, TAG_ID.OBJECT],
  [TAG_NAMES.OL, TAG_ID.OL],
  [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],
  [TAG_NAMES.OPTION, TAG_ID.OPTION],
  [TAG_NAMES.P, TAG_ID.P],
  [TAG_NAMES.PARAM, TAG_ID.PARAM],
  [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],
  [TAG_NAMES.PRE, TAG_ID.PRE],
  [TAG_NAMES.RB, TAG_ID.RB],
  [TAG_NAMES.RP, TAG_ID.RP],
  [TAG_NAMES.RT, TAG_ID.RT],
  [TAG_NAMES.RTC, TAG_ID.RTC],
  [TAG_NAMES.RUBY, TAG_ID.RUBY],
  [TAG_NAMES.S, TAG_ID.S],
  [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],
  [TAG_NAMES.SECTION, TAG_ID.SECTION],
  [TAG_NAMES.SELECT, TAG_ID.SELECT],
  [TAG_NAMES.SOURCE, TAG_ID.SOURCE],
  [TAG_NAMES.SMALL, TAG_ID.SMALL],
  [TAG_NAMES.SPAN, TAG_ID.SPAN],
  [TAG_NAMES.STRIKE, TAG_ID.STRIKE],
  [TAG_NAMES.STRONG, TAG_ID.STRONG],
  [TAG_NAMES.STYLE, TAG_ID.STYLE],
  [TAG_NAMES.SUB, TAG_ID.SUB],
  [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],
  [TAG_NAMES.SUP, TAG_ID.SUP],
  [TAG_NAMES.TABLE, TAG_ID.TABLE],
  [TAG_NAMES.TBODY, TAG_ID.TBODY],
  [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],
  [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],
  [TAG_NAMES.TFOOT, TAG_ID.TFOOT],
  [TAG_NAMES.TD, TAG_ID.TD],
  [TAG_NAMES.TH, TAG_ID.TH],
  [TAG_NAMES.THEAD, TAG_ID.THEAD],
  [TAG_NAMES.TITLE, TAG_ID.TITLE],
  [TAG_NAMES.TR, TAG_ID.TR],
  [TAG_NAMES.TRACK, TAG_ID.TRACK],
  [TAG_NAMES.TT, TAG_ID.TT],
  [TAG_NAMES.U, TAG_ID.U],
  [TAG_NAMES.UL, TAG_ID.UL],
  [TAG_NAMES.SVG, TAG_ID.SVG],
  [TAG_NAMES.VAR, TAG_ID.VAR],
  [TAG_NAMES.WBR, TAG_ID.WBR],
  [TAG_NAMES.XMP, TAG_ID.XMP]
]);
function getTagID(tagName) {
  var _a2;
  return (_a2 = TAG_NAME_TO_ID.get(tagName)) !== null && _a2 !== void 0 ? _a2 : TAG_ID.UNKNOWN;
}
var $ = TAG_ID;
var SPECIAL_ELEMENTS = {
  [NS.HTML]: /* @__PURE__ */ new Set([
    $.ADDRESS,
    $.APPLET,
    $.AREA,
    $.ARTICLE,
    $.ASIDE,
    $.BASE,
    $.BASEFONT,
    $.BGSOUND,
    $.BLOCKQUOTE,
    $.BODY,
    $.BR,
    $.BUTTON,
    $.CAPTION,
    $.CENTER,
    $.COL,
    $.COLGROUP,
    $.DD,
    $.DETAILS,
    $.DIR,
    $.DIV,
    $.DL,
    $.DT,
    $.EMBED,
    $.FIELDSET,
    $.FIGCAPTION,
    $.FIGURE,
    $.FOOTER,
    $.FORM,
    $.FRAME,
    $.FRAMESET,
    $.H1,
    $.H2,
    $.H3,
    $.H4,
    $.H5,
    $.H6,
    $.HEAD,
    $.HEADER,
    $.HGROUP,
    $.HR,
    $.HTML,
    $.IFRAME,
    $.IMG,
    $.INPUT,
    $.LI,
    $.LINK,
    $.LISTING,
    $.MAIN,
    $.MARQUEE,
    $.MENU,
    $.META,
    $.NAV,
    $.NOEMBED,
    $.NOFRAMES,
    $.NOSCRIPT,
    $.OBJECT,
    $.OL,
    $.P,
    $.PARAM,
    $.PLAINTEXT,
    $.PRE,
    $.SCRIPT,
    $.SECTION,
    $.SELECT,
    $.SOURCE,
    $.STYLE,
    $.SUMMARY,
    $.TABLE,
    $.TBODY,
    $.TD,
    $.TEMPLATE,
    $.TEXTAREA,
    $.TFOOT,
    $.TH,
    $.THEAD,
    $.TITLE,
    $.TR,
    $.TRACK,
    $.UL,
    $.WBR,
    $.XMP
  ]),
  [NS.MATHML]: /* @__PURE__ */ new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),
  [NS.SVG]: /* @__PURE__ */ new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),
  [NS.XLINK]: /* @__PURE__ */ new Set(),
  [NS.XML]: /* @__PURE__ */ new Set(),
  [NS.XMLNS]: /* @__PURE__ */ new Set()
};
function isNumberedHeader(tn) {
  return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;
}
var UNESCAPED_TEXT = /* @__PURE__ */ new Set([
  TAG_NAMES.STYLE,
  TAG_NAMES.SCRIPT,
  TAG_NAMES.XMP,
  TAG_NAMES.IFRAME,
  TAG_NAMES.NOEMBED,
  TAG_NAMES.NOFRAMES,
  TAG_NAMES.PLAINTEXT
]);
function hasUnescapedText(tn, scriptingEnabled) {
  return UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === TAG_NAMES.NOSCRIPT;
}

// node_modules/parse5/dist/tokenizer/index.js
var C1_CONTROLS_REFERENCE_REPLACEMENTS = /* @__PURE__ */ new Map([
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]);
var State;
(function(State2) {
  State2[State2["DATA"] = 0] = "DATA";
  State2[State2["RCDATA"] = 1] = "RCDATA";
  State2[State2["RAWTEXT"] = 2] = "RAWTEXT";
  State2[State2["SCRIPT_DATA"] = 3] = "SCRIPT_DATA";
  State2[State2["PLAINTEXT"] = 4] = "PLAINTEXT";
  State2[State2["TAG_OPEN"] = 5] = "TAG_OPEN";
  State2[State2["END_TAG_OPEN"] = 6] = "END_TAG_OPEN";
  State2[State2["TAG_NAME"] = 7] = "TAG_NAME";
  State2[State2["RCDATA_LESS_THAN_SIGN"] = 8] = "RCDATA_LESS_THAN_SIGN";
  State2[State2["RCDATA_END_TAG_OPEN"] = 9] = "RCDATA_END_TAG_OPEN";
  State2[State2["RCDATA_END_TAG_NAME"] = 10] = "RCDATA_END_TAG_NAME";
  State2[State2["RAWTEXT_LESS_THAN_SIGN"] = 11] = "RAWTEXT_LESS_THAN_SIGN";
  State2[State2["RAWTEXT_END_TAG_OPEN"] = 12] = "RAWTEXT_END_TAG_OPEN";
  State2[State2["RAWTEXT_END_TAG_NAME"] = 13] = "RAWTEXT_END_TAG_NAME";
  State2[State2["SCRIPT_DATA_LESS_THAN_SIGN"] = 14] = "SCRIPT_DATA_LESS_THAN_SIGN";
  State2[State2["SCRIPT_DATA_END_TAG_OPEN"] = 15] = "SCRIPT_DATA_END_TAG_OPEN";
  State2[State2["SCRIPT_DATA_END_TAG_NAME"] = 16] = "SCRIPT_DATA_END_TAG_NAME";
  State2[State2["SCRIPT_DATA_ESCAPE_START"] = 17] = "SCRIPT_DATA_ESCAPE_START";
  State2[State2["SCRIPT_DATA_ESCAPE_START_DASH"] = 18] = "SCRIPT_DATA_ESCAPE_START_DASH";
  State2[State2["SCRIPT_DATA_ESCAPED"] = 19] = "SCRIPT_DATA_ESCAPED";
  State2[State2["SCRIPT_DATA_ESCAPED_DASH"] = 20] = "SCRIPT_DATA_ESCAPED_DASH";
  State2[State2["SCRIPT_DATA_ESCAPED_DASH_DASH"] = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH";
  State2[State2["SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN"] = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN";
  State2[State2["SCRIPT_DATA_ESCAPED_END_TAG_OPEN"] = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN";
  State2[State2["SCRIPT_DATA_ESCAPED_END_TAG_NAME"] = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPE_START"] = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPED"] = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPED_DASH"] = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH"] = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN"] = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN";
  State2[State2["SCRIPT_DATA_DOUBLE_ESCAPE_END"] = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END";
  State2[State2["BEFORE_ATTRIBUTE_NAME"] = 31] = "BEFORE_ATTRIBUTE_NAME";
  State2[State2["ATTRIBUTE_NAME"] = 32] = "ATTRIBUTE_NAME";
  State2[State2["AFTER_ATTRIBUTE_NAME"] = 33] = "AFTER_ATTRIBUTE_NAME";
  State2[State2["BEFORE_ATTRIBUTE_VALUE"] = 34] = "BEFORE_ATTRIBUTE_VALUE";
  State2[State2["ATTRIBUTE_VALUE_DOUBLE_QUOTED"] = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED";
  State2[State2["ATTRIBUTE_VALUE_SINGLE_QUOTED"] = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED";
  State2[State2["ATTRIBUTE_VALUE_UNQUOTED"] = 37] = "ATTRIBUTE_VALUE_UNQUOTED";
  State2[State2["AFTER_ATTRIBUTE_VALUE_QUOTED"] = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED";
  State2[State2["SELF_CLOSING_START_TAG"] = 39] = "SELF_CLOSING_START_TAG";
  State2[State2["BOGUS_COMMENT"] = 40] = "BOGUS_COMMENT";
  State2[State2["MARKUP_DECLARATION_OPEN"] = 41] = "MARKUP_DECLARATION_OPEN";
  State2[State2["COMMENT_START"] = 42] = "COMMENT_START";
  State2[State2["COMMENT_START_DASH"] = 43] = "COMMENT_START_DASH";
  State2[State2["COMMENT"] = 44] = "COMMENT";
  State2[State2["COMMENT_LESS_THAN_SIGN"] = 45] = "COMMENT_LESS_THAN_SIGN";
  State2[State2["COMMENT_LESS_THAN_SIGN_BANG"] = 46] = "COMMENT_LESS_THAN_SIGN_BANG";
  State2[State2["COMMENT_LESS_THAN_SIGN_BANG_DASH"] = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH";
  State2[State2["COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH"] = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH";
  State2[State2["COMMENT_END_DASH"] = 49] = "COMMENT_END_DASH";
  State2[State2["COMMENT_END"] = 50] = "COMMENT_END";
  State2[State2["COMMENT_END_BANG"] = 51] = "COMMENT_END_BANG";
  State2[State2["DOCTYPE"] = 52] = "DOCTYPE";
  State2[State2["BEFORE_DOCTYPE_NAME"] = 53] = "BEFORE_DOCTYPE_NAME";
  State2[State2["DOCTYPE_NAME"] = 54] = "DOCTYPE_NAME";
  State2[State2["AFTER_DOCTYPE_NAME"] = 55] = "AFTER_DOCTYPE_NAME";
  State2[State2["AFTER_DOCTYPE_PUBLIC_KEYWORD"] = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD";
  State2[State2["BEFORE_DOCTYPE_PUBLIC_IDENTIFIER"] = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER";
  State2[State2["DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED"] = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED";
  State2[State2["DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED"] = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED";
  State2[State2["AFTER_DOCTYPE_PUBLIC_IDENTIFIER"] = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER";
  State2[State2["BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS"] = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS";
  State2[State2["AFTER_DOCTYPE_SYSTEM_KEYWORD"] = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD";
  State2[State2["BEFORE_DOCTYPE_SYSTEM_IDENTIFIER"] = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER";
  State2[State2["DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED"] = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED";
  State2[State2["DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED"] = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED";
  State2[State2["AFTER_DOCTYPE_SYSTEM_IDENTIFIER"] = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER";
  State2[State2["BOGUS_DOCTYPE"] = 67] = "BOGUS_DOCTYPE";
  State2[State2["CDATA_SECTION"] = 68] = "CDATA_SECTION";
  State2[State2["CDATA_SECTION_BRACKET"] = 69] = "CDATA_SECTION_BRACKET";
  State2[State2["CDATA_SECTION_END"] = 70] = "CDATA_SECTION_END";
  State2[State2["CHARACTER_REFERENCE"] = 71] = "CHARACTER_REFERENCE";
  State2[State2["NAMED_CHARACTER_REFERENCE"] = 72] = "NAMED_CHARACTER_REFERENCE";
  State2[State2["AMBIGUOUS_AMPERSAND"] = 73] = "AMBIGUOUS_AMPERSAND";
  State2[State2["NUMERIC_CHARACTER_REFERENCE"] = 74] = "NUMERIC_CHARACTER_REFERENCE";
  State2[State2["HEXADEMICAL_CHARACTER_REFERENCE_START"] = 75] = "HEXADEMICAL_CHARACTER_REFERENCE_START";
  State2[State2["HEXADEMICAL_CHARACTER_REFERENCE"] = 76] = "HEXADEMICAL_CHARACTER_REFERENCE";
  State2[State2["DECIMAL_CHARACTER_REFERENCE"] = 77] = "DECIMAL_CHARACTER_REFERENCE";
  State2[State2["NUMERIC_CHARACTER_REFERENCE_END"] = 78] = "NUMERIC_CHARACTER_REFERENCE_END";
})(State || (State = {}));
var TokenizerMode = {
  DATA: State.DATA,
  RCDATA: State.RCDATA,
  RAWTEXT: State.RAWTEXT,
  SCRIPT_DATA: State.SCRIPT_DATA,
  PLAINTEXT: State.PLAINTEXT,
  CDATA_SECTION: State.CDATA_SECTION
};
function isAsciiDigit(cp) {
  return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;
}
function isAsciiUpper(cp) {
  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;
}
function isAsciiLower(cp) {
  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;
}
function isAsciiLetter(cp) {
  return isAsciiLower(cp) || isAsciiUpper(cp);
}
function isAsciiAlphaNumeric2(cp) {
  return isAsciiLetter(cp) || isAsciiDigit(cp);
}
function isAsciiUpperHexDigit(cp) {
  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_F;
}
function isAsciiLowerHexDigit(cp) {
  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_F;
}
function isAsciiHexDigit(cp) {
  return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
}
function toAsciiLower(cp) {
  return cp + 32;
}
function isWhitespace(cp) {
  return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;
}
function isEntityInAttributeInvalidEnd2(nextCp) {
  return nextCp === CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric2(nextCp);
}
function isScriptDataDoubleEscapeSequenceEnd(cp) {
  return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;
}
var Tokenizer = class {
  constructor(options, handler) {
    this.options = options;
    this.handler = handler;
    this.paused = false;
    this.inLoop = false;
    this.inForeignNode = false;
    this.lastStartTagName = "";
    this.active = false;
    this.state = State.DATA;
    this.returnState = State.DATA;
    this.charRefCode = -1;
    this.consumedAfterSnapshot = -1;
    this.currentCharacterToken = null;
    this.currentToken = null;
    this.currentAttr = { name: "", value: "" };
    this.preprocessor = new Preprocessor(handler);
    this.currentLocation = this.getCurrentLocation(-1);
  }
  //Errors
  _err(code) {
    var _a2, _b;
    (_b = (_a2 = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a2, this.preprocessor.getError(code));
  }
  // NOTE: `offset` may never run across line boundaries.
  getCurrentLocation(offset) {
    if (!this.options.sourceCodeLocationInfo) {
      return null;
    }
    return {
      startLine: this.preprocessor.line,
      startCol: this.preprocessor.col - offset,
      startOffset: this.preprocessor.offset - offset,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
  }
  _runParsingLoop() {
    if (this.inLoop)
      return;
    this.inLoop = true;
    while (this.active && !this.paused) {
      this.consumedAfterSnapshot = 0;
      const cp = this._consume();
      if (!this._ensureHibernation()) {
        this._callState(cp);
      }
    }
    this.inLoop = false;
  }
  //API
  pause() {
    this.paused = true;
  }
  resume(writeCallback) {
    if (!this.paused) {
      throw new Error("Parser was already resumed");
    }
    this.paused = false;
    if (this.inLoop)
      return;
    this._runParsingLoop();
    if (!this.paused) {
      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();
    }
  }
  write(chunk, isLastChunk, writeCallback) {
    this.active = true;
    this.preprocessor.write(chunk, isLastChunk);
    this._runParsingLoop();
    if (!this.paused) {
      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();
    }
  }
  insertHtmlAtCurrentPos(chunk) {
    this.active = true;
    this.preprocessor.insertHtmlAtCurrentPos(chunk);
    this._runParsingLoop();
  }
  //Hibernation
  _ensureHibernation() {
    if (this.preprocessor.endOfChunkHit) {
      this._unconsume(this.consumedAfterSnapshot);
      this.active = false;
      return true;
    }
    return false;
  }
  //Consumption
  _consume() {
    this.consumedAfterSnapshot++;
    return this.preprocessor.advance();
  }
  _unconsume(count) {
    this.consumedAfterSnapshot -= count;
    this.preprocessor.retreat(count);
  }
  _reconsumeInState(state, cp) {
    this.state = state;
    this._callState(cp);
  }
  _advanceBy(count) {
    this.consumedAfterSnapshot += count;
    for (let i = 0; i < count; i++) {
      this.preprocessor.advance();
    }
  }
  _consumeSequenceIfMatch(pattern, caseSensitive) {
    if (this.preprocessor.startsWith(pattern, caseSensitive)) {
      this._advanceBy(pattern.length - 1);
      return true;
    }
    return false;
  }
  //Token creation
  _createStartTagToken() {
    this.currentToken = {
      type: TokenType.START_TAG,
      tagName: "",
      tagID: TAG_ID.UNKNOWN,
      selfClosing: false,
      ackSelfClosing: false,
      attrs: [],
      location: this.getCurrentLocation(1)
    };
  }
  _createEndTagToken() {
    this.currentToken = {
      type: TokenType.END_TAG,
      tagName: "",
      tagID: TAG_ID.UNKNOWN,
      selfClosing: false,
      ackSelfClosing: false,
      attrs: [],
      location: this.getCurrentLocation(2)
    };
  }
  _createCommentToken(offset) {
    this.currentToken = {
      type: TokenType.COMMENT,
      data: "",
      location: this.getCurrentLocation(offset)
    };
  }
  _createDoctypeToken(initialName) {
    this.currentToken = {
      type: TokenType.DOCTYPE,
      name: initialName,
      forceQuirks: false,
      publicId: null,
      systemId: null,
      location: this.currentLocation
    };
  }
  _createCharacterToken(type, chars) {
    this.currentCharacterToken = {
      type,
      chars,
      location: this.currentLocation
    };
  }
  //Tag attributes
  _createAttr(attrNameFirstCh) {
    this.currentAttr = {
      name: attrNameFirstCh,
      value: ""
    };
    this.currentLocation = this.getCurrentLocation(0);
  }
  _leaveAttrName() {
    var _a2;
    var _b;
    const token = this.currentToken;
    if (getTokenAttr(token, this.currentAttr.name) === null) {
      token.attrs.push(this.currentAttr);
      if (token.location && this.currentLocation) {
        const attrLocations = (_a2 = (_b = token.location).attrs) !== null && _a2 !== void 0 ? _a2 : _b.attrs = /* @__PURE__ */ Object.create(null);
        attrLocations[this.currentAttr.name] = this.currentLocation;
        this._leaveAttrValue();
      }
    } else {
      this._err(ERR.duplicateAttribute);
    }
  }
  _leaveAttrValue() {
    if (this.currentLocation) {
      this.currentLocation.endLine = this.preprocessor.line;
      this.currentLocation.endCol = this.preprocessor.col;
      this.currentLocation.endOffset = this.preprocessor.offset;
    }
  }
  //Token emission
  prepareToken(ct) {
    this._emitCurrentCharacterToken(ct.location);
    this.currentToken = null;
    if (ct.location) {
      ct.location.endLine = this.preprocessor.line;
      ct.location.endCol = this.preprocessor.col + 1;
      ct.location.endOffset = this.preprocessor.offset + 1;
    }
    this.currentLocation = this.getCurrentLocation(-1);
  }
  emitCurrentTagToken() {
    const ct = this.currentToken;
    this.prepareToken(ct);
    ct.tagID = getTagID(ct.tagName);
    if (ct.type === TokenType.START_TAG) {
      this.lastStartTagName = ct.tagName;
      this.handler.onStartTag(ct);
    } else {
      if (ct.attrs.length > 0) {
        this._err(ERR.endTagWithAttributes);
      }
      if (ct.selfClosing) {
        this._err(ERR.endTagWithTrailingSolidus);
      }
      this.handler.onEndTag(ct);
    }
    this.preprocessor.dropParsedChunk();
  }
  emitCurrentComment(ct) {
    this.prepareToken(ct);
    this.handler.onComment(ct);
    this.preprocessor.dropParsedChunk();
  }
  emitCurrentDoctype(ct) {
    this.prepareToken(ct);
    this.handler.onDoctype(ct);
    this.preprocessor.dropParsedChunk();
  }
  _emitCurrentCharacterToken(nextLocation) {
    if (this.currentCharacterToken) {
      if (nextLocation && this.currentCharacterToken.location) {
        this.currentCharacterToken.location.endLine = nextLocation.startLine;
        this.currentCharacterToken.location.endCol = nextLocation.startCol;
        this.currentCharacterToken.location.endOffset = nextLocation.startOffset;
      }
      switch (this.currentCharacterToken.type) {
        case TokenType.CHARACTER: {
          this.handler.onCharacter(this.currentCharacterToken);
          break;
        }
        case TokenType.NULL_CHARACTER: {
          this.handler.onNullCharacter(this.currentCharacterToken);
          break;
        }
        case TokenType.WHITESPACE_CHARACTER: {
          this.handler.onWhitespaceCharacter(this.currentCharacterToken);
          break;
        }
      }
      this.currentCharacterToken = null;
    }
  }
  _emitEOFToken() {
    const location2 = this.getCurrentLocation(0);
    if (location2) {
      location2.endLine = location2.startLine;
      location2.endCol = location2.startCol;
      location2.endOffset = location2.startOffset;
    }
    this._emitCurrentCharacterToken(location2);
    this.handler.onEof({ type: TokenType.EOF, location: location2 });
    this.active = false;
  }
  //Characters emission
  //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
  //If we have a sequence of characters that belong to the same group, the parser can process it
  //as a single solid character token.
  //So, there are 3 types of character tokens in parse5:
  //1)TokenType.NULL_CHARACTER - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
  //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
  //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
  _appendCharToCurrentCharacterToken(type, ch) {
    if (this.currentCharacterToken) {
      if (this.currentCharacterToken.type !== type) {
        this.currentLocation = this.getCurrentLocation(0);
        this._emitCurrentCharacterToken(this.currentLocation);
        this.preprocessor.dropParsedChunk();
      } else {
        this.currentCharacterToken.chars += ch;
        return;
      }
    }
    this._createCharacterToken(type, ch);
  }
  _emitCodePoint(cp) {
    const type = isWhitespace(cp) ? TokenType.WHITESPACE_CHARACTER : cp === CODE_POINTS.NULL ? TokenType.NULL_CHARACTER : TokenType.CHARACTER;
    this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));
  }
  //NOTE: used when we emit characters explicitly.
  //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.
  _emitChars(ch) {
    this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);
  }
  // Character reference helpers
  _matchNamedCharacterReference(cp) {
    let result = null;
    let excess = 0;
    let withoutSemicolon = false;
    for (let i = 0, current = decode_data_html_default[0]; i >= 0; cp = this._consume()) {
      i = determineBranch(decode_data_html_default, current, i + 1, cp);
      if (i < 0)
        break;
      excess += 1;
      current = decode_data_html_default[i];
      const masked = current & BinTrieFlags.VALUE_LENGTH;
      if (masked) {
        const valueLength = (masked >> 14) - 1;
        if (cp !== CODE_POINTS.SEMICOLON && this._isCharacterReferenceInAttribute() && isEntityInAttributeInvalidEnd2(this.preprocessor.peek(1))) {
          result = [CODE_POINTS.AMPERSAND];
          i += valueLength;
        } else {
          result = valueLength === 0 ? [decode_data_html_default[i] & ~BinTrieFlags.VALUE_LENGTH] : valueLength === 1 ? [decode_data_html_default[++i]] : [decode_data_html_default[++i], decode_data_html_default[++i]];
          excess = 0;
          withoutSemicolon = cp !== CODE_POINTS.SEMICOLON;
        }
        if (valueLength === 0) {
          this._consume();
          break;
        }
      }
    }
    this._unconsume(excess);
    if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {
      this._err(ERR.missingSemicolonAfterCharacterReference);
    }
    this._unconsume(1);
    return result;
  }
  _isCharacterReferenceInAttribute() {
    return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;
  }
  _flushCodePointConsumedAsCharacterReference(cp) {
    if (this._isCharacterReferenceInAttribute()) {
      this.currentAttr.value += String.fromCodePoint(cp);
    } else {
      this._emitCodePoint(cp);
    }
  }
  // Calling states this way turns out to be much faster than any other approach.
  _callState(cp) {
    switch (this.state) {
      case State.DATA: {
        this._stateData(cp);
        break;
      }
      case State.RCDATA: {
        this._stateRcdata(cp);
        break;
      }
      case State.RAWTEXT: {
        this._stateRawtext(cp);
        break;
      }
      case State.SCRIPT_DATA: {
        this._stateScriptData(cp);
        break;
      }
      case State.PLAINTEXT: {
        this._statePlaintext(cp);
        break;
      }
      case State.TAG_OPEN: {
        this._stateTagOpen(cp);
        break;
      }
      case State.END_TAG_OPEN: {
        this._stateEndTagOpen(cp);
        break;
      }
      case State.TAG_NAME: {
        this._stateTagName(cp);
        break;
      }
      case State.RCDATA_LESS_THAN_SIGN: {
        this._stateRcdataLessThanSign(cp);
        break;
      }
      case State.RCDATA_END_TAG_OPEN: {
        this._stateRcdataEndTagOpen(cp);
        break;
      }
      case State.RCDATA_END_TAG_NAME: {
        this._stateRcdataEndTagName(cp);
        break;
      }
      case State.RAWTEXT_LESS_THAN_SIGN: {
        this._stateRawtextLessThanSign(cp);
        break;
      }
      case State.RAWTEXT_END_TAG_OPEN: {
        this._stateRawtextEndTagOpen(cp);
        break;
      }
      case State.RAWTEXT_END_TAG_NAME: {
        this._stateRawtextEndTagName(cp);
        break;
      }
      case State.SCRIPT_DATA_LESS_THAN_SIGN: {
        this._stateScriptDataLessThanSign(cp);
        break;
      }
      case State.SCRIPT_DATA_END_TAG_OPEN: {
        this._stateScriptDataEndTagOpen(cp);
        break;
      }
      case State.SCRIPT_DATA_END_TAG_NAME: {
        this._stateScriptDataEndTagName(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPE_START: {
        this._stateScriptDataEscapeStart(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPE_START_DASH: {
        this._stateScriptDataEscapeStartDash(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED: {
        this._stateScriptDataEscaped(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED_DASH: {
        this._stateScriptDataEscapedDash(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {
        this._stateScriptDataEscapedDashDash(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataEscapedLessThanSign(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {
        this._stateScriptDataEscapedEndTagOpen(cp);
        break;
      }
      case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {
        this._stateScriptDataEscapedEndTagName(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {
        this._stateScriptDataDoubleEscapeStart(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPED: {
        this._stateScriptDataDoubleEscaped(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {
        this._stateScriptDataDoubleEscapedDash(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {
        this._stateScriptDataDoubleEscapedDashDash(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataDoubleEscapedLessThanSign(cp);
        break;
      }
      case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {
        this._stateScriptDataDoubleEscapeEnd(cp);
        break;
      }
      case State.BEFORE_ATTRIBUTE_NAME: {
        this._stateBeforeAttributeName(cp);
        break;
      }
      case State.ATTRIBUTE_NAME: {
        this._stateAttributeName(cp);
        break;
      }
      case State.AFTER_ATTRIBUTE_NAME: {
        this._stateAfterAttributeName(cp);
        break;
      }
      case State.BEFORE_ATTRIBUTE_VALUE: {
        this._stateBeforeAttributeValue(cp);
        break;
      }
      case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {
        this._stateAttributeValueDoubleQuoted(cp);
        break;
      }
      case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {
        this._stateAttributeValueSingleQuoted(cp);
        break;
      }
      case State.ATTRIBUTE_VALUE_UNQUOTED: {
        this._stateAttributeValueUnquoted(cp);
        break;
      }
      case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {
        this._stateAfterAttributeValueQuoted(cp);
        break;
      }
      case State.SELF_CLOSING_START_TAG: {
        this._stateSelfClosingStartTag(cp);
        break;
      }
      case State.BOGUS_COMMENT: {
        this._stateBogusComment(cp);
        break;
      }
      case State.MARKUP_DECLARATION_OPEN: {
        this._stateMarkupDeclarationOpen(cp);
        break;
      }
      case State.COMMENT_START: {
        this._stateCommentStart(cp);
        break;
      }
      case State.COMMENT_START_DASH: {
        this._stateCommentStartDash(cp);
        break;
      }
      case State.COMMENT: {
        this._stateComment(cp);
        break;
      }
      case State.COMMENT_LESS_THAN_SIGN: {
        this._stateCommentLessThanSign(cp);
        break;
      }
      case State.COMMENT_LESS_THAN_SIGN_BANG: {
        this._stateCommentLessThanSignBang(cp);
        break;
      }
      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {
        this._stateCommentLessThanSignBangDash(cp);
        break;
      }
      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {
        this._stateCommentLessThanSignBangDashDash(cp);
        break;
      }
      case State.COMMENT_END_DASH: {
        this._stateCommentEndDash(cp);
        break;
      }
      case State.COMMENT_END: {
        this._stateCommentEnd(cp);
        break;
      }
      case State.COMMENT_END_BANG: {
        this._stateCommentEndBang(cp);
        break;
      }
      case State.DOCTYPE: {
        this._stateDoctype(cp);
        break;
      }
      case State.BEFORE_DOCTYPE_NAME: {
        this._stateBeforeDoctypeName(cp);
        break;
      }
      case State.DOCTYPE_NAME: {
        this._stateDoctypeName(cp);
        break;
      }
      case State.AFTER_DOCTYPE_NAME: {
        this._stateAfterDoctypeName(cp);
        break;
      }
      case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {
        this._stateAfterDoctypePublicKeyword(cp);
        break;
      }
      case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateBeforeDoctypePublicIdentifier(cp);
        break;
      }
      case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypePublicIdentifierDoubleQuoted(cp);
        break;
      }
      case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypePublicIdentifierSingleQuoted(cp);
        break;
      }
      case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateAfterDoctypePublicIdentifier(cp);
        break;
      }
      case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {
        this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);
        break;
      }
      case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {
        this._stateAfterDoctypeSystemKeyword(cp);
        break;
      }
      case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateBeforeDoctypeSystemIdentifier(cp);
        break;
      }
      case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypeSystemIdentifierDoubleQuoted(cp);
        break;
      }
      case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypeSystemIdentifierSingleQuoted(cp);
        break;
      }
      case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateAfterDoctypeSystemIdentifier(cp);
        break;
      }
      case State.BOGUS_DOCTYPE: {
        this._stateBogusDoctype(cp);
        break;
      }
      case State.CDATA_SECTION: {
        this._stateCdataSection(cp);
        break;
      }
      case State.CDATA_SECTION_BRACKET: {
        this._stateCdataSectionBracket(cp);
        break;
      }
      case State.CDATA_SECTION_END: {
        this._stateCdataSectionEnd(cp);
        break;
      }
      case State.CHARACTER_REFERENCE: {
        this._stateCharacterReference(cp);
        break;
      }
      case State.NAMED_CHARACTER_REFERENCE: {
        this._stateNamedCharacterReference(cp);
        break;
      }
      case State.AMBIGUOUS_AMPERSAND: {
        this._stateAmbiguousAmpersand(cp);
        break;
      }
      case State.NUMERIC_CHARACTER_REFERENCE: {
        this._stateNumericCharacterReference(cp);
        break;
      }
      case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {
        this._stateHexademicalCharacterReferenceStart(cp);
        break;
      }
      case State.HEXADEMICAL_CHARACTER_REFERENCE: {
        this._stateHexademicalCharacterReference(cp);
        break;
      }
      case State.DECIMAL_CHARACTER_REFERENCE: {
        this._stateDecimalCharacterReference(cp);
        break;
      }
      case State.NUMERIC_CHARACTER_REFERENCE_END: {
        this._stateNumericCharacterReferenceEnd(cp);
        break;
      }
      default: {
        throw new Error("Unknown state");
      }
    }
  }
  // State machine
  // Data state
  //------------------------------------------------------------------
  _stateData(cp) {
    switch (cp) {
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.TAG_OPEN;
        break;
      }
      case CODE_POINTS.AMPERSAND: {
        this.returnState = State.DATA;
        this.state = State.CHARACTER_REFERENCE;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitCodePoint(cp);
        break;
      }
      case CODE_POINTS.EOF: {
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  //  RCDATA state
  //------------------------------------------------------------------
  _stateRcdata(cp) {
    switch (cp) {
      case CODE_POINTS.AMPERSAND: {
        this.returnState = State.RCDATA;
        this.state = State.CHARACTER_REFERENCE;
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.RCDATA_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // RAWTEXT state
  //------------------------------------------------------------------
  _stateRawtext(cp) {
    switch (cp) {
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.RAWTEXT_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data state
  //------------------------------------------------------------------
  _stateScriptData(cp) {
    switch (cp) {
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // PLAINTEXT state
  //------------------------------------------------------------------
  _statePlaintext(cp) {
    switch (cp) {
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // Tag open state
  //------------------------------------------------------------------
  _stateTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this._createStartTagToken();
      this.state = State.TAG_NAME;
      this._stateTagName(cp);
    } else
      switch (cp) {
        case CODE_POINTS.EXCLAMATION_MARK: {
          this.state = State.MARKUP_DECLARATION_OPEN;
          break;
        }
        case CODE_POINTS.SOLIDUS: {
          this.state = State.END_TAG_OPEN;
          break;
        }
        case CODE_POINTS.QUESTION_MARK: {
          this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);
          this._createCommentToken(1);
          this.state = State.BOGUS_COMMENT;
          this._stateBogusComment(cp);
          break;
        }
        case CODE_POINTS.EOF: {
          this._err(ERR.eofBeforeTagName);
          this._emitChars("<");
          this._emitEOFToken();
          break;
        }
        default: {
          this._err(ERR.invalidFirstCharacterOfTagName);
          this._emitChars("<");
          this.state = State.DATA;
          this._stateData(cp);
        }
      }
  }
  // End tag open state
  //------------------------------------------------------------------
  _stateEndTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this._createEndTagToken();
      this.state = State.TAG_NAME;
      this._stateTagName(cp);
    } else
      switch (cp) {
        case CODE_POINTS.GREATER_THAN_SIGN: {
          this._err(ERR.missingEndTagName);
          this.state = State.DATA;
          break;
        }
        case CODE_POINTS.EOF: {
          this._err(ERR.eofBeforeTagName);
          this._emitChars("</");
          this._emitEOFToken();
          break;
        }
        default: {
          this._err(ERR.invalidFirstCharacterOfTagName);
          this._createCommentToken(2);
          this.state = State.BOGUS_COMMENT;
          this._stateBogusComment(cp);
        }
      }
  }
  // Tag name state
  //------------------------------------------------------------------
  _stateTagName(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case CODE_POINTS.SOLIDUS: {
        this.state = State.SELF_CLOSING_START_TAG;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.tagName += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
      }
    }
  }
  // RCDATA less-than sign state
  //------------------------------------------------------------------
  _stateRcdataLessThanSign(cp) {
    if (cp === CODE_POINTS.SOLIDUS) {
      this.state = State.RCDATA_END_TAG_OPEN;
    } else {
      this._emitChars("<");
      this.state = State.RCDATA;
      this._stateRcdata(cp);
    }
  }
  // RCDATA end tag open state
  //------------------------------------------------------------------
  _stateRcdataEndTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this.state = State.RCDATA_END_TAG_NAME;
      this._stateRcdataEndTagName(cp);
    } else {
      this._emitChars("</");
      this.state = State.RCDATA;
      this._stateRcdata(cp);
    }
  }
  handleSpecialEndTag(_cp) {
    if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {
      return !this._ensureHibernation();
    }
    this._createEndTagToken();
    const token = this.currentToken;
    token.tagName = this.lastStartTagName;
    const cp = this.preprocessor.peek(this.lastStartTagName.length);
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this._advanceBy(this.lastStartTagName.length);
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        return false;
      }
      case CODE_POINTS.SOLIDUS: {
        this._advanceBy(this.lastStartTagName.length);
        this.state = State.SELF_CLOSING_START_TAG;
        return false;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._advanceBy(this.lastStartTagName.length);
        this.emitCurrentTagToken();
        this.state = State.DATA;
        return false;
      }
      default: {
        return !this._ensureHibernation();
      }
    }
  }
  // RCDATA end tag name state
  //------------------------------------------------------------------
  _stateRcdataEndTagName(cp) {
    if (this.handleSpecialEndTag(cp)) {
      this._emitChars("</");
      this.state = State.RCDATA;
      this._stateRcdata(cp);
    }
  }
  // RAWTEXT less-than sign state
  //------------------------------------------------------------------
  _stateRawtextLessThanSign(cp) {
    if (cp === CODE_POINTS.SOLIDUS) {
      this.state = State.RAWTEXT_END_TAG_OPEN;
    } else {
      this._emitChars("<");
      this.state = State.RAWTEXT;
      this._stateRawtext(cp);
    }
  }
  // RAWTEXT end tag open state
  //------------------------------------------------------------------
  _stateRawtextEndTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this.state = State.RAWTEXT_END_TAG_NAME;
      this._stateRawtextEndTagName(cp);
    } else {
      this._emitChars("</");
      this.state = State.RAWTEXT;
      this._stateRawtext(cp);
    }
  }
  // RAWTEXT end tag name state
  //------------------------------------------------------------------
  _stateRawtextEndTagName(cp) {
    if (this.handleSpecialEndTag(cp)) {
      this._emitChars("</");
      this.state = State.RAWTEXT;
      this._stateRawtext(cp);
    }
  }
  // Script data less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataLessThanSign(cp) {
    switch (cp) {
      case CODE_POINTS.SOLIDUS: {
        this.state = State.SCRIPT_DATA_END_TAG_OPEN;
        break;
      }
      case CODE_POINTS.EXCLAMATION_MARK: {
        this.state = State.SCRIPT_DATA_ESCAPE_START;
        this._emitChars("<!");
        break;
      }
      default: {
        this._emitChars("<");
        this.state = State.SCRIPT_DATA;
        this._stateScriptData(cp);
      }
    }
  }
  // Script data end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEndTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this.state = State.SCRIPT_DATA_END_TAG_NAME;
      this._stateScriptDataEndTagName(cp);
    } else {
      this._emitChars("</");
      this.state = State.SCRIPT_DATA;
      this._stateScriptData(cp);
    }
  }
  // Script data end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEndTagName(cp) {
    if (this.handleSpecialEndTag(cp)) {
      this._emitChars("</");
      this.state = State.SCRIPT_DATA;
      this._stateScriptData(cp);
    }
  }
  // Script data escape start state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStart(cp) {
    if (cp === CODE_POINTS.HYPHEN_MINUS) {
      this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;
      this._emitChars("-");
    } else {
      this.state = State.SCRIPT_DATA;
      this._stateScriptData(cp);
    }
  }
  // Script data escape start dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStartDash(cp) {
    if (cp === CODE_POINTS.HYPHEN_MINUS) {
      this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;
      this._emitChars("-");
    } else {
      this.state = State.SCRIPT_DATA;
      this._stateScriptData(cp);
    }
  }
  // Script data escaped state
  //------------------------------------------------------------------
  _stateScriptDataEscaped(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.SCRIPT_DATA_ESCAPED_DASH;
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDash(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.state = State.SCRIPT_DATA_ESCAPED;
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this.state = State.SCRIPT_DATA_ESCAPED;
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDashDash(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.SCRIPT_DATA;
        this._emitChars(">");
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.state = State.SCRIPT_DATA_ESCAPED;
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this.state = State.SCRIPT_DATA_ESCAPED;
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataEscapedLessThanSign(cp) {
    if (cp === CODE_POINTS.SOLIDUS) {
      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;
    } else if (isAsciiLetter(cp)) {
      this._emitChars("<");
      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;
      this._stateScriptDataDoubleEscapeStart(cp);
    } else {
      this._emitChars("<");
      this.state = State.SCRIPT_DATA_ESCAPED;
      this._stateScriptDataEscaped(cp);
    }
  }
  // Script data escaped end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagOpen(cp) {
    if (isAsciiLetter(cp)) {
      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;
      this._stateScriptDataEscapedEndTagName(cp);
    } else {
      this._emitChars("</");
      this.state = State.SCRIPT_DATA_ESCAPED;
      this._stateScriptDataEscaped(cp);
    }
  }
  // Script data escaped end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagName(cp) {
    if (this.handleSpecialEndTag(cp)) {
      this._emitChars("</");
      this.state = State.SCRIPT_DATA_ESCAPED;
      this._stateScriptDataEscaped(cp);
    }
  }
  // Script data double escape start state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeStart(cp) {
    if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
      this._emitCodePoint(cp);
      for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {
        this._emitCodePoint(this._consume());
      }
      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
    } else if (!this._ensureHibernation()) {
      this.state = State.SCRIPT_DATA_ESCAPED;
      this._stateScriptDataEscaped(cp);
    }
  }
  // Script data double escaped state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscaped(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
        this._emitChars("<");
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data double escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDash(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
        this._emitChars("<");
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data double escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDashDash(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
        this._emitChars("<");
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.SCRIPT_DATA;
        this._emitChars(">");
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
        this._emitChars(REPLACEMENT_CHARACTER);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInScriptHtmlCommentLikeText);
        this._emitEOFToken();
        break;
      }
      default: {
        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
        this._emitCodePoint(cp);
      }
    }
  }
  // Script data double escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedLessThanSign(cp) {
    if (cp === CODE_POINTS.SOLIDUS) {
      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;
      this._emitChars("/");
    } else {
      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
      this._stateScriptDataDoubleEscaped(cp);
    }
  }
  // Script data double escape end state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeEnd(cp) {
    if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
      this._emitCodePoint(cp);
      for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {
        this._emitCodePoint(this._consume());
      }
      this.state = State.SCRIPT_DATA_ESCAPED;
    } else if (!this._ensureHibernation()) {
      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
      this._stateScriptDataDoubleEscaped(cp);
    }
  }
  // Before attribute name state
  //------------------------------------------------------------------
  _stateBeforeAttributeName(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.SOLIDUS:
      case CODE_POINTS.GREATER_THAN_SIGN:
      case CODE_POINTS.EOF: {
        this.state = State.AFTER_ATTRIBUTE_NAME;
        this._stateAfterAttributeName(cp);
        break;
      }
      case CODE_POINTS.EQUALS_SIGN: {
        this._err(ERR.unexpectedEqualsSignBeforeAttributeName);
        this._createAttr("=");
        this.state = State.ATTRIBUTE_NAME;
        break;
      }
      default: {
        this._createAttr("");
        this.state = State.ATTRIBUTE_NAME;
        this._stateAttributeName(cp);
      }
    }
  }
  // Attribute name state
  //------------------------------------------------------------------
  _stateAttributeName(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED:
      case CODE_POINTS.SOLIDUS:
      case CODE_POINTS.GREATER_THAN_SIGN:
      case CODE_POINTS.EOF: {
        this._leaveAttrName();
        this.state = State.AFTER_ATTRIBUTE_NAME;
        this._stateAfterAttributeName(cp);
        break;
      }
      case CODE_POINTS.EQUALS_SIGN: {
        this._leaveAttrName();
        this.state = State.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case CODE_POINTS.QUOTATION_MARK:
      case CODE_POINTS.APOSTROPHE:
      case CODE_POINTS.LESS_THAN_SIGN: {
        this._err(ERR.unexpectedCharacterInAttributeName);
        this.currentAttr.name += String.fromCodePoint(cp);
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.currentAttr.name += REPLACEMENT_CHARACTER;
        break;
      }
      default: {
        this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
      }
    }
  }
  // After attribute name state
  //------------------------------------------------------------------
  _stateAfterAttributeName(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.SOLIDUS: {
        this.state = State.SELF_CLOSING_START_TAG;
        break;
      }
      case CODE_POINTS.EQUALS_SIGN: {
        this.state = State.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this._createAttr("");
        this.state = State.ATTRIBUTE_NAME;
        this._stateAttributeName(cp);
      }
    }
  }
  // Before attribute value state
  //------------------------------------------------------------------
  _stateBeforeAttributeValue(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.missingAttributeValue);
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      default: {
        this.state = State.ATTRIBUTE_VALUE_UNQUOTED;
        this._stateAttributeValueUnquoted(cp);
      }
    }
  }
  // Attribute value (double-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueDoubleQuoted(cp) {
    switch (cp) {
      case CODE_POINTS.QUOTATION_MARK: {
        this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case CODE_POINTS.AMPERSAND: {
        this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
        this.state = State.CHARACTER_REFERENCE;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.currentAttr.value += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this.currentAttr.value += String.fromCodePoint(cp);
      }
    }
  }
  // Attribute value (single-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueSingleQuoted(cp) {
    switch (cp) {
      case CODE_POINTS.APOSTROPHE: {
        this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case CODE_POINTS.AMPERSAND: {
        this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;
        this.state = State.CHARACTER_REFERENCE;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.currentAttr.value += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this.currentAttr.value += String.fromCodePoint(cp);
      }
    }
  }
  // Attribute value (unquoted) state
  //------------------------------------------------------------------
  _stateAttributeValueUnquoted(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this._leaveAttrValue();
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case CODE_POINTS.AMPERSAND: {
        this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;
        this.state = State.CHARACTER_REFERENCE;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._leaveAttrValue();
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        this.currentAttr.value += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.QUOTATION_MARK:
      case CODE_POINTS.APOSTROPHE:
      case CODE_POINTS.LESS_THAN_SIGN:
      case CODE_POINTS.EQUALS_SIGN:
      case CODE_POINTS.GRAVE_ACCENT: {
        this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);
        this.currentAttr.value += String.fromCodePoint(cp);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this.currentAttr.value += String.fromCodePoint(cp);
      }
    }
  }
  // After attribute value (quoted) state
  //------------------------------------------------------------------
  _stateAfterAttributeValueQuoted(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this._leaveAttrValue();
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case CODE_POINTS.SOLIDUS: {
        this._leaveAttrValue();
        this.state = State.SELF_CLOSING_START_TAG;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._leaveAttrValue();
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingWhitespaceBetweenAttributes);
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        this._stateBeforeAttributeName(cp);
      }
    }
  }
  // Self-closing start tag state
  //------------------------------------------------------------------
  _stateSelfClosingStartTag(cp) {
    switch (cp) {
      case CODE_POINTS.GREATER_THAN_SIGN: {
        const token = this.currentToken;
        token.selfClosing = true;
        this.state = State.DATA;
        this.emitCurrentTagToken();
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInTag);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.unexpectedSolidusInTag);
        this.state = State.BEFORE_ATTRIBUTE_NAME;
        this._stateBeforeAttributeName(cp);
      }
    }
  }
  // Bogus comment state
  //------------------------------------------------------------------
  _stateBogusComment(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentComment(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.data += REPLACEMENT_CHARACTER;
        break;
      }
      default: {
        token.data += String.fromCodePoint(cp);
      }
    }
  }
  // Markup declaration open state
  //------------------------------------------------------------------
  _stateMarkupDeclarationOpen(cp) {
    if (this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, true)) {
      this._createCommentToken(SEQUENCES.DASH_DASH.length + 1);
      this.state = State.COMMENT_START;
    } else if (this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, false)) {
      this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1);
      this.state = State.DOCTYPE;
    } else if (this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, true)) {
      if (this.inForeignNode) {
        this.state = State.CDATA_SECTION;
      } else {
        this._err(ERR.cdataInHtmlContent);
        this._createCommentToken(SEQUENCES.CDATA_START.length + 1);
        this.currentToken.data = "[CDATA[";
        this.state = State.BOGUS_COMMENT;
      }
    } else if (!this._ensureHibernation()) {
      this._err(ERR.incorrectlyOpenedComment);
      this._createCommentToken(2);
      this.state = State.BOGUS_COMMENT;
      this._stateBogusComment(cp);
    }
  }
  // Comment start state
  //------------------------------------------------------------------
  _stateCommentStart(cp) {
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.COMMENT_START_DASH;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptClosingOfEmptyComment);
        this.state = State.DATA;
        const token = this.currentToken;
        this.emitCurrentComment(token);
        break;
      }
      default: {
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // Comment start dash state
  //------------------------------------------------------------------
  _stateCommentStartDash(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.COMMENT_END;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptClosingOfEmptyComment);
        this.state = State.DATA;
        this.emitCurrentComment(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInComment);
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.data += "-";
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // Comment state
  //------------------------------------------------------------------
  _stateComment(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.COMMENT_END_DASH;
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        token.data += "<";
        this.state = State.COMMENT_LESS_THAN_SIGN;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.data += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInComment);
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.data += String.fromCodePoint(cp);
      }
    }
  }
  // Comment less-than sign state
  //------------------------------------------------------------------
  _stateCommentLessThanSign(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.EXCLAMATION_MARK: {
        token.data += "!";
        this.state = State.COMMENT_LESS_THAN_SIGN_BANG;
        break;
      }
      case CODE_POINTS.LESS_THAN_SIGN: {
        token.data += "<";
        break;
      }
      default: {
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // Comment less-than sign bang state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBang(cp) {
    if (cp === CODE_POINTS.HYPHEN_MINUS) {
      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;
    } else {
      this.state = State.COMMENT;
      this._stateComment(cp);
    }
  }
  // Comment less-than sign bang dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDash(cp) {
    if (cp === CODE_POINTS.HYPHEN_MINUS) {
      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;
    } else {
      this.state = State.COMMENT_END_DASH;
      this._stateCommentEndDash(cp);
    }
  }
  // Comment less-than sign bang dash dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDashDash(cp) {
    if (cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF) {
      this._err(ERR.nestedComment);
    }
    this.state = State.COMMENT_END;
    this._stateCommentEnd(cp);
  }
  // Comment end dash state
  //------------------------------------------------------------------
  _stateCommentEndDash(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        this.state = State.COMMENT_END;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInComment);
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.data += "-";
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // Comment end state
  //------------------------------------------------------------------
  _stateCommentEnd(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentComment(token);
        break;
      }
      case CODE_POINTS.EXCLAMATION_MARK: {
        this.state = State.COMMENT_END_BANG;
        break;
      }
      case CODE_POINTS.HYPHEN_MINUS: {
        token.data += "-";
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInComment);
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.data += "--";
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // Comment end bang state
  //------------------------------------------------------------------
  _stateCommentEndBang(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.HYPHEN_MINUS: {
        token.data += "--!";
        this.state = State.COMMENT_END_DASH;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.incorrectlyClosedComment);
        this.state = State.DATA;
        this.emitCurrentComment(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInComment);
        this.emitCurrentComment(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.data += "--!";
        this.state = State.COMMENT;
        this._stateComment(cp);
      }
    }
  }
  // DOCTYPE state
  //------------------------------------------------------------------
  _stateDoctype(cp) {
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.BEFORE_DOCTYPE_NAME;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.BEFORE_DOCTYPE_NAME;
        this._stateBeforeDoctypeName(cp);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        this._createDoctypeToken(null);
        const token = this.currentToken;
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingWhitespaceBeforeDoctypeName);
        this.state = State.BEFORE_DOCTYPE_NAME;
        this._stateBeforeDoctypeName(cp);
      }
    }
  }
  // Before DOCTYPE name state
  //------------------------------------------------------------------
  _stateBeforeDoctypeName(cp) {
    if (isAsciiUpper(cp)) {
      this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));
      this.state = State.DOCTYPE_NAME;
    } else
      switch (cp) {
        case CODE_POINTS.SPACE:
        case CODE_POINTS.LINE_FEED:
        case CODE_POINTS.TABULATION:
        case CODE_POINTS.FORM_FEED: {
          break;
        }
        case CODE_POINTS.NULL: {
          this._err(ERR.unexpectedNullCharacter);
          this._createDoctypeToken(REPLACEMENT_CHARACTER);
          this.state = State.DOCTYPE_NAME;
          break;
        }
        case CODE_POINTS.GREATER_THAN_SIGN: {
          this._err(ERR.missingDoctypeName);
          this._createDoctypeToken(null);
          const token = this.currentToken;
          token.forceQuirks = true;
          this.emitCurrentDoctype(token);
          this.state = State.DATA;
          break;
        }
        case CODE_POINTS.EOF: {
          this._err(ERR.eofInDoctype);
          this._createDoctypeToken(null);
          const token = this.currentToken;
          token.forceQuirks = true;
          this.emitCurrentDoctype(token);
          this._emitEOFToken();
          break;
        }
        default: {
          this._createDoctypeToken(String.fromCodePoint(cp));
          this.state = State.DOCTYPE_NAME;
        }
      }
  }
  // DOCTYPE name state
  //------------------------------------------------------------------
  _stateDoctypeName(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.AFTER_DOCTYPE_NAME;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.name += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
      }
    }
  }
  // After DOCTYPE name state
  //------------------------------------------------------------------
  _stateAfterDoctypeName(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        if (this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, false)) {
          this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;
        } else if (this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, false)) {
          this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;
        } else if (!this._ensureHibernation()) {
          this._err(ERR.invalidCharacterSequenceAfterDoctypeName);
          token.forceQuirks = true;
          this.state = State.BOGUS_DOCTYPE;
          this._stateBogusDoctype(cp);
        }
      }
    }
  }
  // After DOCTYPE public keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicKeyword(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
        token.publicId = "";
        this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
        token.publicId = "";
        this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.missingDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // Before DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypePublicIdentifier(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        token.publicId = "";
        this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        token.publicId = "";
        this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.missingDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // DOCTYPE public identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierDoubleQuoted(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.QUOTATION_MARK: {
        this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.publicId += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.publicId += String.fromCodePoint(cp);
      }
    }
  }
  // DOCTYPE public identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierSingleQuoted(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.APOSTROPHE: {
        this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.publicId += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptDoctypePublicIdentifier);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.publicId += String.fromCodePoint(cp);
      }
    }
  }
  // After DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicIdentifier(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // Between DOCTYPE public and system identifiers state
  //------------------------------------------------------------------
  _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // After DOCTYPE system keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemKeyword(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.missingDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // Before DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypeSystemIdentifier(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.QUOTATION_MARK: {
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case CODE_POINTS.APOSTROPHE: {
        token.systemId = "";
        this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.missingDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.DATA;
        this.emitCurrentDoctype(token);
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // DOCTYPE system identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierDoubleQuoted(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.QUOTATION_MARK: {
        this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.systemId += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.systemId += String.fromCodePoint(cp);
      }
    }
  }
  // DOCTYPE system identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierSingleQuoted(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.APOSTROPHE: {
        this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        token.systemId += REPLACEMENT_CHARACTER;
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this._err(ERR.abruptDoctypeSystemIdentifier);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        token.systemId += String.fromCodePoint(cp);
      }
    }
  }
  // After DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemIdentifier(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.SPACE:
      case CODE_POINTS.LINE_FEED:
      case CODE_POINTS.TABULATION:
      case CODE_POINTS.FORM_FEED: {
        break;
      }
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInDoctype);
        token.forceQuirks = true;
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default: {
        this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);
        this.state = State.BOGUS_DOCTYPE;
        this._stateBogusDoctype(cp);
      }
    }
  }
  // Bogus DOCTYPE state
  //------------------------------------------------------------------
  _stateBogusDoctype(cp) {
    const token = this.currentToken;
    switch (cp) {
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(token);
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.NULL: {
        this._err(ERR.unexpectedNullCharacter);
        break;
      }
      case CODE_POINTS.EOF: {
        this.emitCurrentDoctype(token);
        this._emitEOFToken();
        break;
      }
      default:
    }
  }
  // CDATA section state
  //------------------------------------------------------------------
  _stateCdataSection(cp) {
    switch (cp) {
      case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
        this.state = State.CDATA_SECTION_BRACKET;
        break;
      }
      case CODE_POINTS.EOF: {
        this._err(ERR.eofInCdata);
        this._emitEOFToken();
        break;
      }
      default: {
        this._emitCodePoint(cp);
      }
    }
  }
  // CDATA section bracket state
  //------------------------------------------------------------------
  _stateCdataSectionBracket(cp) {
    if (cp === CODE_POINTS.RIGHT_SQUARE_BRACKET) {
      this.state = State.CDATA_SECTION_END;
    } else {
      this._emitChars("]");
      this.state = State.CDATA_SECTION;
      this._stateCdataSection(cp);
    }
  }
  // CDATA section end state
  //------------------------------------------------------------------
  _stateCdataSectionEnd(cp) {
    switch (cp) {
      case CODE_POINTS.GREATER_THAN_SIGN: {
        this.state = State.DATA;
        break;
      }
      case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
        this._emitChars("]");
        break;
      }
      default: {
        this._emitChars("]]");
        this.state = State.CDATA_SECTION;
        this._stateCdataSection(cp);
      }
    }
  }
  // Character reference state
  //------------------------------------------------------------------
  _stateCharacterReference(cp) {
    if (cp === CODE_POINTS.NUMBER_SIGN) {
      this.state = State.NUMERIC_CHARACTER_REFERENCE;
    } else if (isAsciiAlphaNumeric2(cp)) {
      this.state = State.NAMED_CHARACTER_REFERENCE;
      this._stateNamedCharacterReference(cp);
    } else {
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);
      this._reconsumeInState(this.returnState, cp);
    }
  }
  // Named character reference state
  //------------------------------------------------------------------
  _stateNamedCharacterReference(cp) {
    const matchResult = this._matchNamedCharacterReference(cp);
    if (this._ensureHibernation()) {
    } else if (matchResult) {
      for (let i = 0; i < matchResult.length; i++) {
        this._flushCodePointConsumedAsCharacterReference(matchResult[i]);
      }
      this.state = this.returnState;
    } else {
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);
      this.state = State.AMBIGUOUS_AMPERSAND;
    }
  }
  // Ambiguos ampersand state
  //------------------------------------------------------------------
  _stateAmbiguousAmpersand(cp) {
    if (isAsciiAlphaNumeric2(cp)) {
      this._flushCodePointConsumedAsCharacterReference(cp);
    } else {
      if (cp === CODE_POINTS.SEMICOLON) {
        this._err(ERR.unknownNamedCharacterReference);
      }
      this._reconsumeInState(this.returnState, cp);
    }
  }
  // Numeric character reference state
  //------------------------------------------------------------------
  _stateNumericCharacterReference(cp) {
    this.charRefCode = 0;
    if (cp === CODE_POINTS.LATIN_SMALL_X || cp === CODE_POINTS.LATIN_CAPITAL_X) {
      this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;
    } else if (isAsciiDigit(cp)) {
      this.state = State.DECIMAL_CHARACTER_REFERENCE;
      this._stateDecimalCharacterReference(cp);
    } else {
      this._err(ERR.absenceOfDigitsInNumericCharacterReference);
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);
      this._reconsumeInState(this.returnState, cp);
    }
  }
  // Hexademical character reference start state
  //------------------------------------------------------------------
  _stateHexademicalCharacterReferenceStart(cp) {
    if (isAsciiHexDigit(cp)) {
      this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;
      this._stateHexademicalCharacterReference(cp);
    } else {
      this._err(ERR.absenceOfDigitsInNumericCharacterReference);
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);
      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);
      this._unconsume(2);
      this.state = this.returnState;
    }
  }
  // Hexademical character reference state
  //------------------------------------------------------------------
  _stateHexademicalCharacterReference(cp) {
    if (isAsciiUpperHexDigit(cp)) {
      this.charRefCode = this.charRefCode * 16 + cp - 55;
    } else if (isAsciiLowerHexDigit(cp)) {
      this.charRefCode = this.charRefCode * 16 + cp - 87;
    } else if (isAsciiDigit(cp)) {
      this.charRefCode = this.charRefCode * 16 + cp - 48;
    } else if (cp === CODE_POINTS.SEMICOLON) {
      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;
    } else {
      this._err(ERR.missingSemicolonAfterCharacterReference);
      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;
      this._stateNumericCharacterReferenceEnd(cp);
    }
  }
  // Decimal character reference state
  //------------------------------------------------------------------
  _stateDecimalCharacterReference(cp) {
    if (isAsciiDigit(cp)) {
      this.charRefCode = this.charRefCode * 10 + cp - 48;
    } else if (cp === CODE_POINTS.SEMICOLON) {
      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;
    } else {
      this._err(ERR.missingSemicolonAfterCharacterReference);
      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;
      this._stateNumericCharacterReferenceEnd(cp);
    }
  }
  // Numeric character reference end state
  //------------------------------------------------------------------
  _stateNumericCharacterReferenceEnd(cp) {
    if (this.charRefCode === CODE_POINTS.NULL) {
      this._err(ERR.nullCharacterReference);
      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
    } else if (this.charRefCode > 1114111) {
      this._err(ERR.characterReferenceOutsideUnicodeRange);
      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
    } else if (isSurrogate(this.charRefCode)) {
      this._err(ERR.surrogateCharacterReference);
      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
    } else if (isUndefinedCodePoint(this.charRefCode)) {
      this._err(ERR.noncharacterCharacterReference);
    } else if (isControlCodePoint(this.charRefCode) || this.charRefCode === CODE_POINTS.CARRIAGE_RETURN) {
      this._err(ERR.controlCharacterReference);
      const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);
      if (replacement !== void 0) {
        this.charRefCode = replacement;
      }
    }
    this._flushCodePointConsumedAsCharacterReference(this.charRefCode);
    this._reconsumeInState(this.returnState, cp);
  }
};

// node_modules/parse5/dist/parser/open-element-stack.js
var IMPLICIT_END_TAG_REQUIRED = /* @__PURE__ */ new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]);
var IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = /* @__PURE__ */ new Set([
  ...IMPLICIT_END_TAG_REQUIRED,
  TAG_ID.CAPTION,
  TAG_ID.COLGROUP,
  TAG_ID.TBODY,
  TAG_ID.TD,
  TAG_ID.TFOOT,
  TAG_ID.TH,
  TAG_ID.THEAD,
  TAG_ID.TR
]);
var SCOPING_ELEMENT_NS = /* @__PURE__ */ new Map([
  [TAG_ID.APPLET, NS.HTML],
  [TAG_ID.CAPTION, NS.HTML],
  [TAG_ID.HTML, NS.HTML],
  [TAG_ID.MARQUEE, NS.HTML],
  [TAG_ID.OBJECT, NS.HTML],
  [TAG_ID.TABLE, NS.HTML],
  [TAG_ID.TD, NS.HTML],
  [TAG_ID.TEMPLATE, NS.HTML],
  [TAG_ID.TH, NS.HTML],
  [TAG_ID.ANNOTATION_XML, NS.MATHML],
  [TAG_ID.MI, NS.MATHML],
  [TAG_ID.MN, NS.MATHML],
  [TAG_ID.MO, NS.MATHML],
  [TAG_ID.MS, NS.MATHML],
  [TAG_ID.MTEXT, NS.MATHML],
  [TAG_ID.DESC, NS.SVG],
  [TAG_ID.FOREIGN_OBJECT, NS.SVG],
  [TAG_ID.TITLE, NS.SVG]
]);
var NAMED_HEADERS = [TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6];
var TABLE_ROW_CONTEXT = [TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML];
var TABLE_BODY_CONTEXT = [TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML];
var TABLE_CONTEXT = [TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML];
var TABLE_CELLS = [TAG_ID.TD, TAG_ID.TH];
var OpenElementStack = class {
  get currentTmplContentOrNode() {
    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;
  }
  constructor(document2, treeAdapter, handler) {
    this.treeAdapter = treeAdapter;
    this.handler = handler;
    this.items = [];
    this.tagIDs = [];
    this.stackTop = -1;
    this.tmplCount = 0;
    this.currentTagId = TAG_ID.UNKNOWN;
    this.current = document2;
  }
  //Index of element
  _indexOf(element) {
    return this.items.lastIndexOf(element, this.stackTop);
  }
  //Update current element
  _isInTemplate() {
    return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
  }
  _updateCurrentElement() {
    this.current = this.items[this.stackTop];
    this.currentTagId = this.tagIDs[this.stackTop];
  }
  //Mutations
  push(element, tagID) {
    this.stackTop++;
    this.items[this.stackTop] = element;
    this.current = element;
    this.tagIDs[this.stackTop] = tagID;
    this.currentTagId = tagID;
    if (this._isInTemplate()) {
      this.tmplCount++;
    }
    this.handler.onItemPush(element, tagID, true);
  }
  pop() {
    const popped = this.current;
    if (this.tmplCount > 0 && this._isInTemplate()) {
      this.tmplCount--;
    }
    this.stackTop--;
    this._updateCurrentElement();
    this.handler.onItemPop(popped, true);
  }
  replace(oldElement, newElement) {
    const idx = this._indexOf(oldElement);
    this.items[idx] = newElement;
    if (idx === this.stackTop) {
      this.current = newElement;
    }
  }
  insertAfter(referenceElement, newElement, newElementID) {
    const insertionIdx = this._indexOf(referenceElement) + 1;
    this.items.splice(insertionIdx, 0, newElement);
    this.tagIDs.splice(insertionIdx, 0, newElementID);
    this.stackTop++;
    if (insertionIdx === this.stackTop) {
      this._updateCurrentElement();
    }
    this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);
  }
  popUntilTagNamePopped(tagName) {
    let targetIdx = this.stackTop + 1;
    do {
      targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);
    } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);
    this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);
  }
  shortenToLength(idx) {
    while (this.stackTop >= idx) {
      const popped = this.current;
      if (this.tmplCount > 0 && this._isInTemplate()) {
        this.tmplCount -= 1;
      }
      this.stackTop--;
      this._updateCurrentElement();
      this.handler.onItemPop(popped, this.stackTop < idx);
    }
  }
  popUntilElementPopped(element) {
    const idx = this._indexOf(element);
    this.shortenToLength(idx < 0 ? 0 : idx);
  }
  popUntilPopped(tagNames, targetNS) {
    const idx = this._indexOfTagNames(tagNames, targetNS);
    this.shortenToLength(idx < 0 ? 0 : idx);
  }
  popUntilNumberedHeaderPopped() {
    this.popUntilPopped(NAMED_HEADERS, NS.HTML);
  }
  popUntilTableCellPopped() {
    this.popUntilPopped(TABLE_CELLS, NS.HTML);
  }
  popAllUpToHtmlElement() {
    this.tmplCount = 0;
    this.shortenToLength(1);
  }
  _indexOfTagNames(tagNames, namespace) {
    for (let i = this.stackTop; i >= 0; i--) {
      if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {
        return i;
      }
    }
    return -1;
  }
  clearBackTo(tagNames, targetNS) {
    const idx = this._indexOfTagNames(tagNames, targetNS);
    this.shortenToLength(idx + 1);
  }
  clearBackToTableContext() {
    this.clearBackTo(TABLE_CONTEXT, NS.HTML);
  }
  clearBackToTableBodyContext() {
    this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);
  }
  clearBackToTableRowContext() {
    this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);
  }
  remove(element) {
    const idx = this._indexOf(element);
    if (idx >= 0) {
      if (idx === this.stackTop) {
        this.pop();
      } else {
        this.items.splice(idx, 1);
        this.tagIDs.splice(idx, 1);
        this.stackTop--;
        this._updateCurrentElement();
        this.handler.onItemPop(element, false);
      }
    }
  }
  //Search
  tryPeekProperlyNestedBodyElement() {
    return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;
  }
  contains(element) {
    return this._indexOf(element) > -1;
  }
  getCommonAncestor(element) {
    const elementIdx = this._indexOf(element) - 1;
    return elementIdx >= 0 ? this.items[elementIdx] : null;
  }
  isRootHtmlElementCurrent() {
    return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;
  }
  //Element in scope
  hasInScope(tagName) {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (tn === tagName && ns === NS.HTML) {
        return true;
      }
      if (SCOPING_ELEMENT_NS.get(tn) === ns) {
        return false;
      }
    }
    return true;
  }
  hasNumberedHeaderInScope() {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (isNumberedHeader(tn) && ns === NS.HTML) {
        return true;
      }
      if (SCOPING_ELEMENT_NS.get(tn) === ns) {
        return false;
      }
    }
    return true;
  }
  hasInListItemScope(tagName) {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (tn === tagName && ns === NS.HTML) {
        return true;
      }
      if ((tn === TAG_ID.UL || tn === TAG_ID.OL) && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {
        return false;
      }
    }
    return true;
  }
  hasInButtonScope(tagName) {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (tn === tagName && ns === NS.HTML) {
        return true;
      }
      if (tn === TAG_ID.BUTTON && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {
        return false;
      }
    }
    return true;
  }
  hasInTableScope(tagName) {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (ns !== NS.HTML) {
        continue;
      }
      if (tn === tagName) {
        return true;
      }
      if (tn === TAG_ID.TABLE || tn === TAG_ID.TEMPLATE || tn === TAG_ID.HTML) {
        return false;
      }
    }
    return true;
  }
  hasTableBodyContextInTableScope() {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (ns !== NS.HTML) {
        continue;
      }
      if (tn === TAG_ID.TBODY || tn === TAG_ID.THEAD || tn === TAG_ID.TFOOT) {
        return true;
      }
      if (tn === TAG_ID.TABLE || tn === TAG_ID.HTML) {
        return false;
      }
    }
    return true;
  }
  hasInSelectScope(tagName) {
    for (let i = this.stackTop; i >= 0; i--) {
      const tn = this.tagIDs[i];
      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);
      if (ns !== NS.HTML) {
        continue;
      }
      if (tn === tagName) {
        return true;
      }
      if (tn !== TAG_ID.OPTION && tn !== TAG_ID.OPTGROUP) {
        return false;
      }
    }
    return true;
  }
  //Implied end tags
  generateImpliedEndTags() {
    while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {
      this.pop();
    }
  }
  generateImpliedEndTagsThoroughly() {
    while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {
      this.pop();
    }
  }
  generateImpliedEndTagsWithExclusion(exclusionId) {
    while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {
      this.pop();
    }
  }
};

// node_modules/parse5/dist/parser/formatting-element-list.js
var NOAH_ARK_CAPACITY = 3;
var EntryType;
(function(EntryType2) {
  EntryType2[EntryType2["Marker"] = 0] = "Marker";
  EntryType2[EntryType2["Element"] = 1] = "Element";
})(EntryType = EntryType || (EntryType = {}));
var MARKER = { type: EntryType.Marker };
var FormattingElementList = class {
  constructor(treeAdapter) {
    this.treeAdapter = treeAdapter;
    this.entries = [];
    this.bookmark = null;
  }
  //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.
  _getNoahArkConditionCandidates(newElement, neAttrs) {
    const candidates = [];
    const neAttrsLength = neAttrs.length;
    const neTagName = this.treeAdapter.getTagName(newElement);
    const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
    for (let i = 0; i < this.entries.length; i++) {
      const entry = this.entries[i];
      if (entry.type === EntryType.Marker) {
        break;
      }
      const { element } = entry;
      if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {
        const elementAttrs = this.treeAdapter.getAttrList(element);
        if (elementAttrs.length === neAttrsLength) {
          candidates.push({ idx: i, attrs: elementAttrs });
        }
      }
    }
    return candidates;
  }
  _ensureNoahArkCondition(newElement) {
    if (this.entries.length < NOAH_ARK_CAPACITY)
      return;
    const neAttrs = this.treeAdapter.getAttrList(newElement);
    const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);
    if (candidates.length < NOAH_ARK_CAPACITY)
      return;
    const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));
    let validCandidates = 0;
    for (let i = 0; i < candidates.length; i++) {
      const candidate = candidates[i];
      if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {
        validCandidates += 1;
        if (validCandidates >= NOAH_ARK_CAPACITY) {
          this.entries.splice(candidate.idx, 1);
        }
      }
    }
  }
  //Mutations
  insertMarker() {
    this.entries.unshift(MARKER);
  }
  pushElement(element, token) {
    this._ensureNoahArkCondition(element);
    this.entries.unshift({
      type: EntryType.Element,
      element,
      token
    });
  }
  insertElementAfterBookmark(element, token) {
    const bookmarkIdx = this.entries.indexOf(this.bookmark);
    this.entries.splice(bookmarkIdx, 0, {
      type: EntryType.Element,
      element,
      token
    });
  }
  removeEntry(entry) {
    const entryIndex = this.entries.indexOf(entry);
    if (entryIndex >= 0) {
      this.entries.splice(entryIndex, 1);
    }
  }
  /**
   * Clears the list of formatting elements up to the last marker.
   *
   * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker
   */
  clearToLastMarker() {
    const markerIdx = this.entries.indexOf(MARKER);
    if (markerIdx >= 0) {
      this.entries.splice(0, markerIdx + 1);
    } else {
      this.entries.length = 0;
    }
  }
  //Search
  getElementEntryInScopeWithTagName(tagName) {
    const entry = this.entries.find((entry2) => entry2.type === EntryType.Marker || this.treeAdapter.getTagName(entry2.element) === tagName);
    return entry && entry.type === EntryType.Element ? entry : null;
  }
  getElementEntry(element) {
    return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);
  }
};

// node_modules/parse5/dist/tree-adapters/default.js
function createTextNode(value) {
  return {
    nodeName: "#text",
    value,
    parentNode: null
  };
}
var defaultTreeAdapter = {
  //Node construction
  createDocument() {
    return {
      nodeName: "#document",
      mode: DOCUMENT_MODE.NO_QUIRKS,
      childNodes: []
    };
  },
  createDocumentFragment() {
    return {
      nodeName: "#document-fragment",
      childNodes: []
    };
  },
  createElement(tagName, namespaceURI, attrs) {
    return {
      nodeName: tagName,
      tagName,
      attrs,
      namespaceURI,
      childNodes: [],
      parentNode: null
    };
  },
  createCommentNode(data) {
    return {
      nodeName: "#comment",
      data,
      parentNode: null
    };
  },
  //Tree mutation
  appendChild(parentNode, newNode) {
    parentNode.childNodes.push(newNode);
    newNode.parentNode = parentNode;
  },
  insertBefore(parentNode, newNode, referenceNode) {
    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);
    parentNode.childNodes.splice(insertionIdx, 0, newNode);
    newNode.parentNode = parentNode;
  },
  setTemplateContent(templateElement, contentElement) {
    templateElement.content = contentElement;
  },
  getTemplateContent(templateElement) {
    return templateElement.content;
  },
  setDocumentType(document2, name, publicId, systemId) {
    const doctypeNode = document2.childNodes.find((node) => node.nodeName === "#documentType");
    if (doctypeNode) {
      doctypeNode.name = name;
      doctypeNode.publicId = publicId;
      doctypeNode.systemId = systemId;
    } else {
      const node = {
        nodeName: "#documentType",
        name,
        publicId,
        systemId,
        parentNode: null
      };
      defaultTreeAdapter.appendChild(document2, node);
    }
  },
  setDocumentMode(document2, mode) {
    document2.mode = mode;
  },
  getDocumentMode(document2) {
    return document2.mode;
  },
  detachNode(node) {
    if (node.parentNode) {
      const idx = node.parentNode.childNodes.indexOf(node);
      node.parentNode.childNodes.splice(idx, 1);
      node.parentNode = null;
    }
  },
  insertText(parentNode, text) {
    if (parentNode.childNodes.length > 0) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
      if (defaultTreeAdapter.isTextNode(prevNode)) {
        prevNode.value += text;
        return;
      }
    }
    defaultTreeAdapter.appendChild(parentNode, createTextNode(text));
  },
  insertTextBefore(parentNode, text, referenceNode) {
    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
    if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {
      prevNode.value += text;
    } else {
      defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);
    }
  },
  adoptAttributes(recipient, attrs) {
    const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));
    for (let j = 0; j < attrs.length; j++) {
      if (!recipientAttrsMap.has(attrs[j].name)) {
        recipient.attrs.push(attrs[j]);
      }
    }
  },
  //Tree traversing
  getFirstChild(node) {
    return node.childNodes[0];
  },
  getChildNodes(node) {
    return node.childNodes;
  },
  getParentNode(node) {
    return node.parentNode;
  },
  getAttrList(element) {
    return element.attrs;
  },
  //Node data
  getTagName(element) {
    return element.tagName;
  },
  getNamespaceURI(element) {
    return element.namespaceURI;
  },
  getTextNodeContent(textNode) {
    return textNode.value;
  },
  getCommentNodeContent(commentNode) {
    return commentNode.data;
  },
  getDocumentTypeNodeName(doctypeNode) {
    return doctypeNode.name;
  },
  getDocumentTypeNodePublicId(doctypeNode) {
    return doctypeNode.publicId;
  },
  getDocumentTypeNodeSystemId(doctypeNode) {
    return doctypeNode.systemId;
  },
  //Node types
  isTextNode(node) {
    return node.nodeName === "#text";
  },
  isCommentNode(node) {
    return node.nodeName === "#comment";
  },
  isDocumentTypeNode(node) {
    return node.nodeName === "#documentType";
  },
  isElementNode(node) {
    return Object.prototype.hasOwnProperty.call(node, "tagName");
  },
  // Source code location
  setNodeSourceCodeLocation(node, location2) {
    node.sourceCodeLocation = location2;
  },
  getNodeSourceCodeLocation(node) {
    return node.sourceCodeLocation;
  },
  updateNodeSourceCodeLocation(node, endLocation) {
    node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };
  }
};

// node_modules/parse5/dist/common/doctype.js
var VALID_DOCTYPE_NAME = "html";
var VALID_SYSTEM_ID = "about:legacy-compat";
var QUIRKS_MODE_SYSTEM_ID = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd";
var QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
  "+//silmaril//dtd html pro v0r11 19970101//",
  "-//as//dtd html 3.0 aswedit + extensions//",
  "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
  "-//ietf//dtd html 2.0 level 1//",
  "-//ietf//dtd html 2.0 level 2//",
  "-//ietf//dtd html 2.0 strict level 1//",
  "-//ietf//dtd html 2.0 strict level 2//",
  "-//ietf//dtd html 2.0 strict//",
  "-//ietf//dtd html 2.0//",
  "-//ietf//dtd html 2.1e//",
  "-//ietf//dtd html 3.0//",
  "-//ietf//dtd html 3.2 final//",
  "-//ietf//dtd html 3.2//",
  "-//ietf//dtd html 3//",
  "-//ietf//dtd html level 0//",
  "-//ietf//dtd html level 1//",
  "-//ietf//dtd html level 2//",
  "-//ietf//dtd html level 3//",
  "-//ietf//dtd html strict level 0//",
  "-//ietf//dtd html strict level 1//",
  "-//ietf//dtd html strict level 2//",
  "-//ietf//dtd html strict level 3//",
  "-//ietf//dtd html strict//",
  "-//ietf//dtd html//",
  "-//metrius//dtd metrius presentational//",
  "-//microsoft//dtd internet explorer 2.0 html strict//",
  "-//microsoft//dtd internet explorer 2.0 html//",
  "-//microsoft//dtd internet explorer 2.0 tables//",
  "-//microsoft//dtd internet explorer 3.0 html strict//",
  "-//microsoft//dtd internet explorer 3.0 html//",
  "-//microsoft//dtd internet explorer 3.0 tables//",
  "-//netscape comm. corp.//dtd html//",
  "-//netscape comm. corp.//dtd strict html//",
  "-//o'reilly and associates//dtd html 2.0//",
  "-//o'reilly and associates//dtd html extended 1.0//",
  "-//o'reilly and associates//dtd html extended relaxed 1.0//",
  "-//sq//dtd html 2.0 hotmetal + extensions//",
  "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
  "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
  "-//spyglass//dtd html 2.0 extended//",
  "-//sun microsystems corp.//dtd hotjava html//",
  "-//sun microsystems corp.//dtd hotjava strict html//",
  "-//w3c//dtd html 3 1995-03-24//",
  "-//w3c//dtd html 3.2 draft//",
  "-//w3c//dtd html 3.2 final//",
  "-//w3c//dtd html 3.2//",
  "-//w3c//dtd html 3.2s draft//",
  "-//w3c//dtd html 4.0 frameset//",
  "-//w3c//dtd html 4.0 transitional//",
  "-//w3c//dtd html experimental 19960712//",
  "-//w3c//dtd html experimental 970421//",
  "-//w3c//dtd w3 html//",
  "-//w3o//dtd w3 html 3.0//",
  "-//webtechs//dtd mozilla html 2.0//",
  "-//webtechs//dtd mozilla html//"
];
var QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
  ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
];
var QUIRKS_MODE_PUBLIC_IDS = /* @__PURE__ */ new Set([
  "-//w3o//dtd w3 html strict 3.0//en//",
  "-/w3c/dtd html 4.0 transitional/en",
  "html"
]);
var LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"];
var LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
  ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
];
function hasPrefix(publicId, prefixes) {
  return prefixes.some((prefix) => publicId.startsWith(prefix));
}
function isConforming(token) {
  return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);
}
function getDocumentMode(token) {
  if (token.name !== VALID_DOCTYPE_NAME) {
    return DOCUMENT_MODE.QUIRKS;
  }
  const { systemId } = token;
  if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
    return DOCUMENT_MODE.QUIRKS;
  }
  let { publicId } = token;
  if (publicId !== null) {
    publicId = publicId.toLowerCase();
    if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {
      return DOCUMENT_MODE.QUIRKS;
    }
    let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
    if (hasPrefix(publicId, prefixes)) {
      return DOCUMENT_MODE.QUIRKS;
    }
    prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;
    if (hasPrefix(publicId, prefixes)) {
      return DOCUMENT_MODE.LIMITED_QUIRKS;
    }
  }
  return DOCUMENT_MODE.NO_QUIRKS;
}

// node_modules/parse5/dist/common/foreign-content.js
var foreign_content_exports = {};
__export(foreign_content_exports, {
  SVG_TAG_NAMES_ADJUSTMENT_MAP: () => SVG_TAG_NAMES_ADJUSTMENT_MAP,
  adjustTokenMathMLAttrs: () => adjustTokenMathMLAttrs,
  adjustTokenSVGAttrs: () => adjustTokenSVGAttrs,
  adjustTokenSVGTagName: () => adjustTokenSVGTagName,
  adjustTokenXMLAttrs: () => adjustTokenXMLAttrs,
  causesExit: () => causesExit,
  isIntegrationPoint: () => isIntegrationPoint
});
var MIME_TYPES = {
  TEXT_HTML: "text/html",
  APPLICATION_XML: "application/xhtml+xml"
};
var DEFINITION_URL_ATTR = "definitionurl";
var ADJUSTED_DEFINITION_URL_ATTR = "definitionURL";
var SVG_ATTRS_ADJUSTMENT_MAP = new Map([
  "attributeName",
  "attributeType",
  "baseFrequency",
  "baseProfile",
  "calcMode",
  "clipPathUnits",
  "diffuseConstant",
  "edgeMode",
  "filterUnits",
  "glyphRef",
  "gradientTransform",
  "gradientUnits",
  "kernelMatrix",
  "kernelUnitLength",
  "keyPoints",
  "keySplines",
  "keyTimes",
  "lengthAdjust",
  "limitingConeAngle",
  "markerHeight",
  "markerUnits",
  "markerWidth",
  "maskContentUnits",
  "maskUnits",
  "numOctaves",
  "pathLength",
  "patternContentUnits",
  "patternTransform",
  "patternUnits",
  "pointsAtX",
  "pointsAtY",
  "pointsAtZ",
  "preserveAlpha",
  "preserveAspectRatio",
  "primitiveUnits",
  "refX",
  "refY",
  "repeatCount",
  "repeatDur",
  "requiredExtensions",
  "requiredFeatures",
  "specularConstant",
  "specularExponent",
  "spreadMethod",
  "startOffset",
  "stdDeviation",
  "stitchTiles",
  "surfaceScale",
  "systemLanguage",
  "tableValues",
  "targetX",
  "targetY",
  "textLength",
  "viewBox",
  "viewTarget",
  "xChannelSelector",
  "yChannelSelector",
  "zoomAndPan"
].map((attr) => [attr.toLowerCase(), attr]));
var XML_ATTRS_ADJUSTMENT_MAP = /* @__PURE__ */ new Map([
  ["xlink:actuate", { prefix: "xlink", name: "actuate", namespace: NS.XLINK }],
  ["xlink:arcrole", { prefix: "xlink", name: "arcrole", namespace: NS.XLINK }],
  ["xlink:href", { prefix: "xlink", name: "href", namespace: NS.XLINK }],
  ["xlink:role", { prefix: "xlink", name: "role", namespace: NS.XLINK }],
  ["xlink:show", { prefix: "xlink", name: "show", namespace: NS.XLINK }],
  ["xlink:title", { prefix: "xlink", name: "title", namespace: NS.XLINK }],
  ["xlink:type", { prefix: "xlink", name: "type", namespace: NS.XLINK }],
  ["xml:base", { prefix: "xml", name: "base", namespace: NS.XML }],
  ["xml:lang", { prefix: "xml", name: "lang", namespace: NS.XML }],
  ["xml:space", { prefix: "xml", name: "space", namespace: NS.XML }],
  ["xmlns", { prefix: "", name: "xmlns", namespace: NS.XMLNS }],
  ["xmlns:xlink", { prefix: "xmlns", name: "xlink", namespace: NS.XMLNS }]
]);
var SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "textPath"
].map((tn) => [tn.toLowerCase(), tn]));
var EXITS_FOREIGN_CONTENT = /* @__PURE__ */ new Set([
  TAG_ID.B,
  TAG_ID.BIG,
  TAG_ID.BLOCKQUOTE,
  TAG_ID.BODY,
  TAG_ID.BR,
  TAG_ID.CENTER,
  TAG_ID.CODE,
  TAG_ID.DD,
  TAG_ID.DIV,
  TAG_ID.DL,
  TAG_ID.DT,
  TAG_ID.EM,
  TAG_ID.EMBED,
  TAG_ID.H1,
  TAG_ID.H2,
  TAG_ID.H3,
  TAG_ID.H4,
  TAG_ID.H5,
  TAG_ID.H6,
  TAG_ID.HEAD,
  TAG_ID.HR,
  TAG_ID.I,
  TAG_ID.IMG,
  TAG_ID.LI,
  TAG_ID.LISTING,
  TAG_ID.MENU,
  TAG_ID.META,
  TAG_ID.NOBR,
  TAG_ID.OL,
  TAG_ID.P,
  TAG_ID.PRE,
  TAG_ID.RUBY,
  TAG_ID.S,
  TAG_ID.SMALL,
  TAG_ID.SPAN,
  TAG_ID.STRONG,
  TAG_ID.STRIKE,
  TAG_ID.SUB,
  TAG_ID.SUP,
  TAG_ID.TABLE,
  TAG_ID.TT,
  TAG_ID.U,
  TAG_ID.UL,
  TAG_ID.VAR
]);
function causesExit(startTagToken) {
  const tn = startTagToken.tagID;
  const isFontWithAttrs = tn === TAG_ID.FONT && startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);
  return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);
}
function adjustTokenMathMLAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++) {
    if (token.attrs[i].name === DEFINITION_URL_ATTR) {
      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
      break;
    }
  }
}
function adjustTokenSVGAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++) {
    const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
    if (adjustedAttrName != null) {
      token.attrs[i].name = adjustedAttrName;
    }
  }
}
function adjustTokenXMLAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++) {
    const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
    if (adjustedAttrEntry) {
      token.attrs[i].prefix = adjustedAttrEntry.prefix;
      token.attrs[i].name = adjustedAttrEntry.name;
      token.attrs[i].namespace = adjustedAttrEntry.namespace;
    }
  }
}
function adjustTokenSVGTagName(token) {
  const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);
  if (adjustedTagName != null) {
    token.tagName = adjustedTagName;
    token.tagID = getTagID(token.tagName);
  }
}
function isMathMLTextIntegrationPoint(tn, ns) {
  return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);
}
function isHtmlIntegrationPoint(tn, ns, attrs) {
  if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {
    for (let i = 0; i < attrs.length; i++) {
      if (attrs[i].name === ATTRS.ENCODING) {
        const value = attrs[i].value.toLowerCase();
        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
      }
    }
  }
  return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);
}
function isIntegrationPoint(tn, ns, attrs, foreignNS) {
  return (!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);
}

// node_modules/parse5/dist/parser/index.js
var HIDDEN_INPUT_TYPE = "hidden";
var AA_OUTER_LOOP_ITER = 8;
var AA_INNER_LOOP_ITER = 3;
var InsertionMode;
(function(InsertionMode2) {
  InsertionMode2[InsertionMode2["INITIAL"] = 0] = "INITIAL";
  InsertionMode2[InsertionMode2["BEFORE_HTML"] = 1] = "BEFORE_HTML";
  InsertionMode2[InsertionMode2["BEFORE_HEAD"] = 2] = "BEFORE_HEAD";
  InsertionMode2[InsertionMode2["IN_HEAD"] = 3] = "IN_HEAD";
  InsertionMode2[InsertionMode2["IN_HEAD_NO_SCRIPT"] = 4] = "IN_HEAD_NO_SCRIPT";
  InsertionMode2[InsertionMode2["AFTER_HEAD"] = 5] = "AFTER_HEAD";
  InsertionMode2[InsertionMode2["IN_BODY"] = 6] = "IN_BODY";
  InsertionMode2[InsertionMode2["TEXT"] = 7] = "TEXT";
  InsertionMode2[InsertionMode2["IN_TABLE"] = 8] = "IN_TABLE";
  InsertionMode2[InsertionMode2["IN_TABLE_TEXT"] = 9] = "IN_TABLE_TEXT";
  InsertionMode2[InsertionMode2["IN_CAPTION"] = 10] = "IN_CAPTION";
  InsertionMode2[InsertionMode2["IN_COLUMN_GROUP"] = 11] = "IN_COLUMN_GROUP";
  InsertionMode2[InsertionMode2["IN_TABLE_BODY"] = 12] = "IN_TABLE_BODY";
  InsertionMode2[InsertionMode2["IN_ROW"] = 13] = "IN_ROW";
  InsertionMode2[InsertionMode2["IN_CELL"] = 14] = "IN_CELL";
  InsertionMode2[InsertionMode2["IN_SELECT"] = 15] = "IN_SELECT";
  InsertionMode2[InsertionMode2["IN_SELECT_IN_TABLE"] = 16] = "IN_SELECT_IN_TABLE";
  InsertionMode2[InsertionMode2["IN_TEMPLATE"] = 17] = "IN_TEMPLATE";
  InsertionMode2[InsertionMode2["AFTER_BODY"] = 18] = "AFTER_BODY";
  InsertionMode2[InsertionMode2["IN_FRAMESET"] = 19] = "IN_FRAMESET";
  InsertionMode2[InsertionMode2["AFTER_FRAMESET"] = 20] = "AFTER_FRAMESET";
  InsertionMode2[InsertionMode2["AFTER_AFTER_BODY"] = 21] = "AFTER_AFTER_BODY";
  InsertionMode2[InsertionMode2["AFTER_AFTER_FRAMESET"] = 22] = "AFTER_AFTER_FRAMESET";
})(InsertionMode || (InsertionMode = {}));
var BASE_LOC = {
  startLine: -1,
  startCol: -1,
  startOffset: -1,
  endLine: -1,
  endCol: -1,
  endOffset: -1
};
var TABLE_STRUCTURE_TAGS = /* @__PURE__ */ new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]);
var defaultParserOptions = {
  scriptingEnabled: true,
  sourceCodeLocationInfo: false,
  treeAdapter: defaultTreeAdapter,
  onParseError: null
};
var Parser = class {
  constructor(options, document2, fragmentContext = null, scriptHandler = null) {
    this.fragmentContext = fragmentContext;
    this.scriptHandler = scriptHandler;
    this.currentToken = null;
    this.stopped = false;
    this.insertionMode = InsertionMode.INITIAL;
    this.originalInsertionMode = InsertionMode.INITIAL;
    this.headElement = null;
    this.formElement = null;
    this.currentNotInHTML = false;
    this.tmplInsertionModeStack = [];
    this.pendingCharacterTokens = [];
    this.hasNonWhitespacePendingCharacterToken = false;
    this.framesetOk = true;
    this.skipNextNewLine = false;
    this.fosterParentingEnabled = false;
    this.options = {
      ...defaultParserOptions,
      ...options
    };
    this.treeAdapter = this.options.treeAdapter;
    this.onParseError = this.options.onParseError;
    if (this.onParseError) {
      this.options.sourceCodeLocationInfo = true;
    }
    this.document = document2 !== null && document2 !== void 0 ? document2 : this.treeAdapter.createDocument();
    this.tokenizer = new Tokenizer(this.options, this);
    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);
    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN;
    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);
    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);
  }
  // API
  static parse(html, options) {
    const parser = new this(options);
    parser.tokenizer.write(html, true);
    return parser.document;
  }
  static getFragmentParser(fragmentContext, options) {
    const opts = {
      ...defaultParserOptions,
      ...options
    };
    fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []);
    const documentMock = opts.treeAdapter.createElement("documentmock", NS.HTML, []);
    const parser = new this(opts, documentMock, fragmentContext);
    if (parser.fragmentContextID === TAG_ID.TEMPLATE) {
      parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
    }
    parser._initTokenizerForFragmentParsing();
    parser._insertFakeRootElement();
    parser._resetInsertionMode();
    parser._findFormInFragmentContext();
    return parser;
  }
  getFragment() {
    const rootElement = this.treeAdapter.getFirstChild(this.document);
    const fragment = this.treeAdapter.createDocumentFragment();
    this._adoptNodes(rootElement, fragment);
    return fragment;
  }
  //Errors
  _err(token, code, beforeToken) {
    var _a2;
    if (!this.onParseError)
      return;
    const loc = (_a2 = token.location) !== null && _a2 !== void 0 ? _a2 : BASE_LOC;
    const err2 = {
      code,
      startLine: loc.startLine,
      startCol: loc.startCol,
      startOffset: loc.startOffset,
      endLine: beforeToken ? loc.startLine : loc.endLine,
      endCol: beforeToken ? loc.startCol : loc.endCol,
      endOffset: beforeToken ? loc.startOffset : loc.endOffset
    };
    this.onParseError(err2);
  }
  //Stack events
  onItemPush(node, tid, isTop) {
    var _a2, _b;
    (_b = (_a2 = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a2, node);
    if (isTop && this.openElements.stackTop > 0)
      this._setContextModes(node, tid);
  }
  onItemPop(node, isTop) {
    var _a2, _b;
    if (this.options.sourceCodeLocationInfo) {
      this._setEndLocation(node, this.currentToken);
    }
    (_b = (_a2 = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a2, node, this.openElements.current);
    if (isTop) {
      let current;
      let currentTagId;
      if (this.openElements.stackTop === 0 && this.fragmentContext) {
        current = this.fragmentContext;
        currentTagId = this.fragmentContextID;
      } else {
        ({ current, currentTagId } = this.openElements);
      }
      this._setContextModes(current, currentTagId);
    }
  }
  _setContextModes(current, tid) {
    const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;
    this.currentNotInHTML = !isHTML;
    this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);
  }
  _switchToTextParsing(currentToken, nextTokenizerState) {
    this._insertElement(currentToken, NS.HTML);
    this.tokenizer.state = nextTokenizerState;
    this.originalInsertionMode = this.insertionMode;
    this.insertionMode = InsertionMode.TEXT;
  }
  switchToPlaintextParsing() {
    this.insertionMode = InsertionMode.TEXT;
    this.originalInsertionMode = InsertionMode.IN_BODY;
    this.tokenizer.state = TokenizerMode.PLAINTEXT;
  }
  //Fragment parsing
  _getAdjustedCurrentElement() {
    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
  }
  _findFormInFragmentContext() {
    let node = this.fragmentContext;
    while (node) {
      if (this.treeAdapter.getTagName(node) === TAG_NAMES.FORM) {
        this.formElement = node;
        break;
      }
      node = this.treeAdapter.getParentNode(node);
    }
  }
  _initTokenizerForFragmentParsing() {
    if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {
      return;
    }
    switch (this.fragmentContextID) {
      case TAG_ID.TITLE:
      case TAG_ID.TEXTAREA: {
        this.tokenizer.state = TokenizerMode.RCDATA;
        break;
      }
      case TAG_ID.STYLE:
      case TAG_ID.XMP:
      case TAG_ID.IFRAME:
      case TAG_ID.NOEMBED:
      case TAG_ID.NOFRAMES:
      case TAG_ID.NOSCRIPT: {
        this.tokenizer.state = TokenizerMode.RAWTEXT;
        break;
      }
      case TAG_ID.SCRIPT: {
        this.tokenizer.state = TokenizerMode.SCRIPT_DATA;
        break;
      }
      case TAG_ID.PLAINTEXT: {
        this.tokenizer.state = TokenizerMode.PLAINTEXT;
        break;
      }
      default:
    }
  }
  //Tree mutation
  _setDocumentType(token) {
    const name = token.name || "";
    const publicId = token.publicId || "";
    const systemId = token.systemId || "";
    this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
    if (token.location) {
      const documentChildren = this.treeAdapter.getChildNodes(this.document);
      const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));
      if (docTypeNode) {
        this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);
      }
    }
  }
  _attachElementToTree(element, location2) {
    if (this.options.sourceCodeLocationInfo) {
      const loc = location2 && {
        ...location2,
        startTag: location2
      };
      this.treeAdapter.setNodeSourceCodeLocation(element, loc);
    }
    if (this._shouldFosterParentOnInsertion()) {
      this._fosterParentElement(element);
    } else {
      const parent = this.openElements.currentTmplContentOrNode;
      this.treeAdapter.appendChild(parent, element);
    }
  }
  _appendElement(token, namespaceURI) {
    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
    this._attachElementToTree(element, token.location);
  }
  _insertElement(token, namespaceURI) {
    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
    this._attachElementToTree(element, token.location);
    this.openElements.push(element, token.tagID);
  }
  _insertFakeElement(tagName, tagID) {
    const element = this.treeAdapter.createElement(tagName, NS.HTML, []);
    this._attachElementToTree(element, null);
    this.openElements.push(element, tagID);
  }
  _insertTemplate(token) {
    const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
    const content = this.treeAdapter.createDocumentFragment();
    this.treeAdapter.setTemplateContent(tmpl, content);
    this._attachElementToTree(tmpl, token.location);
    this.openElements.push(tmpl, token.tagID);
    if (this.options.sourceCodeLocationInfo)
      this.treeAdapter.setNodeSourceCodeLocation(content, null);
  }
  _insertFakeRootElement() {
    const element = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);
    if (this.options.sourceCodeLocationInfo)
      this.treeAdapter.setNodeSourceCodeLocation(element, null);
    this.treeAdapter.appendChild(this.openElements.current, element);
    this.openElements.push(element, TAG_ID.HTML);
  }
  _appendCommentNode(token, parent) {
    const commentNode = this.treeAdapter.createCommentNode(token.data);
    this.treeAdapter.appendChild(parent, commentNode);
    if (this.options.sourceCodeLocationInfo) {
      this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
    }
  }
  _insertCharacters(token) {
    let parent;
    let beforeElement;
    if (this._shouldFosterParentOnInsertion()) {
      ({ parent, beforeElement } = this._findFosterParentingLocation());
      if (beforeElement) {
        this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);
      } else {
        this.treeAdapter.insertText(parent, token.chars);
      }
    } else {
      parent = this.openElements.currentTmplContentOrNode;
      this.treeAdapter.insertText(parent, token.chars);
    }
    if (!token.location)
      return;
    const siblings = this.treeAdapter.getChildNodes(parent);
    const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;
    const textNode = siblings[textNodeIdx - 1];
    const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);
    if (tnLoc) {
      const { endLine, endCol, endOffset } = token.location;
      this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
    } else if (this.options.sourceCodeLocationInfo) {
      this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
    }
  }
  _adoptNodes(donor, recipient) {
    for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
      this.treeAdapter.detachNode(child);
      this.treeAdapter.appendChild(recipient, child);
    }
  }
  _setEndLocation(element, closingToken) {
    if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {
      const ctLoc = closingToken.location;
      const tn = this.treeAdapter.getTagName(element);
      const endLoc = (
        // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
        // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
        closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {
          endTag: { ...ctLoc },
          endLine: ctLoc.endLine,
          endCol: ctLoc.endCol,
          endOffset: ctLoc.endOffset
        } : {
          endLine: ctLoc.startLine,
          endCol: ctLoc.startCol,
          endOffset: ctLoc.startOffset
        }
      );
      this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);
    }
  }
  //Token processing
  shouldProcessStartTagTokenInForeignContent(token) {
    if (!this.currentNotInHTML)
      return false;
    let current;
    let currentTagId;
    if (this.openElements.stackTop === 0 && this.fragmentContext) {
      current = this.fragmentContext;
      currentTagId = this.fragmentContextID;
    } else {
      ({ current, currentTagId } = this.openElements);
    }
    if (token.tagID === TAG_ID.SVG && this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {
      return false;
    }
    return (
      // Check that `current` is not an integration point for HTML or MathML elements.
      this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML
      // integration point.
      (token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)
    );
  }
  _processToken(token) {
    switch (token.type) {
      case TokenType.CHARACTER: {
        this.onCharacter(token);
        break;
      }
      case TokenType.NULL_CHARACTER: {
        this.onNullCharacter(token);
        break;
      }
      case TokenType.COMMENT: {
        this.onComment(token);
        break;
      }
      case TokenType.DOCTYPE: {
        this.onDoctype(token);
        break;
      }
      case TokenType.START_TAG: {
        this._processStartTag(token);
        break;
      }
      case TokenType.END_TAG: {
        this.onEndTag(token);
        break;
      }
      case TokenType.EOF: {
        this.onEof(token);
        break;
      }
      case TokenType.WHITESPACE_CHARACTER: {
        this.onWhitespaceCharacter(token);
        break;
      }
    }
  }
  //Integration points
  _isIntegrationPoint(tid, element, foreignNS) {
    const ns = this.treeAdapter.getNamespaceURI(element);
    const attrs = this.treeAdapter.getAttrList(element);
    return isIntegrationPoint(tid, ns, attrs, foreignNS);
  }
  //Active formatting elements reconstruction
  _reconstructActiveFormattingElements() {
    const listLength = this.activeFormattingElements.entries.length;
    if (listLength) {
      const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));
      const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;
      for (let i = unopenIdx; i >= 0; i--) {
        const entry = this.activeFormattingElements.entries[i];
        this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
        entry.element = this.openElements.current;
      }
    }
  }
  //Close elements
  _closeTableCell() {
    this.openElements.generateImpliedEndTags();
    this.openElements.popUntilTableCellPopped();
    this.activeFormattingElements.clearToLastMarker();
    this.insertionMode = InsertionMode.IN_ROW;
  }
  _closePElement() {
    this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);
    this.openElements.popUntilTagNamePopped(TAG_ID.P);
  }
  //Insertion modes
  _resetInsertionMode() {
    for (let i = this.openElements.stackTop; i >= 0; i--) {
      switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {
        case TAG_ID.TR: {
          this.insertionMode = InsertionMode.IN_ROW;
          return;
        }
        case TAG_ID.TBODY:
        case TAG_ID.THEAD:
        case TAG_ID.TFOOT: {
          this.insertionMode = InsertionMode.IN_TABLE_BODY;
          return;
        }
        case TAG_ID.CAPTION: {
          this.insertionMode = InsertionMode.IN_CAPTION;
          return;
        }
        case TAG_ID.COLGROUP: {
          this.insertionMode = InsertionMode.IN_COLUMN_GROUP;
          return;
        }
        case TAG_ID.TABLE: {
          this.insertionMode = InsertionMode.IN_TABLE;
          return;
        }
        case TAG_ID.BODY: {
          this.insertionMode = InsertionMode.IN_BODY;
          return;
        }
        case TAG_ID.FRAMESET: {
          this.insertionMode = InsertionMode.IN_FRAMESET;
          return;
        }
        case TAG_ID.SELECT: {
          this._resetInsertionModeForSelect(i);
          return;
        }
        case TAG_ID.TEMPLATE: {
          this.insertionMode = this.tmplInsertionModeStack[0];
          return;
        }
        case TAG_ID.HTML: {
          this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;
          return;
        }
        case TAG_ID.TD:
        case TAG_ID.TH: {
          if (i > 0) {
            this.insertionMode = InsertionMode.IN_CELL;
            return;
          }
          break;
        }
        case TAG_ID.HEAD: {
          if (i > 0) {
            this.insertionMode = InsertionMode.IN_HEAD;
            return;
          }
          break;
        }
      }
    }
    this.insertionMode = InsertionMode.IN_BODY;
  }
  _resetInsertionModeForSelect(selectIdx) {
    if (selectIdx > 0) {
      for (let i = selectIdx - 1; i > 0; i--) {
        const tn = this.openElements.tagIDs[i];
        if (tn === TAG_ID.TEMPLATE) {
          break;
        } else if (tn === TAG_ID.TABLE) {
          this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;
          return;
        }
      }
    }
    this.insertionMode = InsertionMode.IN_SELECT;
  }
  //Foster parenting
  _isElementCausesFosterParenting(tn) {
    return TABLE_STRUCTURE_TAGS.has(tn);
  }
  _shouldFosterParentOnInsertion() {
    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);
  }
  _findFosterParentingLocation() {
    for (let i = this.openElements.stackTop; i >= 0; i--) {
      const openElement = this.openElements.items[i];
      switch (this.openElements.tagIDs[i]) {
        case TAG_ID.TEMPLATE: {
          if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {
            return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };
          }
          break;
        }
        case TAG_ID.TABLE: {
          const parent = this.treeAdapter.getParentNode(openElement);
          if (parent) {
            return { parent, beforeElement: openElement };
          }
          return { parent: this.openElements.items[i - 1], beforeElement: null };
        }
        default:
      }
    }
    return { parent: this.openElements.items[0], beforeElement: null };
  }
  _fosterParentElement(element) {
    const location2 = this._findFosterParentingLocation();
    if (location2.beforeElement) {
      this.treeAdapter.insertBefore(location2.parent, element, location2.beforeElement);
    } else {
      this.treeAdapter.appendChild(location2.parent, element);
    }
  }
  //Special elements
  _isSpecialElement(element, id) {
    const ns = this.treeAdapter.getNamespaceURI(element);
    return SPECIAL_ELEMENTS[ns].has(id);
  }
  onCharacter(token) {
    this.skipNextNewLine = false;
    if (this.tokenizer.inForeignNode) {
      characterInForeignContent(this, token);
      return;
    }
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        tokenInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HTML: {
        tokenBeforeHtml(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD: {
        tokenBeforeHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD: {
        tokenInHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD_NO_SCRIPT: {
        tokenInHeadNoScript(this, token);
        break;
      }
      case InsertionMode.AFTER_HEAD: {
        tokenAfterHead(this, token);
        break;
      }
      case InsertionMode.IN_BODY:
      case InsertionMode.IN_CAPTION:
      case InsertionMode.IN_CELL:
      case InsertionMode.IN_TEMPLATE: {
        characterInBody(this, token);
        break;
      }
      case InsertionMode.TEXT:
      case InsertionMode.IN_SELECT:
      case InsertionMode.IN_SELECT_IN_TABLE: {
        this._insertCharacters(token);
        break;
      }
      case InsertionMode.IN_TABLE:
      case InsertionMode.IN_TABLE_BODY:
      case InsertionMode.IN_ROW: {
        characterInTable(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        characterInTableText(this, token);
        break;
      }
      case InsertionMode.IN_COLUMN_GROUP: {
        tokenInColumnGroup(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY: {
        tokenAfterBody(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_BODY: {
        tokenAfterAfterBody(this, token);
        break;
      }
      default:
    }
  }
  onNullCharacter(token) {
    this.skipNextNewLine = false;
    if (this.tokenizer.inForeignNode) {
      nullCharacterInForeignContent(this, token);
      return;
    }
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        tokenInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HTML: {
        tokenBeforeHtml(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD: {
        tokenBeforeHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD: {
        tokenInHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD_NO_SCRIPT: {
        tokenInHeadNoScript(this, token);
        break;
      }
      case InsertionMode.AFTER_HEAD: {
        tokenAfterHead(this, token);
        break;
      }
      case InsertionMode.TEXT: {
        this._insertCharacters(token);
        break;
      }
      case InsertionMode.IN_TABLE:
      case InsertionMode.IN_TABLE_BODY:
      case InsertionMode.IN_ROW: {
        characterInTable(this, token);
        break;
      }
      case InsertionMode.IN_COLUMN_GROUP: {
        tokenInColumnGroup(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY: {
        tokenAfterBody(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_BODY: {
        tokenAfterAfterBody(this, token);
        break;
      }
      default:
    }
  }
  onComment(token) {
    this.skipNextNewLine = false;
    if (this.currentNotInHTML) {
      appendComment(this, token);
      return;
    }
    switch (this.insertionMode) {
      case InsertionMode.INITIAL:
      case InsertionMode.BEFORE_HTML:
      case InsertionMode.BEFORE_HEAD:
      case InsertionMode.IN_HEAD:
      case InsertionMode.IN_HEAD_NO_SCRIPT:
      case InsertionMode.AFTER_HEAD:
      case InsertionMode.IN_BODY:
      case InsertionMode.IN_TABLE:
      case InsertionMode.IN_CAPTION:
      case InsertionMode.IN_COLUMN_GROUP:
      case InsertionMode.IN_TABLE_BODY:
      case InsertionMode.IN_ROW:
      case InsertionMode.IN_CELL:
      case InsertionMode.IN_SELECT:
      case InsertionMode.IN_SELECT_IN_TABLE:
      case InsertionMode.IN_TEMPLATE:
      case InsertionMode.IN_FRAMESET:
      case InsertionMode.AFTER_FRAMESET: {
        appendComment(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        tokenInTableText(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY: {
        appendCommentToRootHtmlElement(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_BODY:
      case InsertionMode.AFTER_AFTER_FRAMESET: {
        appendCommentToDocument(this, token);
        break;
      }
      default:
    }
  }
  onDoctype(token) {
    this.skipNextNewLine = false;
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        doctypeInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD:
      case InsertionMode.IN_HEAD:
      case InsertionMode.IN_HEAD_NO_SCRIPT:
      case InsertionMode.AFTER_HEAD: {
        this._err(token, ERR.misplacedDoctype);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        tokenInTableText(this, token);
        break;
      }
      default:
    }
  }
  onStartTag(token) {
    this.skipNextNewLine = false;
    this.currentToken = token;
    this._processStartTag(token);
    if (token.selfClosing && !token.ackSelfClosing) {
      this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
    }
  }
  /**
   * Processes a given start tag.
   *
   * `onStartTag` checks if a self-closing tag was recognized. When a token
   * is moved inbetween multiple insertion modes, this check for self-closing
   * could lead to false positives. To avoid this, `_processStartTag` is used
   * for nested calls.
   *
   * @param token The token to process.
   */
  _processStartTag(token) {
    if (this.shouldProcessStartTagTokenInForeignContent(token)) {
      startTagInForeignContent(this, token);
    } else {
      this._startTagOutsideForeignContent(token);
    }
  }
  _startTagOutsideForeignContent(token) {
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        tokenInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HTML: {
        startTagBeforeHtml(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD: {
        startTagBeforeHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD: {
        startTagInHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD_NO_SCRIPT: {
        startTagInHeadNoScript(this, token);
        break;
      }
      case InsertionMode.AFTER_HEAD: {
        startTagAfterHead(this, token);
        break;
      }
      case InsertionMode.IN_BODY: {
        startTagInBody(this, token);
        break;
      }
      case InsertionMode.IN_TABLE: {
        startTagInTable(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        tokenInTableText(this, token);
        break;
      }
      case InsertionMode.IN_CAPTION: {
        startTagInCaption(this, token);
        break;
      }
      case InsertionMode.IN_COLUMN_GROUP: {
        startTagInColumnGroup(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_BODY: {
        startTagInTableBody(this, token);
        break;
      }
      case InsertionMode.IN_ROW: {
        startTagInRow(this, token);
        break;
      }
      case InsertionMode.IN_CELL: {
        startTagInCell(this, token);
        break;
      }
      case InsertionMode.IN_SELECT: {
        startTagInSelect(this, token);
        break;
      }
      case InsertionMode.IN_SELECT_IN_TABLE: {
        startTagInSelectInTable(this, token);
        break;
      }
      case InsertionMode.IN_TEMPLATE: {
        startTagInTemplate(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY: {
        startTagAfterBody(this, token);
        break;
      }
      case InsertionMode.IN_FRAMESET: {
        startTagInFrameset(this, token);
        break;
      }
      case InsertionMode.AFTER_FRAMESET: {
        startTagAfterFrameset(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_BODY: {
        startTagAfterAfterBody(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_FRAMESET: {
        startTagAfterAfterFrameset(this, token);
        break;
      }
      default:
    }
  }
  onEndTag(token) {
    this.skipNextNewLine = false;
    this.currentToken = token;
    if (this.currentNotInHTML) {
      endTagInForeignContent(this, token);
    } else {
      this._endTagOutsideForeignContent(token);
    }
  }
  _endTagOutsideForeignContent(token) {
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        tokenInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HTML: {
        endTagBeforeHtml(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD: {
        endTagBeforeHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD: {
        endTagInHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD_NO_SCRIPT: {
        endTagInHeadNoScript(this, token);
        break;
      }
      case InsertionMode.AFTER_HEAD: {
        endTagAfterHead(this, token);
        break;
      }
      case InsertionMode.IN_BODY: {
        endTagInBody(this, token);
        break;
      }
      case InsertionMode.TEXT: {
        endTagInText(this, token);
        break;
      }
      case InsertionMode.IN_TABLE: {
        endTagInTable(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        tokenInTableText(this, token);
        break;
      }
      case InsertionMode.IN_CAPTION: {
        endTagInCaption(this, token);
        break;
      }
      case InsertionMode.IN_COLUMN_GROUP: {
        endTagInColumnGroup(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_BODY: {
        endTagInTableBody(this, token);
        break;
      }
      case InsertionMode.IN_ROW: {
        endTagInRow(this, token);
        break;
      }
      case InsertionMode.IN_CELL: {
        endTagInCell(this, token);
        break;
      }
      case InsertionMode.IN_SELECT: {
        endTagInSelect(this, token);
        break;
      }
      case InsertionMode.IN_SELECT_IN_TABLE: {
        endTagInSelectInTable(this, token);
        break;
      }
      case InsertionMode.IN_TEMPLATE: {
        endTagInTemplate(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY: {
        endTagAfterBody(this, token);
        break;
      }
      case InsertionMode.IN_FRAMESET: {
        endTagInFrameset(this, token);
        break;
      }
      case InsertionMode.AFTER_FRAMESET: {
        endTagAfterFrameset(this, token);
        break;
      }
      case InsertionMode.AFTER_AFTER_BODY: {
        tokenAfterAfterBody(this, token);
        break;
      }
      default:
    }
  }
  onEof(token) {
    switch (this.insertionMode) {
      case InsertionMode.INITIAL: {
        tokenInInitialMode(this, token);
        break;
      }
      case InsertionMode.BEFORE_HTML: {
        tokenBeforeHtml(this, token);
        break;
      }
      case InsertionMode.BEFORE_HEAD: {
        tokenBeforeHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD: {
        tokenInHead(this, token);
        break;
      }
      case InsertionMode.IN_HEAD_NO_SCRIPT: {
        tokenInHeadNoScript(this, token);
        break;
      }
      case InsertionMode.AFTER_HEAD: {
        tokenAfterHead(this, token);
        break;
      }
      case InsertionMode.IN_BODY:
      case InsertionMode.IN_TABLE:
      case InsertionMode.IN_CAPTION:
      case InsertionMode.IN_COLUMN_GROUP:
      case InsertionMode.IN_TABLE_BODY:
      case InsertionMode.IN_ROW:
      case InsertionMode.IN_CELL:
      case InsertionMode.IN_SELECT:
      case InsertionMode.IN_SELECT_IN_TABLE: {
        eofInBody(this, token);
        break;
      }
      case InsertionMode.TEXT: {
        eofInText(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        tokenInTableText(this, token);
        break;
      }
      case InsertionMode.IN_TEMPLATE: {
        eofInTemplate(this, token);
        break;
      }
      case InsertionMode.AFTER_BODY:
      case InsertionMode.IN_FRAMESET:
      case InsertionMode.AFTER_FRAMESET:
      case InsertionMode.AFTER_AFTER_BODY:
      case InsertionMode.AFTER_AFTER_FRAMESET: {
        stopParsing(this, token);
        break;
      }
      default:
    }
  }
  onWhitespaceCharacter(token) {
    if (this.skipNextNewLine) {
      this.skipNextNewLine = false;
      if (token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED) {
        if (token.chars.length === 1) {
          return;
        }
        token.chars = token.chars.substr(1);
      }
    }
    if (this.tokenizer.inForeignNode) {
      this._insertCharacters(token);
      return;
    }
    switch (this.insertionMode) {
      case InsertionMode.IN_HEAD:
      case InsertionMode.IN_HEAD_NO_SCRIPT:
      case InsertionMode.AFTER_HEAD:
      case InsertionMode.TEXT:
      case InsertionMode.IN_COLUMN_GROUP:
      case InsertionMode.IN_SELECT:
      case InsertionMode.IN_SELECT_IN_TABLE:
      case InsertionMode.IN_FRAMESET:
      case InsertionMode.AFTER_FRAMESET: {
        this._insertCharacters(token);
        break;
      }
      case InsertionMode.IN_BODY:
      case InsertionMode.IN_CAPTION:
      case InsertionMode.IN_CELL:
      case InsertionMode.IN_TEMPLATE:
      case InsertionMode.AFTER_BODY:
      case InsertionMode.AFTER_AFTER_BODY:
      case InsertionMode.AFTER_AFTER_FRAMESET: {
        whitespaceCharacterInBody(this, token);
        break;
      }
      case InsertionMode.IN_TABLE:
      case InsertionMode.IN_TABLE_BODY:
      case InsertionMode.IN_ROW: {
        characterInTable(this, token);
        break;
      }
      case InsertionMode.IN_TABLE_TEXT: {
        whitespaceCharacterInTableText(this, token);
        break;
      }
      default:
    }
  }
};
function aaObtainFormattingElementEntry(p, token) {
  let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
  if (formattingElementEntry) {
    if (!p.openElements.contains(formattingElementEntry.element)) {
      p.activeFormattingElements.removeEntry(formattingElementEntry);
      formattingElementEntry = null;
    } else if (!p.openElements.hasInScope(token.tagID)) {
      formattingElementEntry = null;
    }
  } else {
    genericEndTagInBody(p, token);
  }
  return formattingElementEntry;
}
function aaObtainFurthestBlock(p, formattingElementEntry) {
  let furthestBlock = null;
  let idx = p.openElements.stackTop;
  for (; idx >= 0; idx--) {
    const element = p.openElements.items[idx];
    if (element === formattingElementEntry.element) {
      break;
    }
    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {
      furthestBlock = element;
    }
  }
  if (!furthestBlock) {
    p.openElements.shortenToLength(idx < 0 ? 0 : idx);
    p.activeFormattingElements.removeEntry(formattingElementEntry);
  }
  return furthestBlock;
}
function aaInnerLoop(p, furthestBlock, formattingElement) {
  let lastElement = furthestBlock;
  let nextElement = p.openElements.getCommonAncestor(furthestBlock);
  for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
    nextElement = p.openElements.getCommonAncestor(element);
    const elementEntry = p.activeFormattingElements.getElementEntry(element);
    const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
    const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;
    if (shouldRemoveFromOpenElements) {
      if (counterOverflow) {
        p.activeFormattingElements.removeEntry(elementEntry);
      }
      p.openElements.remove(element);
    } else {
      element = aaRecreateElementFromEntry(p, elementEntry);
      if (lastElement === furthestBlock) {
        p.activeFormattingElements.bookmark = elementEntry;
      }
      p.treeAdapter.detachNode(lastElement);
      p.treeAdapter.appendChild(element, lastElement);
      lastElement = element;
    }
  }
  return lastElement;
}
function aaRecreateElementFromEntry(p, elementEntry) {
  const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);
  const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
  p.openElements.replace(elementEntry.element, newElement);
  elementEntry.element = newElement;
  return newElement;
}
function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
  const tn = p.treeAdapter.getTagName(commonAncestor);
  const tid = getTagID(tn);
  if (p._isElementCausesFosterParenting(tid)) {
    p._fosterParentElement(lastElement);
  } else {
    const ns = p.treeAdapter.getNamespaceURI(commonAncestor);
    if (tid === TAG_ID.TEMPLATE && ns === NS.HTML) {
      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
    }
    p.treeAdapter.appendChild(commonAncestor, lastElement);
  }
}
function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
  const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);
  const { token } = formattingElementEntry;
  const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);
  p._adoptNodes(furthestBlock, newElement);
  p.treeAdapter.appendChild(furthestBlock, newElement);
  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);
  p.activeFormattingElements.removeEntry(formattingElementEntry);
  p.openElements.remove(formattingElementEntry.element);
  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);
}
function callAdoptionAgency(p, token) {
  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {
    const formattingElementEntry = aaObtainFormattingElementEntry(p, token);
    if (!formattingElementEntry) {
      break;
    }
    const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);
    if (!furthestBlock) {
      break;
    }
    p.activeFormattingElements.bookmark = formattingElementEntry;
    const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);
    const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);
    p.treeAdapter.detachNode(lastElement);
    if (commonAncestor)
      aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
  }
}
function appendComment(p, token) {
  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);
}
function appendCommentToRootHtmlElement(p, token) {
  p._appendCommentNode(token, p.openElements.items[0]);
}
function appendCommentToDocument(p, token) {
  p._appendCommentNode(token, p.document);
}
function stopParsing(p, token) {
  p.stopped = true;
  if (token.location) {
    const target = p.fragmentContext ? 0 : 2;
    for (let i = p.openElements.stackTop; i >= target; i--) {
      p._setEndLocation(p.openElements.items[i], token);
    }
    if (!p.fragmentContext && p.openElements.stackTop >= 0) {
      const htmlElement = p.openElements.items[0];
      const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);
      if (htmlLocation && !htmlLocation.endTag) {
        p._setEndLocation(htmlElement, token);
        if (p.openElements.stackTop >= 1) {
          const bodyElement = p.openElements.items[1];
          const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);
          if (bodyLocation && !bodyLocation.endTag) {
            p._setEndLocation(bodyElement, token);
          }
        }
      }
    }
  }
}
function doctypeInInitialMode(p, token) {
  p._setDocumentType(token);
  const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);
  if (!isConforming(token)) {
    p._err(token, ERR.nonConformingDoctype);
  }
  p.treeAdapter.setDocumentMode(p.document, mode);
  p.insertionMode = InsertionMode.BEFORE_HTML;
}
function tokenInInitialMode(p, token) {
  p._err(token, ERR.missingDoctype, true);
  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);
  p.insertionMode = InsertionMode.BEFORE_HTML;
  p._processToken(token);
}
function startTagBeforeHtml(p, token) {
  if (token.tagID === TAG_ID.HTML) {
    p._insertElement(token, NS.HTML);
    p.insertionMode = InsertionMode.BEFORE_HEAD;
  } else {
    tokenBeforeHtml(p, token);
  }
}
function endTagBeforeHtml(p, token) {
  const tn = token.tagID;
  if (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) {
    tokenBeforeHtml(p, token);
  }
}
function tokenBeforeHtml(p, token) {
  p._insertFakeRootElement();
  p.insertionMode = InsertionMode.BEFORE_HEAD;
  p._processToken(token);
}
function startTagBeforeHead(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.HEAD: {
      p._insertElement(token, NS.HTML);
      p.headElement = p.openElements.current;
      p.insertionMode = InsertionMode.IN_HEAD;
      break;
    }
    default: {
      tokenBeforeHead(p, token);
    }
  }
}
function endTagBeforeHead(p, token) {
  const tn = token.tagID;
  if (tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR) {
    tokenBeforeHead(p, token);
  } else {
    p._err(token, ERR.endTagWithoutMatchingOpenElement);
  }
}
function tokenBeforeHead(p, token) {
  p._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD);
  p.headElement = p.openElements.current;
  p.insertionMode = InsertionMode.IN_HEAD;
  p._processToken(token);
}
function startTagInHead(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META: {
      p._appendElement(token, NS.HTML);
      token.ackSelfClosing = true;
      break;
    }
    case TAG_ID.TITLE: {
      p._switchToTextParsing(token, TokenizerMode.RCDATA);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      if (p.options.scriptingEnabled) {
        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
      } else {
        p._insertElement(token, NS.HTML);
        p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;
      }
      break;
    }
    case TAG_ID.NOFRAMES:
    case TAG_ID.STYLE: {
      p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
      break;
    }
    case TAG_ID.SCRIPT: {
      p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);
      break;
    }
    case TAG_ID.TEMPLATE: {
      p._insertTemplate(token);
      p.activeFormattingElements.insertMarker();
      p.framesetOk = false;
      p.insertionMode = InsertionMode.IN_TEMPLATE;
      p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
      break;
    }
    case TAG_ID.HEAD: {
      p._err(token, ERR.misplacedStartTagForHeadElement);
      break;
    }
    default: {
      tokenInHead(p, token);
    }
  }
}
function endTagInHead(p, token) {
  switch (token.tagID) {
    case TAG_ID.HEAD: {
      p.openElements.pop();
      p.insertionMode = InsertionMode.AFTER_HEAD;
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.BR:
    case TAG_ID.HTML: {
      tokenInHead(p, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    default: {
      p._err(token, ERR.endTagWithoutMatchingOpenElement);
    }
  }
}
function templateEndTagInHead(p, token) {
  if (p.openElements.tmplCount > 0) {
    p.openElements.generateImpliedEndTagsThoroughly();
    if (p.openElements.currentTagId !== TAG_ID.TEMPLATE) {
      p._err(token, ERR.closingOfElementWithOpenChildElements);
    }
    p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);
    p.activeFormattingElements.clearToLastMarker();
    p.tmplInsertionModeStack.shift();
    p._resetInsertionMode();
  } else {
    p._err(token, ERR.endTagWithoutMatchingOpenElement);
  }
}
function tokenInHead(p, token) {
  p.openElements.pop();
  p.insertionMode = InsertionMode.AFTER_HEAD;
  p._processToken(token);
}
function startTagInHeadNoScript(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.HEAD:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.STYLE: {
      startTagInHead(p, token);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      p._err(token, ERR.nestedNoscriptInHead);
      break;
    }
    default: {
      tokenInHeadNoScript(p, token);
    }
  }
}
function endTagInHeadNoScript(p, token) {
  switch (token.tagID) {
    case TAG_ID.NOSCRIPT: {
      p.openElements.pop();
      p.insertionMode = InsertionMode.IN_HEAD;
      break;
    }
    case TAG_ID.BR: {
      tokenInHeadNoScript(p, token);
      break;
    }
    default: {
      p._err(token, ERR.endTagWithoutMatchingOpenElement);
    }
  }
}
function tokenInHeadNoScript(p, token) {
  const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;
  p._err(token, errCode);
  p.openElements.pop();
  p.insertionMode = InsertionMode.IN_HEAD;
  p._processToken(token);
}
function startTagAfterHead(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.BODY: {
      p._insertElement(token, NS.HTML);
      p.framesetOk = false;
      p.insertionMode = InsertionMode.IN_BODY;
      break;
    }
    case TAG_ID.FRAMESET: {
      p._insertElement(token, NS.HTML);
      p.insertionMode = InsertionMode.IN_FRAMESET;
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.SCRIPT:
    case TAG_ID.STYLE:
    case TAG_ID.TEMPLATE:
    case TAG_ID.TITLE: {
      p._err(token, ERR.abandonedHeadElementChild);
      p.openElements.push(p.headElement, TAG_ID.HEAD);
      startTagInHead(p, token);
      p.openElements.remove(p.headElement);
      break;
    }
    case TAG_ID.HEAD: {
      p._err(token, ERR.misplacedStartTagForHeadElement);
      break;
    }
    default: {
      tokenAfterHead(p, token);
    }
  }
}
function endTagAfterHead(p, token) {
  switch (token.tagID) {
    case TAG_ID.BODY:
    case TAG_ID.HTML:
    case TAG_ID.BR: {
      tokenAfterHead(p, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    default: {
      p._err(token, ERR.endTagWithoutMatchingOpenElement);
    }
  }
}
function tokenAfterHead(p, token) {
  p._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY);
  p.insertionMode = InsertionMode.IN_BODY;
  modeInBody(p, token);
}
function modeInBody(p, token) {
  switch (token.type) {
    case TokenType.CHARACTER: {
      characterInBody(p, token);
      break;
    }
    case TokenType.WHITESPACE_CHARACTER: {
      whitespaceCharacterInBody(p, token);
      break;
    }
    case TokenType.COMMENT: {
      appendComment(p, token);
      break;
    }
    case TokenType.START_TAG: {
      startTagInBody(p, token);
      break;
    }
    case TokenType.END_TAG: {
      endTagInBody(p, token);
      break;
    }
    case TokenType.EOF: {
      eofInBody(p, token);
      break;
    }
    default:
  }
}
function whitespaceCharacterInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertCharacters(token);
}
function characterInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertCharacters(token);
  p.framesetOk = false;
}
function htmlStartTagInBody(p, token) {
  if (p.openElements.tmplCount === 0) {
    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
  }
}
function bodyStartTagInBody(p, token) {
  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
  if (bodyElement && p.openElements.tmplCount === 0) {
    p.framesetOk = false;
    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
  }
}
function framesetStartTagInBody(p, token) {
  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
  if (p.framesetOk && bodyElement) {
    p.treeAdapter.detachNode(bodyElement);
    p.openElements.popAllUpToHtmlElement();
    p._insertElement(token, NS.HTML);
    p.insertionMode = InsertionMode.IN_FRAMESET;
  }
}
function addressStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._insertElement(token, NS.HTML);
}
function numberedHeaderStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  if (isNumberedHeader(p.openElements.currentTagId)) {
    p.openElements.pop();
  }
  p._insertElement(token, NS.HTML);
}
function preStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._insertElement(token, NS.HTML);
  p.skipNextNewLine = true;
  p.framesetOk = false;
}
function formStartTagInBody(p, token) {
  const inTemplate = p.openElements.tmplCount > 0;
  if (!p.formElement || inTemplate) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
      p._closePElement();
    }
    p._insertElement(token, NS.HTML);
    if (!inTemplate) {
      p.formElement = p.openElements.current;
    }
  }
}
function listItemStartTagInBody(p, token) {
  p.framesetOk = false;
  const tn = token.tagID;
  for (let i = p.openElements.stackTop; i >= 0; i--) {
    const elementId = p.openElements.tagIDs[i];
    if (tn === TAG_ID.LI && elementId === TAG_ID.LI || (tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT)) {
      p.openElements.generateImpliedEndTagsWithExclusion(elementId);
      p.openElements.popUntilTagNamePopped(elementId);
      break;
    }
    if (elementId !== TAG_ID.ADDRESS && elementId !== TAG_ID.DIV && elementId !== TAG_ID.P && p._isSpecialElement(p.openElements.items[i], elementId)) {
      break;
    }
  }
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._insertElement(token, NS.HTML);
}
function plaintextStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._insertElement(token, NS.HTML);
  p.tokenizer.state = TokenizerMode.PLAINTEXT;
}
function buttonStartTagInBody(p, token) {
  if (p.openElements.hasInScope(TAG_ID.BUTTON)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);
  }
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
  p.framesetOk = false;
}
function aStartTagInBody(p, token) {
  const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);
  if (activeElementEntry) {
    callAdoptionAgency(p, token);
    p.openElements.remove(activeElementEntry.element);
    p.activeFormattingElements.removeEntry(activeElementEntry);
  }
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
  p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function bStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
  p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function nobrStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  if (p.openElements.hasInScope(TAG_ID.NOBR)) {
    callAdoptionAgency(p, token);
    p._reconstructActiveFormattingElements();
  }
  p._insertElement(token, NS.HTML);
  p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function appletStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
  p.activeFormattingElements.insertMarker();
  p.framesetOk = false;
}
function tableStartTagInBody(p, token) {
  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._insertElement(token, NS.HTML);
  p.framesetOk = false;
  p.insertionMode = InsertionMode.IN_TABLE;
}
function areaStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._appendElement(token, NS.HTML);
  p.framesetOk = false;
  token.ackSelfClosing = true;
}
function isHiddenInput(token) {
  const inputType = getTokenAttr(token, ATTRS.TYPE);
  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;
}
function inputStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._appendElement(token, NS.HTML);
  if (!isHiddenInput(token)) {
    p.framesetOk = false;
  }
  token.ackSelfClosing = true;
}
function paramStartTagInBody(p, token) {
  p._appendElement(token, NS.HTML);
  token.ackSelfClosing = true;
}
function hrStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._appendElement(token, NS.HTML);
  p.framesetOk = false;
  token.ackSelfClosing = true;
}
function imageStartTagInBody(p, token) {
  token.tagName = TAG_NAMES.IMG;
  token.tagID = TAG_ID.IMG;
  areaStartTagInBody(p, token);
}
function textareaStartTagInBody(p, token) {
  p._insertElement(token, NS.HTML);
  p.skipNextNewLine = true;
  p.tokenizer.state = TokenizerMode.RCDATA;
  p.originalInsertionMode = p.insertionMode;
  p.framesetOk = false;
  p.insertionMode = InsertionMode.TEXT;
}
function xmpStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._closePElement();
  }
  p._reconstructActiveFormattingElements();
  p.framesetOk = false;
  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function iframeStartTagInBody(p, token) {
  p.framesetOk = false;
  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function noembedStartTagInBody(p, token) {
  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function selectStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
  p.framesetOk = false;
  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;
}
function optgroupStartTagInBody(p, token) {
  if (p.openElements.currentTagId === TAG_ID.OPTION) {
    p.openElements.pop();
  }
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
}
function rbStartTagInBody(p, token) {
  if (p.openElements.hasInScope(TAG_ID.RUBY)) {
    p.openElements.generateImpliedEndTags();
  }
  p._insertElement(token, NS.HTML);
}
function rtStartTagInBody(p, token) {
  if (p.openElements.hasInScope(TAG_ID.RUBY)) {
    p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);
  }
  p._insertElement(token, NS.HTML);
}
function mathStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  adjustTokenMathMLAttrs(token);
  adjustTokenXMLAttrs(token);
  if (token.selfClosing) {
    p._appendElement(token, NS.MATHML);
  } else {
    p._insertElement(token, NS.MATHML);
  }
  token.ackSelfClosing = true;
}
function svgStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  adjustTokenSVGAttrs(token);
  adjustTokenXMLAttrs(token);
  if (token.selfClosing) {
    p._appendElement(token, NS.SVG);
  } else {
    p._insertElement(token, NS.SVG);
  }
  token.ackSelfClosing = true;
}
function genericStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();
  p._insertElement(token, NS.HTML);
}
function startTagInBody(p, token) {
  switch (token.tagID) {
    case TAG_ID.I:
    case TAG_ID.S:
    case TAG_ID.B:
    case TAG_ID.U:
    case TAG_ID.EM:
    case TAG_ID.TT:
    case TAG_ID.BIG:
    case TAG_ID.CODE:
    case TAG_ID.FONT:
    case TAG_ID.SMALL:
    case TAG_ID.STRIKE:
    case TAG_ID.STRONG: {
      bStartTagInBody(p, token);
      break;
    }
    case TAG_ID.A: {
      aStartTagInBody(p, token);
      break;
    }
    case TAG_ID.H1:
    case TAG_ID.H2:
    case TAG_ID.H3:
    case TAG_ID.H4:
    case TAG_ID.H5:
    case TAG_ID.H6: {
      numberedHeaderStartTagInBody(p, token);
      break;
    }
    case TAG_ID.P:
    case TAG_ID.DL:
    case TAG_ID.OL:
    case TAG_ID.UL:
    case TAG_ID.DIV:
    case TAG_ID.DIR:
    case TAG_ID.NAV:
    case TAG_ID.MAIN:
    case TAG_ID.MENU:
    case TAG_ID.ASIDE:
    case TAG_ID.CENTER:
    case TAG_ID.FIGURE:
    case TAG_ID.FOOTER:
    case TAG_ID.HEADER:
    case TAG_ID.HGROUP:
    case TAG_ID.DIALOG:
    case TAG_ID.DETAILS:
    case TAG_ID.ADDRESS:
    case TAG_ID.ARTICLE:
    case TAG_ID.SECTION:
    case TAG_ID.SUMMARY:
    case TAG_ID.FIELDSET:
    case TAG_ID.BLOCKQUOTE:
    case TAG_ID.FIGCAPTION: {
      addressStartTagInBody(p, token);
      break;
    }
    case TAG_ID.LI:
    case TAG_ID.DD:
    case TAG_ID.DT: {
      listItemStartTagInBody(p, token);
      break;
    }
    case TAG_ID.BR:
    case TAG_ID.IMG:
    case TAG_ID.WBR:
    case TAG_ID.AREA:
    case TAG_ID.EMBED:
    case TAG_ID.KEYGEN: {
      areaStartTagInBody(p, token);
      break;
    }
    case TAG_ID.HR: {
      hrStartTagInBody(p, token);
      break;
    }
    case TAG_ID.RB:
    case TAG_ID.RTC: {
      rbStartTagInBody(p, token);
      break;
    }
    case TAG_ID.RT:
    case TAG_ID.RP: {
      rtStartTagInBody(p, token);
      break;
    }
    case TAG_ID.PRE:
    case TAG_ID.LISTING: {
      preStartTagInBody(p, token);
      break;
    }
    case TAG_ID.XMP: {
      xmpStartTagInBody(p, token);
      break;
    }
    case TAG_ID.SVG: {
      svgStartTagInBody(p, token);
      break;
    }
    case TAG_ID.HTML: {
      htmlStartTagInBody(p, token);
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.STYLE:
    case TAG_ID.TITLE:
    case TAG_ID.SCRIPT:
    case TAG_ID.BGSOUND:
    case TAG_ID.BASEFONT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p, token);
      break;
    }
    case TAG_ID.BODY: {
      bodyStartTagInBody(p, token);
      break;
    }
    case TAG_ID.FORM: {
      formStartTagInBody(p, token);
      break;
    }
    case TAG_ID.NOBR: {
      nobrStartTagInBody(p, token);
      break;
    }
    case TAG_ID.MATH: {
      mathStartTagInBody(p, token);
      break;
    }
    case TAG_ID.TABLE: {
      tableStartTagInBody(p, token);
      break;
    }
    case TAG_ID.INPUT: {
      inputStartTagInBody(p, token);
      break;
    }
    case TAG_ID.PARAM:
    case TAG_ID.TRACK:
    case TAG_ID.SOURCE: {
      paramStartTagInBody(p, token);
      break;
    }
    case TAG_ID.IMAGE: {
      imageStartTagInBody(p, token);
      break;
    }
    case TAG_ID.BUTTON: {
      buttonStartTagInBody(p, token);
      break;
    }
    case TAG_ID.APPLET:
    case TAG_ID.OBJECT:
    case TAG_ID.MARQUEE: {
      appletStartTagInBody(p, token);
      break;
    }
    case TAG_ID.IFRAME: {
      iframeStartTagInBody(p, token);
      break;
    }
    case TAG_ID.SELECT: {
      selectStartTagInBody(p, token);
      break;
    }
    case TAG_ID.OPTION:
    case TAG_ID.OPTGROUP: {
      optgroupStartTagInBody(p, token);
      break;
    }
    case TAG_ID.NOEMBED: {
      noembedStartTagInBody(p, token);
      break;
    }
    case TAG_ID.FRAMESET: {
      framesetStartTagInBody(p, token);
      break;
    }
    case TAG_ID.TEXTAREA: {
      textareaStartTagInBody(p, token);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      if (p.options.scriptingEnabled) {
        noembedStartTagInBody(p, token);
      } else {
        genericStartTagInBody(p, token);
      }
      break;
    }
    case TAG_ID.PLAINTEXT: {
      plaintextStartTagInBody(p, token);
      break;
    }
    case TAG_ID.COL:
    case TAG_ID.TH:
    case TAG_ID.TD:
    case TAG_ID.TR:
    case TAG_ID.HEAD:
    case TAG_ID.FRAME:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.CAPTION:
    case TAG_ID.COLGROUP: {
      break;
    }
    default: {
      genericStartTagInBody(p, token);
    }
  }
}
function bodyEndTagInBody(p, token) {
  if (p.openElements.hasInScope(TAG_ID.BODY)) {
    p.insertionMode = InsertionMode.AFTER_BODY;
    if (p.options.sourceCodeLocationInfo) {
      const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
      if (bodyElement) {
        p._setEndLocation(bodyElement, token);
      }
    }
  }
}
function htmlEndTagInBody(p, token) {
  if (p.openElements.hasInScope(TAG_ID.BODY)) {
    p.insertionMode = InsertionMode.AFTER_BODY;
    endTagAfterBody(p, token);
  }
}
function addressEndTagInBody(p, token) {
  const tn = token.tagID;
  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped(tn);
  }
}
function formEndTagInBody(p) {
  const inTemplate = p.openElements.tmplCount > 0;
  const { formElement } = p;
  if (!inTemplate) {
    p.formElement = null;
  }
  if ((formElement || inTemplate) && p.openElements.hasInScope(TAG_ID.FORM)) {
    p.openElements.generateImpliedEndTags();
    if (inTemplate) {
      p.openElements.popUntilTagNamePopped(TAG_ID.FORM);
    } else if (formElement) {
      p.openElements.remove(formElement);
    }
  }
}
function pEndTagInBody(p) {
  if (!p.openElements.hasInButtonScope(TAG_ID.P)) {
    p._insertFakeElement(TAG_NAMES.P, TAG_ID.P);
  }
  p._closePElement();
}
function liEndTagInBody(p) {
  if (p.openElements.hasInListItemScope(TAG_ID.LI)) {
    p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);
    p.openElements.popUntilTagNamePopped(TAG_ID.LI);
  }
}
function ddEndTagInBody(p, token) {
  const tn = token.tagID;
  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTagsWithExclusion(tn);
    p.openElements.popUntilTagNamePopped(tn);
  }
}
function numberedHeaderEndTagInBody(p) {
  if (p.openElements.hasNumberedHeaderInScope()) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilNumberedHeaderPopped();
  }
}
function appletEndTagInBody(p, token) {
  const tn = token.tagID;
  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped(tn);
    p.activeFormattingElements.clearToLastMarker();
  }
}
function brEndTagInBody(p) {
  p._reconstructActiveFormattingElements();
  p._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR);
  p.openElements.pop();
  p.framesetOk = false;
}
function genericEndTagInBody(p, token) {
  const tn = token.tagName;
  const tid = token.tagID;
  for (let i = p.openElements.stackTop; i > 0; i--) {
    const element = p.openElements.items[i];
    const elementId = p.openElements.tagIDs[i];
    if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {
      p.openElements.generateImpliedEndTagsWithExclusion(tid);
      if (p.openElements.stackTop >= i)
        p.openElements.shortenToLength(i);
      break;
    }
    if (p._isSpecialElement(element, elementId)) {
      break;
    }
  }
}
function endTagInBody(p, token) {
  switch (token.tagID) {
    case TAG_ID.A:
    case TAG_ID.B:
    case TAG_ID.I:
    case TAG_ID.S:
    case TAG_ID.U:
    case TAG_ID.EM:
    case TAG_ID.TT:
    case TAG_ID.BIG:
    case TAG_ID.CODE:
    case TAG_ID.FONT:
    case TAG_ID.NOBR:
    case TAG_ID.SMALL:
    case TAG_ID.STRIKE:
    case TAG_ID.STRONG: {
      callAdoptionAgency(p, token);
      break;
    }
    case TAG_ID.P: {
      pEndTagInBody(p);
      break;
    }
    case TAG_ID.DL:
    case TAG_ID.UL:
    case TAG_ID.OL:
    case TAG_ID.DIR:
    case TAG_ID.DIV:
    case TAG_ID.NAV:
    case TAG_ID.PRE:
    case TAG_ID.MAIN:
    case TAG_ID.MENU:
    case TAG_ID.ASIDE:
    case TAG_ID.BUTTON:
    case TAG_ID.CENTER:
    case TAG_ID.FIGURE:
    case TAG_ID.FOOTER:
    case TAG_ID.HEADER:
    case TAG_ID.HGROUP:
    case TAG_ID.DIALOG:
    case TAG_ID.ADDRESS:
    case TAG_ID.ARTICLE:
    case TAG_ID.DETAILS:
    case TAG_ID.SECTION:
    case TAG_ID.SUMMARY:
    case TAG_ID.LISTING:
    case TAG_ID.FIELDSET:
    case TAG_ID.BLOCKQUOTE:
    case TAG_ID.FIGCAPTION: {
      addressEndTagInBody(p, token);
      break;
    }
    case TAG_ID.LI: {
      liEndTagInBody(p);
      break;
    }
    case TAG_ID.DD:
    case TAG_ID.DT: {
      ddEndTagInBody(p, token);
      break;
    }
    case TAG_ID.H1:
    case TAG_ID.H2:
    case TAG_ID.H3:
    case TAG_ID.H4:
    case TAG_ID.H5:
    case TAG_ID.H6: {
      numberedHeaderEndTagInBody(p);
      break;
    }
    case TAG_ID.BR: {
      brEndTagInBody(p);
      break;
    }
    case TAG_ID.BODY: {
      bodyEndTagInBody(p, token);
      break;
    }
    case TAG_ID.HTML: {
      htmlEndTagInBody(p, token);
      break;
    }
    case TAG_ID.FORM: {
      formEndTagInBody(p);
      break;
    }
    case TAG_ID.APPLET:
    case TAG_ID.OBJECT:
    case TAG_ID.MARQUEE: {
      appletEndTagInBody(p, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    default: {
      genericEndTagInBody(p, token);
    }
  }
}
function eofInBody(p, token) {
  if (p.tmplInsertionModeStack.length > 0) {
    eofInTemplate(p, token);
  } else {
    stopParsing(p, token);
  }
}
function endTagInText(p, token) {
  var _a2;
  if (token.tagID === TAG_ID.SCRIPT) {
    (_a2 = p.scriptHandler) === null || _a2 === void 0 ? void 0 : _a2.call(p, p.openElements.current);
  }
  p.openElements.pop();
  p.insertionMode = p.originalInsertionMode;
}
function eofInText(p, token) {
  p._err(token, ERR.eofInElementThatCanContainOnlyText);
  p.openElements.pop();
  p.insertionMode = p.originalInsertionMode;
  p.onEof(token);
}
function characterInTable(p, token) {
  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {
    p.pendingCharacterTokens.length = 0;
    p.hasNonWhitespacePendingCharacterToken = false;
    p.originalInsertionMode = p.insertionMode;
    p.insertionMode = InsertionMode.IN_TABLE_TEXT;
    switch (token.type) {
      case TokenType.CHARACTER: {
        characterInTableText(p, token);
        break;
      }
      case TokenType.WHITESPACE_CHARACTER: {
        whitespaceCharacterInTableText(p, token);
        break;
      }
    }
  } else {
    tokenInTable(p, token);
  }
}
function captionStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p.activeFormattingElements.insertMarker();
  p._insertElement(token, NS.HTML);
  p.insertionMode = InsertionMode.IN_CAPTION;
}
function colgroupStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p._insertElement(token, NS.HTML);
  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
}
function colStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP);
  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
  startTagInColumnGroup(p, token);
}
function tbodyStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p._insertElement(token, NS.HTML);
  p.insertionMode = InsertionMode.IN_TABLE_BODY;
}
function tdStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY);
  p.insertionMode = InsertionMode.IN_TABLE_BODY;
  startTagInTableBody(p, token);
}
function tableStartTagInTable(p, token) {
  if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {
    p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);
    p._resetInsertionMode();
    p._processStartTag(token);
  }
}
function inputStartTagInTable(p, token) {
  if (isHiddenInput(token)) {
    p._appendElement(token, NS.HTML);
  } else {
    tokenInTable(p, token);
  }
  token.ackSelfClosing = true;
}
function formStartTagInTable(p, token) {
  if (!p.formElement && p.openElements.tmplCount === 0) {
    p._insertElement(token, NS.HTML);
    p.formElement = p.openElements.current;
    p.openElements.pop();
  }
}
function startTagInTable(p, token) {
  switch (token.tagID) {
    case TAG_ID.TD:
    case TAG_ID.TH:
    case TAG_ID.TR: {
      tdStartTagInTable(p, token);
      break;
    }
    case TAG_ID.STYLE:
    case TAG_ID.SCRIPT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p, token);
      break;
    }
    case TAG_ID.COL: {
      colStartTagInTable(p, token);
      break;
    }
    case TAG_ID.FORM: {
      formStartTagInTable(p, token);
      break;
    }
    case TAG_ID.TABLE: {
      tableStartTagInTable(p, token);
      break;
    }
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      tbodyStartTagInTable(p, token);
      break;
    }
    case TAG_ID.INPUT: {
      inputStartTagInTable(p, token);
      break;
    }
    case TAG_ID.CAPTION: {
      captionStartTagInTable(p, token);
      break;
    }
    case TAG_ID.COLGROUP: {
      colgroupStartTagInTable(p, token);
      break;
    }
    default: {
      tokenInTable(p, token);
    }
  }
}
function endTagInTable(p, token) {
  switch (token.tagID) {
    case TAG_ID.TABLE: {
      if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {
        p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);
        p._resetInsertionMode();
      }
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TBODY:
    case TAG_ID.TD:
    case TAG_ID.TFOOT:
    case TAG_ID.TH:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      break;
    }
    default: {
      tokenInTable(p, token);
    }
  }
}
function tokenInTable(p, token) {
  const savedFosterParentingState = p.fosterParentingEnabled;
  p.fosterParentingEnabled = true;
  modeInBody(p, token);
  p.fosterParentingEnabled = savedFosterParentingState;
}
function whitespaceCharacterInTableText(p, token) {
  p.pendingCharacterTokens.push(token);
}
function characterInTableText(p, token) {
  p.pendingCharacterTokens.push(token);
  p.hasNonWhitespacePendingCharacterToken = true;
}
function tokenInTableText(p, token) {
  let i = 0;
  if (p.hasNonWhitespacePendingCharacterToken) {
    for (; i < p.pendingCharacterTokens.length; i++) {
      tokenInTable(p, p.pendingCharacterTokens[i]);
    }
  } else {
    for (; i < p.pendingCharacterTokens.length; i++) {
      p._insertCharacters(p.pendingCharacterTokens[i]);
    }
  }
  p.insertionMode = p.originalInsertionMode;
  p._processToken(token);
}
var TABLE_VOID_ELEMENTS = /* @__PURE__ */ new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);
function startTagInCaption(p, token) {
  const tn = token.tagID;
  if (TABLE_VOID_ELEMENTS.has(tn)) {
    if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {
      p.openElements.generateImpliedEndTags();
      p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);
      p.activeFormattingElements.clearToLastMarker();
      p.insertionMode = InsertionMode.IN_TABLE;
      startTagInTable(p, token);
    }
  } else {
    startTagInBody(p, token);
  }
}
function endTagInCaption(p, token) {
  const tn = token.tagID;
  switch (tn) {
    case TAG_ID.CAPTION:
    case TAG_ID.TABLE: {
      if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);
        p.activeFormattingElements.clearToLastMarker();
        p.insertionMode = InsertionMode.IN_TABLE;
        if (tn === TAG_ID.TABLE) {
          endTagInTable(p, token);
        }
      }
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TBODY:
    case TAG_ID.TD:
    case TAG_ID.TFOOT:
    case TAG_ID.TH:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      break;
    }
    default: {
      endTagInBody(p, token);
    }
  }
}
function startTagInColumnGroup(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.COL: {
      p._appendElement(token, NS.HTML);
      token.ackSelfClosing = true;
      break;
    }
    case TAG_ID.TEMPLATE: {
      startTagInHead(p, token);
      break;
    }
    default: {
      tokenInColumnGroup(p, token);
    }
  }
}
function endTagInColumnGroup(p, token) {
  switch (token.tagID) {
    case TAG_ID.COLGROUP: {
      if (p.openElements.currentTagId === TAG_ID.COLGROUP) {
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE;
      }
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    case TAG_ID.COL: {
      break;
    }
    default: {
      tokenInColumnGroup(p, token);
    }
  }
}
function tokenInColumnGroup(p, token) {
  if (p.openElements.currentTagId === TAG_ID.COLGROUP) {
    p.openElements.pop();
    p.insertionMode = InsertionMode.IN_TABLE;
    p._processToken(token);
  }
}
function startTagInTableBody(p, token) {
  switch (token.tagID) {
    case TAG_ID.TR: {
      p.openElements.clearBackToTableBodyContext();
      p._insertElement(token, NS.HTML);
      p.insertionMode = InsertionMode.IN_ROW;
      break;
    }
    case TAG_ID.TH:
    case TAG_ID.TD: {
      p.openElements.clearBackToTableBodyContext();
      p._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR);
      p.insertionMode = InsertionMode.IN_ROW;
      startTagInRow(p, token);
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      if (p.openElements.hasTableBodyContextInTableScope()) {
        p.openElements.clearBackToTableBodyContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE;
        startTagInTable(p, token);
      }
      break;
    }
    default: {
      startTagInTable(p, token);
    }
  }
}
function endTagInTableBody(p, token) {
  const tn = token.tagID;
  switch (token.tagID) {
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      if (p.openElements.hasInTableScope(tn)) {
        p.openElements.clearBackToTableBodyContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE;
      }
      break;
    }
    case TAG_ID.TABLE: {
      if (p.openElements.hasTableBodyContextInTableScope()) {
        p.openElements.clearBackToTableBodyContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE;
        endTagInTable(p, token);
      }
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TD:
    case TAG_ID.TH:
    case TAG_ID.TR: {
      break;
    }
    default: {
      endTagInTable(p, token);
    }
  }
}
function startTagInRow(p, token) {
  switch (token.tagID) {
    case TAG_ID.TH:
    case TAG_ID.TD: {
      p.openElements.clearBackToTableRowContext();
      p._insertElement(token, NS.HTML);
      p.insertionMode = InsertionMode.IN_CELL;
      p.activeFormattingElements.insertMarker();
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      if (p.openElements.hasInTableScope(TAG_ID.TR)) {
        p.openElements.clearBackToTableRowContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE_BODY;
        startTagInTableBody(p, token);
      }
      break;
    }
    default: {
      startTagInTable(p, token);
    }
  }
}
function endTagInRow(p, token) {
  switch (token.tagID) {
    case TAG_ID.TR: {
      if (p.openElements.hasInTableScope(TAG_ID.TR)) {
        p.openElements.clearBackToTableRowContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE_BODY;
      }
      break;
    }
    case TAG_ID.TABLE: {
      if (p.openElements.hasInTableScope(TAG_ID.TR)) {
        p.openElements.clearBackToTableRowContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE_BODY;
        endTagInTableBody(p, token);
      }
      break;
    }
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(TAG_ID.TR)) {
        p.openElements.clearBackToTableRowContext();
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE_BODY;
        endTagInTableBody(p, token);
      }
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TD:
    case TAG_ID.TH: {
      break;
    }
    default: {
      endTagInTable(p, token);
    }
  }
}
function startTagInCell(p, token) {
  const tn = token.tagID;
  if (TABLE_VOID_ELEMENTS.has(tn)) {
    if (p.openElements.hasInTableScope(TAG_ID.TD) || p.openElements.hasInTableScope(TAG_ID.TH)) {
      p._closeTableCell();
      startTagInRow(p, token);
    }
  } else {
    startTagInBody(p, token);
  }
}
function endTagInCell(p, token) {
  const tn = token.tagID;
  switch (tn) {
    case TAG_ID.TD:
    case TAG_ID.TH: {
      if (p.openElements.hasInTableScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
        p.activeFormattingElements.clearToLastMarker();
        p.insertionMode = InsertionMode.IN_ROW;
      }
      break;
    }
    case TAG_ID.TABLE:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      if (p.openElements.hasInTableScope(tn)) {
        p._closeTableCell();
        endTagInRow(p, token);
      }
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML: {
      break;
    }
    default: {
      endTagInBody(p, token);
    }
  }
}
function startTagInSelect(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.OPTION: {
      if (p.openElements.currentTagId === TAG_ID.OPTION) {
        p.openElements.pop();
      }
      p._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.OPTGROUP: {
      if (p.openElements.currentTagId === TAG_ID.OPTION) {
        p.openElements.pop();
      }
      if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {
        p.openElements.pop();
      }
      p._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.INPUT:
    case TAG_ID.KEYGEN:
    case TAG_ID.TEXTAREA:
    case TAG_ID.SELECT: {
      if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {
        p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
        p._resetInsertionMode();
        if (token.tagID !== TAG_ID.SELECT) {
          p._processStartTag(token);
        }
      }
      break;
    }
    case TAG_ID.SCRIPT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p, token);
      break;
    }
    default:
  }
}
function endTagInSelect(p, token) {
  switch (token.tagID) {
    case TAG_ID.OPTGROUP: {
      if (p.openElements.stackTop > 0 && p.openElements.currentTagId === TAG_ID.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === TAG_ID.OPTGROUP) {
        p.openElements.pop();
      }
      if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {
        p.openElements.pop();
      }
      break;
    }
    case TAG_ID.OPTION: {
      if (p.openElements.currentTagId === TAG_ID.OPTION) {
        p.openElements.pop();
      }
      break;
    }
    case TAG_ID.SELECT: {
      if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {
        p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
        p._resetInsertionMode();
      }
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p, token);
      break;
    }
    default:
  }
}
function startTagInSelectInTable(p, token) {
  const tn = token.tagID;
  if (tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH) {
    p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
    p._resetInsertionMode();
    p._processStartTag(token);
  } else {
    startTagInSelect(p, token);
  }
}
function endTagInSelectInTable(p, token) {
  const tn = token.tagID;
  if (tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH) {
    if (p.openElements.hasInTableScope(tn)) {
      p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
      p._resetInsertionMode();
      p.onEndTag(token);
    }
  } else {
    endTagInSelect(p, token);
  }
}
function startTagInTemplate(p, token) {
  switch (token.tagID) {
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.SCRIPT:
    case TAG_ID.STYLE:
    case TAG_ID.TEMPLATE:
    case TAG_ID.TITLE: {
      startTagInHead(p, token);
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;
      p.insertionMode = InsertionMode.IN_TABLE;
      startTagInTable(p, token);
      break;
    }
    case TAG_ID.COL: {
      p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;
      p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
      startTagInColumnGroup(p, token);
      break;
    }
    case TAG_ID.TR: {
      p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;
      p.insertionMode = InsertionMode.IN_TABLE_BODY;
      startTagInTableBody(p, token);
      break;
    }
    case TAG_ID.TD:
    case TAG_ID.TH: {
      p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;
      p.insertionMode = InsertionMode.IN_ROW;
      startTagInRow(p, token);
      break;
    }
    default: {
      p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;
      p.insertionMode = InsertionMode.IN_BODY;
      startTagInBody(p, token);
    }
  }
}
function endTagInTemplate(p, token) {
  if (token.tagID === TAG_ID.TEMPLATE) {
    templateEndTagInHead(p, token);
  }
}
function eofInTemplate(p, token) {
  if (p.openElements.tmplCount > 0) {
    p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);
    p.activeFormattingElements.clearToLastMarker();
    p.tmplInsertionModeStack.shift();
    p._resetInsertionMode();
    p.onEof(token);
  } else {
    stopParsing(p, token);
  }
}
function startTagAfterBody(p, token) {
  if (token.tagID === TAG_ID.HTML) {
    startTagInBody(p, token);
  } else {
    tokenAfterBody(p, token);
  }
}
function endTagAfterBody(p, token) {
  var _a2;
  if (token.tagID === TAG_ID.HTML) {
    if (!p.fragmentContext) {
      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;
    }
    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === TAG_ID.HTML) {
      p._setEndLocation(p.openElements.items[0], token);
      const bodyElement = p.openElements.items[1];
      if (bodyElement && !((_a2 = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a2 === void 0 ? void 0 : _a2.endTag)) {
        p._setEndLocation(bodyElement, token);
      }
    }
  } else {
    tokenAfterBody(p, token);
  }
}
function tokenAfterBody(p, token) {
  p.insertionMode = InsertionMode.IN_BODY;
  modeInBody(p, token);
}
function startTagInFrameset(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.FRAMESET: {
      p._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.FRAME: {
      p._appendElement(token, NS.HTML);
      token.ackSelfClosing = true;
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p, token);
      break;
    }
    default:
  }
}
function endTagInFrameset(p, token) {
  if (token.tagID === TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
    p.openElements.pop();
    if (!p.fragmentContext && p.openElements.currentTagId !== TAG_ID.FRAMESET) {
      p.insertionMode = InsertionMode.AFTER_FRAMESET;
    }
  }
}
function startTagAfterFrameset(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p, token);
      break;
    }
    default:
  }
}
function endTagAfterFrameset(p, token) {
  if (token.tagID === TAG_ID.HTML) {
    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;
  }
}
function startTagAfterAfterBody(p, token) {
  if (token.tagID === TAG_ID.HTML) {
    startTagInBody(p, token);
  } else {
    tokenAfterAfterBody(p, token);
  }
}
function tokenAfterAfterBody(p, token) {
  p.insertionMode = InsertionMode.IN_BODY;
  modeInBody(p, token);
}
function startTagAfterAfterFrameset(p, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p, token);
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p, token);
      break;
    }
    default:
  }
}
function nullCharacterInForeignContent(p, token) {
  token.chars = REPLACEMENT_CHARACTER;
  p._insertCharacters(token);
}
function characterInForeignContent(p, token) {
  p._insertCharacters(token);
  p.framesetOk = false;
}
function popUntilHtmlOrIntegrationPoint(p) {
  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {
    p.openElements.pop();
  }
}
function startTagInForeignContent(p, token) {
  if (causesExit(token)) {
    popUntilHtmlOrIntegrationPoint(p);
    p._startTagOutsideForeignContent(token);
  } else {
    const current = p._getAdjustedCurrentElement();
    const currentNs = p.treeAdapter.getNamespaceURI(current);
    if (currentNs === NS.MATHML) {
      adjustTokenMathMLAttrs(token);
    } else if (currentNs === NS.SVG) {
      adjustTokenSVGTagName(token);
      adjustTokenSVGAttrs(token);
    }
    adjustTokenXMLAttrs(token);
    if (token.selfClosing) {
      p._appendElement(token, currentNs);
    } else {
      p._insertElement(token, currentNs);
    }
    token.ackSelfClosing = true;
  }
}
function endTagInForeignContent(p, token) {
  if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {
    popUntilHtmlOrIntegrationPoint(p);
    p._endTagOutsideForeignContent(token);
    return;
  }
  for (let i = p.openElements.stackTop; i > 0; i--) {
    const element = p.openElements.items[i];
    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
      p._endTagOutsideForeignContent(token);
      break;
    }
    const tagName = p.treeAdapter.getTagName(element);
    if (tagName.toLowerCase() === token.tagName) {
      token.tagName = tagName;
      p.openElements.shortenToLength(i);
      break;
    }
  }
}

// node_modules/entities/lib/esm/escape.js
var xmlCodeMap = /* @__PURE__ */ new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [39, "&apos;"],
  [60, "&lt;"],
  [62, "&gt;"]
]);
var getCodePoint = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
  String.prototype.codePointAt != null ? (str, index) => str.codePointAt(index) : (
    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
    (c, index) => (c.charCodeAt(index) & 64512) === 55296 ? (c.charCodeAt(index) - 55296) * 1024 + c.charCodeAt(index + 1) - 56320 + 65536 : c.charCodeAt(index)
  )
);
function getEscaper(regex, map2) {
  return function escape(data) {
    let match;
    let lastIdx = 0;
    let result = "";
    while (match = regex.exec(data)) {
      if (lastIdx !== match.index) {
        result += data.substring(lastIdx, match.index);
      }
      result += map2.get(match[0].charCodeAt(0));
      lastIdx = match.index + 1;
    }
    return result + data.substring(lastIdx);
  };
}
var escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
var escapeAttribute = getEscaper(/["&\u00A0]/g, /* @__PURE__ */ new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [160, "&nbsp;"]
]));
var escapeText = getEscaper(/[&<>\u00A0]/g, /* @__PURE__ */ new Map([
  [38, "&amp;"],
  [60, "&lt;"],
  [62, "&gt;"],
  [160, "&nbsp;"]
]));

// node_modules/parse5/dist/serializer/index.js
var VOID_ELEMENTS = /* @__PURE__ */ new Set([
  TAG_NAMES.AREA,
  TAG_NAMES.BASE,
  TAG_NAMES.BASEFONT,
  TAG_NAMES.BGSOUND,
  TAG_NAMES.BR,
  TAG_NAMES.COL,
  TAG_NAMES.EMBED,
  TAG_NAMES.FRAME,
  TAG_NAMES.HR,
  TAG_NAMES.IMG,
  TAG_NAMES.INPUT,
  TAG_NAMES.KEYGEN,
  TAG_NAMES.LINK,
  TAG_NAMES.META,
  TAG_NAMES.PARAM,
  TAG_NAMES.SOURCE,
  TAG_NAMES.TRACK,
  TAG_NAMES.WBR
]);

// node_modules/parse5/dist/index.js
function parse(html, options) {
  return Parser.parse(html, options);
}
function parseFragment(fragmentContext, html, options) {
  if (typeof fragmentContext === "string") {
    options = html;
    html = fragmentContext;
    fragmentContext = null;
  }
  const parser = Parser.getFragmentParser(fragmentContext, options);
  parser.tokenizer.write(html, true);
  return parser.getFragment();
}

// src/mock-doc/parse-util.ts
var docParser = /* @__PURE__ */ new WeakMap();
function parseDocumentUtil(ownerDocument, html) {
  const doc2 = parse(html.trim(), getParser(ownerDocument));
  doc2.documentElement = doc2.firstElementChild;
  doc2.head = doc2.documentElement.firstElementChild;
  doc2.body = doc2.head.nextElementSibling;
  return doc2;
}
function parseFragmentUtil(ownerDocument, html) {
  if (typeof html === "string") {
    html = html.trim();
  } else {
    html = "";
  }
  const frag = parseFragment(html, getParser(ownerDocument));
  return frag;
}
function getParser(ownerDocument) {
  let parseOptions = docParser.get(ownerDocument);
  if (parseOptions != null) {
    return parseOptions;
  }
  const treeAdapter = {
    createDocument() {
      const doc2 = ownerDocument.createElement("#document" /* DOCUMENT_NODE */);
      doc2["x-mode"] = "no-quirks";
      return doc2;
    },
    setNodeSourceCodeLocation(node, location2) {
      node.sourceCodeLocation = location2;
    },
    getNodeSourceCodeLocation(node) {
      return node.sourceCodeLocation;
    },
    createDocumentFragment() {
      return ownerDocument.createDocumentFragment();
    },
    createElement(tagName, namespaceURI, attrs) {
      const elm = ownerDocument.createElementNS(namespaceURI, tagName);
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (attr.namespace == null || attr.namespace === "http://www.w3.org/1999/xhtml") {
          elm.setAttribute(attr.name, attr.value);
        } else {
          elm.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
      return elm;
    },
    createCommentNode(data) {
      return ownerDocument.createComment(data);
    },
    appendChild(parentNode, newNode) {
      parentNode.appendChild(newNode);
    },
    insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
    },
    setTemplateContent(templateElement, contentElement) {
      templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
      return templateElement.content;
    },
    setDocumentType(doc2, name, publicId, systemId) {
      let doctypeNode = doc2.childNodes.find((n) => n.nodeType === 10 /* DOCUMENT_TYPE_NODE */);
      if (doctypeNode == null) {
        doctypeNode = ownerDocument.createDocumentTypeNode();
        doc2.insertBefore(doctypeNode, doc2.firstChild);
      }
      doctypeNode.nodeValue = "!DOCTYPE";
      doctypeNode["x-name"] = name;
      doctypeNode["x-publicId"] = publicId;
      doctypeNode["x-systemId"] = systemId;
    },
    setDocumentMode(doc2, mode) {
      doc2["x-mode"] = mode;
    },
    getDocumentMode(doc2) {
      return doc2["x-mode"];
    },
    detachNode(node) {
      node.remove();
    },
    insertText(parentNode, text) {
      const lastChild = parentNode.lastChild;
      if (lastChild != null && lastChild.nodeType === 3 /* TEXT_NODE */) {
        lastChild.nodeValue += text;
      } else {
        parentNode.appendChild(ownerDocument.createTextNode(text));
      }
    },
    insertTextBefore(parentNode, text, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode != null && prevNode.nodeType === 3 /* TEXT_NODE */) {
        prevNode.nodeValue += text;
      } else {
        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);
      }
    },
    adoptAttributes(recipient, attrs) {
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {
          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
    },
    getFirstChild(node) {
      return node.childNodes[0];
    },
    getChildNodes(node) {
      return node.childNodes;
    },
    getParentNode(node) {
      return node.parentNode;
    },
    getAttrList(element) {
      const attrs = element.attributes.__items.map((attr) => {
        return {
          name: attr.name,
          value: attr.value,
          namespace: attr.namespaceURI,
          prefix: null
        };
      });
      return attrs;
    },
    getTagName(element) {
      if (element.namespaceURI === "http://www.w3.org/1999/xhtml") {
        return element.nodeName.toLowerCase();
      } else {
        return element.nodeName;
      }
    },
    getNamespaceURI(element) {
      return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
      return textNode.nodeValue;
    },
    getCommentNodeContent(commentNode) {
      return commentNode.nodeValue;
    },
    getDocumentTypeNodeName(doctypeNode) {
      return doctypeNode["x-name"];
    },
    getDocumentTypeNodePublicId(doctypeNode) {
      return doctypeNode["x-publicId"];
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
      return doctypeNode["x-systemId"];
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['text']`. As a result, we cannot
    // complete this function signature
    isTextNode(node) {
      return node.nodeType === 3 /* TEXT_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['comment']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isCommentNode(node) {
      return node.nodeType === 8 /* COMMENT_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['document']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isDocumentTypeNode(node) {
      return node.nodeType === 10 /* DOCUMENT_TYPE_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['element']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isElementNode(node) {
      return node.nodeType === 1 /* ELEMENT_NODE */;
    }
  };
  parseOptions = {
    treeAdapter
  };
  docParser.set(ownerDocument, parseOptions);
  return parseOptions;
}

// src/mock-doc/third-party/jquery.ts
var jquery_default = (
  /*!
  * jQuery JavaScript Library v4.0.0-pre+9352011a7.dirty +selector
  * https://jquery.com/
  *
  * Copyright OpenJS Foundation and other contributors
  * Released under the MIT license
  * https://jquery.org/license
  *
  * Date: 2023-12-11T17:55Z
  */
  function(global2, factory) {
    "use strict";
    if (true) {
      return factory(global2, true);
    } else {
      factory(global2);
    }
  }({
    document: {
      createElement() {
        return {};
      },
      nodeType: 9,
      documentElement: {
        nodeType: 1,
        nodeName: "HTML"
      }
    }
  }, function(window2, noGlobal) {
    "use strict";
    if (!window2.document) {
      throw new Error("jQuery requires a window with a document");
    }
    var arr = [];
    var getProto = Object.getPrototypeOf;
    var slice = arr.slice;
    var flat = arr.flat ? function(array) {
      return arr.flat.call(array);
    } : function(array) {
      return arr.concat.apply([], array);
    };
    var push = arr.push;
    var indexOf = arr.indexOf;
    var class2type = {};
    var toString = class2type.toString;
    var hasOwn = class2type.hasOwnProperty;
    var fnToString = hasOwn.toString;
    var ObjectFunctionString = fnToString.call(Object);
    var support = {};
    function toType(obj) {
      if (obj == null) {
        return obj + "";
      }
      return typeof obj === "object" ? class2type[toString.call(obj)] || "object" : typeof obj;
    }
    function isWindow(obj) {
      return obj != null && obj === obj.window;
    }
    function isArrayLike(obj) {
      var length = !!obj && obj.length, type = toType(obj);
      if (typeof obj === "function" || isWindow(obj)) {
        return false;
      }
      return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
    }
    var document2 = window2.document;
    var preservedScriptAttributes = {
      type: true,
      src: true,
      nonce: true,
      noModule: true
    };
    function DOMEval(code, node, doc2) {
      doc2 = doc2 || document2;
      var i2, script = doc2.createElement("script");
      script.text = code;
      if (node) {
        for (i2 in preservedScriptAttributes) {
          if (node[i2]) {
            script[i2] = node[i2];
          }
        }
      }
      doc2.head.appendChild(script).parentNode.removeChild(script);
    }
    const jQuery = {};
    var version = "4.0.0-pre+9352011a7.dirty +selector", rhtmlSuffix = /HTML$/i, jQueryOrig = function(selector, context) {
      return new jQuery.fn.init(selector, context);
    };
    jQuery.fn = jQuery.prototype = {
      // The current version of jQuery being used
      jquery: version,
      constructor: jQuery,
      // The default length of a jQuery object is 0
      length: 0,
      toArray: function() {
        return slice.call(this);
      },
      // Get the Nth element in the matched element set OR
      // Get the whole matched element set as a clean array
      get: function(num) {
        if (num == null) {
          return slice.call(this);
        }
        return num < 0 ? this[num + this.length] : this[num];
      },
      // Take an array of elements and push it onto the stack
      // (returning the new matched element set)
      pushStack: function(elems) {
        var ret = jQuery.merge(this.constructor(), elems);
        ret.prevObject = this;
        return ret;
      },
      // Execute a callback for every element in the matched set.
      each: function(callback) {
        return jQuery.each(this, callback);
      },
      map: function(callback) {
        return this.pushStack(jQuery.map(this, function(elem, i2) {
          return callback.call(elem, i2, elem);
        }));
      },
      slice: function() {
        return this.pushStack(slice.apply(this, arguments));
      },
      first: function() {
        return this.eq(0);
      },
      last: function() {
        return this.eq(-1);
      },
      even: function() {
        return this.pushStack(jQuery.grep(this, function(_elem, i2) {
          return (i2 + 1) % 2;
        }));
      },
      odd: function() {
        return this.pushStack(jQuery.grep(this, function(_elem, i2) {
          return i2 % 2;
        }));
      },
      eq: function(i2) {
        var len = this.length, j = +i2 + (i2 < 0 ? len : 0);
        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
      },
      end: function() {
        return this.prevObject || this.constructor();
      }
    };
    jQuery.extend = jQuery.fn.extend = function() {
      var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i2 = 1, length = arguments.length, deep = false;
      if (typeof target === "boolean") {
        deep = target;
        target = arguments[i2] || {};
        i2++;
      }
      if (typeof target !== "object" && typeof target !== "function") {
        target = {};
      }
      if (i2 === length) {
        target = this;
        i2--;
      }
      for (; i2 < length; i2++) {
        if ((options = arguments[i2]) != null) {
          for (name in options) {
            copy = options[name];
            if (name === "__proto__" || target === copy) {
              continue;
            }
            if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
              src = target[name];
              if (copyIsArray && !Array.isArray(src)) {
                clone = [];
              } else if (!copyIsArray && !jQuery.isPlainObject(src)) {
                clone = {};
              } else {
                clone = src;
              }
              copyIsArray = false;
              target[name] = jQuery.extend(deep, clone, copy);
            } else if (copy !== void 0) {
              target[name] = copy;
            }
          }
        }
      }
      return target;
    };
    jQuery.extend({
      // Unique for each copy of jQuery on the page
      expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
      // Assume jQuery is ready without the ready module
      isReady: true,
      error: function(msg) {
        throw new Error(msg);
      },
      noop: function() {
      },
      isPlainObject: function(obj) {
        var proto, Ctor;
        if (!obj || toString.call(obj) !== "[object Object]") {
          return false;
        }
        proto = getProto(obj);
        if (!proto) {
          return true;
        }
        Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
        return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
      },
      isEmptyObject: function(obj) {
        var name;
        for (name in obj) {
          return false;
        }
        return true;
      },
      // Evaluates a script in a provided context; falls back to the global one
      // if not specified.
      globalEval: function(code, options, doc2) {
        DOMEval(code, { nonce: options && options.nonce }, doc2);
      },
      each: function(obj, callback) {
        var length, i2 = 0;
        if (isArrayLike(obj)) {
          length = obj.length;
          for (; i2 < length; i2++) {
            if (callback.call(obj[i2], i2, obj[i2]) === false) {
              break;
            }
          }
        } else {
          for (i2 in obj) {
            if (callback.call(obj[i2], i2, obj[i2]) === false) {
              break;
            }
          }
        }
        return obj;
      },
      // Retrieve the text value of an array of DOM nodes
      text: function(elem) {
        var node, ret = "", i2 = 0, nodeType = elem.nodeType;
        if (!nodeType) {
          while (node = elem[i2++]) {
            ret += jQuery.text(node);
          }
        }
        if (nodeType === 1 || nodeType === 11) {
          return elem.textContent;
        }
        if (nodeType === 9) {
          return elem.documentElement.textContent;
        }
        if (nodeType === 3 || nodeType === 4) {
          return elem.nodeValue;
        }
        return ret;
      },
      // results is for internal usage only
      makeArray: function(arr2, results) {
        var ret = results || [];
        if (arr2 != null) {
          if (isArrayLike(Object(arr2))) {
            jQuery.merge(
              ret,
              typeof arr2 === "string" ? [arr2] : arr2
            );
          } else {
            push.call(ret, arr2);
          }
        }
        return ret;
      },
      inArray: function(elem, arr2, i2) {
        return arr2 == null ? -1 : indexOf.call(arr2, elem, i2);
      },
      isXMLDoc: function(elem) {
        var namespace = elem && elem.namespaceURI, docElem = elem && (elem.ownerDocument || elem).documentElement;
        return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || "HTML");
      },
      // Note: an element does not contain itself
      contains: function(a, b) {
        var bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && // Support: IE 9 - 11+
        // IE doesn't have `contains` on SVG.
        (a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      },
      merge: function(first, second) {
        var len = +second.length, j = 0, i2 = first.length;
        for (; j < len; j++) {
          first[i2++] = second[j];
        }
        first.length = i2;
        return first;
      },
      grep: function(elems, callback, invert) {
        var callbackInverse, matches3 = [], i2 = 0, length = elems.length, callbackExpect = !invert;
        for (; i2 < length; i2++) {
          callbackInverse = !callback(elems[i2], i2);
          if (callbackInverse !== callbackExpect) {
            matches3.push(elems[i2]);
          }
        }
        return matches3;
      },
      // arg is for internal usage only
      map: function(elems, callback, arg) {
        var length, value, i2 = 0, ret = [];
        if (isArrayLike(elems)) {
          length = elems.length;
          for (; i2 < length; i2++) {
            value = callback(elems[i2], i2, arg);
            if (value != null) {
              ret.push(value);
            }
          }
        } else {
          for (i2 in elems) {
            value = callback(elems[i2], i2, arg);
            if (value != null) {
              ret.push(value);
            }
          }
        }
        return flat(ret);
      },
      // A global GUID counter for objects
      guid: 1,
      // jQuery.support is not used in Core but other projects attach their
      // properties to it so it needs to exist.
      support
    });
    if (typeof Symbol === "function") {
      jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
    }
    jQuery.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
      function(_i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
      }
    );
    function nodeName(elem, name) {
      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    }
    var pop = arr.pop;
    var whitespace = "[\\x20\\t\\r\\n\\f]";
    var isIE = document2.documentMode;
    try {
      document2.querySelector(":has(*,:jqfake)");
      support.cssHas = false;
    } catch (e) {
      support.cssHas = true;
    }
    var rbuggyQSA = [];
    if (isIE) {
      rbuggyQSA.push(
        // Support: IE 9 - 11+
        // IE's :disabled selector does not pick up the children of disabled fieldsets
        ":enabled",
        ":disabled",
        // Support: IE 11+
        // IE 11 doesn't find elements on a `[name='']` query in some cases.
        // Adding a temporary attribute to the document before the selection works
        // around the issue.
        "\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + `*(?:''|"")`
      );
    }
    if (!support.cssHas) {
      rbuggyQSA.push(":has");
    }
    rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
    var rtrimCSS = new RegExp(
      "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
      "g"
    );
    var identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+";
    var booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped";
    var rleadingCombinator = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*");
    var rdescend = new RegExp(whitespace + "|>");
    var rsibling = /[+~]/;
    var documentElement = document2.documentElement;
    var matches2 = documentElement.matches || documentElement.msMatchesSelector;
    function createCache() {
      var keys = [];
      function cache(key, value) {
        if (keys.push(key + " ") > jQuery.expr.cacheLength) {
          delete cache[keys.shift()];
        }
        return cache[key + " "] = value;
      }
      return cache;
    }
    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    }
    var attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
    "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
    `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + identifier + "))|)" + whitespace + "*\\]";
    var pseudos = ":(" + identifier + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + attributes + ")*)|.*)\\)|)";
    var filterMatchExpr = {
      ID: new RegExp("^#(" + identifier + ")"),
      CLASS: new RegExp("^\\.(" + identifier + ")"),
      TAG: new RegExp("^(" + identifier + "|[*])"),
      ATTR: new RegExp("^" + attributes),
      PSEUDO: new RegExp("^" + pseudos),
      CHILD: new RegExp(
        "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)",
        "i"
      )
    };
    var rpseudo = new RegExp(pseudos);
    var runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
      var high = "0x" + escape.slice(1) - 65536;
      if (nonHex) {
        return nonHex;
      }
      return high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
    };
    function unescapeSelector(sel) {
      return sel.replace(runescape, funescape);
    }
    function selectorError(msg) {
      jQuery.error("Syntax error, unrecognized expression: " + msg);
    }
    var rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*");
    var tokenCache = createCache();
    function tokenize(selector, parseOnly) {
      var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }
      soFar = selector;
      groups = [];
      preFilters = jQuery.expr.preFilter;
      while (soFar) {
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            soFar = soFar.slice(match[0].length) || soFar;
          }
          groups.push(tokens = []);
        }
        matched = false;
        if (match = rleadingCombinator.exec(soFar)) {
          matched = match.shift();
          tokens.push({
            value: matched,
            // Cast descendant combinators to space
            type: match[0].replace(rtrimCSS, " ")
          });
          soFar = soFar.slice(matched.length);
        }
        for (type in filterMatchExpr) {
          if ((match = jQuery.expr.match[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }
        if (!matched) {
          break;
        }
      }
      if (parseOnly) {
        return soFar.length;
      }
      return soFar ? selectorError(selector) : (
        // Cache the tokens
        tokenCache(selector, groups).slice(0)
      );
    }
    var preFilter = {
      ATTR: function(match) {
        match[1] = unescapeSelector(match[1]);
        match[3] = unescapeSelector(match[3] || match[4] || match[5] || "");
        if (match[2] === "~=") {
          match[3] = " " + match[3] + " ";
        }
        return match.slice(0, 4);
      },
      CHILD: function(match) {
        match[1] = match[1].toLowerCase();
        if (match[1].slice(0, 3) === "nth") {
          if (!match[3]) {
            selectorError(match[0]);
          }
          match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
          match[5] = +(match[7] + match[8] || match[3] === "odd");
        } else if (match[3]) {
          selectorError(match[0]);
        }
        return match;
      },
      PSEUDO: function(match) {
        var excess, unquoted = !match[6] && match[2];
        if (filterMatchExpr.CHILD.test(match[0])) {
          return null;
        }
        if (match[3]) {
          match[2] = match[4] || match[5] || "";
        } else if (unquoted && rpseudo.test(unquoted) && // Get excess from tokenize (recursively)
        (excess = tokenize(unquoted, true)) && // advance to the next closing parenthesis
        (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
          match[0] = match[0].slice(0, excess);
          match[2] = unquoted.slice(0, excess);
        }
        return match.slice(0, 3);
      }
    };
    function toSelector(tokens) {
      var i2 = 0, len = tokens.length, selector = "";
      for (; i2 < len; i2++) {
        selector += tokens[i2].value;
      }
      return selector;
    }
    var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function fcssescape(ch, asCodePoint) {
      if (asCodePoint) {
        if (ch === "\0") {
          return "\uFFFD";
        }
        return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
      }
      return "\\" + ch;
    }
    jQuery.escapeSelector = function(sel) {
      return (sel + "").replace(rcssescape, fcssescape);
    };
    var sort = arr.sort;
    var splice = arr.splice;
    var hasDuplicate;
    function sortOrder(a, b) {
      if (a === b) {
        hasDuplicate = true;
        return 0;
      }
      var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
      if (compare) {
        return compare;
      }
      compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : (
        // Otherwise we know they are disconnected
        1
      );
      if (compare & 1) {
        if (a == document2 || a.ownerDocument == document2 && jQuery.contains(document2, a)) {
          return -1;
        }
        if (b == document2 || b.ownerDocument == document2 && jQuery.contains(document2, b)) {
          return 1;
        }
        return 0;
      }
      return compare & 4 ? -1 : 1;
    }
    jQuery.uniqueSort = function(results) {
      var elem, duplicates = [], j = 0, i2 = 0;
      hasDuplicate = false;
      sort.call(results, sortOrder);
      if (hasDuplicate) {
        while (elem = results[i2++]) {
          if (elem === results[i2]) {
            j = duplicates.push(i2);
          }
        }
        while (j--) {
          splice.call(results, duplicates[j], 1);
        }
      }
      return results;
    };
    jQuery.fn.uniqueSort = function() {
      return this.pushStack(jQuery.uniqueSort(slice.apply(this)));
    };
    var i, outermostContext, document$1, documentElement$1, documentIsHTML, dirruns = 0, done = 0, classCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), rwhitespace = new RegExp(whitespace + "+", "g"), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = jQuery.extend({
      bool: new RegExp("^(?:" + booleans + ")$", "i"),
      // For use in libraries implementing .is()
      // We use this for POS matching in `select`
      needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
    }, filterMatchExpr), rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, unloadHandler = function() {
      setDocument();
    }, inDisabledFieldset = addCombinator(
      function(elem) {
        return elem.disabled === true && nodeName(elem, "fieldset");
      },
      { dir: "parentNode", next: "legend" }
    );
    function find(selector, context, results, seed) {
      var m, i2, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
      results = results || [];
      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      }
      if (false) {
        setDocument(context);
        context = context || document$1;
        if (documentIsHTML) {
          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            if (m = match[1]) {
              if (nodeType === 9) {
                if (elem = context.getElementById(m)) {
                  push.call(results, elem);
                }
                return results;
              } else {
                if (newContext && (elem = newContext.getElementById(m)) && jQuery.contains(context, elem)) {
                  push.call(results, elem);
                  return results;
                }
              }
            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results;
            } else if ((m = match[3]) && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          }
          if (!nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            newSelector = selector;
            newContext = context;
            if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
              if (newContext != context || isIE) {
                if (nid = context.getAttribute("id")) {
                  nid = jQuery.escapeSelector(nid);
                } else {
                  context.setAttribute("id", nid = jQuery.expando);
                }
              }
              groups = tokenize(selector);
              i2 = groups.length;
              while (i2--) {
                groups[i2] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i2]);
              }
              newSelector = groups.join(",");
            }
            try {
              push.apply(
                results,
                newContext.querySelectorAll(newSelector)
              );
              return results;
            } catch (qsaError) {
              nonnativeSelectorCache(selector, true);
            } finally {
              if (nid === jQuery.expando) {
                context.removeAttribute("id");
              }
            }
          }
        }
      }
      return select(selector.replace(rtrimCSS, "$1"), context, results, seed);
    }
    function markFunction(fn) {
      fn[jQuery.expando] = true;
      return fn;
    }
    function createInputPseudo(type) {
      return function(elem) {
        return nodeName(elem, "input") && elem.type === type;
      };
    }
    function createButtonPseudo(type) {
      return function(elem) {
        return (nodeName(elem, "input") || nodeName(elem, "button")) && elem.type === type;
      };
    }
    function createDisabledPseudo(disabled) {
      return function(elem) {
        if ("form" in elem) {
          if (elem.parentNode && elem.disabled === false) {
            if ("label" in elem) {
              if ("label" in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
              } else {
                return elem.disabled === disabled;
              }
            }
            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually
            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
          }
          return elem.disabled === disabled;
        } else if ("label" in elem) {
          return elem.disabled === disabled;
        }
        return false;
      };
    }
    function createPositionalPseudo(fn) {
      return markFunction(function(argument) {
        argument = +argument;
        return markFunction(function(seed, matches3) {
          var j, matchIndexes = fn([], seed.length, argument), i2 = matchIndexes.length;
          while (i2--) {
            if (seed[j = matchIndexes[i2]]) {
              seed[j] = !(matches3[j] = seed[j]);
            }
          }
        });
      });
    }
    function setDocument(node) {
      var subWindow, doc2 = node ? node.ownerDocument || node : document2;
      if (doc2 == document$1 || doc2.nodeType !== 9) {
        return;
      }
      document$1 = doc2;
      documentElement$1 = document$1.documentElement;
      documentIsHTML = !jQuery.isXMLDoc(document$1);
      if (isIE && document2 != document$1 && (subWindow = document$1.defaultView) && subWindow.top !== subWindow) {
        subWindow.addEventListener("unload", unloadHandler);
      }
    }
    find.matches = function(expr, elements) {
      return find(expr, null, null, elements);
    };
    find.matchesSelector = function(elem, expr) {
      setDocument(elem);
      if (documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          return matches2.call(elem, expr);
        } catch (e) {
          nonnativeSelectorCache(expr, true);
        }
      }
      return find(expr, document$1, null, [elem]).length > 0;
    };
    jQuery.expr = {
      // Can be adjusted by the user
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      find: {
        ID: function(id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var elem = context.getElementById(id);
            return elem ? [elem] : [];
          }
        },
        TAG: function(tag, context) {
          if (typeof context.getElementsByTagName !== "undefined") {
            return context.getElementsByTagName(tag);
          } else {
            return context.querySelectorAll(tag);
          }
        },
        CLASS: function(className, context) {
          if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
            return context.getElementsByClassName(className);
          }
        }
      },
      relative: {
        ">": { dir: "parentNode", first: true },
        " ": { dir: "parentNode" },
        "+": { dir: "previousSibling", first: true },
        "~": { dir: "previousSibling" }
      },
      preFilter,
      filter: {
        ID: function(id) {
          var attrId = unescapeSelector(id);
          return function(elem) {
            return elem.getAttribute("id") === attrId;
          };
        },
        TAG: function(nodeNameSelector) {
          var expectedNodeName = unescapeSelector(nodeNameSelector).toLowerCase();
          return nodeNameSelector === "*" ? function() {
            return true;
          } : function(elem) {
            return nodeName(elem, expectedNodeName);
          };
        },
        CLASS: function(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
            return pattern.test(
              typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || ""
            );
          });
        },
        ATTR: function(name, operator, check) {
          return function(elem) {
            var result = elem.getAttribute(name);
            if (result == null) {
              return operator === "!=";
            }
            if (!operator) {
              return true;
            }
            result += "";
            if (operator === "=") {
              return result === check;
            }
            if (operator === "!=") {
              return result !== check;
            }
            if (operator === "^=") {
              return check && result.indexOf(check) === 0;
            }
            if (operator === "*=") {
              return check && result.indexOf(check) > -1;
            }
            if (operator === "$=") {
              return check && result.slice(-check.length) === check;
            }
            if (operator === "~=") {
              return (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1;
            }
            if (operator === "|=") {
              return result === check || result.slice(0, check.length + 1) === check + "-";
            }
            return false;
          };
        },
        CHILD: function(type, what, _argument, first, last) {
          var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
          return first === 1 && last === 0 ? (
            // Shortcut for :nth-*(n)
            function(elem) {
              return !!elem.parentNode;
            }
          ) : function(elem, _context, xml) {
            var cache, outerCache, node, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
            if (parent) {
              if (simple) {
                while (dir) {
                  node = elem;
                  while (node = node[dir]) {
                    if (ofType ? nodeName(node, name) : node.nodeType === 1) {
                      return false;
                    }
                  }
                  start = dir = type === "only" && !start && "nextSibling";
                }
                return true;
              }
              start = [forward ? parent.firstChild : parent.lastChild];
              if (forward && useCache) {
                outerCache = parent[jQuery.expando] || (parent[jQuery.expando] = {});
                cache = outerCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];
                while (node = ++nodeIndex && node && node[dir] || // Fallback to seeking `elem` from the start
                (diff = nodeIndex = 0) || start.pop()) {
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    outerCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else {
                if (useCache) {
                  outerCache = elem[jQuery.expando] || (elem[jQuery.expando] = {});
                  cache = outerCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = nodeIndex;
                }
                if (diff === false) {
                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {
                      if (useCache) {
                        outerCache = node[jQuery.expando] || (node[jQuery.expando] = {});
                        outerCache[type] = [dirruns, diff];
                      }
                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
              }
              diff -= last;
              return diff === first || diff % first === 0 && diff / first >= 0;
            }
          };
        },
        PSEUDO: function(pseudo, argument) {
          var fn = jQuery.expr.pseudos[pseudo] || jQuery.expr.setFilters[pseudo.toLowerCase()] || selectorError("unsupported pseudo: " + pseudo);
          if (fn[jQuery.expando]) {
            return fn(argument);
          }
          return fn;
        }
      },
      pseudos: {
        // Potentially complex pseudos
        not: markFunction(function(selector) {
          var input = [], results = [], matcher = compile(selector.replace(rtrimCSS, "$1"));
          return matcher[jQuery.expando] ? markFunction(function(seed, matches3, _context, xml) {
            var elem, unmatched = matcher(seed, null, xml, []), i2 = seed.length;
            while (i2--) {
              if (elem = unmatched[i2]) {
                seed[i2] = !(matches3[i2] = elem);
              }
            }
          }) : function(elem, _context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results);
            input[0] = null;
            return !results.pop();
          };
        }),
        has: markFunction(function(selector) {
          return function(elem) {
            return find(selector, elem).length > 0;
          };
        }),
        contains: markFunction(function(text) {
          text = unescapeSelector(text);
          return function(elem) {
            return (elem.textContent || jQuery.text(elem)).indexOf(text) > -1;
          };
        }),
        // "Whether an element is represented by a :lang() selector
        // is based solely on the element's language value
        // being equal to the identifier C,
        // or beginning with the identifier C immediately followed by "-".
        // The matching of C against the element's language value is performed case-insensitively.
        // The identifier C does not have to be a valid language name."
        // https://www.w3.org/TR/selectors/#lang-pseudo
        lang: markFunction(function(lang) {
          if (!ridentifier.test(lang || "")) {
            selectorError("unsupported lang: " + lang);
          }
          lang = unescapeSelector(lang).toLowerCase();
          return function(elem) {
            var elemLang;
            do {
              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);
            return false;
          };
        }),
        // Miscellaneous
        target: function(elem) {
          var hash = window2.location && window2.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        root: function(elem) {
          return elem === documentElement$1;
        },
        focus: function(elem) {
          return elem === document$1.activeElement && document$1.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        // Boolean properties
        enabled: createDisabledPseudo(false),
        disabled: createDisabledPseudo(true),
        checked: function(elem) {
          return nodeName(elem, "input") && !!elem.checked || nodeName(elem, "option") && !!elem.selected;
        },
        selected: function(elem) {
          if (isIE && elem.parentNode) {
            elem.parentNode.selectedIndex;
          }
          return elem.selected === true;
        },
        // Contents
        empty: function(elem) {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }
          return true;
        },
        parent: function(elem) {
          return !jQuery.expr.pseudos.empty(elem);
        },
        // Element/input types
        header: function(elem) {
          return rheader.test(elem.nodeName);
        },
        input: function(elem) {
          return rinputs.test(elem.nodeName);
        },
        button: function(elem) {
          return nodeName(elem, "input") && elem.type === "button" || nodeName(elem, "button");
        },
        text: function(elem) {
          return nodeName(elem, "input") && elem.type === "text";
        },
        // Position-in-collection
        first: createPositionalPseudo(function() {
          return [0];
        }),
        last: createPositionalPseudo(function(_matchIndexes, length) {
          return [length - 1];
        }),
        eq: createPositionalPseudo(function(_matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        even: createPositionalPseudo(function(matchIndexes, length) {
          var i2 = 0;
          for (; i2 < length; i2 += 2) {
            matchIndexes.push(i2);
          }
          return matchIndexes;
        }),
        odd: createPositionalPseudo(function(matchIndexes, length) {
          var i2 = 1;
          for (; i2 < length; i2 += 2) {
            matchIndexes.push(i2);
          }
          return matchIndexes;
        }),
        lt: createPositionalPseudo(function(matchIndexes, length, argument) {
          var i2;
          if (argument < 0) {
            i2 = argument + length;
          } else if (argument > length) {
            i2 = length;
          } else {
            i2 = argument;
          }
          for (; --i2 >= 0; ) {
            matchIndexes.push(i2);
          }
          return matchIndexes;
        }),
        gt: createPositionalPseudo(function(matchIndexes, length, argument) {
          var i2 = argument < 0 ? argument + length : argument;
          for (; ++i2 < length; ) {
            matchIndexes.push(i2);
          }
          return matchIndexes;
        })
      }
    };
    jQuery.expr.pseudos.nth = jQuery.expr.pseudos.eq;
    for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {
      jQuery.expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in { submit: true, reset: true }) {
      jQuery.expr.pseudos[i] = createButtonPseudo(i);
    }
    function setFilters() {
    }
    setFilters.prototype = jQuery.expr.filters = jQuery.expr.pseudos;
    jQuery.expr.setFilters = new setFilters();
    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === "parentNode", doneName = done++;
      return combinator.first ? (
        // Check against closest ancestor/preceding element
        function(elem, context, xml) {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              return matcher(elem, context, xml);
            }
          }
          return false;
        }
      ) : (
        // Check against all ancestor/preceding elements
        function(elem, context, xml) {
          var oldCache, outerCache, newCache = [dirruns, doneName];
          if (xml) {
            while (elem = elem[dir]) {
              if (elem.nodeType === 1 || checkNonElements) {
                if (matcher(elem, context, xml)) {
                  return true;
                }
              }
            }
          } else {
            while (elem = elem[dir]) {
              if (elem.nodeType === 1 || checkNonElements) {
                outerCache = elem[jQuery.expando] || (elem[jQuery.expando] = {});
                if (skip && nodeName(elem, skip)) {
                  elem = elem[dir] || elem;
                } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                  return newCache[2] = oldCache[2];
                } else {
                  outerCache[key] = newCache;
                  if (newCache[2] = matcher(elem, context, xml)) {
                    return true;
                  }
                }
              }
            }
          }
          return false;
        }
      );
    }
    function elementMatcher(matchers) {
      return matchers.length > 1 ? function(elem, context, xml) {
        var i2 = matchers.length;
        while (i2--) {
          if (!matchers[i2](elem, context, xml)) {
            return false;
          }
        }
        return true;
      } : matchers[0];
    }
    function multipleContexts(selector, contexts, results) {
      var i2 = 0, len = contexts.length;
      for (; i2 < len; i2++) {
        find(selector, contexts[i2], results);
      }
      return results;
    }
    function condense(unmatched, map2, filter, context, xml) {
      var elem, newUnmatched = [], i2 = 0, len = unmatched.length, mapped = map2 != null;
      for (; i2 < len; i2++) {
        if (elem = unmatched[i2]) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
              map2.push(i2);
            }
          }
        }
      }
      return newUnmatched;
    }
    function setMatcher(preFilter2, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[jQuery.expando]) {
        postFilter = setMatcher(postFilter);
      }
      if (postFinder && !postFinder[jQuery.expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }
      return markFunction(function(seed, results, context, xml) {
        var temp, i2, elem, matcherOut, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(
          selector || "*",
          context.nodeType ? [context] : context,
          []
        ), matcherIn = preFilter2 && (seed || !selector) ? condense(elems, preMap, preFilter2, context, xml) : elems;
        if (matcher) {
          matcherOut = postFinder || (seed ? preFilter2 : preexisting || postFilter) ? (
            // ...intermediate processing is necessary
            []
          ) : (
            // ...otherwise use results directly
            results
          );
          matcher(matcherIn, matcherOut, context, xml);
        } else {
          matcherOut = matcherIn;
        }
        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml);
          i2 = temp.length;
          while (i2--) {
            if (elem = temp[i2]) {
              matcherOut[postMap[i2]] = !(matcherIn[postMap[i2]] = elem);
            }
          }
        }
        if (seed) {
          if (postFinder || preFilter2) {
            if (postFinder) {
              temp = [];
              i2 = matcherOut.length;
              while (i2--) {
                if (elem = matcherOut[i2]) {
                  temp.push(matcherIn[i2] = elem);
                }
              }
              postFinder(null, matcherOut = [], temp, xml);
            }
            i2 = matcherOut.length;
            while (i2--) {
              if ((elem = matcherOut[i2]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i2]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }
        } else {
          matcherOut = condense(
            matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut
          );
          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }
    function matcherFromTokens(tokens) {
      var checkContext, matcher, j, len = tokens.length, leadingRelative = jQuery.expr.relative[tokens[0].type], implicitRelative = leadingRelative || jQuery.expr.relative[" "], i2 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
        return elem === checkContext;
      }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
        return indexOf.call(checkContext, elem) > -1;
      }, implicitRelative, true), matchers = [function(elem, context, xml) {
        var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
        checkContext = null;
        return ret;
      }];
      for (; i2 < len; i2++) {
        if (matcher = jQuery.expr.relative[tokens[i2].type]) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = jQuery.expr.filter[tokens[i2].type].apply(null, tokens[i2].matches);
          if (matcher[jQuery.expando]) {
            j = ++i2;
            for (; j < len; j++) {
              if (jQuery.expr.relative[tokens[j].type]) {
                break;
              }
            }
            return setMatcher(
              i2 > 1 && elementMatcher(matchers),
              i2 > 1 && toSelector(
                // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                tokens.slice(0, i2 - 1).concat({ value: tokens[i2 - 2].type === " " ? "*" : "" })
              ).replace(rtrimCSS, "$1"),
              matcher,
              i2 < j && matcherFromTokens(tokens.slice(i2, j)),
              j < len && matcherFromTokens(tokens = tokens.slice(j)),
              j < len && toSelector(tokens)
            );
          }
          matchers.push(matcher);
        }
      }
      return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
        var elem, j, matcher, matchedCount = 0, i2 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && jQuery.expr.find.TAG("*", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1;
        if (outermost) {
          outermostContext = context == document$1 || context || outermost;
        }
        for (; (elem = elems[i2]) != null; i2++) {
          if (byElement && elem) {
            j = 0;
            if (!context && elem.ownerDocument != document$1) {
              setDocument(elem);
              xml = !documentIsHTML;
            }
            while (matcher = elementMatchers[j++]) {
              if (matcher(elem, context || document$1, xml)) {
                push.call(results, elem);
                break;
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
            }
          }
          if (bySet) {
            if (elem = !matcher && elem) {
              matchedCount--;
            }
            if (seed) {
              unmatched.push(elem);
            }
          }
        }
        matchedCount += i2;
        if (bySet && i2 !== matchedCount) {
          j = 0;
          while (matcher = setMatchers[j++]) {
            matcher(unmatched, setMatched, context, xml);
          }
          if (seed) {
            if (matchedCount > 0) {
              while (i2--) {
                if (!(unmatched[i2] || setMatched[i2])) {
                  setMatched[i2] = pop.call(results);
                }
              }
            }
            setMatched = condense(setMatched);
          }
          push.apply(results, setMatched);
          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
            jQuery.uniqueSort(results);
          }
        }
        if (outermost) {
          dirruns = dirrunsUnique;
          outermostContext = contextBackup;
        }
        return unmatched;
      };
      return bySet ? markFunction(superMatcher) : superMatcher;
    }
    function compile(selector, match) {
      var i2, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
      if (!cached) {
        if (!match) {
          match = tokenize(selector);
        }
        i2 = match.length;
        while (i2--) {
          cached = matcherFromTokens(match[i2]);
          if (cached[jQuery.expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }
        cached = compilerCache(
          selector,
          matcherFromGroupMatchers(elementMatchers, setMatchers)
        );
        cached.selector = selector;
      }
      return cached;
    }
    function select(selector, context, results, seed) {
      var i2, tokens, token, type, find2, compiled = typeof selector === "function" && selector, match = !seed && tokenize(selector = compiled.selector || selector);
      results = results || [];
      if (match.length === 1) {
        tokens = match[0] = match[0].slice(0);
        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && jQuery.expr.relative[tokens[1].type]) {
          context = (jQuery.expr.find.ID(
            unescapeSelector(token.matches[0]),
            context
          ) || [])[0];
          if (!context) {
            return results;
          } else if (compiled) {
            context = context.parentNode;
          }
          selector = selector.slice(tokens.shift().value.length);
        }
        i2 = matchExpr.needsContext.test(selector) ? 0 : tokens.length;
        while (i2--) {
          token = tokens[i2];
          if (jQuery.expr.relative[type = token.type]) {
            break;
          }
          if (find2 = jQuery.expr.find[type]) {
            if (seed = find2(
              unescapeSelector(token.matches[0]),
              rsibling.test(tokens[0].type) && testContext(context.parentNode) || context
            )) {
              tokens.splice(i2, 1);
              selector = seed.length && toSelector(tokens);
              if (!selector) {
                push.apply(results, seed);
                return results;
              }
              break;
            }
          }
        }
      }
      (compiled || compile(selector, match))(
        seed,
        context,
        !documentIsHTML,
        results,
        !context || rsibling.test(selector) && testContext(context.parentNode) || context
      );
      return results;
    }
    setDocument();
    jQuery.find = find;
    find.compile = compile;
    find.select = select;
    find.setDocument = setDocument;
    find.tokenize = tokenize;
    return jQuery;
  })
);

// src/mock-doc/selector.ts
function matches(selector, elm) {
  try {
    const r = jquery_default.find(selector, void 0, void 0, [elm]);
    return r.length > 0;
  } catch (e) {
    updateSelectorError(selector, e);
    throw e;
  }
}
function selectOne(selector, elm) {
  try {
    const r = jquery_default.find(selector, elm, void 0, void 0);
    return r[0] || null;
  } catch (e) {
    updateSelectorError(selector, e);
    throw e;
  }
}
function selectAll(selector, elm) {
  try {
    return jquery_default.find(selector, elm, void 0, void 0);
  } catch (e) {
    updateSelectorError(selector, e);
    throw e;
  }
}
var PROBLEMATIC_SELECTORS = [":scope", ":where", ":is"];
function updateSelectorError(selector, e) {
  const selectorsPresent = PROBLEMATIC_SELECTORS.filter((s) => selector.includes(s));
  if (selectorsPresent.length > 0 && e.message) {
    e.message = `At present jQuery does not support the ${humanReadableList(selectorsPresent)} ${selectorsPresent.length === 1 ? "selector" : "selectors"}.
If you need this in your test, consider writing an end-to-end test instead.
` + e.message;
  }
}
function humanReadableList(items) {
  if (items.length <= 1) {
    return items.join("");
  }
  return `${items.slice(0, items.length - 1).join(", ")} and ${items[items.length - 1]}`;
}

// src/mock-doc/serialize-node.ts
function normalizeSerializationOptions(opts = {}) {
  return {
    ...opts,
    outerHtml: typeof opts.outerHtml !== "boolean" ? false : opts.outerHtml,
    ...opts.prettyHtml ? {
      indentSpaces: typeof opts.indentSpaces !== "number" ? 2 : opts.indentSpaces,
      newLines: typeof opts.newLines !== "boolean" ? true : opts.newLines
    } : {
      prettyHtml: false,
      indentSpaces: typeof opts.indentSpaces !== "number" ? 0 : opts.indentSpaces,
      newLines: typeof opts.newLines !== "boolean" ? false : opts.newLines
    },
    approximateLineWidth: typeof opts.approximateLineWidth !== "number" ? -1 : opts.approximateLineWidth,
    removeEmptyAttributes: typeof opts.removeEmptyAttributes !== "boolean" ? true : opts.removeEmptyAttributes,
    removeAttributeQuotes: typeof opts.removeAttributeQuotes !== "boolean" ? false : opts.removeAttributeQuotes,
    removeBooleanAttributeQuotes: typeof opts.removeBooleanAttributeQuotes !== "boolean" ? false : opts.removeBooleanAttributeQuotes,
    removeHtmlComments: typeof opts.removeHtmlComments !== "boolean" ? false : opts.removeHtmlComments,
    serializeShadowRoot: typeof opts.serializeShadowRoot !== "boolean" ? true : opts.serializeShadowRoot,
    fullDocument: typeof opts.fullDocument !== "boolean" ? true : opts.fullDocument
  };
}
function serializeNodeToHtml(elm, serializationOptions = {}) {
  const opts = normalizeSerializationOptions(serializationOptions);
  const output = {
    currentLineWidth: 0,
    indent: 0,
    isWithinBody: false,
    text: []
  };
  let renderedNode = "";
  const children = !opts.fullDocument && elm.body ? Array.from(elm.body.childNodes) : opts.outerHtml ? [elm] : Array.from(elm.childNodes);
  for (let i = 0, ii = children.length; i < ii; i++) {
    const child = children[i];
    const chunks = Array.from(streamToHtml(child, opts, output));
    renderedNode += chunks.join("");
  }
  return renderedNode.trim();
}
var shadowRootTag = "mock:shadow-root";
function* streamToHtml(node, opts, output) {
  var _a2, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;
  const isShadowRoot = node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */;
  if (node.nodeType === 1 /* ELEMENT_NODE */ || isShadowRoot) {
    const tagName = isShadowRoot ? shadowRootTag : getTagName(node);
    if (tagName === "body") {
      output.isWithinBody = true;
    }
    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);
    if (ignoreTag === false) {
      const isWithinWhitespaceSensitiveNode = opts.newLines || ((_a2 = opts.indentSpaces) != null ? _a2 : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;
      if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
        yield "\n";
        output.currentLineWidth = 0;
      }
      if (((_b = opts.indentSpaces) != null ? _b : 0) > 0 && !isWithinWhitespaceSensitiveNode) {
        for (let i = 0; i < output.indent; i++) {
          yield " ";
        }
        output.currentLineWidth += output.indent;
      }
      const tag = tagName === shadowRootTag ? "template" : tagName;
      yield "<" + tag;
      output.currentLineWidth += tag.length + 1;
      if (tag === "template") {
        const mode = ` shadowrootmode="open"`;
        yield mode;
        output.currentLineWidth += mode.length;
      }
      const attrsLength = node.attributes.length;
      const attributes = opts.prettyHtml && attrsLength > 1 ? cloneAttributes(node.attributes, true) : node.attributes;
      for (let i = 0; i < attrsLength; i++) {
        const attr = attributes.item(i);
        const attrName = attr.name;
        if (attrName === "style") {
          continue;
        }
        let attrValue = attr.value;
        if (opts.removeEmptyAttributes && attrValue === "" && REMOVE_EMPTY_ATTR.has(attrName)) {
          continue;
        }
        const attrNamespaceURI = attr.namespaceURI;
        if (attrNamespaceURI == null) {
          output.currentLineWidth += attrName.length + 1;
          if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            yield "\n" + attrName;
            output.currentLineWidth = 0;
          } else {
            yield " " + attrName;
          }
        } else if (attrNamespaceURI === "http://www.w3.org/XML/1998/namespace") {
          yield " xml:" + attrName;
          output.currentLineWidth += attrName.length + 5;
        } else if (attrNamespaceURI === "http://www.w3.org/2000/xmlns/") {
          if (attrName !== "xmlns") {
            yield " xmlns:" + attrName;
            output.currentLineWidth += attrName.length + 7;
          } else {
            yield " " + attrName;
            output.currentLineWidth += attrName.length + 1;
          }
        } else if (attrNamespaceURI === XLINK_NS) {
          yield " xlink:" + attrName;
          output.currentLineWidth += attrName.length + 7;
        } else {
          yield " " + attrNamespaceURI + ":" + attrName;
          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;
        }
        if (opts.prettyHtml && attrName === "class") {
          attrValue = attr.value = attrValue.split(" ").filter((t) => t !== "").sort().join(" ").trim();
        }
        if (attrValue === "") {
          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {
            continue;
          }
          if (opts.removeEmptyAttributes && attrName.startsWith("data-")) {
            continue;
          }
        }
        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {
          yield "=" + escapeString(attrValue, true);
          output.currentLineWidth += attrValue.length + 1;
        } else {
          yield '="' + escapeString(attrValue, true) + '"';
          output.currentLineWidth += attrValue.length + 3;
        }
      }
      if (node.hasAttribute("style")) {
        const cssText = node.style.cssText;
        if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {
          yield `
style="${cssText}">`;
          output.currentLineWidth = 0;
        } else {
          yield ` style="${cssText}">`;
          output.currentLineWidth += cssText.length + 10;
        }
      } else {
        yield ">";
        output.currentLineWidth += 1;
      }
    }
    if (EMPTY_ELEMENTS.has(tagName) === false) {
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null && opts.serializeShadowRoot) {
        output.indent = output.indent + ((_c = opts.indentSpaces) != null ? _c : 0);
        yield* streamToHtml(shadowRoot, opts, output);
        output.indent = output.indent - ((_d = opts.indentSpaces) != null ? _d : 0);
        if (opts.newLines && (node.childNodes.length === 0 || node.childNodes.length === 1 && node.childNodes[0].nodeType === 3 /* TEXT_NODE */ && ((_e = node.childNodes[0].nodeValue) == null ? void 0 : _e.trim()) === "")) {
          yield "\n";
          output.currentLineWidth = 0;
          for (let i = 0; i < output.indent; i++) {
            yield " ";
          }
          output.currentLineWidth += output.indent;
        }
      }
      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {
        const tag = tagName === shadowRootTag ? "template" : tagName;
        const childNodes = tagName === "template" ? node.content.childNodes : node.childNodes;
        const childNodeLength = childNodes.length;
        if (childNodeLength > 0) {
          if (childNodeLength === 1 && childNodes[0].nodeType === 3 /* TEXT_NODE */ && (typeof childNodes[0].nodeValue !== "string" || childNodes[0].nodeValue.trim() === "")) {
          } else {
            const isWithinWhitespaceSensitiveNode = opts.newLines || ((_f = opts.indentSpaces) != null ? _f : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;
            if (!isWithinWhitespaceSensitiveNode && ((_g = opts.indentSpaces) != null ? _g : 0) > 0 && ignoreTag === false) {
              output.indent = output.indent + ((_h = opts.indentSpaces) != null ? _h : 0);
            }
            for (let i = 0; i < childNodeLength; i++) {
              const sId = node.attributes.getNamedItem(HYDRATE_ID);
              const isStencilDeclarativeShadowDOM = childNodes[i].nodeName.toLowerCase() === "template" && sId;
              if (isStencilDeclarativeShadowDOM) {
                yield `
${" ".repeat(output.indent)}<!--r.${sId.value}-->`;
                continue;
              }
              yield* streamToHtml(childNodes[i], opts, output);
            }
            if (ignoreTag === false) {
              if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
                yield "\n";
                output.currentLineWidth = 0;
              }
              if (((_i = opts.indentSpaces) != null ? _i : 0) > 0 && !isWithinWhitespaceSensitiveNode) {
                output.indent = output.indent - ((_j = opts.indentSpaces) != null ? _j : 0);
                for (let i = 0; i < output.indent; i++) {
                  yield " ";
                }
                output.currentLineWidth += output.indent;
              }
            }
          }
        }
        if (ignoreTag === false) {
          yield "</" + tag + ">";
          output.currentLineWidth += tag.length + 3;
        }
      }
    }
    if (((_k = opts.approximateLineWidth) != null ? _k : 0) > 0 && STRUCTURE_ELEMENTS.has(tagName)) {
      yield "\n";
      output.currentLineWidth = 0;
    }
    if (tagName === "body") {
      output.isWithinBody = false;
    }
  } else if (node.nodeType === 3 /* TEXT_NODE */) {
    let textContent = node.nodeValue;
    if (typeof textContent === "string") {
      const trimmedTextContent = textContent.trim();
      if (trimmedTextContent === "") {
        if (isWithinWhitespaceSensitive(node)) {
          yield textContent;
          output.currentLineWidth += textContent.length;
        } else if (((_l = opts.approximateLineWidth) != null ? _l : 0) > 0 && !output.isWithinBody) {
        } else if (!opts.prettyHtml) {
          output.currentLineWidth += 1;
          if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            yield "\n";
            output.currentLineWidth = 0;
          } else {
            yield " ";
          }
        }
      } else {
        const isWithinWhitespaceSensitiveNode = opts.newLines || ((_m = opts.indentSpaces) != null ? _m : 0) > 0 || opts.prettyHtml ? isWithinWhitespaceSensitive(node) : false;
        if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
          yield "\n";
          output.currentLineWidth = 0;
        }
        if (((_n = opts.indentSpaces) != null ? _n : 0) > 0 && !isWithinWhitespaceSensitiveNode) {
          for (let i = 0; i < output.indent; i++) {
            yield " ";
          }
          output.currentLineWidth += output.indent;
        }
        let textContentLength = textContent.length;
        if (textContentLength > 0) {
          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* ELEMENT_NODE */ ? node.parentNode.nodeName : null;
          if (typeof parentTagName === "string" && NON_ESCAPABLE_CONTENT.has(parentTagName)) {
            if (isWithinWhitespaceSensitive(node)) {
              yield textContent;
            } else {
              yield trimmedTextContent;
              textContentLength = trimmedTextContent.length;
            }
            output.currentLineWidth += textContentLength;
          } else {
            if (opts.prettyHtml && !isWithinWhitespaceSensitiveNode) {
              yield escapeString(textContent.replace(/\s\s+/g, " ").trim(), false);
              output.currentLineWidth += textContentLength;
            } else {
              if (isWithinWhitespaceSensitive(node)) {
                output.currentLineWidth += textContentLength;
              } else {
                if (/\s/.test(textContent.charAt(0))) {
                  textContent = " " + textContent.trimLeft();
                }
                textContentLength = textContent.length;
                if (textContentLength > 1) {
                  if (/\s/.test(textContent.charAt(textContentLength - 1))) {
                    if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth + textContentLength > opts.approximateLineWidth) {
                      textContent = textContent.trimRight() + "\n";
                      output.currentLineWidth = 0;
                    } else {
                      textContent = textContent.trimRight() + " ";
                    }
                  }
                }
                output.currentLineWidth += textContentLength;
              }
              yield escapeString(textContent, false);
            }
          }
        }
      }
    }
  } else if (node.nodeType === 8 /* COMMENT_NODE */) {
    const nodeValue = node.nodeValue;
    const isHydrateAnnotation = (nodeValue == null ? void 0 : nodeValue.startsWith(CONTENT_REF_ID + ".")) || (nodeValue == null ? void 0 : nodeValue.startsWith(ORG_LOCATION_ID + ".")) || (nodeValue == null ? void 0 : nodeValue.startsWith(SLOT_NODE_ID + ".")) || (nodeValue == null ? void 0 : nodeValue.startsWith(TEXT_NODE_ID + "."));
    if (opts.removeHtmlComments && !isHydrateAnnotation) {
      return;
    }
    const isWithinWhitespaceSensitiveNode = opts.newLines || ((_o = opts.indentSpaces) != null ? _o : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;
    if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
      yield "\n";
      output.currentLineWidth = 0;
    }
    if (((_p = opts.indentSpaces) != null ? _p : 0) > 0 && !isWithinWhitespaceSensitiveNode) {
      for (let i = 0; i < output.indent; i++) {
        yield " ";
      }
      output.currentLineWidth += output.indent;
    }
    yield "<!--" + nodeValue + "-->";
    if (nodeValue) {
      output.currentLineWidth += nodeValue.length + 7;
    }
  } else if (node.nodeType === 10 /* DOCUMENT_TYPE_NODE */) {
    yield "<!doctype html>";
  }
}
var AMP_REGEX = /&/g;
var NBSP_REGEX = /\u00a0/g;
var DOUBLE_QUOTE_REGEX = /"/g;
var LT_REGEX = /</g;
var GT_REGEX = />/g;
var CAN_REMOVE_ATTR_QUOTES = /^[^ \t\n\f\r"'`=<>\/\\-]+$/;
function getTagName(element) {
  if (element.namespaceURI === "http://www.w3.org/1999/xhtml") {
    return element.nodeName.toLowerCase();
  } else {
    return element.nodeName;
  }
}
function escapeString(str, attrMode) {
  str = str.replace(AMP_REGEX, "&amp;").replace(NBSP_REGEX, "&nbsp;");
  if (attrMode) {
    return str.replace(DOUBLE_QUOTE_REGEX, "&quot;");
  }
  return str.replace(LT_REGEX, "&lt;").replace(GT_REGEX, "&gt;");
}
function isWithinWhitespaceSensitive(node) {
  let _node = node;
  while (_node == null ? void 0 : _node.nodeName) {
    if (WHITESPACE_SENSITIVE.has(_node.nodeName)) {
      return true;
    }
    _node = _node.parentNode;
  }
  return false;
}
var NON_ESCAPABLE_CONTENT = /* @__PURE__ */ new Set([
  "STYLE",
  "SCRIPT",
  "IFRAME",
  "NOSCRIPT",
  "XMP",
  "NOEMBED",
  "NOFRAMES",
  "PLAINTEXT"
]);
var WHITESPACE_SENSITIVE = /* @__PURE__ */ new Set([
  "CODE",
  "OUTPUT",
  "PLAINTEXT",
  "PRE",
  "SCRIPT",
  "TEMPLATE",
  "TEXTAREA"
]);
var EMPTY_ELEMENTS = /* @__PURE__ */ new Set([
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "embed",
  "frame",
  "hr",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "trace",
  "track",
  "wbr"
]);
var REMOVE_EMPTY_ATTR = /* @__PURE__ */ new Set(["class", "dir", "id", "lang", "name", "title"]);
var BOOLEAN_ATTR = /* @__PURE__ */ new Set([
  "allowfullscreen",
  "async",
  "autofocus",
  "autoplay",
  "checked",
  "compact",
  "controls",
  "declare",
  "default",
  "defaultchecked",
  "defaultmuted",
  "defaultselected",
  "defer",
  "disabled",
  "enabled",
  "formnovalidate",
  "hidden",
  "indeterminate",
  "inert",
  "ismap",
  "itemscope",
  "loop",
  "multiple",
  "muted",
  "nohref",
  "nomodule",
  "noresize",
  "noshade",
  "novalidate",
  "nowrap",
  "open",
  "pauseonexit",
  "readonly",
  "required",
  "reversed",
  "scoped",
  "seamless",
  "selected",
  "sortable",
  "truespeed",
  "typemustmatch",
  "visible"
]);
var STRUCTURE_ELEMENTS = /* @__PURE__ */ new Set([
  "html",
  "body",
  "head",
  "iframe",
  "meta",
  "link",
  "base",
  "title",
  "script",
  "style"
]);

// src/mock-doc/node.ts
var MockNode2 = class {
  constructor(ownerDocument, nodeType, nodeName, nodeValue) {
    this.ownerDocument = ownerDocument;
    this.nodeType = nodeType;
    this.nodeName = nodeName;
    this._nodeValue = nodeValue;
    this.parentNode = null;
    this.childNodes = [];
  }
  appendChild(newNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      const nodes = newNode.childNodes.slice();
      for (const child of nodes) {
        this.appendChild(child);
      }
    } else {
      newNode.remove();
      newNode.parentNode = this;
      this.childNodes.push(newNode);
      connectNode(this.ownerDocument, newNode);
    }
    return newNode;
  }
  append(...items) {
    items.forEach((item) => {
      const isNode = typeof item === "object" && item !== null && "nodeType" in item;
      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));
    });
  }
  prepend(...items) {
    const firstChild = this.firstChild;
    items.forEach((item) => {
      const isNode = typeof item === "object" && item !== null && "nodeType" in item;
      if (firstChild) {
        this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);
      }
    });
  }
  cloneNode(deep) {
    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);
  }
  compareDocumentPosition(_other) {
    return -1;
  }
  get firstChild() {
    return this.childNodes[0] || null;
  }
  insertBefore(newNode, referenceNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {
        insertBefore(this, newNode.childNodes[i], referenceNode);
      }
    } else {
      insertBefore(this, newNode, referenceNode);
    }
    return newNode;
  }
  get isConnected() {
    let node = this;
    while (node != null) {
      if (node.nodeType === 9 /* DOCUMENT_NODE */) {
        return true;
      }
      node = node.parentNode;
      if (node != null && node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
        node = node.host;
      }
    }
    return false;
  }
  isSameNode(node) {
    return this === node;
  }
  get lastChild() {
    return this.childNodes[this.childNodes.length - 1] || null;
  }
  get nextSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) + 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  get nodeValue() {
    var _a2;
    return (_a2 = this._nodeValue) != null ? _a2 : "";
  }
  set nodeValue(value) {
    this._nodeValue = value;
  }
  get parentElement() {
    return this.parentNode || null;
  }
  set parentElement(value) {
    this.parentNode = value;
  }
  get previousSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) - 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  contains(otherNode) {
    if (otherNode === this) {
      return true;
    }
    const childNodes = Array.from(this.childNodes);
    if (childNodes.includes(otherNode)) {
      return true;
    }
    return childNodes.some((node) => this.contains.bind(node)(otherNode));
  }
  removeChild(childNode) {
    const index = this.childNodes.indexOf(childNode);
    if (index > -1) {
      this.childNodes.splice(index, 1);
      if (this.nodeType === 1 /* ELEMENT_NODE */) {
        const wasConnected = this.isConnected;
        childNode.parentNode = null;
        if (wasConnected === true) {
          disconnectNode(childNode);
        }
      } else {
        childNode.parentNode = null;
      }
    } else {
      throw new Error(`node not found within childNodes during removeChild`);
    }
    return childNode;
  }
  remove() {
    if (this.parentNode != null) {
      this.parentNode.removeChild(this);
    }
  }
  replaceChild(newChild, oldChild) {
    if (oldChild.parentNode === this) {
      this.insertBefore(newChild, oldChild);
      oldChild.remove();
      return newChild;
    }
    return null;
  }
  get textContent() {
    var _a2;
    return (_a2 = this._nodeValue) != null ? _a2 : "";
  }
  set textContent(value) {
    this._nodeValue = String(value);
  }
};
MockNode2.ELEMENT_NODE = 1;
MockNode2.TEXT_NODE = 3;
MockNode2.PROCESSING_INSTRUCTION_NODE = 7;
MockNode2.COMMENT_NODE = 8;
MockNode2.DOCUMENT_NODE = 9;
MockNode2.DOCUMENT_TYPE_NODE = 10;
MockNode2.DOCUMENT_FRAGMENT_NODE = 11;
var MockNodeList = class {
  constructor(ownerDocument, childNodes, length) {
    this.ownerDocument = ownerDocument;
    this.childNodes = childNodes;
    this.length = length;
  }
};
var MockElement = class extends MockNode2 {
  attachInternals() {
    return new Proxy({}, {
      get: function(_target, prop, _receiver) {
        console.error(
          `NOTE: Property ${String(prop)} was accessed on ElementInternals, but this property is not implemented.
Testing components with ElementInternals is fully supported in e2e tests.`
        );
      }
    });
  }
  constructor(ownerDocument, nodeName, namespaceURI = null) {
    super(ownerDocument, 1 /* ELEMENT_NODE */, typeof nodeName === "string" ? nodeName : null, null);
    this.__namespaceURI = namespaceURI;
    this.__shadowRoot = null;
    this.__attributeMap = null;
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  attachShadow(_opts) {
    const shadowRoot = this.ownerDocument.createDocumentFragment();
    this.shadowRoot = shadowRoot;
    return shadowRoot;
  }
  blur() {
    dispatchEvent(
      this,
      new MockFocusEvent("blur", { relatedTarget: null, bubbles: true, cancelable: true, composed: true })
    );
  }
  get localName() {
    if (!this.nodeName) {
      throw new Error(`Can't compute elements localName without nodeName`);
    }
    return this.nodeName.toLocaleLowerCase();
  }
  get namespaceURI() {
    return this.__namespaceURI;
  }
  get shadowRoot() {
    return this.__shadowRoot || null;
  }
  /**
   * Set shadow root for element
   * @param shadowRoot - ShadowRoot to set
   */
  set shadowRoot(shadowRoot) {
    if (shadowRoot != null) {
      shadowRoot.host = this;
      this.__shadowRoot = shadowRoot;
    } else {
      delete this.__shadowRoot;
    }
  }
  get attributes() {
    if (this.__attributeMap == null) {
      const attrMap = createAttributeProxy(false);
      this.__attributeMap = attrMap;
      return attrMap;
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
  get children() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* ELEMENT_NODE */);
  }
  get childElementCount() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* ELEMENT_NODE */).length;
  }
  get className() {
    return this.getAttributeNS(null, "class") || "";
  }
  set className(value) {
    this.setAttributeNS(null, "class", value);
  }
  get classList() {
    return new MockClassList(this);
  }
  click() {
    dispatchEvent(this, new MockEvent("click", { bubbles: true, cancelable: true, composed: true }));
  }
  cloneNode(_deep) {
    return null;
  }
  closest(selector) {
    let elm = this;
    while (elm != null) {
      if (elm.matches(selector)) {
        return elm;
      }
      elm = elm.parentNode;
    }
    return null;
  }
  get dataset() {
    return dataset(this);
  }
  get dir() {
    return this.getAttributeNS(null, "dir") || "";
  }
  set dir(value) {
    this.setAttributeNS(null, "dir", value);
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get firstElementChild() {
    return this.children[0] || null;
  }
  focus(_options) {
    dispatchEvent(
      this,
      new MockFocusEvent("focus", { relatedTarget: null, bubbles: true, cancelable: true, composed: true })
    );
  }
  getAttribute(attrName) {
    if (attrName === "style") {
      if (this.__style != null && this.__style.length > 0) {
        return this.style.cssText;
      }
      return null;
    }
    const attr = this.attributes.getNamedItem(attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNode(attrName) {
    if (!this.hasAttribute(attrName)) {
      return null;
    }
    return new MockAttr(attrName, this.getAttribute(attrName));
  }
  getBoundingClientRect() {
    return { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 };
  }
  getRootNode(opts) {
    const isComposed = opts != null && opts.composed === true;
    let node = this;
    while (node.parentNode != null) {
      node = node.parentNode;
      if (isComposed === true && node.parentNode == null && node.host != null) {
        node = node.host;
      }
    }
    return node;
  }
  get draggable() {
    return this.getAttributeNS(null, "draggable") === "true";
  }
  set draggable(value) {
    this.setAttributeNS(null, "draggable", value);
  }
  hasChildNodes() {
    return this.childNodes.length > 0;
  }
  get id() {
    return this.getAttributeNS(null, "id") || "";
  }
  set id(value) {
    this.setAttributeNS(null, "id", value);
  }
  get innerHTML() {
    if (this.childNodes.length === 0) {
      return "";
    }
    return serializeNodeToHtml(this, {
      newLines: false,
      indentSpaces: 0
    });
  }
  set innerHTML(html) {
    var _a2;
    if (NON_ESCAPABLE_CONTENT.has((_a2 = this.nodeName) != null ? _a2 : "") === true) {
      setTextContent(this, html);
    } else {
      for (let i = this.childNodes.length - 1; i >= 0; i--) {
        this.removeChild(this.childNodes[i]);
      }
      if (typeof html === "string") {
        const frag = parseFragmentUtil(this.ownerDocument, html);
        while (frag.childNodes.length > 0) {
          this.appendChild(frag.childNodes[0]);
        }
      }
    }
  }
  get innerText() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join("");
  }
  set innerText(value) {
    setTextContent(this, value);
  }
  insertAdjacentElement(position, elm) {
    if (position === "beforebegin" && this.parentNode) {
      insertBefore(this.parentNode, elm, this);
    } else if (position === "afterbegin") {
      this.prepend(elm);
    } else if (position === "beforeend") {
      this.appendChild(elm);
    } else if (position === "afterend" && this.parentNode) {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
    return elm;
  }
  insertAdjacentHTML(position, html) {
    const frag = parseFragmentUtil(this.ownerDocument, html);
    if (position === "beforebegin") {
      while (frag.childNodes.length > 0) {
        if (this.parentNode) {
          insertBefore(this.parentNode, frag.childNodes[0], this);
        }
      }
    } else if (position === "afterbegin") {
      while (frag.childNodes.length > 0) {
        this.prepend(frag.childNodes[frag.childNodes.length - 1]);
      }
    } else if (position === "beforeend") {
      while (frag.childNodes.length > 0) {
        this.appendChild(frag.childNodes[0]);
      }
    } else if (position === "afterend") {
      while (frag.childNodes.length > 0) {
        if (this.parentNode) {
          insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);
        }
      }
    }
  }
  insertAdjacentText(position, text) {
    const elm = this.ownerDocument.createTextNode(text);
    if (position === "beforebegin" && this.parentNode) {
      insertBefore(this.parentNode, elm, this);
    } else if (position === "afterbegin") {
      this.prepend(elm);
    } else if (position === "beforeend") {
      this.appendChild(elm);
    } else if (position === "afterend" && this.parentNode) {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
  }
  hasAttribute(attrName) {
    if (attrName === "style") {
      return this.__style != null && this.__style.length > 0;
    }
    return this.getAttribute(attrName) !== null;
  }
  hasAttributeNS(namespaceURI, name) {
    return this.getAttributeNS(namespaceURI, name) !== null;
  }
  get hidden() {
    return this.hasAttributeNS(null, "hidden");
  }
  set hidden(isHidden) {
    if (isHidden === true) {
      this.setAttributeNS(null, "hidden", "");
    } else {
      this.removeAttributeNS(null, "hidden");
    }
  }
  get lang() {
    return this.getAttributeNS(null, "lang") || "";
  }
  set lang(value) {
    this.setAttributeNS(null, "lang", value);
  }
  get lastElementChild() {
    const children = this.children;
    return children[children.length - 1] || null;
  }
  matches(selector) {
    return matches(selector, this);
  }
  get nextElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null && (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) + 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  get outerHTML() {
    return serializeNodeToHtml(this, {
      newLines: false,
      outerHtml: true,
      indentSpaces: 0
    });
  }
  get previousElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null && (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) - 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  getElementsByClassName(classNames) {
    const classes = classNames.trim().split(" ").filter((c) => c.length > 0);
    const results = [];
    getElementsByClassName(this, classes, results);
    return results;
  }
  getElementsByTagName(tagName) {
    const results = [];
    getElementsByTagName(this, tagName.toLowerCase(), results);
    return results;
  }
  querySelector(selector) {
    return selectOne(selector, this);
  }
  querySelectorAll(selector) {
    return selectAll(selector, this);
  }
  removeAttribute(attrName) {
    if (attrName === "style") {
      delete this.__style;
    } else {
      const attr = this.attributes.getNamedItem(attrName);
      if (attr != null) {
        this.attributes.removeNamedItemNS(attr);
        if (checkAttributeChanged(this) === true) {
          attributeChanged(this, attrName, attr.value, null);
        }
      }
    }
  }
  removeAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      this.attributes.removeNamedItemNS(attr);
      if (checkAttributeChanged(this) === true) {
        attributeChanged(this, attrName, attr.value, null);
      }
    }
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  setAttribute(attrName, value) {
    if (attrName === "style") {
      this.style = value;
    } else {
      const attributes = this.attributes;
      let attr = attributes.getNamedItem(attrName);
      const checkAttrChanged = checkAttributeChanged(this);
      if (attr != null) {
        if (checkAttrChanged === true) {
          const oldValue = attr.value;
          attr.value = value;
          if (oldValue !== attr.value) {
            attributeChanged(this, attr.name, oldValue, attr.value);
          }
        } else {
          attr.value = value;
        }
      } else {
        if (attributes.caseInsensitive) {
          attrName = attrName.toLowerCase();
        }
        attr = new MockAttr(attrName, value);
        attributes.__items.push(attr);
        if (checkAttrChanged === true) {
          attributeChanged(this, attrName, null, attr.value);
        }
      }
    }
  }
  setAttributeNS(namespaceURI, attrName, value) {
    const attributes = this.attributes;
    let attr = attributes.getNamedItemNS(namespaceURI, attrName);
    const checkAttrChanged = checkAttributeChanged(this);
    if (attr != null) {
      if (checkAttrChanged === true) {
        const oldValue = attr.value;
        attr.value = value;
        if (oldValue !== attr.value) {
          attributeChanged(this, attr.name, oldValue, attr.value);
        }
      } else {
        attr.value = value;
      }
    } else {
      attr = new MockAttr(attrName, value, namespaceURI);
      attributes.__items.push(attr);
      if (checkAttrChanged === true) {
        attributeChanged(this, attrName, null, attr.value);
      }
    }
  }
  get style() {
    if (this.__style == null) {
      this.__style = createCSSStyleDeclaration();
    }
    return this.__style;
  }
  set style(val) {
    if (typeof val === "string") {
      if (this.__style == null) {
        this.__style = createCSSStyleDeclaration();
      }
      this.__style.cssText = val;
    } else {
      this.__style = val;
    }
  }
  get tabIndex() {
    return parseInt(this.getAttributeNS(null, "tabindex") || "-1", 10);
  }
  set tabIndex(value) {
    this.setAttributeNS(null, "tabindex", value);
  }
  get tagName() {
    var _a2;
    return (_a2 = this.nodeName) != null ? _a2 : "";
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get textContent() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join("");
  }
  set textContent(value) {
    setTextContent(this, value);
  }
  get title() {
    return this.getAttributeNS(null, "title") || "";
  }
  set title(value) {
    this.setAttributeNS(null, "title", value);
  }
  animate() {
  }
  onanimationstart() {
  }
  onanimationend() {
  }
  onanimationiteration() {
  }
  onabort() {
  }
  onauxclick() {
  }
  onbeforecopy() {
  }
  onbeforecut() {
  }
  onbeforepaste() {
  }
  onblur() {
  }
  oncancel() {
  }
  oncanplay() {
  }
  oncanplaythrough() {
  }
  onchange() {
  }
  onclick() {
  }
  onclose() {
  }
  oncontextmenu() {
  }
  oncopy() {
  }
  oncuechange() {
  }
  oncut() {
  }
  ondblclick() {
  }
  ondrag() {
  }
  ondragend() {
  }
  ondragenter() {
  }
  ondragleave() {
  }
  ondragover() {
  }
  ondragstart() {
  }
  ondrop() {
  }
  ondurationchange() {
  }
  onemptied() {
  }
  onended() {
  }
  onerror() {
  }
  onfocus() {
  }
  onfocusin() {
  }
  onfocusout() {
  }
  onformdata() {
  }
  onfullscreenchange() {
  }
  onfullscreenerror() {
  }
  ongotpointercapture() {
  }
  oninput() {
  }
  oninvalid() {
  }
  onkeydown() {
  }
  onkeypress() {
  }
  onkeyup() {
  }
  onload() {
  }
  onloadeddata() {
  }
  onloadedmetadata() {
  }
  onloadstart() {
  }
  onlostpointercapture() {
  }
  onmousedown() {
  }
  onmouseenter() {
  }
  onmouseleave() {
  }
  onmousemove() {
  }
  onmouseout() {
  }
  onmouseover() {
  }
  onmouseup() {
  }
  onmousewheel() {
  }
  onpaste() {
  }
  onpause() {
  }
  onplay() {
  }
  onplaying() {
  }
  onpointercancel() {
  }
  onpointerdown() {
  }
  onpointerenter() {
  }
  onpointerleave() {
  }
  onpointermove() {
  }
  onpointerout() {
  }
  onpointerover() {
  }
  onpointerup() {
  }
  onprogress() {
  }
  onratechange() {
  }
  onreset() {
  }
  onresize() {
  }
  onscroll() {
  }
  onsearch() {
  }
  onseeked() {
  }
  onseeking() {
  }
  onselect() {
  }
  onselectstart() {
  }
  onstalled() {
  }
  onsubmit() {
  }
  onsuspend() {
  }
  ontimeupdate() {
  }
  ontoggle() {
  }
  onvolumechange() {
  }
  onwaiting() {
  }
  onwebkitfullscreenchange() {
  }
  onwebkitfullscreenerror() {
  }
  onwheel() {
  }
  requestFullscreen() {
  }
  scrollBy() {
  }
  scrollTo() {
  }
  scrollIntoView() {
  }
  toString(opts) {
    return serializeNodeToHtml(this, opts);
  }
};
function getElementsByClassName(elm, classNames, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    for (let j = 0, jj = classNames.length; j < jj; j++) {
      if (childElm.classList.contains(classNames[j])) {
        foundElms.push(childElm);
      }
    }
    getElementsByClassName(childElm, classNames, foundElms);
  }
}
function getElementsByTagName(elm, tagName, foundElms) {
  var _a2;
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (tagName === "*" || ((_a2 = childElm.nodeName) != null ? _a2 : "").toLowerCase() === tagName) {
      foundElms.push(childElm);
    }
    getElementsByTagName(childElm, tagName, foundElms);
  }
}
function resetElement(elm) {
  resetEventListeners(elm);
  delete elm.__attributeMap;
  delete elm.__shadowRoot;
  delete elm.__style;
}
function insertBefore(parentNode, newNode, referenceNode) {
  if (newNode !== referenceNode) {
    newNode.remove();
    newNode.parentNode = parentNode;
    newNode.ownerDocument = parentNode.ownerDocument;
    if (referenceNode != null) {
      const index = parentNode.childNodes.indexOf(referenceNode);
      if (index > -1) {
        parentNode.childNodes.splice(index, 0, newNode);
      } else {
        throw new Error(`referenceNode not found in parentNode.childNodes`);
      }
    } else {
      parentNode.childNodes.push(newNode);
    }
    connectNode(parentNode.ownerDocument, newNode);
  }
  return newNode;
}
var MockHTMLElement = class extends MockElement {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, typeof nodeName === "string" ? nodeName.toUpperCase() : null);
    this.__namespaceURI = "http://www.w3.org/1999/xhtml";
  }
  get tagName() {
    var _a2;
    return (_a2 = this.nodeName) != null ? _a2 : "";
  }
  set tagName(value) {
    this.nodeName = value;
  }
  /**
   * A node’s parent of type Element is known as its parent element.
   * If the node has a parent of a different type, its parent element
   * is null.
   * @returns MockElement
   */
  get parentElement() {
    if (this.nodeName === "HTML") {
      return null;
    }
    return super.parentElement;
  }
  get attributes() {
    if (this.__attributeMap == null) {
      const attrMap = createAttributeProxy(true);
      this.__attributeMap = attrMap;
      return attrMap;
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
};
var MockTextNode = class _MockTextNode extends MockNode2 {
  constructor(ownerDocument, text) {
    super(ownerDocument, 3 /* TEXT_NODE */, "#text" /* TEXT_NODE */, text);
  }
  cloneNode(_deep) {
    return new _MockTextNode(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
  get data() {
    return this.nodeValue;
  }
  set data(text) {
    this.nodeValue = text;
  }
  get wholeText() {
    if (this.parentNode != null) {
      const text = [];
      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {
        const childNode = this.parentNode.childNodes[i];
        if (childNode.nodeType === 3 /* TEXT_NODE */) {
          text.push(childNode.nodeValue);
        }
      }
      return text.join("");
    }
    return this.nodeValue;
  }
};
function getTextContent(childNodes, text) {
  for (let i = 0, ii = childNodes.length; i < ii; i++) {
    const childNode = childNodes[i];
    if (childNode.nodeType === 3 /* TEXT_NODE */) {
      text.push(childNode.nodeValue);
    } else if (childNode.nodeType === 1 /* ELEMENT_NODE */) {
      getTextContent(childNode.childNodes, text);
    }
  }
}
function setTextContent(elm, text) {
  for (let i = elm.childNodes.length - 1; i >= 0; i--) {
    elm.removeChild(elm.childNodes[i]);
  }
  const textNode = new MockTextNode(elm.ownerDocument, text);
  elm.appendChild(textNode);
}

// src/mock-doc/comment-node.ts
var MockComment = class _MockComment extends MockNode2 {
  constructor(ownerDocument, data) {
    super(ownerDocument, 8 /* COMMENT_NODE */, "#comment" /* COMMENT_NODE */, data);
  }
  cloneNode(_deep) {
    return new _MockComment(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
};

// src/mock-doc/document-fragment.ts
var MockDocumentFragment = class _MockDocumentFragment extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, null);
    this.nodeName = "#document-fragment" /* DOCUMENT_FRAGMENT_NODE */;
    this.nodeType = 11 /* DOCUMENT_FRAGMENT_NODE */;
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  cloneNode(deep) {
    const cloned = new _MockDocumentFragment(null);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const childNode = this.childNodes[i];
        if (childNode.nodeType === 1 /* ELEMENT_NODE */ || childNode.nodeType === 3 /* TEXT_NODE */ || childNode.nodeType === 8 /* COMMENT_NODE */) {
          const clonedChildNode = this.childNodes[i].cloneNode(true);
          cloned.appendChild(clonedChildNode);
        }
      }
    }
    return cloned;
  }
};

// src/mock-doc/document-type-node.ts
var MockDocumentTypeNode = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "!DOCTYPE");
    this.nodeType = 10 /* DOCUMENT_TYPE_NODE */;
    this.setAttribute("html", "");
  }
};

// src/mock-doc/css-style-sheet.ts
var MockCSSRule = class {
  constructor(parentStyleSheet) {
    this.parentStyleSheet = parentStyleSheet;
    this.cssText = "";
    this.type = 0;
  }
};
var MockCSSStyleSheet = class {
  constructor(ownerNode) {
    this.type = "text/css";
    this.parentStyleSheet = null;
    this.cssRules = [];
    this.ownerNode = ownerNode;
  }
  get rules() {
    return this.cssRules;
  }
  set rules(rules) {
    this.cssRules = rules;
  }
  deleteRule(index) {
    if (index >= 0 && index < this.cssRules.length) {
      this.cssRules.splice(index, 1);
      updateStyleTextNode(this.ownerNode);
    }
  }
  insertRule(rule, index = 0) {
    if (typeof index !== "number") {
      index = 0;
    }
    if (index < 0) {
      index = 0;
    }
    if (index > this.cssRules.length) {
      index = this.cssRules.length;
    }
    const cssRule = new MockCSSRule(this);
    cssRule.cssText = rule;
    this.cssRules.splice(index, 0, cssRule);
    updateStyleTextNode(this.ownerNode);
    return index;
  }
};
function getStyleElementText(styleElm) {
  const output = [];
  for (let i = 0; i < styleElm.childNodes.length; i++) {
    output.push(styleElm.childNodes[i].nodeValue);
  }
  return output.join("");
}
function setStyleElementText(styleElm, text) {
  const sheet = styleElm.sheet;
  sheet.cssRules.length = 0;
  sheet.insertRule(text);
  updateStyleTextNode(styleElm);
}
function updateStyleTextNode(styleElm) {
  const childNodeLen = styleElm.childNodes.length;
  if (childNodeLen > 1) {
    for (let i = childNodeLen - 1; i >= 1; i--) {
      styleElm.removeChild(styleElm.childNodes[i]);
    }
  } else if (childNodeLen < 1) {
    styleElm.appendChild(styleElm.ownerDocument.createTextNode(""));
  }
  const textNode = styleElm.childNodes[0];
  textNode.nodeValue = styleElm.sheet.cssRules.map((r) => r.cssText).join("\n");
}

// src/mock-doc/element.ts
function createElement(ownerDocument, tagName) {
  if (typeof tagName !== "string" || tagName === "" || !/^[a-z0-9-_:]+$/i.test(tagName)) {
    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);
  }
  tagName = tagName.toLowerCase();
  switch (tagName) {
    case "a":
      return new MockAnchorElement(ownerDocument);
    case "base":
      return new MockBaseElement(ownerDocument);
    case "button":
      return new MockButtonElement(ownerDocument);
    case "canvas":
      return new MockCanvasElement(ownerDocument);
    case "form":
      return new MockFormElement(ownerDocument);
    case "img":
      return new MockImageElement(ownerDocument);
    case "input":
      return new MockInputElement(ownerDocument);
    case "link":
      return new MockLinkElement(ownerDocument);
    case "meta":
      return new MockMetaElement(ownerDocument);
    case "script":
      return new MockScriptElement(ownerDocument);
    case "style":
      return new MockStyleElement(ownerDocument);
    case "template":
      return new MockTemplateElement(ownerDocument);
    case "title":
      return new MockTitleElement(ownerDocument);
    case "ul":
      return new MockUListElement(ownerDocument);
  }
  if (ownerDocument != null && tagName.includes("-")) {
    const win2 = ownerDocument.defaultView;
    if (win2 != null && win2.customElements != null) {
      return createCustomElement(win2.customElements, ownerDocument, tagName);
    }
  }
  return new MockHTMLElement(ownerDocument, tagName);
}
function createElementNS(ownerDocument, namespaceURI, tagName) {
  if (namespaceURI === "http://www.w3.org/1999/xhtml") {
    return createElement(ownerDocument, tagName);
  } else if (namespaceURI === "http://www.w3.org/2000/svg") {
    switch (tagName.toLowerCase()) {
      case "text":
      case "tspan":
      case "tref":
      case "altglyph":
      case "textpath":
        return new MockSVGTextContentElement(ownerDocument, tagName);
      case "circle":
      case "ellipse":
      case "image":
      case "line":
      case "path":
      case "polygon":
      case "polyline":
      case "rect":
      case "use":
        return new MockSVGGraphicsElement(ownerDocument, tagName);
      case "svg":
        return new MockSVGSVGElement(ownerDocument, tagName);
      default:
        return new MockSVGElement(ownerDocument, tagName);
    }
  } else {
    return new MockElement(ownerDocument, tagName, namespaceURI);
  }
}
var MockAnchorElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "a");
  }
  get href() {
    return fullUrl(this, "href");
  }
  set href(value) {
    this.setAttribute("href", value);
  }
  get pathname() {
    return new URL(this.href).pathname;
  }
};
var MockButtonElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "button");
  }
};
patchPropAttributes(
  MockButtonElement.prototype,
  {
    type: String
  },
  {
    type: "submit"
  }
);
Object.defineProperty(MockButtonElement.prototype, "form", {
  get() {
    return this.hasAttribute("form") ? this.getAttribute("form") : null;
  }
});
var MockImageElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "img");
  }
  get draggable() {
    return this.getAttributeNS(null, "draggable") !== "false";
  }
  set draggable(value) {
    this.setAttributeNS(null, "draggable", value);
  }
  get src() {
    return fullUrl(this, "src");
  }
  set src(value) {
    this.setAttribute("src", value);
  }
};
patchPropAttributes(MockImageElement.prototype, {
  height: Number,
  width: Number
});
var MockInputElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "input");
  }
  get list() {
    const listId = this.getAttribute("list");
    if (listId) {
      return this.ownerDocument.getElementById(listId);
    }
    return null;
  }
};
patchPropAttributes(
  MockInputElement.prototype,
  {
    accept: String,
    autocomplete: String,
    autofocus: Boolean,
    capture: String,
    checked: Boolean,
    disabled: Boolean,
    form: String,
    formaction: String,
    formenctype: String,
    formmethod: String,
    formnovalidate: String,
    formtarget: String,
    height: Number,
    inputmode: String,
    max: String,
    maxLength: Number,
    min: String,
    minLength: Number,
    multiple: Boolean,
    name: String,
    pattern: String,
    placeholder: String,
    required: Boolean,
    readOnly: Boolean,
    size: Number,
    spellCheck: Boolean,
    src: String,
    step: String,
    type: String,
    value: String,
    width: Number
  },
  {
    type: "text"
  }
);
var MockFormElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "form");
  }
};
patchPropAttributes(MockFormElement.prototype, {
  name: String
});
var MockLinkElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "link");
  }
  get href() {
    return fullUrl(this, "href");
  }
  set href(value) {
    this.setAttribute("href", value);
  }
};
patchPropAttributes(MockLinkElement.prototype, {
  crossorigin: String,
  media: String,
  rel: String,
  type: String
});
var MockMetaElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "meta");
  }
};
patchPropAttributes(MockMetaElement.prototype, {
  charset: String,
  content: String,
  name: String
});
var MockScriptElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "script");
  }
  get src() {
    return fullUrl(this, "src");
  }
  set src(value) {
    this.setAttribute("src", value);
  }
};
patchPropAttributes(MockScriptElement.prototype, {
  type: String
});
var MockDOMMatrix = class _MockDOMMatrix {
  constructor() {
    this.a = 1;
    this.b = 0;
    this.c = 0;
    this.d = 1;
    this.e = 0;
    this.f = 0;
    this.m11 = 1;
    this.m12 = 0;
    this.m13 = 0;
    this.m14 = 0;
    this.m21 = 0;
    this.m22 = 1;
    this.m23 = 0;
    this.m24 = 0;
    this.m31 = 0;
    this.m32 = 0;
    this.m33 = 1;
    this.m34 = 0;
    this.m41 = 0;
    this.m42 = 0;
    this.m43 = 0;
    this.m44 = 1;
    this.is2D = true;
    this.isIdentity = true;
  }
  static fromMatrix() {
    return new _MockDOMMatrix();
  }
  inverse() {
    return new _MockDOMMatrix();
  }
  flipX() {
    return new _MockDOMMatrix();
  }
  flipY() {
    return new _MockDOMMatrix();
  }
  multiply() {
    return new _MockDOMMatrix();
  }
  rotate() {
    return new _MockDOMMatrix();
  }
  rotateAxisAngle() {
    return new _MockDOMMatrix();
  }
  rotateFromVector() {
    return new _MockDOMMatrix();
  }
  scale() {
    return new _MockDOMMatrix();
  }
  scaleNonUniform() {
    return new _MockDOMMatrix();
  }
  skewX() {
    return new _MockDOMMatrix();
  }
  skewY() {
    return new _MockDOMMatrix();
  }
  toJSON() {
  }
  toString() {
  }
  transformPoint() {
    return new MockDOMPoint();
  }
  translate() {
    return new _MockDOMMatrix();
  }
};
var MockDOMPoint = class {
  constructor() {
    this.w = 1;
    this.x = 0;
    this.y = 0;
    this.z = 0;
  }
  toJSON() {
  }
  matrixTransform() {
    return new MockDOMMatrix();
  }
};
var MockSVGRect = class {
  constructor() {
    this.height = 10;
    this.width = 10;
    this.x = 0;
    this.y = 0;
  }
};
var MockStyleElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "style");
    this.sheet = new MockCSSStyleSheet(this);
  }
  get innerHTML() {
    return getStyleElementText(this);
  }
  set innerHTML(value) {
    setStyleElementText(this, value);
  }
  get innerText() {
    return getStyleElementText(this);
  }
  set innerText(value) {
    setStyleElementText(this, value);
  }
  get textContent() {
    return getStyleElementText(this);
  }
  set textContent(value) {
    setStyleElementText(this, value);
  }
};
var MockSVGElement = class extends MockElement {
  constructor() {
    super(...arguments);
    this.__namespaceURI = "http://www.w3.org/2000/svg";
  }
  // SVGElement properties and methods
  get ownerSVGElement() {
    return null;
  }
  get viewportElement() {
    return null;
  }
  onunload() {
  }
  // SVGGeometryElement properties and methods
  get pathLength() {
    return 0;
  }
  isPointInFill(_pt) {
    return false;
  }
  isPointInStroke(_pt) {
    return false;
  }
  getTotalLength() {
    return 0;
  }
};
var MockSVGGraphicsElement = class extends MockSVGElement {
  getBBox(_options) {
    return new MockSVGRect();
  }
  getCTM() {
    return new MockDOMMatrix();
  }
  getScreenCTM() {
    return new MockDOMMatrix();
  }
};
var MockSVGSVGElement = class extends MockSVGGraphicsElement {
  createSVGPoint() {
    return new MockDOMPoint();
  }
};
var MockSVGTextContentElement = class extends MockSVGGraphicsElement {
  getComputedTextLength() {
    return 0;
  }
};
var MockBaseElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "base");
  }
  get href() {
    return fullUrl(this, "href");
  }
  set href(value) {
    this.setAttribute("href", value);
  }
};
var MockTemplateElement = class _MockTemplateElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "template");
    this.content = new MockDocumentFragment(ownerDocument);
  }
  get innerHTML() {
    return this.content.innerHTML;
  }
  set innerHTML(html) {
    this.content.innerHTML = html;
  }
  cloneNode(deep) {
    const cloned = new _MockTemplateElement(null);
    cloned.attributes = cloneAttributes(this.attributes);
    const styleCssText = this.getAttribute("style");
    if (styleCssText != null && styleCssText.length > 0) {
      cloned.setAttribute("style", styleCssText);
    }
    cloned.content = this.content.cloneNode(deep);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const clonedChildNode = this.childNodes[i].cloneNode(true);
        cloned.appendChild(clonedChildNode);
      }
    }
    return cloned;
  }
};
var MockTitleElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "title");
  }
  get text() {
    return this.textContent;
  }
  set text(value) {
    this.textContent = value;
  }
};
var MockUListElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "ul");
  }
};
var CanvasRenderingContext = class {
  constructor(context, contextAttributes) {
    this.context = context;
    this.contextAttributes = contextAttributes;
  }
  fillRect() {
    return;
  }
  clearRect() {
  }
  getImageData(_, __, w, h2) {
    return {
      data: new Array(w * h2 * 4)
    };
  }
  toDataURL() {
    return "data:,";
  }
  putImageData() {
  }
  createImageData() {
    return {};
  }
  setTransform() {
  }
  drawImage() {
  }
  save() {
  }
  fillText() {
  }
  restore() {
  }
  beginPath() {
  }
  moveTo() {
  }
  lineTo() {
  }
  closePath() {
  }
  stroke() {
  }
  translate() {
  }
  scale() {
  }
  rotate() {
  }
  arc() {
  }
  fill() {
  }
  measureText() {
    return { width: 0 };
  }
  transform() {
  }
  rect() {
  }
  clip() {
  }
};
var MockCanvasElement = class extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, "canvas");
  }
  getContext(context, contextAttributes) {
    return new CanvasRenderingContext(context, contextAttributes);
  }
};
function fullUrl(elm, attrName) {
  const val = elm.getAttribute(attrName) || "";
  if (elm.ownerDocument != null) {
    const win2 = elm.ownerDocument.defaultView;
    if (win2 != null) {
      const loc = win2.location;
      if (loc != null) {
        try {
          const url = new URL(val, loc.href);
          return url.href;
        } catch (e) {
        }
      }
    }
  }
  return val.replace(/\'|\"/g, "").trim();
}
function patchPropAttributes(prototype, attrs, defaults = {}) {
  Object.keys(attrs).forEach((propName) => {
    const attr = attrs[propName];
    const defaultValue = defaults[propName];
    if (attr === Boolean) {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName);
        },
        set(value) {
          if (value) {
            this.setAttribute(propName, "");
          } else {
            this.removeAttribute(propName);
          }
        }
      });
    } else if (attr === Number) {
      Object.defineProperty(prototype, propName, {
        get() {
          const value = this.getAttribute(propName);
          return value ? parseInt(value, 10) : defaultValue === void 0 ? 0 : defaultValue;
        },
        set(value) {
          this.setAttribute(propName, value);
        }
      });
    } else {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || "";
        },
        set(value) {
          this.setAttribute(propName, value);
        }
      });
    }
  });
}
MockElement.prototype.cloneNode = function(deep) {
  const cloned = createElement(this.ownerDocument, this.nodeName);
  cloned.attributes = cloneAttributes(this.attributes);
  const styleCssText = this.getAttribute("style");
  if (styleCssText != null && styleCssText.length > 0) {
    cloned.setAttribute("style", styleCssText);
  }
  if (deep) {
    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
      const clonedChildNode = this.childNodes[i].cloneNode(true);
      cloned.appendChild(clonedChildNode);
    }
  }
  return cloned;
};

// src/mock-doc/parse-html.ts
var sharedDocument;
function parseHtmlToDocument(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseDocumentUtil(ownerDocument, html);
}

// src/mock-doc/console.ts
var consoleNoop = () => {
};
function createConsole() {
  return {
    debug: consoleNoop,
    error: consoleNoop,
    info: consoleNoop,
    log: consoleNoop,
    warn: consoleNoop,
    dir: consoleNoop,
    dirxml: consoleNoop,
    table: consoleNoop,
    trace: consoleNoop,
    group: consoleNoop,
    groupCollapsed: consoleNoop,
    groupEnd: consoleNoop,
    clear: consoleNoop,
    count: consoleNoop,
    countReset: consoleNoop,
    assert: consoleNoop,
    profile: consoleNoop,
    profileEnd: consoleNoop,
    time: consoleNoop,
    timeLog: consoleNoop,
    timeEnd: consoleNoop,
    timeStamp: consoleNoop,
    context: consoleNoop,
    memory: consoleNoop
  };
}

// src/mock-doc/headers.ts
var MockHeaders = class {
  constructor(init) {
    this._values = [];
    if (typeof init === "object") {
      if (typeof init[Symbol.iterator] === "function") {
        const kvs = [];
        for (const kv of init) {
          if (typeof kv[Symbol.iterator] === "function") {
            kvs.push([...kv]);
          }
        }
        for (const kv of kvs) {
          this.append(kv[0], kv[1]);
        }
      } else {
        for (const key in init) {
          this.append(key, init[key]);
        }
      }
    }
  }
  append(key, value) {
    this._values.push([key, value + ""]);
  }
  delete(key) {
    key = key.toLowerCase();
    for (let i = this._values.length - 1; i >= 0; i--) {
      if (this._values[i][0].toLowerCase() === key) {
        this._values.splice(i, 1);
      }
    }
  }
  entries() {
    const entries = [];
    for (const kv of this.keys()) {
      entries.push([kv, this.get(kv)]);
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: entries[index],
          done: !entries[index]
        };
      },
      [Symbol.iterator]() {
        return this;
      }
    };
  }
  forEach(cb) {
    for (const kv of this.entries()) {
      cb(kv[1], kv[0]);
    }
  }
  get(key) {
    const rtn = [];
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        rtn.push(kv[1]);
      }
    }
    return rtn.length > 0 ? rtn.join(", ") : null;
  }
  has(key) {
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        return true;
      }
    }
    return false;
  }
  keys() {
    const keys = [];
    for (const kv of this._values) {
      const key = kv[0].toLowerCase();
      if (!keys.includes(key)) {
        keys.push(key);
      }
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: keys[index],
          done: !keys[index]
        };
      },
      [Symbol.iterator]() {
        return this;
      }
    };
  }
  set(key, value) {
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key.toLowerCase()) {
        kv[1] = value + "";
        return;
      }
    }
    this.append(key, value);
  }
  values() {
    const values = this._values;
    let index = -1;
    return {
      next() {
        index++;
        const done = !values[index];
        return {
          value: done ? void 0 : values[index][1],
          done
        };
      },
      [Symbol.iterator]() {
        return this;
      }
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
};

// src/mock-doc/parser.ts
var MockDOMParser = class {
  parseFromString(htmlToParse, mimeType) {
    if (mimeType !== "text/html") {
      console.error("XML parsing not implemented yet, continuing as html");
    }
    return parseHtmlToDocument(htmlToParse);
  }
};

// src/mock-doc/request-response.ts
var MockRequest = class _MockRequest {
  constructor(input, init = {}) {
    this._method = "GET";
    this._url = "/";
    this.bodyUsed = false;
    this.cache = "default";
    this.credentials = "same-origin";
    this.integrity = "";
    this.keepalive = false;
    this.mode = "cors";
    this.redirect = "follow";
    this.referrer = "about:client";
    this.referrerPolicy = "";
    if (typeof input === "string") {
      this.url = input;
    } else if (input) {
      Object.assign(this, input);
      this.headers = new MockHeaders(input.headers);
    }
    Object.assign(this, init);
    if (init.headers) {
      this.headers = new MockHeaders(init.headers);
    }
    if (!this.headers) {
      this.headers = new MockHeaders();
    }
  }
  get url() {
    if (typeof this._url === "string") {
      return new URL(this._url, location.href).href;
    }
    return new URL("/", location.href).href;
  }
  set url(value) {
    this._url = value;
  }
  get method() {
    if (typeof this._method === "string") {
      return this._method.toUpperCase();
    }
    return "GET";
  }
  set method(value) {
    this._method = value;
  }
  clone() {
    const clone = { ...this };
    clone.headers = new MockHeaders(this.headers);
    return new _MockRequest(clone);
  }
};
var MockResponse = class _MockResponse {
  constructor(body, init = {}) {
    this.ok = true;
    this.status = 200;
    this.statusText = "";
    this.type = "default";
    this.url = "";
    this._body = body;
    if (init) {
      Object.assign(this, init);
    }
    this.headers = new MockHeaders(init.headers);
  }
  async json() {
    return JSON.parse(this._body);
  }
  async text() {
    return this._body;
  }
  clone() {
    const initClone = { ...this };
    initClone.headers = new MockHeaders(this.headers);
    return new _MockResponse(this._body, initClone);
  }
};

// src/mock-doc/global.ts
function patchWindow(winToBePatched) {
  const mockWin = new MockWindow(false);
  WINDOW_FUNCTIONS.forEach((fnName) => {
    if (typeof winToBePatched[fnName] !== "function") {
      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);
    }
  });
  WINDOW_PROPS.forEach((propName) => {
    if (winToBePatched === void 0) {
      Object.defineProperty(winToBePatched, propName, {
        get() {
          return mockWin[propName];
        },
        set(val) {
          mockWin[propName] = val;
        },
        configurable: true,
        enumerable: true
      });
    }
  });
}
function addGlobalsToWindowPrototype(mockWinPrototype) {
  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {
    Object.defineProperty(mockWinPrototype, cstrName, {
      get() {
        return this["__" + cstrName] || Cstr;
      },
      set(cstr) {
        this["__" + cstrName] = cstr;
      },
      configurable: true,
      enumerable: true
    });
  });
}
var WINDOW_FUNCTIONS = [
  "addEventListener",
  "alert",
  "blur",
  "cancelAnimationFrame",
  "cancelIdleCallback",
  "clearInterval",
  "clearTimeout",
  "close",
  "confirm",
  "dispatchEvent",
  "focus",
  "getComputedStyle",
  "matchMedia",
  "open",
  "prompt",
  "removeEventListener",
  "requestAnimationFrame",
  "requestIdleCallback",
  "URL"
];
var WINDOW_PROPS = [
  "customElements",
  "devicePixelRatio",
  "document",
  "history",
  "innerHeight",
  "innerWidth",
  "localStorage",
  "location",
  "navigator",
  "pageXOffset",
  "pageYOffset",
  "performance",
  "screenLeft",
  "screenTop",
  "screenX",
  "screenY",
  "scrollX",
  "scrollY",
  "sessionStorage",
  "CSS",
  "CustomEvent",
  "Event",
  "Element",
  "HTMLElement",
  "Node",
  "NodeList",
  "FocusEvent",
  "KeyboardEvent",
  "MouseEvent"
];
var GLOBAL_CONSTRUCTORS = [
  ["CustomEvent", MockCustomEvent],
  ["DocumentFragment", MockDocumentFragment],
  ["DOMParser", MockDOMParser],
  ["Event", MockEvent],
  ["FocusEvent", MockFocusEvent],
  ["Headers", MockHeaders],
  ["KeyboardEvent", MockKeyboardEvent],
  ["MouseEvent", MockMouseEvent],
  ["Request", MockRequest],
  ["Response", MockResponse],
  ["ShadowRoot", MockDocumentFragment],
  ["HTMLAnchorElement", MockAnchorElement],
  ["HTMLBaseElement", MockBaseElement],
  ["HTMLButtonElement", MockButtonElement],
  ["HTMLCanvasElement", MockCanvasElement],
  ["HTMLFormElement", MockFormElement],
  ["HTMLImageElement", MockImageElement],
  ["HTMLInputElement", MockInputElement],
  ["HTMLLinkElement", MockLinkElement],
  ["HTMLMetaElement", MockMetaElement],
  ["HTMLScriptElement", MockScriptElement],
  ["HTMLStyleElement", MockStyleElement],
  ["HTMLTemplateElement", MockTemplateElement],
  ["HTMLTitleElement", MockTitleElement],
  ["HTMLUListElement", MockUListElement]
];

// src/mock-doc/history.ts
var MockHistory = class {
  constructor() {
    this.items = [];
  }
  get length() {
    return this.items.length;
  }
  back() {
    this.go(-1);
  }
  forward() {
    this.go(1);
  }
  go(_value) {
  }
  pushState(_state, _title, _url) {
  }
  replaceState(_state, _title, _url) {
  }
};

// src/mock-doc/intersection-observer.ts
var MockIntersectionObserver = class {
  constructor() {
  }
  disconnect() {
  }
  observe() {
  }
  takeRecords() {
    return [];
  }
  unobserve() {
  }
};

// src/mock-doc/location.ts
var MockLocation = class {
  constructor() {
    this.ancestorOrigins = null;
    this.protocol = "";
    this.host = "";
    this.hostname = "";
    this.port = "";
    this.pathname = "";
    this.search = "";
    this.hash = "";
    this.username = "";
    this.password = "";
    this.origin = "";
    this._href = "";
  }
  get href() {
    return this._href;
  }
  set href(value) {
    const url = new URL(value, "http://mockdoc.stenciljs.com");
    this._href = url.href;
    this.protocol = url.protocol;
    this.host = url.host;
    this.hostname = url.hostname;
    this.port = url.port;
    this.pathname = url.pathname;
    this.search = url.search;
    this.hash = url.hash;
    this.username = url.username;
    this.password = url.password;
    this.origin = url.origin;
  }
  assign(_url) {
  }
  reload(_forcedReload) {
  }
  replace(_url) {
  }
  toString() {
    return this.href;
  }
};

// src/mock-doc/navigator.ts
var MockNavigator = class {
  constructor() {
    this.appCodeName = "MockNavigator";
    this.appName = "MockNavigator";
    this.appVersion = "MockNavigator";
    this.platform = "MockNavigator";
    this.userAgent = "MockNavigator";
  }
};

// src/mock-doc/performance.ts
var MockPerformance = class {
  constructor() {
    this.timeOrigin = Date.now();
    this.eventCounts = /* @__PURE__ */ new Map();
  }
  addEventListener() {
  }
  clearMarks() {
  }
  clearMeasures() {
  }
  clearResourceTimings() {
  }
  dispatchEvent() {
    return true;
  }
  getEntries() {
    return [];
  }
  getEntriesByName() {
    return [];
  }
  getEntriesByType() {
    return [];
  }
  // Stencil's implementation of `mark` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  mark() {
  }
  // Stencil's implementation of `measure` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  measure() {
  }
  get navigation() {
    return {};
  }
  now() {
    return Date.now() - this.timeOrigin;
  }
  get onresourcetimingbufferfull() {
    return null;
  }
  removeEventListener() {
  }
  setResourceTimingBufferSize() {
  }
  get timing() {
    return {};
  }
  toJSON() {
  }
};
function resetPerformance(perf) {
  if (perf != null) {
    try {
      perf.timeOrigin = Date.now();
    } catch (e) {
    }
  }
}

// src/mock-doc/resize-observer.ts
var MockResizeObserver = class {
  constructor() {
  }
  disconnect() {
  }
  observe() {
  }
  takeRecords() {
    return [];
  }
  unobserve() {
  }
};

// src/mock-doc/storage.ts
var MockStorage = class {
  constructor() {
    this.items = /* @__PURE__ */ new Map();
  }
  key(_value) {
  }
  getItem(key) {
    key = String(key);
    if (this.items.has(key)) {
      return this.items.get(key);
    }
    return null;
  }
  setItem(key, value) {
    if (value == null) {
      value = "null";
    }
    this.items.set(String(key), String(value));
  }
  removeItem(key) {
    this.items.delete(String(key));
  }
  clear() {
    this.items.clear();
  }
};

// src/mock-doc/window.ts
var nativeClearInterval = clearInterval;
var nativeClearTimeout = clearTimeout;
var nativeSetInterval = setInterval;
var nativeSetTimeout = setTimeout;
var nativeURL = URL;
var nativeWindow = globalThis.window;
var MockWindow = class {
  constructor(html = null) {
    if (html !== false) {
      this.document = new MockDocument(html, this);
    } else {
      this.document = null;
    }
    this.performance = new MockPerformance();
    this.customElements = new MockCustomElementRegistry(this);
    this.console = createConsole();
    resetWindowDefaults(this);
    resetWindowDimensions(this);
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  alert(msg) {
    if (this.console) {
      this.console.debug(msg);
    } else {
      console.debug(msg);
    }
  }
  blur() {
  }
  cancelAnimationFrame(id) {
    this.__clearTimeout.call(nativeWindow || this, id);
  }
  cancelIdleCallback(id) {
    this.__clearTimeout.call(nativeWindow || this, id);
  }
  get CharacterData() {
    if (this.__charDataCstr == null) {
      const ownerDocument = this.document;
      this.__charDataCstr = class extends MockNode2 {
        constructor() {
          super(ownerDocument, 0, "test", "");
          throw new Error("Illegal constructor: cannot construct CharacterData");
        }
      };
    }
    return this.__charDataCstr;
  }
  set CharacterData(charDataCstr) {
    this.__charDataCstr = charDataCstr;
  }
  clearInterval(id) {
    this.__clearInterval.call(nativeWindow || this, id);
  }
  clearTimeout(id) {
    this.__clearTimeout.call(nativeWindow || this, id);
  }
  close() {
    resetWindow(this);
  }
  confirm() {
    return false;
  }
  get CSS() {
    return {
      supports: () => true
    };
  }
  get Document() {
    if (this.__docCstr == null) {
      const win2 = this;
      this.__docCstr = class extends MockDocument {
        constructor() {
          super(false, win2);
          throw new Error("Illegal constructor: cannot construct Document");
        }
      };
    }
    return this.__docCstr;
  }
  set Document(docCstr) {
    this.__docCstr = docCstr;
  }
  get DocumentFragment() {
    if (this.__docFragCstr == null) {
      const ownerDocument = this.document;
      this.__docFragCstr = class extends MockDocumentFragment {
        constructor() {
          super(ownerDocument);
          throw new Error("Illegal constructor: cannot construct DocumentFragment");
        }
      };
    }
    return this.__docFragCstr;
  }
  set DocumentFragment(docFragCstr) {
    this.__docFragCstr = docFragCstr;
  }
  get DocumentType() {
    if (this.__docTypeCstr == null) {
      const ownerDocument = this.document;
      this.__docTypeCstr = class extends MockNode2 {
        constructor() {
          super(ownerDocument, 0, "test", "");
          throw new Error("Illegal constructor: cannot construct DocumentType");
        }
      };
    }
    return this.__docTypeCstr;
  }
  set DocumentType(docTypeCstr) {
    this.__docTypeCstr = docTypeCstr;
  }
  get DOMTokenList() {
    if (this.__domTokenListCstr == null) {
      this.__domTokenListCstr = class MockDOMTokenList {
      };
    }
    return this.__domTokenListCstr;
  }
  set DOMTokenList(domTokenListCstr) {
    this.__domTokenListCstr = domTokenListCstr;
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get Element() {
    if (this.__elementCstr == null) {
      const ownerDocument = this.document;
      this.__elementCstr = class extends MockElement {
        constructor() {
          super(ownerDocument, "");
          throw new Error("Illegal constructor: cannot construct Element");
        }
      };
    }
    return this.__elementCstr;
  }
  fetch(input, init) {
    if (typeof fetch === "function") {
      return fetch(input, init);
    }
    throw new Error(`fetch() not implemented`);
  }
  focus() {
  }
  getComputedStyle(_) {
    return {
      cssText: "",
      length: 0,
      parentRule: null,
      getPropertyPriority() {
        return null;
      },
      getPropertyValue() {
        return "";
      },
      item() {
        return null;
      },
      removeProperty() {
        return null;
      },
      setProperty() {
        return null;
      }
    };
  }
  get globalThis() {
    return this;
  }
  get history() {
    if (this.__history == null) {
      this.__history = new MockHistory();
    }
    return this.__history;
  }
  set history(hsty) {
    this.__history = hsty;
  }
  get JSON() {
    return JSON;
  }
  get HTMLElement() {
    if (this.__htmlElementCstr == null) {
      const ownerDocument = this.document;
      this.__htmlElementCstr = class extends MockHTMLElement {
        constructor() {
          super(ownerDocument, "");
          const observedAttributes = this.constructor.observedAttributes;
          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === "function") {
            observedAttributes.forEach((attrName) => {
              const attrValue = this.getAttribute(attrName);
              if (attrValue != null) {
                this.attributeChangedCallback(attrName, null, attrValue);
              }
            });
          }
        }
      };
    }
    return this.__htmlElementCstr;
  }
  set HTMLElement(htmlElementCstr) {
    this.__htmlElementCstr = htmlElementCstr;
  }
  get IntersectionObserver() {
    return MockIntersectionObserver;
  }
  get ResizeObserver() {
    return MockResizeObserver;
  }
  get localStorage() {
    if (this.__localStorage == null) {
      this.__localStorage = new MockStorage();
    }
    return this.__localStorage;
  }
  set localStorage(locStorage) {
    this.__localStorage = locStorage;
  }
  get location() {
    if (this.__location == null) {
      this.__location = new MockLocation();
    }
    return this.__location;
  }
  set location(val) {
    if (typeof val === "string") {
      if (this.__location == null) {
        this.__location = new MockLocation();
      }
      this.__location.href = val;
    } else {
      this.__location = val;
    }
  }
  matchMedia(media) {
    return {
      media,
      matches: false,
      addListener: (_handler) => {
      },
      removeListener: (_handler) => {
      },
      addEventListener: (_type, _handler) => {
      },
      removeEventListener: (_type, _handler) => {
      },
      dispatchEvent: (_ev) => {
      },
      onchange: null
    };
  }
  get Node() {
    if (this.__nodeCstr == null) {
      const ownerDocument = this.document;
      this.__nodeCstr = class extends MockNode2 {
        constructor() {
          super(ownerDocument, 0, "test", "");
          throw new Error("Illegal constructor: cannot construct Node");
        }
      };
    }
    return this.__nodeCstr;
  }
  get NodeList() {
    if (this.__nodeListCstr == null) {
      const ownerDocument = this.document;
      this.__nodeListCstr = class extends MockNodeList {
        constructor() {
          super(ownerDocument, [], 0);
          throw new Error("Illegal constructor: cannot construct NodeList");
        }
      };
    }
    return this.__nodeListCstr;
  }
  get navigator() {
    if (this.__navigator == null) {
      this.__navigator = new MockNavigator();
    }
    return this.__navigator;
  }
  set navigator(nav) {
    this.__navigator = nav;
  }
  get parent() {
    return null;
  }
  prompt() {
    return "";
  }
  open() {
    return null;
  }
  get origin() {
    return this.location.origin;
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  requestAnimationFrame(callback) {
    return this.setTimeout(() => {
      callback(Date.now());
    }, 0);
  }
  requestIdleCallback(callback) {
    return this.setTimeout(() => {
      callback({
        didTimeout: false,
        timeRemaining: () => 0
      });
    }, 0);
  }
  scroll(_x, _y) {
  }
  scrollBy(_x, _y) {
  }
  scrollTo(_x, _y) {
  }
  get self() {
    return this;
  }
  get sessionStorage() {
    if (this.__sessionStorage == null) {
      this.__sessionStorage = new MockStorage();
    }
    return this.__sessionStorage;
  }
  set sessionStorage(locStorage) {
    this.__sessionStorage = locStorage;
  }
  setInterval(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = /* @__PURE__ */ new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    if (this.__allowInterval) {
      const intervalId = this.__setInterval(() => {
        if (this.__timeouts) {
          this.__timeouts.delete(intervalId);
          try {
            callback(...args);
          } catch (e) {
            if (this.console) {
              this.console.error(e);
            } else {
              console.error(e);
            }
          }
        }
      }, ms);
      if (this.__timeouts) {
        this.__timeouts.add(intervalId);
      }
      return intervalId;
    }
    const timeoutId = this.__setTimeout.call(
      nativeWindow || this,
      () => {
        if (this.__timeouts) {
          this.__timeouts.delete(timeoutId);
          try {
            callback(...args);
          } catch (e) {
            if (this.console) {
              this.console.error(e);
            } else {
              console.error(e);
            }
          }
        }
      },
      ms
    );
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  setTimeout(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = /* @__PURE__ */ new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    const timeoutId = this.__setTimeout.call(
      nativeWindow || this,
      () => {
        if (this.__timeouts) {
          this.__timeouts.delete(timeoutId);
          try {
            callback(...args);
          } catch (e) {
            if (this.console) {
              this.console.error(e);
            } else {
              console.error(e);
            }
          }
        }
      },
      ms
    );
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  get top() {
    return this;
  }
  get window() {
    return this;
  }
  onanimationstart() {
  }
  onanimationend() {
  }
  onanimationiteration() {
  }
  onabort() {
  }
  onauxclick() {
  }
  onbeforecopy() {
  }
  onbeforecut() {
  }
  onbeforepaste() {
  }
  onblur() {
  }
  oncancel() {
  }
  oncanplay() {
  }
  oncanplaythrough() {
  }
  onchange() {
  }
  onclick() {
  }
  onclose() {
  }
  oncontextmenu() {
  }
  oncopy() {
  }
  oncuechange() {
  }
  oncut() {
  }
  ondblclick() {
  }
  ondrag() {
  }
  ondragend() {
  }
  ondragenter() {
  }
  ondragleave() {
  }
  ondragover() {
  }
  ondragstart() {
  }
  ondrop() {
  }
  ondurationchange() {
  }
  onemptied() {
  }
  onended() {
  }
  onerror() {
  }
  onfocus() {
  }
  onfocusin() {
  }
  onfocusout() {
  }
  onformdata() {
  }
  onfullscreenchange() {
  }
  onfullscreenerror() {
  }
  ongotpointercapture() {
  }
  oninput() {
  }
  oninvalid() {
  }
  onkeydown() {
  }
  onkeypress() {
  }
  onkeyup() {
  }
  onload() {
  }
  onloadeddata() {
  }
  onloadedmetadata() {
  }
  onloadstart() {
  }
  onlostpointercapture() {
  }
  onmousedown() {
  }
  onmouseenter() {
  }
  onmouseleave() {
  }
  onmousemove() {
  }
  onmouseout() {
  }
  onmouseover() {
  }
  onmouseup() {
  }
  onmousewheel() {
  }
  onpaste() {
  }
  onpause() {
  }
  onplay() {
  }
  onplaying() {
  }
  onpointercancel() {
  }
  onpointerdown() {
  }
  onpointerenter() {
  }
  onpointerleave() {
  }
  onpointermove() {
  }
  onpointerout() {
  }
  onpointerover() {
  }
  onpointerup() {
  }
  onprogress() {
  }
  onratechange() {
  }
  onreset() {
  }
  onresize() {
  }
  onscroll() {
  }
  onsearch() {
  }
  onseeked() {
  }
  onseeking() {
  }
  onselect() {
  }
  onselectstart() {
  }
  onstalled() {
  }
  onsubmit() {
  }
  onsuspend() {
  }
  ontimeupdate() {
  }
  ontoggle() {
  }
  onvolumechange() {
  }
  onwaiting() {
  }
  onwebkitfullscreenchange() {
  }
  onwebkitfullscreenerror() {
  }
  onwheel() {
  }
};
addGlobalsToWindowPrototype(MockWindow.prototype);
function resetWindowDefaults(win2) {
  win2.__clearInterval = nativeClearInterval;
  win2.__clearTimeout = nativeClearTimeout;
  win2.__setInterval = nativeSetInterval;
  win2.__setTimeout = nativeSetTimeout;
  win2.__maxTimeout = 3e4;
  win2.__allowInterval = true;
  win2.URL = nativeURL;
}
function cloneWindow(srcWin, opts = {}) {
  if (srcWin == null) {
    return null;
  }
  const clonedWin = new MockWindow(false);
  if (!opts.customElementProxy) {
    srcWin.customElements = null;
  }
  if (srcWin.document != null) {
    const clonedDoc = new MockDocument(false, clonedWin);
    clonedWin.document = clonedDoc;
    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);
  } else {
    clonedWin.document = new MockDocument(null, clonedWin);
  }
  return clonedWin;
}
function constrainTimeouts(win2) {
  win2.__allowInterval = false;
  win2.__maxTimeout = 0;
}
function resetWindow(win2) {
  if (win2 != null) {
    if (win2.__timeouts) {
      win2.__timeouts.forEach((timeoutId) => {
        nativeClearInterval(timeoutId);
        nativeClearTimeout(timeoutId);
      });
      win2.__timeouts.clear();
    }
    if (win2.customElements && win2.customElements.clear) {
      win2.customElements.clear();
    }
    resetDocument(win2.document);
    resetPerformance(win2.performance);
    for (const key in win2) {
      if (win2.hasOwnProperty(key) && key !== "document" && key !== "performance" && key !== "customElements") {
        delete win2[key];
      }
    }
    resetWindowDefaults(win2);
    resetWindowDimensions(win2);
    resetEventListeners(win2);
    if (win2.document != null) {
      try {
        win2.document.defaultView = win2;
      } catch (e) {
      }
    }
    win2.fetch = null;
    win2.Headers = null;
    win2.Request = null;
    win2.Response = null;
    win2.FetchError = null;
  }
}
function resetWindowDimensions(win2) {
  try {
    win2.devicePixelRatio = 1;
    win2.innerHeight = 768;
    win2.innerWidth = 1366;
    win2.pageXOffset = 0;
    win2.pageYOffset = 0;
    win2.screenLeft = 0;
    win2.screenTop = 0;
    win2.screenX = 0;
    win2.screenY = 0;
    win2.scrollX = 0;
    win2.scrollY = 0;
    win2.screen = {
      availHeight: win2.innerHeight,
      availLeft: 0,
      availTop: 0,
      availWidth: win2.innerWidth,
      colorDepth: 24,
      height: win2.innerHeight,
      keepAwake: false,
      orientation: {
        angle: 0,
        type: "portrait-primary"
      },
      pixelDepth: 24,
      width: win2.innerWidth
    };
  } catch (e) {
  }
}

// src/mock-doc/document.ts
var MockDocument = class _MockDocument extends MockHTMLElement {
  constructor(html = null, win2 = null) {
    super(null, null);
    this.nodeName = "#document" /* DOCUMENT_NODE */;
    this.nodeType = 9 /* DOCUMENT_NODE */;
    this.defaultView = win2;
    this.cookie = "";
    this.referrer = "";
    this.appendChild(this.createDocumentTypeNode());
    if (typeof html === "string") {
      const parsedDoc = parseDocumentUtil(this, html);
      const documentElement = parsedDoc.children.find((elm) => elm.nodeName === "HTML");
      if (documentElement != null) {
        this.appendChild(documentElement);
        setOwnerDocument(documentElement, this);
      }
    } else if (html !== false) {
      const documentElement = new MockHTMLElement(this, "html");
      this.appendChild(documentElement);
      documentElement.appendChild(new MockHTMLElement(this, "head"));
      documentElement.appendChild(new MockHTMLElement(this, "body"));
    }
  }
  get dir() {
    return this.documentElement.dir;
  }
  set dir(value) {
    this.documentElement.dir = value;
  }
  get localName() {
    throw new Error("Unimplemented");
  }
  get location() {
    if (this.defaultView != null) {
      return this.defaultView.location;
    }
    return null;
  }
  set location(val) {
    if (this.defaultView != null) {
      this.defaultView.location = val;
    }
  }
  get baseURI() {
    const baseNode = this.head.childNodes.find((node) => node.nodeName === "BASE");
    if (baseNode) {
      return baseNode.href;
    }
    return this.URL;
  }
  get URL() {
    return this.location.href;
  }
  get styleSheets() {
    return this.querySelectorAll("style");
  }
  get scripts() {
    return this.querySelectorAll("script");
  }
  get forms() {
    return this.querySelectorAll("form");
  }
  get images() {
    return this.querySelectorAll("img");
  }
  get scrollingElement() {
    return this.documentElement;
  }
  get documentElement() {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeName === "HTML") {
        return this.childNodes[i];
      }
    }
    const documentElement = new MockHTMLElement(this, "html");
    this.appendChild(documentElement);
    return documentElement;
  }
  set documentElement(documentElement) {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeType !== 10 /* DOCUMENT_TYPE_NODE */) {
        this.childNodes[i].remove();
      }
    }
    if (documentElement != null) {
      this.appendChild(documentElement);
      setOwnerDocument(documentElement, this);
    }
  }
  get head() {
    const documentElement = this.documentElement;
    for (let i = 0; i < documentElement.childNodes.length; i++) {
      if (documentElement.childNodes[i].nodeName === "HEAD") {
        return documentElement.childNodes[i];
      }
    }
    const head = new MockHTMLElement(this, "head");
    documentElement.insertBefore(head, documentElement.firstChild);
    return head;
  }
  set head(head) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === "HEAD") {
        documentElement.childNodes[i].remove();
      }
    }
    if (head != null) {
      documentElement.insertBefore(head, documentElement.firstChild);
      setOwnerDocument(head, this);
    }
  }
  get body() {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === "BODY") {
        return documentElement.childNodes[i];
      }
    }
    const body = new MockHTMLElement(this, "body");
    documentElement.appendChild(body);
    return body;
  }
  set body(body) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === "BODY") {
        documentElement.childNodes[i].remove();
      }
    }
    if (body != null) {
      documentElement.appendChild(body);
      setOwnerDocument(body, this);
    }
  }
  appendChild(newNode) {
    newNode.remove();
    newNode.parentNode = this;
    this.childNodes.push(newNode);
    return newNode;
  }
  createComment(data) {
    return new MockComment(this, data);
  }
  createAttribute(attrName) {
    return new MockAttr(attrName.toLowerCase(), "");
  }
  createAttributeNS(namespaceURI, attrName) {
    return new MockAttr(attrName, "", namespaceURI);
  }
  createElement(tagName) {
    if (tagName === "#document" /* DOCUMENT_NODE */) {
      const doc2 = new _MockDocument(false);
      doc2.nodeName = tagName;
      doc2.parentNode = null;
      return doc2;
    }
    return createElement(this, tagName);
  }
  createElementNS(namespaceURI, tagName) {
    const elmNs = createElementNS(this, namespaceURI, tagName);
    return elmNs;
  }
  createTextNode(text) {
    return new MockTextNode(this, text);
  }
  createDocumentFragment() {
    return new MockDocumentFragment(this);
  }
  createDocumentTypeNode() {
    return new MockDocumentTypeNode(this);
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  getElementsByName(elmName) {
    return getElementsByName(this, elmName.toLowerCase());
  }
  get title() {
    const title = this.head.childNodes.find((elm) => elm.nodeName === "TITLE");
    if (title != null && typeof title.textContent === "string") {
      return title.textContent.trim();
    }
    return "";
  }
  set title(value) {
    const head = this.head;
    let title = head.childNodes.find((elm) => elm.nodeName === "TITLE");
    if (title == null) {
      title = this.createElement("title");
      head.appendChild(title);
    }
    title.textContent = value;
  }
};
function resetDocument(doc2) {
  if (doc2 != null) {
    resetEventListeners(doc2);
    const documentElement = doc2.documentElement;
    if (documentElement != null) {
      resetElement(documentElement);
      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {
        const childNode = documentElement.childNodes[i];
        resetElement(childNode);
        childNode.childNodes.length = 0;
      }
    }
    for (const key in doc2) {
      if (doc2.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {
        delete doc2[key];
      }
    }
    try {
      doc2.nodeName = "#document" /* DOCUMENT_NODE */;
    } catch (e) {
    }
    try {
      doc2.nodeType = 9 /* DOCUMENT_NODE */;
    } catch (e) {
    }
    try {
      doc2.cookie = "";
    } catch (e) {
    }
    try {
      doc2.referrer = "";
    } catch (e) {
    }
  }
}
var DOC_KEY_KEEPERS = /* @__PURE__ */ new Set([
  "nodeName",
  "nodeType",
  "nodeValue",
  "ownerDocument",
  "parentNode",
  "childNodes",
  "_shadowRoot"
]);
function getElementById(elm, id) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.id === id) {
      return childElm;
    }
    const childElmFound = getElementById(childElm, id);
    if (childElmFound != null) {
      return childElmFound;
    }
  }
  return null;
}
function getElementsByName(elm, elmName, foundElms = []) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.name && childElm.name.toLowerCase() === elmName) {
      foundElms.push(childElm);
    }
    getElementsByName(childElm, elmName, foundElms);
  }
  return foundElms;
}
function setOwnerDocument(elm, ownerDocument) {
  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
    elm.childNodes[i].ownerDocument = ownerDocument;
    if (elm.childNodes[i].nodeType === 1 /* ELEMENT_NODE */) {
      setOwnerDocument(elm.childNodes[i], ownerDocument);
    }
  }
}

// src/hydrate/runner/create-window.ts
var templateWindows = /* @__PURE__ */ new Map();
function createWindowFromHtml(templateHtml, uniqueId) {
  let templateWindow = templateWindows.get(uniqueId);
  if (templateWindow == null) {
    templateWindow = new MockWindow(templateHtml);
    templateWindows.set(uniqueId, templateWindow);
  }
  const win2 = cloneWindow(templateWindow);
  return win2;
}
var Build = {
  isDev: BUILD.isDev ? true : false,
  isBrowser: true,
  isServer: false,
  isTesting: BUILD.isTesting ? true : false
};
var hostRefs = BUILD.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();
var STENCIL_DEV_MODE = BUILD.isTesting ? ["STENCIL:"] : [
  "%cstencil",
  "color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px"
];
var win = typeof window !== "undefined" ? window : {};
var doc = win.document || { head: {} };
var H = win.HTMLElement || class {
};
var supportsShadow = BUILD.shadowDom;
var supportsConstructableStylesheets = BUILD.constructableCSS ? /* @__PURE__ */ (() => {
  try {
    new CSSStyleSheet();
    return typeof new CSSStyleSheet().replaceSync === "function";
  } catch (e) {
  }
  return false;
})() : false;

// src/utils/helpers.ts
var isString = (v) => typeof v === "string";

// src/utils/message-utils.ts
var catchError = (diagnostics, err2, msg) => {
  const diagnostic = {
    level: "error",
    type: "build",
    header: "Build Error",
    messageText: "build error",
    lines: []
  };
  if (isString(msg)) {
    diagnostic.messageText = msg.length ? msg : "UNKNOWN ERROR";
  } else if (err2 != null) {
    if (err2.stack != null) {
      diagnostic.messageText = err2.stack.toString();
    } else {
      if (err2.message != null) {
        diagnostic.messageText = err2.message.length ? err2.message : "UNKNOWN ERROR";
      } else {
        diagnostic.messageText = err2.toString();
      }
    }
  }
  if (diagnostics != null && !shouldIgnoreError(diagnostic.messageText)) {
    diagnostics.push(diagnostic);
  }
  return diagnostic;
};
var hasError = (diagnostics) => {
  if (diagnostics == null || diagnostics.length === 0) {
    return false;
  }
  return diagnostics.some((d) => d.level === "error" && d.type !== "runtime");
};
var shouldIgnoreError = (msg) => {
  return msg === TASK_CANCELED_MSG;
};
var TASK_CANCELED_MSG = `task canceled`;

// src/utils/result.ts
var result_exports = {};
__export(result_exports, {
  err: () => err,
  map: () => map,
  ok: () => ok,
  unwrap: () => unwrap,
  unwrapErr: () => unwrapErr
});
var ok = (value) => ({
  isOk: true,
  isErr: false,
  value
});
var err = (value) => ({
  isOk: false,
  isErr: true,
  value
});
function map(result, fn) {
  if (result.isOk) {
    const val = fn(result.value);
    if (val instanceof Promise) {
      return val.then((newVal) => ok(newVal));
    } else {
      return ok(val);
    }
  }
  if (result.isErr) {
    const value = result.value;
    return err(value);
  }
  throw "should never get here";
}
var unwrap = (result) => {
  if (result.isOk) {
    return result.value;
  } else {
    throw result.value;
  }
};
var unwrapErr = (result) => {
  if (result.isErr) {
    return result.value;
  } else {
    throw result.value;
  }
};

// src/runtime/mode.ts
var setMode = (handler) => modeResolutionChain.push(handler);
var CAPTURE_EVENT_SUFFIX = "Capture";
var CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + "$");

// src/compiler/html/canonical-link.ts
var updateCanonicalLink = (doc2, href) => {
  var _a2;
  let canonicalLinkElm = doc2.head.querySelector('link[rel="canonical"]');
  if (typeof href === "string") {
    if (canonicalLinkElm == null) {
      canonicalLinkElm = doc2.createElement("link");
      canonicalLinkElm.setAttribute("rel", "canonical");
      doc2.head.appendChild(canonicalLinkElm);
    }
    canonicalLinkElm.setAttribute("href", href);
  } else {
    if (canonicalLinkElm != null) {
      const existingHref = canonicalLinkElm.getAttribute("href");
      if (!existingHref) {
        (_a2 = canonicalLinkElm.parentNode) == null ? void 0 : _a2.removeChild(canonicalLinkElm);
      }
    }
  }
};

// src/compiler/html/relocate-meta-charset.ts
var relocateMetaCharset = (doc2) => {
  const head = doc2.head;
  let charsetElm = head.querySelector("meta[charset]");
  if (charsetElm == null) {
    charsetElm = doc2.createElement("meta");
    charsetElm.setAttribute("charset", "utf-8");
  } else {
    charsetElm.remove();
  }
  head.insertBefore(charsetElm, head.firstChild);
};

// src/compiler/style/css-parser/parse-css.ts
var parseCss = (css, filePath) => {
  let lineno = 1;
  let column = 1;
  const diagnostics = [];
  const updatePosition = (str) => {
    const lines = str.match(/\n/g);
    if (lines) lineno += lines.length;
    const i = str.lastIndexOf("\n");
    column = ~i ? str.length - i : column + str.length;
  };
  const position = () => {
    const start = { line: lineno, column };
    return (node) => {
      node.position = new ParsePosition(start);
      whitespace();
      return node;
    };
  };
  const error = (msg) => {
    const srcLines = css.split("\n");
    const d = {
      level: "error",
      type: "css",
      language: "css",
      header: "CSS Parse",
      messageText: msg,
      absFilePath: filePath,
      lines: [
        {
          lineIndex: lineno - 1,
          lineNumber: lineno,
          errorCharStart: column,
          text: css[lineno - 1]
        }
      ]
    };
    if (lineno > 1) {
      const previousLine = {
        lineIndex: lineno - 1,
        lineNumber: lineno - 1,
        text: css[lineno - 2],
        errorCharStart: -1,
        errorLength: -1
      };
      d.lines.unshift(previousLine);
    }
    if (lineno + 2 < srcLines.length) {
      const nextLine = {
        lineIndex: lineno,
        lineNumber: lineno + 1,
        text: srcLines[lineno],
        errorCharStart: -1,
        errorLength: -1
      };
      d.lines.push(nextLine);
    }
    diagnostics.push(d);
    return null;
  };
  const stylesheet = () => {
    const rulesList = rules();
    return {
      type: 14 /* StyleSheet */,
      stylesheet: {
        source: filePath,
        rules: rulesList
      }
    };
  };
  const open = () => match(/^{\s*/);
  const close = () => match(/^}/);
  const match = (re) => {
    const m = re.exec(css);
    if (!m) return;
    const str = m[0];
    updatePosition(str);
    css = css.slice(str.length);
    return m;
  };
  const rules = () => {
    let node;
    const rules2 = [];
    whitespace();
    comments(rules2);
    while (css.length && css.charAt(0) !== "}" && (node = atrule() || rule())) {
      rules2.push(node);
      comments(rules2);
    }
    return rules2;
  };
  const whitespace = () => match(/^\s*/);
  const comments = (rules2) => {
    let c;
    rules2 = rules2 || [];
    while (c = comment()) {
      rules2.push(c);
    }
    return rules2;
  };
  const comment = () => {
    const pos = position();
    if ("/" !== css.charAt(0) || "*" !== css.charAt(1)) return null;
    let i = 2;
    while ("" !== css.charAt(i) && ("*" !== css.charAt(i) || "/" !== css.charAt(i + 1))) ++i;
    i += 2;
    if ("" === css.charAt(i - 1)) {
      return error("End of comment missing");
    }
    const comment2 = css.slice(2, i - 2);
    column += 2;
    updatePosition(comment2);
    css = css.slice(i);
    column += 2;
    return pos({
      type: 1 /* Comment */,
      comment: comment2
    });
  };
  const selector = () => {
    const m = match(/^([^{]+)/);
    if (!m) return null;
    return trim(m[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, function(m2) {
      return m2.replace(/,/g, "\u200C");
    }).split(/\s*(?![^(]*\)),\s*/).map(function(s) {
      return s.replace(/\u200C/g, ",");
    });
  };
  const declaration = () => {
    const pos = position();
    let prop = match(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
    if (!prop) return null;
    prop = trim(prop[0]);
    if (!match(/^:\s*/)) return error(`property missing ':'`);
    const val = match(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/);
    const ret = pos({
      type: 4 /* Declaration */,
      property: prop.replace(commentre, ""),
      value: val ? trim(val[0]).replace(commentre, "") : ""
    });
    match(/^[;\s]*/);
    return ret;
  };
  const declarations = () => {
    const decls = [];
    if (!open()) return error(`missing '{'`);
    comments(decls);
    let decl;
    while (decl = declaration()) {
      decls.push(decl);
      comments(decls);
    }
    if (!close()) return error(`missing '}'`);
    return decls;
  };
  const keyframe = () => {
    let m;
    const values = [];
    const pos = position();
    while (m = match(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/)) {
      values.push(m[1]);
      match(/^,\s*/);
    }
    if (!values.length) return null;
    return pos({
      type: 9 /* KeyFrame */,
      values,
      declarations: declarations()
    });
  };
  const atkeyframes = () => {
    const pos = position();
    let m = match(/^@([-\w]+)?keyframes\s*/);
    if (!m) return null;
    const vendor = m[1];
    m = match(/^([-\w]+)\s*/);
    if (!m) return error(`@keyframes missing name`);
    const name = m[1];
    if (!open()) return error(`@keyframes missing '{'`);
    let frame;
    let frames = comments();
    while (frame = keyframe()) {
      frames.push(frame);
      frames = frames.concat(comments());
    }
    if (!close()) return error(`@keyframes missing '}'`);
    return pos({
      type: 8 /* KeyFrames */,
      name,
      vendor,
      keyframes: frames
    });
  };
  const atsupports = () => {
    const pos = position();
    const m = match(/^@supports *([^{]+)/);
    if (!m) return null;
    const supports = trim(m[1]);
    if (!open()) return error(`@supports missing '{'`);
    const style = comments().concat(rules());
    if (!close()) return error(`@supports missing '}'`);
    return pos({
      type: 15 /* Supports */,
      supports,
      rules: style
    });
  };
  const athost = () => {
    const pos = position();
    const m = match(/^@host\s*/);
    if (!m) return null;
    if (!open()) return error(`@host missing '{'`);
    const style = comments().concat(rules());
    if (!close()) return error(`@host missing '}'`);
    return pos({
      type: 6 /* Host */,
      rules: style
    });
  };
  const atmedia = () => {
    const pos = position();
    const m = match(/^@media *([^{]+)/);
    if (!m) return null;
    const media = trim(m[1]);
    if (!open()) return error(`@media missing '{'`);
    const style = comments().concat(rules());
    if (!close()) return error(`@media missing '}'`);
    return pos({
      type: 10 /* Media */,
      media,
      rules: style
    });
  };
  const atcustommedia = () => {
    const pos = position();
    const m = match(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
    if (!m) return null;
    return pos({
      type: 2 /* CustomMedia */,
      name: trim(m[1]),
      media: trim(m[2])
    });
  };
  const atpage = () => {
    const pos = position();
    const m = match(/^@page */);
    if (!m) return null;
    const sel = selector() || [];
    if (!open()) return error(`@page missing '{'`);
    let decls = comments();
    let decl;
    while (decl = declaration()) {
      decls.push(decl);
      decls = decls.concat(comments());
    }
    if (!close()) return error(`@page missing '}'`);
    return pos({
      type: 12 /* Page */,
      selectors: sel,
      declarations: decls
    });
  };
  const atdocument = () => {
    const pos = position();
    const m = match(/^@([-\w]+)?document *([^{]+)/);
    if (!m) return null;
    const vendor = trim(m[1]);
    const doc2 = trim(m[2]);
    if (!open()) return error(`@document missing '{'`);
    const style = comments().concat(rules());
    if (!close()) return error(`@document missing '}'`);
    return pos({
      type: 3 /* Document */,
      document: doc2,
      vendor,
      rules: style
    });
  };
  const atfontface = () => {
    const pos = position();
    const m = match(/^@font-face\s*/);
    if (!m) return null;
    if (!open()) return error(`@font-face missing '{'`);
    let decls = comments();
    let decl;
    while (decl = declaration()) {
      decls.push(decl);
      decls = decls.concat(comments());
    }
    if (!close()) return error(`@font-face missing '}'`);
    return pos({
      type: 5 /* FontFace */,
      declarations: decls
    });
  };
  const compileAtrule = (nodeName, nodeType) => {
    const re = new RegExp("^@" + nodeName + "\\s*([^;]+);");
    return () => {
      const pos = position();
      const m = match(re);
      if (!m) return null;
      const node = {
        type: nodeType
      };
      node[nodeName] = m[1].trim();
      return pos(node);
    };
  };
  const atimport = compileAtrule("import", 7 /* Import */);
  const atcharset = compileAtrule("charset", 0 /* Charset */);
  const atnamespace = compileAtrule("namespace", 11 /* Namespace */);
  const atrule = () => {
    if (css[0] !== "@") return null;
    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface();
  };
  const rule = () => {
    const pos = position();
    const sel = selector();
    if (!sel) return error("selector missing");
    comments();
    return pos({
      type: 13 /* Rule */,
      selectors: sel,
      declarations: declarations()
    });
  };
  class ParsePosition {
    constructor(start) {
      this.start = start;
      this.end = { line: lineno, column };
      this.source = filePath;
    }
  }
  ParsePosition.prototype.content = css;
  return {
    diagnostics,
    ...addParent(stylesheet())
  };
};
var trim = (str) => str ? str.trim() : "";
var addParent = (obj, parent) => {
  const isNode = obj && typeof obj.type === "string";
  const childParent = isNode ? obj : parent;
  for (const k in obj) {
    const value = obj[k];
    if (Array.isArray(value)) {
      value.forEach(function(v) {
        addParent(v, childParent);
      });
    } else if (value && typeof value === "object") {
      addParent(value, childParent);
    }
  }
  if (isNode) {
    Object.defineProperty(obj, "parent", {
      configurable: true,
      writable: true,
      enumerable: false,
      value: parent || null
    });
  }
  return obj;
};
var commentre = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;

// src/compiler/style/css-parser/get-css-selectors.ts
var getCssSelectors = (sel) => {
  SELECTORS.all.length = SELECTORS.tags.length = SELECTORS.classNames.length = SELECTORS.ids.length = SELECTORS.attrs.length = 0;
  sel = sel.replace(/\./g, " .").replace(/\#/g, " #").replace(/\[/g, " [").replace(/\>/g, " > ").replace(/\+/g, " + ").replace(/\~/g, " ~ ").replace(/\*/g, " * ").replace(/\:not\((.*?)\)/g, " ");
  const items = sel.split(" ");
  for (let i = 0, l = items.length; i < l; i++) {
    items[i] = items[i].split(":")[0];
    if (items[i].length === 0) continue;
    if (items[i].charAt(0) === ".") {
      SELECTORS.classNames.push(items[i].slice(1));
    } else if (items[i].charAt(0) === "#") {
      SELECTORS.ids.push(items[i].slice(1));
    } else if (items[i].charAt(0) === "[") {
      items[i] = items[i].slice(1).split("=")[0].split("]")[0].trim();
      SELECTORS.attrs.push(items[i].toLowerCase());
    } else if (/[a-z]/g.test(items[i].charAt(0))) {
      SELECTORS.tags.push(items[i].toLowerCase());
    }
  }
  SELECTORS.classNames = SELECTORS.classNames.sort((a, b) => {
    if (a.length < b.length) return -1;
    if (a.length > b.length) return 1;
    return 0;
  });
  return SELECTORS;
};
var SELECTORS = {
  all: [],
  tags: [],
  classNames: [],
  ids: [],
  attrs: []
};

// src/compiler/style/css-parser/serialize-css.ts
var serializeCss = (stylesheet, serializeOpts) => {
  const usedSelectors = serializeOpts.usedSelectors || null;
  const opts = {
    usedSelectors: usedSelectors || null,
    hasUsedAttrs: !!usedSelectors && usedSelectors.attrs.size > 0,
    hasUsedClassNames: !!usedSelectors && usedSelectors.classNames.size > 0,
    hasUsedIds: !!usedSelectors && usedSelectors.ids.size > 0,
    hasUsedTags: !!usedSelectors && usedSelectors.tags.size > 0
  };
  const rules = stylesheet.rules;
  if (!rules) {
    return "";
  }
  const rulesLen = rules.length;
  const out = [];
  for (let i = 0; i < rulesLen; i++) {
    out.push(serializeCssVisitNode(opts, rules[i], i, rulesLen));
  }
  return out.join("");
};
var serializeCssVisitNode = (opts, node, index, len) => {
  var _a2;
  const nodeType = node.type;
  if (nodeType === 4 /* Declaration */) {
    return serializeCssDeclaration(node, index, len);
  }
  if (nodeType === 13 /* Rule */) {
    return serializeCssRule(opts, node);
  }
  if (nodeType === 1 /* Comment */) {
    if (((_a2 = node.comment) == null ? void 0 : _a2[0]) === "!") {
      return `/*${node.comment}*/`;
    } else {
      return "";
    }
  }
  if (nodeType === 10 /* Media */) {
    return serializeCssMedia(opts, node);
  }
  if (nodeType === 8 /* KeyFrames */) {
    return serializeCssKeyframes(opts, node);
  }
  if (nodeType === 9 /* KeyFrame */) {
    return serializeCssKeyframe(opts, node);
  }
  if (nodeType === 5 /* FontFace */) {
    return serializeCssFontFace(opts, node);
  }
  if (nodeType === 15 /* Supports */) {
    return serializeCssSupports(opts, node);
  }
  if (nodeType === 7 /* Import */) {
    return "@import " + node.import + ";";
  }
  if (nodeType === 0 /* Charset */) {
    return "@charset " + node.charset + ";";
  }
  if (nodeType === 12 /* Page */) {
    return serializeCssPage(opts, node);
  }
  if (nodeType === 6 /* Host */) {
    return "@host{" + serializeCssMapVisit(opts, node.rules) + "}";
  }
  if (nodeType === 2 /* CustomMedia */) {
    return "@custom-media " + node.name + " " + node.media + ";";
  }
  if (nodeType === 3 /* Document */) {
    return serializeCssDocument(opts, node);
  }
  if (nodeType === 11 /* Namespace */) {
    return "@namespace " + node.namespace + ";";
  }
  return "";
};
var serializeCssRule = (opts, node) => {
  var _a2, _b;
  const decls = node.declarations;
  const usedSelectors = opts.usedSelectors;
  const selectors = (_b = (_a2 = node.selectors) == null ? void 0 : _a2.slice()) != null ? _b : [];
  if (decls == null || decls.length === 0) {
    return "";
  }
  if (usedSelectors) {
    let i;
    let j;
    let include = true;
    for (i = selectors.length - 1; i >= 0; i--) {
      const sel = getCssSelectors(selectors[i]);
      include = true;
      let jlen = sel.classNames.length;
      if (jlen > 0 && opts.hasUsedClassNames) {
        for (j = 0; j < jlen; j++) {
          if (!usedSelectors.classNames.has(sel.classNames[j])) {
            include = false;
            break;
          }
        }
      }
      if (include && opts.hasUsedTags) {
        jlen = sel.tags.length;
        if (jlen > 0) {
          for (j = 0; j < jlen; j++) {
            if (!usedSelectors.tags.has(sel.tags[j])) {
              include = false;
              break;
            }
          }
        }
      }
      if (include && opts.hasUsedAttrs) {
        jlen = sel.attrs.length;
        if (jlen > 0) {
          for (j = 0; j < jlen; j++) {
            if (!usedSelectors.attrs.has(sel.attrs[j])) {
              include = false;
              break;
            }
          }
        }
      }
      if (include && opts.hasUsedIds) {
        jlen = sel.ids.length;
        if (jlen > 0) {
          for (j = 0; j < jlen; j++) {
            if (!usedSelectors.ids.has(sel.ids[j])) {
              include = false;
              break;
            }
          }
        }
      }
      if (!include) {
        selectors.splice(i, 1);
      }
    }
  }
  if (selectors.length === 0) {
    return "";
  }
  const cleanedSelectors = [];
  let cleanedSelector = "";
  if (node.selectors) {
    for (const selector of node.selectors) {
      cleanedSelector = removeSelectorWhitespace(selector);
      if (!cleanedSelectors.includes(cleanedSelector)) {
        cleanedSelectors.push(cleanedSelector);
      }
    }
  }
  return `${cleanedSelectors}{${serializeCssMapVisit(opts, decls)}}`;
};
var serializeCssDeclaration = (node, index, len) => {
  if (node.value === "") {
    return "";
  }
  if (len - 1 === index) {
    return node.property + ":" + node.value;
  }
  return node.property + ":" + node.value + ";";
};
var serializeCssMedia = (opts, node) => {
  const mediaCss = serializeCssMapVisit(opts, node.rules);
  if (mediaCss === "") {
    return "";
  }
  return "@media " + removeMediaWhitespace(node.media) + "{" + mediaCss + "}";
};
var serializeCssKeyframes = (opts, node) => {
  const keyframesCss = serializeCssMapVisit(opts, node.keyframes);
  if (keyframesCss === "") {
    return "";
  }
  return "@" + (node.vendor || "") + "keyframes " + node.name + "{" + keyframesCss + "}";
};
var serializeCssKeyframe = (opts, node) => {
  var _a2, _b;
  return ((_b = (_a2 = node.values) == null ? void 0 : _a2.join(",")) != null ? _b : "") + "{" + serializeCssMapVisit(opts, node.declarations) + "}";
};
var serializeCssFontFace = (opts, node) => {
  const fontCss = serializeCssMapVisit(opts, node.declarations);
  if (fontCss === "") {
    return "";
  }
  return "@font-face{" + fontCss + "}";
};
var serializeCssSupports = (opts, node) => {
  const supportsCss = serializeCssMapVisit(opts, node.rules);
  if (supportsCss === "") {
    return "";
  }
  return "@supports " + node.supports + "{" + supportsCss + "}";
};
var serializeCssPage = (opts, node) => {
  var _a2, _b;
  const sel = (_b = (_a2 = node.selectors) == null ? void 0 : _a2.join(", ")) != null ? _b : "";
  return "@page " + sel + "{" + serializeCssMapVisit(opts, node.declarations) + "}";
};
var serializeCssDocument = (opts, node) => {
  const documentCss = serializeCssMapVisit(opts, node.rules);
  const doc2 = "@" + (node.vendor || "") + "document " + node.document;
  if (documentCss === "") {
    return "";
  }
  return doc2 + "{" + documentCss + "}";
};
var serializeCssMapVisit = (opts, nodes) => {
  let rtn = "";
  if (nodes) {
    for (let i = 0, len = nodes.length; i < len; i++) {
      rtn += serializeCssVisitNode(opts, nodes[i], i, len);
    }
  }
  return rtn;
};
var removeSelectorWhitespace = (selector) => {
  let rtn = "";
  let char = "";
  let inAttr = false;
  selector = selector.trim();
  for (let i = 0, l = selector.length; i < l; i++) {
    char = selector[i];
    if (char === "[" && rtn[rtn.length - 1] !== "\\") {
      inAttr = true;
    } else if (char === "]" && rtn[rtn.length - 1] !== "\\") {
      inAttr = false;
    }
    if (!inAttr && CSS_WS_REG.test(char)) {
      if (CSS_NEXT_CHAR_REG.test(selector[i + 1])) {
        continue;
      }
      if (CSS_PREV_CHAR_REG.test(rtn[rtn.length - 1])) {
        continue;
      }
      rtn += " ";
    } else {
      rtn += char;
    }
  }
  return rtn;
};
var removeMediaWhitespace = (media) => {
  var _a2;
  let rtn = "";
  let char = "";
  media = (_a2 = media == null ? void 0 : media.trim()) != null ? _a2 : "";
  for (let i = 0, l = media.length; i < l; i++) {
    char = media[i];
    if (CSS_WS_REG.test(char)) {
      if (CSS_WS_REG.test(rtn[rtn.length - 1])) {
        continue;
      }
      rtn += " ";
    } else {
      rtn += char;
    }
  }
  return rtn;
};
var CSS_WS_REG = /\s/;
var CSS_NEXT_CHAR_REG = /[>\(\)\~\,\+\s]/;
var CSS_PREV_CHAR_REG = /[>\(\~\,\+]/;

// src/compiler/style/css-parser/used-selectors.ts
var getUsedSelectors = (elm) => {
  const usedSelectors = {
    attrs: /* @__PURE__ */ new Set(),
    classNames: /* @__PURE__ */ new Set(),
    ids: /* @__PURE__ */ new Set(),
    tags: /* @__PURE__ */ new Set()
  };
  collectUsedSelectors(usedSelectors, elm);
  return usedSelectors;
};
var collectUsedSelectors = (usedSelectors, elm) => {
  if (elm != null && elm.nodeType === 1) {
    const children = elm.children;
    const tagName = elm.nodeName.toLowerCase();
    usedSelectors.tags.add(tagName);
    const attributes = elm.attributes;
    for (let i = 0, l = attributes.length; i < l; i++) {
      const attr = attributes.item(i);
      const attrName = attr.name.toLowerCase();
      usedSelectors.attrs.add(attrName);
      if (attrName === "class") {
        const classList = elm.classList;
        for (let i2 = 0, l2 = classList.length; i2 < l2; i2++) {
          usedSelectors.classNames.add(classList.item(i2));
        }
      } else if (attrName === "id") {
        usedSelectors.ids.add(attr.value);
      }
    }
    if (children) {
      for (let i = 0, l = children.length; i < l; i++) {
        collectUsedSelectors(usedSelectors, children[i]);
      }
    }
  }
};

// src/compiler/html/remove-unused-styles.ts
var removeUnusedStyles = (doc2, diagnostics) => {
  try {
    const styleElms = doc2.head.querySelectorAll(`style[data-styles]`);
    const styleLen = styleElms.length;
    if (styleLen > 0) {
      const usedSelectors = getUsedSelectors(doc2.documentElement);
      for (let i = 0; i < styleLen; i++) {
        removeUnusedStyleText(usedSelectors, diagnostics, styleElms[i]);
      }
    }
  } catch (e) {
    catchError(diagnostics, e);
  }
};
var removeUnusedStyleText = (usedSelectors, diagnostics, styleElm) => {
  try {
    const parseResults = parseCss(styleElm.innerHTML);
    diagnostics.push(...parseResults.diagnostics);
    if (hasError(diagnostics)) {
      return;
    }
    try {
      styleElm.innerHTML = serializeCss(parseResults.stylesheet, {
        usedSelectors
      });
    } catch (e) {
      diagnostics.push({
        level: "warn",
        type: "css",
        header: "CSS Stringify",
        messageText: e,
        lines: []
      });
    }
  } catch (e) {
    diagnostics.push({
      level: "warn",
      type: "css",
      header: "CSS Parse",
      messageText: e,
      lines: []
    });
  }
};

// src/hydrate/runner/inspect-element.ts
function inspectElement(results, elm, depth) {
  const children = [...Array.from(elm.children), ...Array.from(elm.shadowRoot ? elm.shadowRoot.children : [])];
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    const tagName = childElm.nodeName.toLowerCase();
    if (tagName.includes("-")) {
      const cmp = results.components.find((c) => c.tag === tagName);
      if (cmp != null) {
        cmp.count++;
        if (depth > cmp.depth) {
          cmp.depth = depth;
        }
      }
    } else {
      switch (tagName) {
        case "a":
          const anchor = collectAttributes(childElm);
          anchor.href = childElm.href;
          if (typeof anchor.href === "string") {
            if (!results.anchors.some((a) => a.href === anchor.href)) {
              results.anchors.push(anchor);
            }
          }
          break;
        case "img":
          const img = collectAttributes(childElm);
          img.src = childElm.src;
          if (typeof img.src === "string") {
            if (!results.imgs.some((a) => a.src === img.src)) {
              results.imgs.push(img);
            }
          }
          break;
        case "link":
          const link = collectAttributes(childElm);
          link.href = childElm.href;
          if (typeof link.rel === "string" && link.rel.toLowerCase() === "stylesheet") {
            if (typeof link.href === "string") {
              if (!results.styles.some((s) => s.link === link.href)) {
                delete link.rel;
                delete link.type;
                results.styles.push(link);
              }
            }
          }
          break;
        case "script":
          const script = collectAttributes(childElm);
          if (childElm.hasAttribute("src")) {
            script.src = childElm.src;
            if (typeof script.src === "string") {
              if (!results.scripts.some((s) => s.src === script.src)) {
                results.scripts.push(script);
              }
            }
          } else {
            const staticDataKey = childElm.getAttribute("data-stencil-static");
            if (staticDataKey) {
              results.staticData.push({
                id: staticDataKey,
                type: childElm.getAttribute("type"),
                content: childElm.textContent
              });
            }
          }
          break;
      }
    }
    depth++;
    inspectElement(results, childElm, depth);
  }
}
function collectAttributes(node) {
  const parsedElm = {};
  const attrs = node.attributes;
  for (let i = 0, ii = attrs.length; i < ii; i++) {
    const attr = attrs.item(i);
    const attrName = attr.nodeName.toLowerCase();
    if (SKIP_ATTRS.has(attrName)) {
      continue;
    }
    const attrValue = attr.nodeValue;
    if (attrName === "class" && attrValue === "") {
      continue;
    }
    parsedElm[attrName] = attrValue;
  }
  return parsedElm;
}
var SKIP_ATTRS = /* @__PURE__ */ new Set(["s-id", "c-id"]);

// src/hydrate/runner/patch-dom-implementation.ts
function patchDomImplementation(doc2, opts) {
  let win2;
  if (doc2.defaultView != null) {
    opts.destroyWindow = true;
    patchWindow(doc2.defaultView);
    win2 = doc2.defaultView;
  } else {
    opts.destroyWindow = true;
    opts.destroyDocument = false;
    win2 = new MockWindow(false);
  }
  if (win2.document !== doc2) {
    win2.document = doc2;
  }
  if (doc2.defaultView !== win2) {
    doc2.defaultView = win2;
  }
  const HTMLElement2 = doc2.documentElement.constructor.prototype;
  if (typeof HTMLElement2.getRootNode !== "function") {
    const elm = doc2.createElement("unknown-element");
    const HTMLUnknownElement = elm.constructor.prototype;
    HTMLUnknownElement.getRootNode = getRootNode;
  }
  if (typeof doc2.createEvent === "function") {
    const CustomEvent2 = doc2.createEvent("CustomEvent").constructor;
    if (win2.CustomEvent !== CustomEvent2) {
      win2.CustomEvent = CustomEvent2;
    }
  }
  try {
    win2.__stencil_baseURI = doc2.baseURI;
  } catch (e) {
    Object.defineProperty(doc2, "baseURI", {
      get() {
        const baseElm = doc2.querySelector("base[href]");
        if (baseElm) {
          return new URL(baseElm.getAttribute("href"), win2.location.href).href;
        }
        return win2.location.href;
      }
    });
  }
  return win2;
}
function getRootNode(opts) {
  const isComposed = opts != null && opts.composed === true;
  let node = this;
  while (node.parentNode != null) {
    node = node.parentNode;
    if (isComposed === true && node.parentNode == null && node.host != null) {
      node = node.host;
    }
  }
  return node;
}

// src/hydrate/runner/render-utils.ts
function normalizeHydrateOptions(inputOpts) {
  const outputOpts = Object.assign(
    {
      serializeToHtml: false,
      destroyWindow: false,
      destroyDocument: false
    },
    inputOpts || {}
  );
  if (typeof outputOpts.clientHydrateAnnotations !== "boolean") {
    outputOpts.clientHydrateAnnotations = true;
  }
  if (typeof outputOpts.constrainTimeouts !== "boolean") {
    outputOpts.constrainTimeouts = true;
  }
  if (typeof outputOpts.maxHydrateCount !== "number") {
    outputOpts.maxHydrateCount = 300;
  }
  if (typeof outputOpts.runtimeLogging !== "boolean") {
    outputOpts.runtimeLogging = false;
  }
  if (typeof outputOpts.timeout !== "number") {
    outputOpts.timeout = 15e3;
  }
  if (Array.isArray(outputOpts.excludeComponents)) {
    outputOpts.excludeComponents = outputOpts.excludeComponents.filter(filterValidTags).map(mapValidTags);
  } else {
    outputOpts.excludeComponents = [];
  }
  if (Array.isArray(outputOpts.staticComponents)) {
    outputOpts.staticComponents = outputOpts.staticComponents.filter(filterValidTags).map(mapValidTags);
  } else {
    outputOpts.staticComponents = [];
  }
  return outputOpts;
}
function filterValidTags(tag) {
  return typeof tag === "string" && tag.includes("-");
}
function mapValidTags(tag) {
  return tag.trim().toLowerCase();
}
function generateHydrateResults(opts) {
  if (typeof opts.url !== "string") {
    opts.url = `https://hydrate.stenciljs.com/`;
  }
  if (typeof opts.buildId !== "string") {
    opts.buildId = createHydrateBuildId();
  }
  const results = {
    buildId: opts.buildId,
    diagnostics: [],
    url: opts.url,
    host: null,
    hostname: null,
    href: null,
    pathname: null,
    port: null,
    search: null,
    hash: null,
    html: null,
    httpStatus: null,
    hydratedCount: 0,
    anchors: [],
    components: [],
    imgs: [],
    scripts: [],
    staticData: [],
    styles: [],
    title: null
  };
  try {
    const url = new URL(opts.url, `https://hydrate.stenciljs.com/`);
    results.url = url.href;
    results.host = url.host;
    results.hostname = url.hostname;
    results.href = url.href;
    results.port = url.port;
    results.pathname = url.pathname;
    results.search = url.search;
    results.hash = url.hash;
  } catch (e) {
    renderCatchError(results, e);
  }
  return results;
}
var createHydrateBuildId = () => {
  let chars = "abcdefghijklmnopqrstuvwxyz";
  let buildId = "";
  while (buildId.length < 8) {
    const char = chars[Math.floor(Math.random() * chars.length)];
    buildId += char;
    if (buildId.length === 1) {
      chars += "0123456789";
    }
  }
  return buildId;
};
function renderBuildDiagnostic(results, level, header, msg) {
  const diagnostic = {
    level,
    type: "build",
    header,
    messageText: msg,
    relFilePath: void 0,
    absFilePath: void 0,
    lines: []
  };
  if (results.pathname) {
    if (results.pathname !== "/") {
      diagnostic.header += ": " + results.pathname;
    }
  } else if (results.url) {
    diagnostic.header += ": " + results.url;
  }
  results.diagnostics.push(diagnostic);
  return diagnostic;
}
function renderBuildError(results, msg) {
  return renderBuildDiagnostic(results, "error", "Hydrate Error", msg || "");
}
function renderCatchError(results, err2) {
  const diagnostic = renderBuildError(results);
  if (err2 != null) {
    if (err2.stack != null) {
      diagnostic.messageText = err2.stack.toString();
    } else {
      if (err2.message != null) {
        diagnostic.messageText = err2.message.toString();
      } else {
        diagnostic.messageText = err2.toString();
      }
    }
  }
  return diagnostic;
}

// src/hydrate/runner/runtime-log.ts
function runtimeLogging(win2, opts, results) {
  try {
    const pathname = win2.location.pathname;
    win2.console.error = (...msgs) => {
      const errMsg = msgs.reduce((errMsg2, m) => {
        if (m) {
          if (m.stack != null) {
            return errMsg2 + " " + String(m.stack);
          } else {
            if (m.message != null) {
              return errMsg2 + " " + String(m.message);
            }
          }
        }
        return String(m);
      }, "").trim();
      if (errMsg !== "") {
        renderCatchError(results, errMsg);
        if (opts.runtimeLogging) {
          runtimeLog(pathname, "error", [errMsg]);
        }
      }
    };
    win2.console.debug = (...msgs) => {
      renderBuildDiagnostic(results, "debug", "Hydrate Debug", [...msgs].join(", "));
      if (opts.runtimeLogging) {
        runtimeLog(pathname, "debug", msgs);
      }
    };
    if (opts.runtimeLogging) {
      ["log", "warn", "assert", "info", "trace"].forEach((type) => {
        win2.console[type] = (...msgs) => {
          runtimeLog(pathname, type, msgs);
        };
      });
    }
  } catch (e) {
    renderCatchError(results, e);
  }
}
function runtimeLog(pathname, type, msgs) {
  global.console[type].apply(global.console, [`[ ${pathname}  ${type} ] `, ...msgs]);
}

// src/hydrate/runner/window-initialize.ts
function initializeWindow(win2, doc2, opts, results) {
  if (typeof opts.url === "string") {
    try {
      win2.location.href = opts.url;
    } catch (e) {
    }
  }
  if (typeof opts.userAgent === "string") {
    try {
      win2.navigator.userAgent = opts.userAgent;
    } catch (e) {
    }
  }
  if (typeof opts.cookie === "string") {
    try {
      doc2.cookie = opts.cookie;
    } catch (e) {
    }
  }
  if (typeof opts.referrer === "string") {
    try {
      doc2.referrer = opts.referrer;
    } catch (e) {
    }
  }
  if (typeof opts.direction === "string") {
    try {
      doc2.documentElement.setAttribute("dir", opts.direction);
    } catch (e) {
    }
  }
  if (typeof opts.language === "string") {
    try {
      doc2.documentElement.setAttribute("lang", opts.language);
    } catch (e) {
    }
  }
  if (typeof opts.buildId === "string") {
    try {
      doc2.documentElement.setAttribute("data-stencil-build", opts.buildId);
    } catch (e) {
    }
  }
  try {
    win2.customElements = null;
  } catch (e) {
  }
  if (opts.constrainTimeouts) {
    constrainTimeouts(win2);
  }
  runtimeLogging(win2, opts, results);
  return win2;
}

// src/hydrate/runner/render.ts
var NOOP = () => {
};
function streamToString(html, option) {
  return renderToString(html, option, true);
}
function renderToString(html, options, asStream) {
  const opts = normalizeHydrateOptions(options);
  opts.serializeToHtml = true;
  opts.fullDocument = typeof opts.fullDocument === "boolean" ? opts.fullDocument : true;
  opts.serializeShadowRoot = typeof opts.serializeShadowRoot === "boolean" ? opts.serializeShadowRoot : true;
  opts.constrainTimeouts = false;
  return hydrateDocument(html, opts, asStream);
}
function hydrateDocument(doc2, options, asStream) {
  const opts = normalizeHydrateOptions(options);
  let win2 = null;
  const results = generateHydrateResults(opts);
  if (hasError(results.diagnostics)) {
    return Promise.resolve(results);
  }
  if (typeof doc2 === "string") {
    try {
      opts.destroyWindow = true;
      opts.destroyDocument = true;
      win2 = new MockWindow(doc2);
      if (!asStream) {
        return render(win2, opts, results).then(() => results);
      }
      return renderStream(win2, opts, results);
    } catch (e) {
      if (win2 && win2.close) {
        win2.close();
      }
      win2 = null;
      renderCatchError(results, e);
      return Promise.resolve(results);
    }
  }
  if (isValidDocument(doc2)) {
    try {
      opts.destroyDocument = false;
      win2 = patchDomImplementation(doc2, opts);
      if (!asStream) {
        return render(win2, opts, results).then(() => results);
      }
      return renderStream(win2, opts, results);
    } catch (e) {
      if (win2 && win2.close) {
        win2.close();
      }
      win2 = null;
      renderCatchError(results, e);
      return Promise.resolve(results);
    }
  }
  renderBuildError(results, `Invalid html or document. Must be either a valid "html" string, or DOM "document".`);
  return Promise.resolve(results);
}
async function render(win2, opts, results) {
  if ("process" in globalThis && typeof process.on === "function" && !process.__stencilErrors) {
    process.__stencilErrors = true;
    process.on("unhandledRejection", (e) => {
      console.log("unhandledRejection", e);
    });
  }
  initializeWindow(win2, win2.document, opts, results);
  const beforeHydrateFn = typeof opts.beforeHydrate === "function" ? opts.beforeHydrate : NOOP;
  try {
    await Promise.resolve(beforeHydrateFn(win2.document));
    return new Promise((resolve) => {
      if (Array.isArray(opts.modes)) {
        modeResolutionChain.length = 0;
        opts.modes.forEach((mode) => setMode(mode));
      }
      return hydrateFactory(win2, opts, results, afterHydrate, resolve);
    });
  } catch (e) {
    renderCatchError(results, e);
    return finalizeHydrate(win2, win2.document, opts, results);
  }
}
function renderStream(win2, opts, results) {
  async function* processRender() {
    const renderResult = await render(win2, opts, results);
    yield renderResult.html;
  }
  return Readable.from(processRender());
}
async function afterHydrate(win2, opts, results, resolve) {
  const afterHydrateFn = typeof opts.afterHydrate === "function" ? opts.afterHydrate : NOOP;
  try {
    await Promise.resolve(afterHydrateFn(win2.document));
    return resolve(finalizeHydrate(win2, win2.document, opts, results));
  } catch (e) {
    renderCatchError(results, e);
    return resolve(finalizeHydrate(win2, win2.document, opts, results));
  }
}
function finalizeHydrate(win2, doc2, opts, results) {
  try {
    inspectElement(results, doc2.documentElement, 0);
    if (opts.removeUnusedStyles !== false) {
      try {
        removeUnusedStyles(doc2, results.diagnostics);
      } catch (e) {
        renderCatchError(results, e);
      }
    }
    if (typeof opts.title === "string") {
      try {
        doc2.title = opts.title;
      } catch (e) {
        renderCatchError(results, e);
      }
    }
    results.title = doc2.title;
    if (opts.removeScripts) {
      removeScripts(doc2.documentElement);
    }
    try {
      updateCanonicalLink(doc2, opts.canonicalUrl);
    } catch (e) {
      renderCatchError(results, e);
    }
    try {
      relocateMetaCharset(doc2);
    } catch (e) {
    }
    if (!hasError(results.diagnostics)) {
      results.httpStatus = 200;
    }
    try {
      const metaStatus = doc2.head.querySelector('meta[http-equiv="status"]');
      if (metaStatus != null) {
        const metaStatusContent = metaStatus.getAttribute("content");
        if (metaStatusContent && metaStatusContent.length > 0) {
          results.httpStatus = parseInt(metaStatusContent, 10);
        }
      }
    } catch (e) {
    }
    if (opts.clientHydrateAnnotations) {
      doc2.documentElement.classList.add("hydrated");
    }
    if (opts.serializeToHtml) {
      results.html = serializeDocumentToString(doc2, opts);
    }
  } catch (e) {
    renderCatchError(results, e);
  }
  destroyWindow(win2, doc2, opts, results);
  return results;
}
function destroyWindow(win2, doc2, opts, results) {
  if (!opts.destroyWindow) {
    return;
  }
  try {
    if (!opts.destroyDocument) {
      win2.document = null;
      doc2.defaultView = null;
    }
    if (win2.close) {
      win2.close();
    }
  } catch (e) {
    renderCatchError(results, e);
  }
}
function serializeDocumentToString(doc2, opts) {
  return serializeNodeToHtml(doc2, {
    approximateLineWidth: opts.approximateLineWidth,
    outerHtml: false,
    prettyHtml: opts.prettyHtml,
    removeAttributeQuotes: opts.removeAttributeQuotes,
    removeBooleanAttributeQuotes: opts.removeBooleanAttributeQuotes,
    removeEmptyAttributes: opts.removeEmptyAttributes,
    removeHtmlComments: opts.removeHtmlComments,
    serializeShadowRoot: opts.serializeShadowRoot,
    fullDocument: opts.fullDocument
  });
}
function isValidDocument(doc2) {
  return doc2 != null && doc2.nodeType === 9 && doc2.documentElement != null && doc2.documentElement.nodeType === 1 && doc2.body != null && doc2.body.nodeType === 1;
}
function removeScripts(elm) {
  const children = elm.children;
  for (let i = children.length - 1; i >= 0; i--) {
    const child = children[i];
    removeScripts(child);
    if (child.nodeName === "SCRIPT" || child.nodeName === "LINK" && child.getAttribute("rel") === "modulepreload") {
      child.remove();
    }
  }
}

export { createWindowFromHtml, hydrateDocument, renderToString, serializeDocumentToString, streamToString };
