@import 'src/global/component';

/**
 * @prop --hide-delay: The amount of time to wait before hiding the tooltip.
 * @prop --hide-duration: The amount of time the hide transition takes to complete.
 * @prop --hide-timing-function: The timing function (easing) to use for the hide transition.
 * @prop --max-width: The maximum width of the tooltip.
 * @prop --show-delay: The amount of time to wait before showing the tooltip.
 * @prop --show-duration: The amount of time the show transition takes to complete.
 * @prop --show-timing-function: The timing function (easing) to use for the show transition.
 */
:host {
  --max-width: 20rem;
  --hide-delay: 0s;
  --hide-duration: 0.125s;
  --hide-timing-function: ease;
  --show-delay: 0.125s;
  --show-duration: 0.125s;
  --show-timing-function: ease;

  display: contents;
}

.tooltip-positioner {
  position: absolute;
  z-index: var(--six-z-index-tooltip);
  pointer-events: none;
}

.tooltip {
  max-width: var(--max-width);
  border-radius: var(--six-border-radius-medium);
  background-color: var(--six-tooltip-background-color);
  font-family: var(--six-font-family);
  font-size: var(--six-tooltip-font-size);
  font-weight: var(--six-tooltip-font-weight);
  line-height: var(--six-tooltip-line-height);
  color: var(--six-tooltip-color);
  opacity: 0;
  padding: var(--six-spacing-xxx-small) var(--six-spacing-x-small);
  transform: scale(0.8);
  transform-origin: bottom;
  transition-property: opacity, transform;
  transition-delay: var(--hide-delay);
  transition-duration: var(--hide-duration);
  transition-timing-function: var(--hide-timing-function);

  &::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
  }
}

.tooltip-positioner {
  &[data-popper-placement^='top'] .tooltip {
    transform-origin: bottom;
  }

  &[data-popper-placement^='bottom'] .tooltip {
    transform-origin: top;
  }

  &[data-popper-placement^='left'] .tooltip {
    transform-origin: right;
  }

  &[data-popper-placement^='right'] .tooltip {
    transform-origin: left;
  }

  &.popover-visible .tooltip {
    opacity: 1;
    transform: none;
    transition-delay: var(--show-delay);
    transition-duration: var(--show-duration);
    transition-timing-function: var(--show-timing-function);
  }
}

// Arrow + bottom
.tooltip-positioner[data-popper-placement^='bottom'] .tooltip::after {
  bottom: 100%;
  left: calc(50% - var(--six-tooltip-arrow-size));
  border-bottom: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);
  border-left: var(--six-tooltip-arrow-size) solid transparent;
  border-right: var(--six-tooltip-arrow-size) solid transparent;
}

.tooltip-positioner[data-popper-placement='bottom-start'] .tooltip::after {
  left: var(--six-tooltip-arrow-start-end-offset);
}

.tooltip-positioner[data-popper-placement='bottom-end'] .tooltip::after {
  right: var(--six-tooltip-arrow-start-end-offset);
  left: auto;
}

// Arrow + top
.tooltip-positioner[data-popper-placement^='top'] .tooltip::after {
  top: 100%;
  left: calc(50% - var(--six-tooltip-arrow-size));
  border-top: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);
  border-left: var(--six-tooltip-arrow-size) solid transparent;
  border-right: var(--six-tooltip-arrow-size) solid transparent;
}

.tooltip-positioner[data-popper-placement='top-start'] .tooltip::after {
  left: var(--six-tooltip-arrow-start-end-offset);
}

.tooltip-positioner[data-popper-placement='top-end'] .tooltip::after {
  right: var(--six-tooltip-arrow-start-end-offset);
  left: auto;
}

// Arrow + left
.tooltip-positioner[data-popper-placement^='left'] .tooltip::after {
  top: calc(50% - var(--six-tooltip-arrow-size));
  left: 100%;
  border-left: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);
  border-top: var(--six-tooltip-arrow-size) solid transparent;
  border-bottom: var(--six-tooltip-arrow-size) solid transparent;
}

.tooltip-positioner[data-popper-placement='left-start'] .tooltip::after {
  top: var(--six-tooltip-arrow-start-end-offset);
}

.tooltip-positioner[data-popper-placement='left-end'] .tooltip::after {
  top: auto;
  bottom: var(--six-tooltip-arrow-start-end-offset);
}

// Arrow + right
.tooltip-positioner[data-popper-placement^='right'] .tooltip::after {
  top: calc(50% - var(--six-tooltip-arrow-size));
  right: 100%;
  border-right: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);
  border-top: var(--six-tooltip-arrow-size) solid transparent;
  border-bottom: var(--six-tooltip-arrow-size) solid transparent;
}

.tooltip-positioner[data-popper-placement='right-start'] .tooltip::after {
  top: var(--six-tooltip-arrow-start-end-offset);
}

.tooltip-positioner[data-popper-placement='right-end'] .tooltip::after {
  top: auto;
  bottom: var(--six-tooltip-arrow-start-end-offset);
}
